Useless nonterminals

   declaration
   init_declarator_list_opt
   init_declarator_list
   init_declarator


Terminals which are not used

   KW_CASE
   KW_DEFAULT


Useless rules

  264 declaration: declaration_specifiers init_declarator_list_opt

  265 init_declarator_list_opt: /* empty */
  266                         | init_declarator_list

  267 init_declarator_list: init_declarator
  268                     | init_declarator_list ',' init_declarator

  269 init_declarator: declarator
  270                | declarator '=' assignment_expression
  271                | declarator '=' initializer


Rules never reduced

   11 external_declaration: /* empty */

  117 identifier_list_opt: /* empty */


State 1 conflicts: 21 shift/reduce, 16 reduce/reduce
State 16 conflicts: 13 shift/reduce
State 17 conflicts: 19 shift/reduce
State 18 conflicts: 19 shift/reduce
State 19 conflicts: 19 shift/reduce
State 20 conflicts: 19 shift/reduce
State 21 conflicts: 19 shift/reduce
State 22 conflicts: 19 shift/reduce
State 31 conflicts: 14 shift/reduce, 2 reduce/reduce
State 68 conflicts: 13 shift/reduce
State 72 conflicts: 2 reduce/reduce
State 73 conflicts: 1 shift/reduce
State 103 conflicts: 13 shift/reduce
State 167 conflicts: 13 shift/reduce
State 191 conflicts: 1 reduce/reduce
State 238 conflicts: 13 shift/reduce
State 297 conflicts: 1 shift/reduce
State 405 conflicts: 1 shift/reduce
State 458 conflicts: 1 shift/reduce
State 464 conflicts: 1 shift/reduce
State 492 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: /* empty */
    2                 | translation_unit external_declaration

    3 star_list_opt: /* empty */
    4              | star_list

    5 star_list: '*'
    6          | star_list '*'

    7 external_declaration: type_qualifier_seq_opt type_specifier sdecl ',' sdecl sdecl_list ';'
    8                     | type_specifier sdecl ',' sdecl sdecl_list ';'
    9                     | type_qualifier_seq_opt type_specifier sdecl '=' initializer ';'
   10                     | type_specifier sdecl '=' initializer ';'
   11                     | /* empty */
   12                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' compound_statement
   13                     | type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' compound_statement
   14                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' ';'
   15                     | type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' ';'
   16                     | func_decl_specs IDENTIFIER '(' parameter_type_list_opt ')' compound_statement
   17                     | func_decl_specs IDENTIFIER '(' parameter_type_list_opt ')' ';'
   18                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER ';'
   19                     | KW_TYPEDEF type_specifier star_list_opt IDENTIFIER ';'
   20                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims ';'
   21                     | KW_TYPEDEF type_specifier star_list_opt IDENTIFIER array_dims ';'
   22                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';'
   23                     | type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';'
   24                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   25                     | KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   26                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'
   27                     | KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'
   28                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER ';'
   29                     | type_specifier star_list_opt IDENTIFIER ';'
   30                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' initializer ';'
   31                     | type_specifier star_list_opt IDENTIFIER '=' initializer ';'
   32                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';'
   33                     | type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';'
   34                     | function_definition
   35                     | struct_or_union_specifier ';'
   36                     | enum_specifier ';'

   37 func_decl_specs: type_specifier star_list_opt
   38                | KW_EXTERN func_decl_specs
   39                | KW_STATIC func_decl_specs
   40                | KW_CONST func_decl_specs
   41                | KW_VOLATILE func_decl_specs
   42                | KW_RESTRICT func_decl_specs
   43                | KW_INLINE func_decl_specs

   44 parameter_type_list_opt: /* empty */
   45                        | parameter_type_list

   46 parameter_type_list: parameter_list
   47                    | parameter_list ',' ELLIPSIS

   48 parameter_list: parameter_declaration
   49               | parameter_list ',' parameter_declaration

   50 parameter_declaration: type_qualifier_seq_opt type_specifier sdecl
   51                      | type_qualifier_seq_opt type_specifier

   52 declaration_specifiers: declaration_specifier
   53                       | declaration_specifiers declaration_specifier

   54 declaration_specifier: storage_class_specifier
   55                      | type_specifier
   56                      | type_qualifier
   57                      | function_specifier

   58 storage_class_specifier: KW_EXTERN
   59                        | KW_STATIC

   60 type_qualifier: KW_CONST
   61               | KW_VOLATILE
   62               | KW_RESTRICT

   63 function_specifier: KW_INLINE

   64 type_unit: KW_VOID
   65          | KW_CHAR
   66          | KW_SHORT
   67          | KW_INT
   68          | KW_LONG
   69          | KW_SIGNED
   70          | KW_UNSIGNED
   71          | KW_FLOAT
   72          | KW_DOUBLE
   73          | struct_or_union_specifier
   74          | enum_specifier
   75          | TYPE_NAME

   76 type_specifier: type_unit
   77               | type_specifier type_unit

   78 array_dims: '[' INTEGER_CONSTANT ']'
   79           | array_dims '[' INTEGER_CONSTANT ']'

   80 struct_or_union_specifier: KW_STRUCT IDENTIFIER '{' struct_declaration_list_opt '}'
   81                          | KW_UNION IDENTIFIER '{' struct_declaration_list_opt '}'
   82                          | KW_STRUCT '{' struct_declaration_list_opt '}'
   83                          | KW_UNION '{' struct_declaration_list_opt '}'
   84                          | KW_STRUCT IDENTIFIER
   85                          | KW_UNION IDENTIFIER

   86 struct_declaration_list_opt: /* empty */
   87                            | struct_declaration_list

   88 struct_declaration_list: struct_declaration
   89                        | struct_declaration_list struct_declaration

   90 struct_declaration: declaration_specifiers struct_declarator_list ';'

   91 struct_declarator_list: struct_declarator
   92                       | struct_declarator_list ',' struct_declarator

   93 struct_declarator: declarator
   94                  | ':' constant_expression
   95                  | declarator ':' constant_expression

   96 enum_specifier: KW_ENUM IDENTIFIER '{' enumerator_list_opt '}'
   97               | KW_ENUM '{' enumerator_list_opt '}'
   98               | KW_ENUM IDENTIFIER

   99 enumerator_list_opt: /* empty */
  100                    | enumerator_list

  101 enumerator_list: enumerator
  102                | enumerator_list ',' enumerator

  103 enumerator: IDENTIFIER
  104           | IDENTIFIER '=' constant_expression

  105 declarator: pointer_opt direct_declarator

  106 pointer_opt: /* empty */
  107            | pointer

  108 pointer: '*'
  109        | '*' type_qualifier
  110        | '*' pointer
  111        | '*' type_qualifier pointer

  112 direct_declarator: IDENTIFIER
  113                  | '(' declarator ')'
  114                  | direct_declarator '[' assignment_expression_opt ']'
  115                  | direct_declarator '(' parameter_type_list_opt ')'
  116                  | direct_declarator '(' identifier_list_opt ')'

  117 identifier_list_opt: /* empty */
  118                    | identifier_list

  119 identifier_list: IDENTIFIER
  120                | identifier_list ',' IDENTIFIER

  121 fp_param_list_opt: /* empty */
  122                  | fp_param_list

  123 fp_param_list: fp_param
  124              | fp_param_list ',' fp_param

  125 fp_param: type_qualifier_seq_opt type_specifier star_list_opt
  126         | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER

  127 function_definition: declaration_specifiers declarator compound_statement
  128                    | type_specifier declarator compound_statement

  129 statement: compound_statement
  130          | expression_statement
  131          | selection_statement
  132          | iteration_statement
  133          | jump_statement

  134 compound_statement: '{' block_item_list_opt '}'

  135 block_item_list_opt: /* empty */
  136                    | block_item_list

  137 block_item_list: block_item
  138                | block_item_list block_item

  139 block_item: type_specifier star_list_opt IDENTIFIER ';'
  140           | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER ';'
  141           | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';'
  142           | type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';'
  143           | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' initializer ';'
  144           | type_specifier star_list_opt IDENTIFIER '=' initializer ';'
  145           | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';'
  146           | type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';'
  147           | type_qualifier_seq_opt type_specifier sdecl ',' sdecl sdecl_list ';'
  148           | type_qualifier_seq_opt type_specifier sdecl '=' initializer ';'
  149           | statement
  150           | KW_TYPEDEF type_specifier star_list_opt IDENTIFIER ';'

  151 sdecl_list: /* empty */
  152           | sdecl_list ',' sdecl

  153 sdecl: star_list_opt sdir

  154 sdir: IDENTIFIER
  155     | '(' sdecl ')'
  156     | '(' sdecl ')' '(' fp_param_list_opt ')'
  157     | sdir '[' assignment_expression_opt ']'

  158 expression_statement: ';'
  159                     | expression ';'

  160 selection_statement: KW_IF '(' expression ')' statement
  161                    | KW_IF '(' expression ')' statement KW_ELSE statement
  162                    | KW_SWITCH '(' expression ')' statement

  163 iteration_statement: KW_WHILE '(' expression ')' statement
  164                    | KW_DO statement KW_WHILE '(' expression ')' ';'
  165                    | KW_FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' statement

  166 jump_statement: KW_RETURN expression_opt ';'
  167               | KW_BREAK ';'
  168               | KW_CONTINUE ';'
  169               | KW_GOTO IDENTIFIER ';'

  170 expression_opt: /* empty */
  171               | expression

  172 expression: assignment_expression
  173           | expression ',' assignment_expression

  174 assignment_expression_opt: /* empty */
  175                          | assignment_expression

  176 assignment_expression: conditional_expression
  177                      | unary_expression '=' assignment_expression
  178                      | unary_expression ADD_ASSIGN assignment_expression
  179                      | unary_expression SUB_ASSIGN assignment_expression
  180                      | unary_expression MUL_ASSIGN assignment_expression
  181                      | unary_expression DIV_ASSIGN assignment_expression
  182                      | unary_expression MOD_ASSIGN assignment_expression
  183                      | unary_expression AND_ASSIGN assignment_expression
  184                      | unary_expression OR_ASSIGN assignment_expression
  185                      | unary_expression XOR_ASSIGN assignment_expression
  186                      | unary_expression LSHIFT_ASSIGN assignment_expression
  187                      | unary_expression RSHIFT_ASSIGN assignment_expression

  188 conditional_expression: logical_or_expression
  189                       | logical_or_expression '?' expression ':' conditional_expression

  190 logical_or_expression: logical_and_expression
  191                      | logical_or_expression LOGOR logical_and_expression

  192 logical_and_expression: inclusive_or_expression
  193                       | logical_and_expression LOGAND inclusive_or_expression

  194 inclusive_or_expression: exclusive_or_expression
  195                        | inclusive_or_expression '|' exclusive_or_expression

  196 exclusive_or_expression: and_expression
  197                        | exclusive_or_expression '^' and_expression

  198 and_expression: equality_expression
  199               | and_expression '&' equality_expression

  200 equality_expression: relational_expression
  201                    | equality_expression EQ relational_expression
  202                    | equality_expression NE relational_expression

  203 relational_expression: shift_expression
  204                      | relational_expression '<' shift_expression
  205                      | relational_expression '>' shift_expression
  206                      | relational_expression LE shift_expression
  207                      | relational_expression GE shift_expression

  208 shift_expression: additive_expression
  209                 | shift_expression LSHIFT additive_expression
  210                 | shift_expression RSHIFT additive_expression

  211 additive_expression: multiplicative_expression
  212                    | additive_expression '+' multiplicative_expression
  213                    | additive_expression '-' multiplicative_expression

  214 multiplicative_expression: unary_expression
  215                          | multiplicative_expression '*' unary_expression
  216                          | multiplicative_expression '/' unary_expression
  217                          | multiplicative_expression '%' unary_expression

  218 unary_expression: postfix_expression
  219                 | INC unary_expression
  220                 | DEC unary_expression
  221                 | '+' unary_expression
  222                 | '-' unary_expression
  223                 | '!' unary_expression
  224                 | '~' unary_expression
  225                 | KW_SIZEOF unary_expression
  226                 | KW_SIZEOF '(' type_specifier ')'
  227                 | '(' type_qualifier_seq_opt type_specifier star_list_opt ')' unary_expression

  228 type_qualifier_seq_opt: /* empty */
  229                       | type_qualifier_seq_opt KW_CONST
  230                       | type_qualifier_seq_opt KW_VOLATILE
  231                       | type_qualifier_seq_opt KW_RESTRICT

  232 postfix_expression: primary_expression
  233                   | postfix_expression '(' argument_expression_list_opt ')'
  234                   | postfix_expression '[' expression ']'
  235                   | postfix_expression '.' IDENTIFIER
  236                   | postfix_expression ARROW IDENTIFIER
  237                   | postfix_expression INC
  238                   | postfix_expression DEC

  239 argument_expression_list_opt: /* empty */
  240                             | argument_expression_list

  241 argument_expression_list: assignment_expression
  242                         | argument_expression_list ',' assignment_expression

  243 primary_expression: IDENTIFIER
  244                   | INTEGER_CONSTANT
  245                   | FLOAT_CONSTANT
  246                   | CHAR_CONSTANT
  247                   | STRING_LITERAL
  248                   | '(' expression ')'

  249 initializer: assignment_expression
  250            | '{' initializer_list_opt '}'

  251 initializer_list_opt: /* empty */
  252                     | initializer_list

  253 initializer_list: initializer
  254                 | designated_initializer
  255                 | initializer_list ',' initializer
  256                 | initializer_list ',' designated_initializer

  257 designated_initializer: designation '=' initializer

  258 designation: designator
  259            | designation designator

  260 designator: '.' IDENTIFIER
  261           | '[' constant_expression ']'
  262           | '[' constant_expression ELLIPSIS constant_expression ']'

  263 constant_expression: conditional_expression


Terminals, with rules where they appear

$end (0) 0
'!' (33) 223
'%' (37) 217
'&' (38) 199
'(' (40) 12 13 14 15 16 17 24 25 26 27 113 115 116 155 156 160 161
    162 163 164 165 226 227 233 248
')' (41) 12 13 14 15 16 17 24 25 26 27 113 115 116 155 156 160 161
    162 163 164 165 226 227 233 248
'*' (42) 5 6 24 25 26 27 108 109 110 111 215
'+' (43) 212 221
',' (44) 7 8 47 49 92 102 120 124 147 152 173 242 255 256
'-' (45) 213 222
'.' (46) 235 260
'/' (47) 216
':' (58) 94 95 189
';' (59) 7 8 9 10 14 15 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
    32 33 35 36 90 139 140 141 142 143 144 145 146 147 148 150 158
    159 164 165 166 167 168 169
'<' (60) 204
'=' (61) 9 10 22 23 30 31 32 33 104 141 142 143 144 145 146 148 177
    257
'>' (62) 205
'?' (63) 189
'[' (91) 78 79 114 157 234 261 262
']' (93) 78 79 114 157 234 261 262
'^' (94) 197
'{' (123) 80 81 82 83 96 97 134 250
'|' (124) 195
'}' (125) 80 81 82 83 96 97 134 250
'~' (126) 224
error (256)
IDENTIFIER (258) 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28
    29 30 31 32 33 80 81 84 85 96 98 103 104 112 119 120 126 139 140
    141 142 143 144 145 146 150 154 169 235 236 243 260
TYPE_NAME (259) 75
STRING_LITERAL (260) 247
INTEGER_CONSTANT (261) 78 79 244
FLOAT_CONSTANT (262) 245
CHAR_CONSTANT (263) 246
KW_VOID (264) 64
KW_CHAR (265) 65
KW_SHORT (266) 66
KW_INT (267) 67
KW_LONG (268) 68
KW_SIGNED (269) 69
KW_UNSIGNED (270) 70
KW_FLOAT (271) 71
KW_DOUBLE (272) 72
KW_STRUCT (273) 80 82 84
KW_UNION (274) 81 83 85
KW_ENUM (275) 96 97 98
KW_TYPEDEF (276) 18 19 20 21 24 25 26 27 150
KW_RETURN (277) 166
KW_IF (278) 160 161
KW_ELSE (279) 161
KW_WHILE (280) 163 164
KW_FOR (281) 165
KW_DO (282) 164
KW_SWITCH (283) 162
KW_CASE (284)
KW_DEFAULT (285)
KW_BREAK (286) 167
KW_CONTINUE (287) 168
KW_GOTO (288) 169
KW_CONST (289) 40 60 229
KW_VOLATILE (290) 41 61 230
KW_RESTRICT (291) 42 62 231
KW_INLINE (292) 43 63
KW_EXTERN (293) 38 58
KW_STATIC (294) 39 59
KW_SIZEOF (295) 225 226
ELLIPSIS (296) 47 262
ARROW (297) 236
INC (298) 219 237
DEC (299) 220 238
LSHIFT (300) 209
RSHIFT (301) 210
LE (302) 206
GE (303) 207
EQ (304) 201
NE (305) 202
LOGAND (306) 193
LOGOR (307) 191
ADD_ASSIGN (308) 178
SUB_ASSIGN (309) 179
MUL_ASSIGN (310) 180
DIV_ASSIGN (311) 181
MOD_ASSIGN (312) 182
AND_ASSIGN (313) 183
OR_ASSIGN (314) 184
XOR_ASSIGN (315) 185
LSHIFT_ASSIGN (316) 186
RSHIFT_ASSIGN (317) 187
PREFER_EMPTY (318)


Nonterminals, with rules where they appear

$accept (88)
    on left: 0
translation_unit (89)
    on left: 1 2, on right: 0 2
star_list_opt (90)
    on left: 3 4, on right: 12 13 14 15 18 19 20 21 22 23 24 25 26
    27 28 29 30 31 32 33 37 125 126 139 140 141 142 143 144 145 146
    150 153 227
star_list (91)
    on left: 5 6, on right: 4 6
external_declaration (92)
    on left: 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
    26 27 28 29 30 31 32 33 34 35 36, on right: 2
func_decl_specs (93)
    on left: 37 38 39 40 41 42 43, on right: 16 17 38 39 40 41 42 43
parameter_type_list_opt (94)
    on left: 44 45, on right: 12 13 14 15 16 17 115
parameter_type_list (95)
    on left: 46 47, on right: 45
parameter_list (96)
    on left: 48 49, on right: 46 47 49
parameter_declaration (97)
    on left: 50 51, on right: 48 49
declaration_specifiers (98)
    on left: 52 53, on right: 53 90 127
declaration_specifier (99)
    on left: 54 55 56 57, on right: 52 53
storage_class_specifier (100)
    on left: 58 59, on right: 54
type_qualifier (101)
    on left: 60 61 62, on right: 56 109 111
function_specifier (102)
    on left: 63, on right: 57
type_unit (103)
    on left: 64 65 66 67 68 69 70 71 72 73 74 75, on right: 76 77
type_specifier (104)
    on left: 76 77, on right: 7 8 9 10 12 13 14 15 18 19 20 21 22 23
    24 25 26 27 28 29 30 31 32 33 37 50 51 55 77 125 126 128 139 140
    141 142 143 144 145 146 147 148 150 226 227
array_dims (105)
    on left: 78 79, on right: 20 21 26 27 32 33 79 145 146
struct_or_union_specifier (106)
    on left: 80 81 82 83 84 85, on right: 35 73
struct_declaration_list_opt (107)
    on left: 86 87, on right: 80 81 82 83
struct_declaration_list (108)
    on left: 88 89, on right: 87 89
struct_declaration (109)
    on left: 90, on right: 88 89
struct_declarator_list (110)
    on left: 91 92, on right: 90 92
struct_declarator (111)
    on left: 93 94 95, on right: 91 92
enum_specifier (112)
    on left: 96 97 98, on right: 36 74
enumerator_list_opt (113)
    on left: 99 100, on right: 96 97
enumerator_list (114)
    on left: 101 102, on right: 100 102
enumerator (115)
    on left: 103 104, on right: 101 102
declarator (116)
    on left: 105, on right: 93 95 113 127 128
pointer_opt (117)
    on left: 106 107, on right: 105
pointer (118)
    on left: 108 109 110 111, on right: 107 110 111
direct_declarator (119)
    on left: 112 113 114 115 116, on right: 105 114 115 116
identifier_list_opt (120)
    on left: 117 118, on right: 116
identifier_list (121)
    on left: 119 120, on right: 118 120
fp_param_list_opt (122)
    on left: 121 122, on right: 24 25 26 27 156
fp_param_list (123)
    on left: 123 124, on right: 122 124
fp_param (124)
    on left: 125 126, on right: 123 124
function_definition (125)
    on left: 127 128, on right: 34
statement (126)
    on left: 129 130 131 132 133, on right: 149 160 161 162 163 164
    165
compound_statement (127)
    on left: 134, on right: 12 13 16 127 128 129
block_item_list_opt (128)
    on left: 135 136, on right: 134
block_item_list (129)
    on left: 137 138, on right: 136 138
block_item (130)
    on left: 139 140 141 142 143 144 145 146 147 148 149 150,
    on right: 137 138
sdecl_list (131)
    on left: 151 152, on right: 7 8 147 152
sdecl (132)
    on left: 153, on right: 7 8 9 10 50 147 148 152 155 156
sdir (133)
    on left: 154 155 156 157, on right: 153 157
expression_statement (134)
    on left: 158 159, on right: 130
selection_statement (135)
    on left: 160 161 162, on right: 131
iteration_statement (136)
    on left: 163 164 165, on right: 132
jump_statement (137)
    on left: 166 167 168 169, on right: 133
expression_opt (138)
    on left: 170 171, on right: 165 166
expression (139)
    on left: 172 173, on right: 159 160 161 162 163 164 171 173 189
    234 248
assignment_expression_opt (140)
    on left: 174 175, on right: 114 157
assignment_expression (141)
    on left: 176 177 178 179 180 181 182 183 184 185 186 187,
    on right: 22 23 141 142 172 173 175 177 178 179 180 181 182 183
    184 185 186 187 241 242 249
conditional_expression (142)
    on left: 188 189, on right: 176 189 263
logical_or_expression (143)
    on left: 190 191, on right: 188 189 191
logical_and_expression (144)
    on left: 192 193, on right: 190 191 193
inclusive_or_expression (145)
    on left: 194 195, on right: 192 193 195
exclusive_or_expression (146)
    on left: 196 197, on right: 194 195 197
and_expression (147)
    on left: 198 199, on right: 196 197 199
equality_expression (148)
    on left: 200 201 202, on right: 198 199 201 202
relational_expression (149)
    on left: 203 204 205 206 207, on right: 200 201 202 204 205 206
    207
shift_expression (150)
    on left: 208 209 210, on right: 203 204 205 206 207 209 210
additive_expression (151)
    on left: 211 212 213, on right: 208 209 210 212 213
multiplicative_expression (152)
    on left: 214 215 216 217, on right: 211 212 213 215 216 217
unary_expression (153)
    on left: 218 219 220 221 222 223 224 225 226 227,
    on right: 177 178 179 180 181 182 183 184 185 186 187 214 215 216
    217 219 220 221 222 223 224 225 227
type_qualifier_seq_opt (154)
    on left: 228 229 230 231, on right: 7 9 12 14 18 20 22 24 26 28
    30 32 50 51 125 126 140 141 143 145 147 148 227 229 230 231
postfix_expression (155)
    on left: 232 233 234 235 236 237 238, on right: 218 233 234 235
    236 237 238
argument_expression_list_opt (156)
    on left: 239 240, on right: 233
argument_expression_list (157)
    on left: 241 242, on right: 240 242
primary_expression (158)
    on left: 243 244 245 246 247 248, on right: 232
initializer (159)
    on left: 249 250, on right: 9 10 30 31 32 33 143 144 145 146 148
    253 255 257
initializer_list_opt (160)
    on left: 251 252, on right: 250
initializer_list (161)
    on left: 253 254 255 256, on right: 252 255 256
designated_initializer (162)
    on left: 257, on right: 254 256
designation (163)
    on left: 258 259, on right: 257 259
designator (164)
    on left: 260 261 262, on right: 258 259
constant_expression (165)
    on left: 263, on right: 94 95 104 261 262


state 0

    0 $accept: . translation_unit $end

    $default  reduce using rule 1 (translation_unit)

    translation_unit  go to state 1


state 1

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . external_declaration

    $end         shift, and go to state 2
    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_TYPEDEF   shift, and go to state 16
    KW_CONST     shift, and go to state 17
    KW_VOLATILE  shift, and go to state 18
    KW_RESTRICT  shift, and go to state 19
    KW_INLINE    shift, and go to state 20
    KW_EXTERN    shift, and go to state 21
    KW_STATIC    shift, and go to state 22

    $end         [reduce using rule 11 (external_declaration)]
    TYPE_NAME    [reduce using rule 11 (external_declaration)]
    TYPE_NAME    [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_VOID      [reduce using rule 11 (external_declaration)]
    KW_VOID      [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_CHAR      [reduce using rule 11 (external_declaration)]
    KW_CHAR      [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_SHORT     [reduce using rule 11 (external_declaration)]
    KW_SHORT     [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_INT       [reduce using rule 11 (external_declaration)]
    KW_INT       [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_LONG      [reduce using rule 11 (external_declaration)]
    KW_LONG      [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_SIGNED    [reduce using rule 11 (external_declaration)]
    KW_SIGNED    [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_UNSIGNED  [reduce using rule 11 (external_declaration)]
    KW_UNSIGNED  [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_FLOAT     [reduce using rule 11 (external_declaration)]
    KW_FLOAT     [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_DOUBLE    [reduce using rule 11 (external_declaration)]
    KW_DOUBLE    [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_STRUCT    [reduce using rule 11 (external_declaration)]
    KW_STRUCT    [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_UNION     [reduce using rule 11 (external_declaration)]
    KW_UNION     [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_ENUM      [reduce using rule 11 (external_declaration)]
    KW_ENUM      [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_TYPEDEF   [reduce using rule 11 (external_declaration)]
    KW_CONST     [reduce using rule 11 (external_declaration)]
    KW_CONST     [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_VOLATILE  [reduce using rule 11 (external_declaration)]
    KW_VOLATILE  [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_RESTRICT  [reduce using rule 11 (external_declaration)]
    KW_RESTRICT  [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_INLINE    [reduce using rule 11 (external_declaration)]
    KW_EXTERN    [reduce using rule 11 (external_declaration)]
    KW_STATIC    [reduce using rule 11 (external_declaration)]

    external_declaration       go to state 23
    func_decl_specs            go to state 24
    declaration_specifiers     go to state 25
    declaration_specifier      go to state 26
    storage_class_specifier    go to state 27
    type_qualifier             go to state 28
    function_specifier         go to state 29
    type_unit                  go to state 30
    type_specifier             go to state 31
    struct_or_union_specifier  go to state 32
    enum_specifier             go to state 33
    function_definition        go to state 34
    type_qualifier_seq_opt     go to state 35


state 2

    0 $accept: translation_unit $end .

    $default  accept


state 3

   75 type_unit: TYPE_NAME .

    $default  reduce using rule 75 (type_unit)


state 4

   64 type_unit: KW_VOID .

    $default  reduce using rule 64 (type_unit)


state 5

   65 type_unit: KW_CHAR .

    $default  reduce using rule 65 (type_unit)


state 6

   66 type_unit: KW_SHORT .

    $default  reduce using rule 66 (type_unit)


state 7

   67 type_unit: KW_INT .

    $default  reduce using rule 67 (type_unit)


state 8

   68 type_unit: KW_LONG .

    $default  reduce using rule 68 (type_unit)


state 9

   69 type_unit: KW_SIGNED .

    $default  reduce using rule 69 (type_unit)


state 10

   70 type_unit: KW_UNSIGNED .

    $default  reduce using rule 70 (type_unit)


state 11

   71 type_unit: KW_FLOAT .

    $default  reduce using rule 71 (type_unit)


state 12

   72 type_unit: KW_DOUBLE .

    $default  reduce using rule 72 (type_unit)


state 13

   80 struct_or_union_specifier: KW_STRUCT . IDENTIFIER '{' struct_declaration_list_opt '}'
   82                          | KW_STRUCT . '{' struct_declaration_list_opt '}'
   84                          | KW_STRUCT . IDENTIFIER

    IDENTIFIER  shift, and go to state 36
    '{'         shift, and go to state 37


state 14

   81 struct_or_union_specifier: KW_UNION . IDENTIFIER '{' struct_declaration_list_opt '}'
   83                          | KW_UNION . '{' struct_declaration_list_opt '}'
   85                          | KW_UNION . IDENTIFIER

    IDENTIFIER  shift, and go to state 38
    '{'         shift, and go to state 39


state 15

   96 enum_specifier: KW_ENUM . IDENTIFIER '{' enumerator_list_opt '}'
   97               | KW_ENUM . '{' enumerator_list_opt '}'
   98               | KW_ENUM . IDENTIFIER

    IDENTIFIER  shift, and go to state 40
    '{'         shift, and go to state 41


state 16

   18 external_declaration: KW_TYPEDEF . type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER ';'
   19                     | KW_TYPEDEF . type_specifier star_list_opt IDENTIFIER ';'
   20                     | KW_TYPEDEF . type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims ';'
   21                     | KW_TYPEDEF . type_specifier star_list_opt IDENTIFIER array_dims ';'
   24                     | KW_TYPEDEF . type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   25                     | KW_TYPEDEF . type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   26                     | KW_TYPEDEF . type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'
   27                     | KW_TYPEDEF . type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15

    TYPE_NAME    [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_VOID      [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_CHAR      [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_SHORT     [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_INT       [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_LONG      [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_SIGNED    [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_UNSIGNED  [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_FLOAT     [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_DOUBLE    [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_STRUCT    [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_UNION     [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_ENUM      [reduce using rule 228 (type_qualifier_seq_opt)]
    $default     reduce using rule 228 (type_qualifier_seq_opt)

    type_unit                  go to state 30
    type_specifier             go to state 42
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44
    type_qualifier_seq_opt     go to state 45


state 17

   40 func_decl_specs: KW_CONST . func_decl_specs
   60 type_qualifier: KW_CONST .

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 46
    KW_VOLATILE  shift, and go to state 47
    KW_RESTRICT  shift, and go to state 48
    KW_INLINE    shift, and go to state 49
    KW_EXTERN    shift, and go to state 50
    KW_STATIC    shift, and go to state 51

    TYPE_NAME    [reduce using rule 60 (type_qualifier)]
    KW_VOID      [reduce using rule 60 (type_qualifier)]
    KW_CHAR      [reduce using rule 60 (type_qualifier)]
    KW_SHORT     [reduce using rule 60 (type_qualifier)]
    KW_INT       [reduce using rule 60 (type_qualifier)]
    KW_LONG      [reduce using rule 60 (type_qualifier)]
    KW_SIGNED    [reduce using rule 60 (type_qualifier)]
    KW_UNSIGNED  [reduce using rule 60 (type_qualifier)]
    KW_FLOAT     [reduce using rule 60 (type_qualifier)]
    KW_DOUBLE    [reduce using rule 60 (type_qualifier)]
    KW_STRUCT    [reduce using rule 60 (type_qualifier)]
    KW_UNION     [reduce using rule 60 (type_qualifier)]
    KW_ENUM      [reduce using rule 60 (type_qualifier)]
    KW_CONST     [reduce using rule 60 (type_qualifier)]
    KW_VOLATILE  [reduce using rule 60 (type_qualifier)]
    KW_RESTRICT  [reduce using rule 60 (type_qualifier)]
    KW_INLINE    [reduce using rule 60 (type_qualifier)]
    KW_EXTERN    [reduce using rule 60 (type_qualifier)]
    KW_STATIC    [reduce using rule 60 (type_qualifier)]
    $default     reduce using rule 60 (type_qualifier)

    func_decl_specs            go to state 52
    type_unit                  go to state 30
    type_specifier             go to state 53
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 18

   41 func_decl_specs: KW_VOLATILE . func_decl_specs
   61 type_qualifier: KW_VOLATILE .

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 46
    KW_VOLATILE  shift, and go to state 47
    KW_RESTRICT  shift, and go to state 48
    KW_INLINE    shift, and go to state 49
    KW_EXTERN    shift, and go to state 50
    KW_STATIC    shift, and go to state 51

    TYPE_NAME    [reduce using rule 61 (type_qualifier)]
    KW_VOID      [reduce using rule 61 (type_qualifier)]
    KW_CHAR      [reduce using rule 61 (type_qualifier)]
    KW_SHORT     [reduce using rule 61 (type_qualifier)]
    KW_INT       [reduce using rule 61 (type_qualifier)]
    KW_LONG      [reduce using rule 61 (type_qualifier)]
    KW_SIGNED    [reduce using rule 61 (type_qualifier)]
    KW_UNSIGNED  [reduce using rule 61 (type_qualifier)]
    KW_FLOAT     [reduce using rule 61 (type_qualifier)]
    KW_DOUBLE    [reduce using rule 61 (type_qualifier)]
    KW_STRUCT    [reduce using rule 61 (type_qualifier)]
    KW_UNION     [reduce using rule 61 (type_qualifier)]
    KW_ENUM      [reduce using rule 61 (type_qualifier)]
    KW_CONST     [reduce using rule 61 (type_qualifier)]
    KW_VOLATILE  [reduce using rule 61 (type_qualifier)]
    KW_RESTRICT  [reduce using rule 61 (type_qualifier)]
    KW_INLINE    [reduce using rule 61 (type_qualifier)]
    KW_EXTERN    [reduce using rule 61 (type_qualifier)]
    KW_STATIC    [reduce using rule 61 (type_qualifier)]
    $default     reduce using rule 61 (type_qualifier)

    func_decl_specs            go to state 54
    type_unit                  go to state 30
    type_specifier             go to state 53
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 19

   42 func_decl_specs: KW_RESTRICT . func_decl_specs
   62 type_qualifier: KW_RESTRICT .

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 46
    KW_VOLATILE  shift, and go to state 47
    KW_RESTRICT  shift, and go to state 48
    KW_INLINE    shift, and go to state 49
    KW_EXTERN    shift, and go to state 50
    KW_STATIC    shift, and go to state 51

    TYPE_NAME    [reduce using rule 62 (type_qualifier)]
    KW_VOID      [reduce using rule 62 (type_qualifier)]
    KW_CHAR      [reduce using rule 62 (type_qualifier)]
    KW_SHORT     [reduce using rule 62 (type_qualifier)]
    KW_INT       [reduce using rule 62 (type_qualifier)]
    KW_LONG      [reduce using rule 62 (type_qualifier)]
    KW_SIGNED    [reduce using rule 62 (type_qualifier)]
    KW_UNSIGNED  [reduce using rule 62 (type_qualifier)]
    KW_FLOAT     [reduce using rule 62 (type_qualifier)]
    KW_DOUBLE    [reduce using rule 62 (type_qualifier)]
    KW_STRUCT    [reduce using rule 62 (type_qualifier)]
    KW_UNION     [reduce using rule 62 (type_qualifier)]
    KW_ENUM      [reduce using rule 62 (type_qualifier)]
    KW_CONST     [reduce using rule 62 (type_qualifier)]
    KW_VOLATILE  [reduce using rule 62 (type_qualifier)]
    KW_RESTRICT  [reduce using rule 62 (type_qualifier)]
    KW_INLINE    [reduce using rule 62 (type_qualifier)]
    KW_EXTERN    [reduce using rule 62 (type_qualifier)]
    KW_STATIC    [reduce using rule 62 (type_qualifier)]
    $default     reduce using rule 62 (type_qualifier)

    func_decl_specs            go to state 55
    type_unit                  go to state 30
    type_specifier             go to state 53
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 20

   43 func_decl_specs: KW_INLINE . func_decl_specs
   63 function_specifier: KW_INLINE .

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 46
    KW_VOLATILE  shift, and go to state 47
    KW_RESTRICT  shift, and go to state 48
    KW_INLINE    shift, and go to state 49
    KW_EXTERN    shift, and go to state 50
    KW_STATIC    shift, and go to state 51

    TYPE_NAME    [reduce using rule 63 (function_specifier)]
    KW_VOID      [reduce using rule 63 (function_specifier)]
    KW_CHAR      [reduce using rule 63 (function_specifier)]
    KW_SHORT     [reduce using rule 63 (function_specifier)]
    KW_INT       [reduce using rule 63 (function_specifier)]
    KW_LONG      [reduce using rule 63 (function_specifier)]
    KW_SIGNED    [reduce using rule 63 (function_specifier)]
    KW_UNSIGNED  [reduce using rule 63 (function_specifier)]
    KW_FLOAT     [reduce using rule 63 (function_specifier)]
    KW_DOUBLE    [reduce using rule 63 (function_specifier)]
    KW_STRUCT    [reduce using rule 63 (function_specifier)]
    KW_UNION     [reduce using rule 63 (function_specifier)]
    KW_ENUM      [reduce using rule 63 (function_specifier)]
    KW_CONST     [reduce using rule 63 (function_specifier)]
    KW_VOLATILE  [reduce using rule 63 (function_specifier)]
    KW_RESTRICT  [reduce using rule 63 (function_specifier)]
    KW_INLINE    [reduce using rule 63 (function_specifier)]
    KW_EXTERN    [reduce using rule 63 (function_specifier)]
    KW_STATIC    [reduce using rule 63 (function_specifier)]
    $default     reduce using rule 63 (function_specifier)

    func_decl_specs            go to state 56
    type_unit                  go to state 30
    type_specifier             go to state 53
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 21

   38 func_decl_specs: KW_EXTERN . func_decl_specs
   58 storage_class_specifier: KW_EXTERN .

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 46
    KW_VOLATILE  shift, and go to state 47
    KW_RESTRICT  shift, and go to state 48
    KW_INLINE    shift, and go to state 49
    KW_EXTERN    shift, and go to state 50
    KW_STATIC    shift, and go to state 51

    TYPE_NAME    [reduce using rule 58 (storage_class_specifier)]
    KW_VOID      [reduce using rule 58 (storage_class_specifier)]
    KW_CHAR      [reduce using rule 58 (storage_class_specifier)]
    KW_SHORT     [reduce using rule 58 (storage_class_specifier)]
    KW_INT       [reduce using rule 58 (storage_class_specifier)]
    KW_LONG      [reduce using rule 58 (storage_class_specifier)]
    KW_SIGNED    [reduce using rule 58 (storage_class_specifier)]
    KW_UNSIGNED  [reduce using rule 58 (storage_class_specifier)]
    KW_FLOAT     [reduce using rule 58 (storage_class_specifier)]
    KW_DOUBLE    [reduce using rule 58 (storage_class_specifier)]
    KW_STRUCT    [reduce using rule 58 (storage_class_specifier)]
    KW_UNION     [reduce using rule 58 (storage_class_specifier)]
    KW_ENUM      [reduce using rule 58 (storage_class_specifier)]
    KW_CONST     [reduce using rule 58 (storage_class_specifier)]
    KW_VOLATILE  [reduce using rule 58 (storage_class_specifier)]
    KW_RESTRICT  [reduce using rule 58 (storage_class_specifier)]
    KW_INLINE    [reduce using rule 58 (storage_class_specifier)]
    KW_EXTERN    [reduce using rule 58 (storage_class_specifier)]
    KW_STATIC    [reduce using rule 58 (storage_class_specifier)]
    $default     reduce using rule 58 (storage_class_specifier)

    func_decl_specs            go to state 57
    type_unit                  go to state 30
    type_specifier             go to state 53
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 22

   39 func_decl_specs: KW_STATIC . func_decl_specs
   59 storage_class_specifier: KW_STATIC .

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 46
    KW_VOLATILE  shift, and go to state 47
    KW_RESTRICT  shift, and go to state 48
    KW_INLINE    shift, and go to state 49
    KW_EXTERN    shift, and go to state 50
    KW_STATIC    shift, and go to state 51

    TYPE_NAME    [reduce using rule 59 (storage_class_specifier)]
    KW_VOID      [reduce using rule 59 (storage_class_specifier)]
    KW_CHAR      [reduce using rule 59 (storage_class_specifier)]
    KW_SHORT     [reduce using rule 59 (storage_class_specifier)]
    KW_INT       [reduce using rule 59 (storage_class_specifier)]
    KW_LONG      [reduce using rule 59 (storage_class_specifier)]
    KW_SIGNED    [reduce using rule 59 (storage_class_specifier)]
    KW_UNSIGNED  [reduce using rule 59 (storage_class_specifier)]
    KW_FLOAT     [reduce using rule 59 (storage_class_specifier)]
    KW_DOUBLE    [reduce using rule 59 (storage_class_specifier)]
    KW_STRUCT    [reduce using rule 59 (storage_class_specifier)]
    KW_UNION     [reduce using rule 59 (storage_class_specifier)]
    KW_ENUM      [reduce using rule 59 (storage_class_specifier)]
    KW_CONST     [reduce using rule 59 (storage_class_specifier)]
    KW_VOLATILE  [reduce using rule 59 (storage_class_specifier)]
    KW_RESTRICT  [reduce using rule 59 (storage_class_specifier)]
    KW_INLINE    [reduce using rule 59 (storage_class_specifier)]
    KW_EXTERN    [reduce using rule 59 (storage_class_specifier)]
    KW_STATIC    [reduce using rule 59 (storage_class_specifier)]
    $default     reduce using rule 59 (storage_class_specifier)

    func_decl_specs            go to state 58
    type_unit                  go to state 30
    type_specifier             go to state 53
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 23

    2 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 2 (translation_unit)


state 24

   16 external_declaration: func_decl_specs . IDENTIFIER '(' parameter_type_list_opt ')' compound_statement
   17                     | func_decl_specs . IDENTIFIER '(' parameter_type_list_opt ')' ';'

    IDENTIFIER  shift, and go to state 59


state 25

   53 declaration_specifiers: declaration_specifiers . declaration_specifier
  127 function_definition: declaration_specifiers . declarator compound_statement

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 60
    KW_VOLATILE  shift, and go to state 61
    KW_RESTRICT  shift, and go to state 62
    KW_INLINE    shift, and go to state 63
    KW_EXTERN    shift, and go to state 64
    KW_STATIC    shift, and go to state 65
    '*'          shift, and go to state 66

    $default  reduce using rule 106 (pointer_opt)

    declaration_specifier      go to state 67
    storage_class_specifier    go to state 27
    type_qualifier             go to state 28
    function_specifier         go to state 29
    type_unit                  go to state 30
    type_specifier             go to state 68
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44
    declarator                 go to state 69
    pointer_opt                go to state 70
    pointer                    go to state 71


state 26

   52 declaration_specifiers: declaration_specifier .

    $default  reduce using rule 52 (declaration_specifiers)


state 27

   54 declaration_specifier: storage_class_specifier .

    $default  reduce using rule 54 (declaration_specifier)


state 28

   56 declaration_specifier: type_qualifier .

    $default  reduce using rule 56 (declaration_specifier)


state 29

   57 declaration_specifier: function_specifier .

    $default  reduce using rule 57 (declaration_specifier)


state 30

   76 type_specifier: type_unit .

    $default  reduce using rule 76 (type_specifier)


state 31

    8 external_declaration: type_specifier . sdecl ',' sdecl sdecl_list ';'
   10                     | type_specifier . sdecl '=' initializer ';'
   13                     | type_specifier . star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' compound_statement
   15                     | type_specifier . star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' ';'
   23                     | type_specifier . star_list_opt IDENTIFIER '=' assignment_expression ';'
   29                     | type_specifier . star_list_opt IDENTIFIER ';'
   31                     | type_specifier . star_list_opt IDENTIFIER '=' initializer ';'
   33                     | type_specifier . star_list_opt IDENTIFIER array_dims '=' initializer ';'
   37 func_decl_specs: type_specifier . star_list_opt
   55 declaration_specifier: type_specifier .
   77 type_specifier: type_specifier . type_unit
  128 function_definition: type_specifier . declarator compound_statement

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    '*'          shift, and go to state 72

    IDENTIFIER   reduce using rule 3 (star_list_opt)
    IDENTIFIER   [reduce using rule 55 (declaration_specifier)]
    IDENTIFIER   [reduce using rule 106 (pointer_opt)]
    TYPE_NAME    [reduce using rule 55 (declaration_specifier)]
    KW_VOID      [reduce using rule 55 (declaration_specifier)]
    KW_CHAR      [reduce using rule 55 (declaration_specifier)]
    KW_SHORT     [reduce using rule 55 (declaration_specifier)]
    KW_INT       [reduce using rule 55 (declaration_specifier)]
    KW_LONG      [reduce using rule 55 (declaration_specifier)]
    KW_SIGNED    [reduce using rule 55 (declaration_specifier)]
    KW_UNSIGNED  [reduce using rule 55 (declaration_specifier)]
    KW_FLOAT     [reduce using rule 55 (declaration_specifier)]
    KW_DOUBLE    [reduce using rule 55 (declaration_specifier)]
    KW_STRUCT    [reduce using rule 55 (declaration_specifier)]
    KW_UNION     [reduce using rule 55 (declaration_specifier)]
    KW_ENUM      [reduce using rule 55 (declaration_specifier)]
    '*'          [reduce using rule 55 (declaration_specifier)]
    '('          reduce using rule 3 (star_list_opt)
    '('          [reduce using rule 55 (declaration_specifier)]
    '('          [reduce using rule 106 (pointer_opt)]
    $default     reduce using rule 55 (declaration_specifier)

    star_list_opt              go to state 73
    star_list                  go to state 74
    type_unit                  go to state 75
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44
    declarator                 go to state 76
    pointer_opt                go to state 70
    pointer                    go to state 71
    sdecl                      go to state 77


state 32

   35 external_declaration: struct_or_union_specifier . ';'
   73 type_unit: struct_or_union_specifier .

    ';'  shift, and go to state 78

    $default  reduce using rule 73 (type_unit)


state 33

   36 external_declaration: enum_specifier . ';'
   74 type_unit: enum_specifier .

    ';'  shift, and go to state 79

    $default  reduce using rule 74 (type_unit)


state 34

   34 external_declaration: function_definition .

    $default  reduce using rule 34 (external_declaration)


state 35

    7 external_declaration: type_qualifier_seq_opt . type_specifier sdecl ',' sdecl sdecl_list ';'
    9                     | type_qualifier_seq_opt . type_specifier sdecl '=' initializer ';'
   12                     | type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' compound_statement
   14                     | type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' ';'
   22                     | type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';'
   28                     | type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER ';'
   30                     | type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER '=' initializer ';'
   32                     | type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';'
  229 type_qualifier_seq_opt: type_qualifier_seq_opt . KW_CONST
  230                       | type_qualifier_seq_opt . KW_VOLATILE
  231                       | type_qualifier_seq_opt . KW_RESTRICT

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 80
    KW_VOLATILE  shift, and go to state 81
    KW_RESTRICT  shift, and go to state 82

    type_unit                  go to state 30
    type_specifier             go to state 83
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 36

   80 struct_or_union_specifier: KW_STRUCT IDENTIFIER . '{' struct_declaration_list_opt '}'
   84                          | KW_STRUCT IDENTIFIER .

    '{'  shift, and go to state 84

    $default  reduce using rule 84 (struct_or_union_specifier)


state 37

   82 struct_or_union_specifier: KW_STRUCT '{' . struct_declaration_list_opt '}'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 60
    KW_VOLATILE  shift, and go to state 61
    KW_RESTRICT  shift, and go to state 62
    KW_INLINE    shift, and go to state 63
    KW_EXTERN    shift, and go to state 64
    KW_STATIC    shift, and go to state 65

    $default  reduce using rule 86 (struct_declaration_list_opt)

    declaration_specifiers       go to state 85
    declaration_specifier        go to state 26
    storage_class_specifier      go to state 27
    type_qualifier               go to state 28
    function_specifier           go to state 29
    type_unit                    go to state 30
    type_specifier               go to state 68
    struct_or_union_specifier    go to state 43
    struct_declaration_list_opt  go to state 86
    struct_declaration_list      go to state 87
    struct_declaration           go to state 88
    enum_specifier               go to state 44


state 38

   81 struct_or_union_specifier: KW_UNION IDENTIFIER . '{' struct_declaration_list_opt '}'
   85                          | KW_UNION IDENTIFIER .

    '{'  shift, and go to state 89

    $default  reduce using rule 85 (struct_or_union_specifier)


state 39

   83 struct_or_union_specifier: KW_UNION '{' . struct_declaration_list_opt '}'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 60
    KW_VOLATILE  shift, and go to state 61
    KW_RESTRICT  shift, and go to state 62
    KW_INLINE    shift, and go to state 63
    KW_EXTERN    shift, and go to state 64
    KW_STATIC    shift, and go to state 65

    $default  reduce using rule 86 (struct_declaration_list_opt)

    declaration_specifiers       go to state 85
    declaration_specifier        go to state 26
    storage_class_specifier      go to state 27
    type_qualifier               go to state 28
    function_specifier           go to state 29
    type_unit                    go to state 30
    type_specifier               go to state 68
    struct_or_union_specifier    go to state 43
    struct_declaration_list_opt  go to state 90
    struct_declaration_list      go to state 87
    struct_declaration           go to state 88
    enum_specifier               go to state 44


state 40

   96 enum_specifier: KW_ENUM IDENTIFIER . '{' enumerator_list_opt '}'
   98               | KW_ENUM IDENTIFIER .

    '{'  shift, and go to state 91

    $default  reduce using rule 98 (enum_specifier)


state 41

   97 enum_specifier: KW_ENUM '{' . enumerator_list_opt '}'

    IDENTIFIER  shift, and go to state 92

    $default  reduce using rule 99 (enumerator_list_opt)

    enumerator_list_opt  go to state 93
    enumerator_list      go to state 94
    enumerator           go to state 95


state 42

   19 external_declaration: KW_TYPEDEF type_specifier . star_list_opt IDENTIFIER ';'
   21                     | KW_TYPEDEF type_specifier . star_list_opt IDENTIFIER array_dims ';'
   25                     | KW_TYPEDEF type_specifier . star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   27                     | KW_TYPEDEF type_specifier . star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'
   77 type_specifier: type_specifier . type_unit

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    '*'          shift, and go to state 96

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt              go to state 97
    star_list                  go to state 74
    type_unit                  go to state 75
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 43

   73 type_unit: struct_or_union_specifier .

    $default  reduce using rule 73 (type_unit)


state 44

   74 type_unit: enum_specifier .

    $default  reduce using rule 74 (type_unit)


state 45

   18 external_declaration: KW_TYPEDEF type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER ';'
   20                     | KW_TYPEDEF type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER array_dims ';'
   24                     | KW_TYPEDEF type_qualifier_seq_opt . type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   26                     | KW_TYPEDEF type_qualifier_seq_opt . type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'
  229 type_qualifier_seq_opt: type_qualifier_seq_opt . KW_CONST
  230                       | type_qualifier_seq_opt . KW_VOLATILE
  231                       | type_qualifier_seq_opt . KW_RESTRICT

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 80
    KW_VOLATILE  shift, and go to state 81
    KW_RESTRICT  shift, and go to state 82

    type_unit                  go to state 30
    type_specifier             go to state 98
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 46

   40 func_decl_specs: KW_CONST . func_decl_specs

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 46
    KW_VOLATILE  shift, and go to state 47
    KW_RESTRICT  shift, and go to state 48
    KW_INLINE    shift, and go to state 49
    KW_EXTERN    shift, and go to state 50
    KW_STATIC    shift, and go to state 51

    func_decl_specs            go to state 52
    type_unit                  go to state 30
    type_specifier             go to state 53
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 47

   41 func_decl_specs: KW_VOLATILE . func_decl_specs

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 46
    KW_VOLATILE  shift, and go to state 47
    KW_RESTRICT  shift, and go to state 48
    KW_INLINE    shift, and go to state 49
    KW_EXTERN    shift, and go to state 50
    KW_STATIC    shift, and go to state 51

    func_decl_specs            go to state 54
    type_unit                  go to state 30
    type_specifier             go to state 53
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 48

   42 func_decl_specs: KW_RESTRICT . func_decl_specs

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 46
    KW_VOLATILE  shift, and go to state 47
    KW_RESTRICT  shift, and go to state 48
    KW_INLINE    shift, and go to state 49
    KW_EXTERN    shift, and go to state 50
    KW_STATIC    shift, and go to state 51

    func_decl_specs            go to state 55
    type_unit                  go to state 30
    type_specifier             go to state 53
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 49

   43 func_decl_specs: KW_INLINE . func_decl_specs

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 46
    KW_VOLATILE  shift, and go to state 47
    KW_RESTRICT  shift, and go to state 48
    KW_INLINE    shift, and go to state 49
    KW_EXTERN    shift, and go to state 50
    KW_STATIC    shift, and go to state 51

    func_decl_specs            go to state 56
    type_unit                  go to state 30
    type_specifier             go to state 53
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 50

   38 func_decl_specs: KW_EXTERN . func_decl_specs

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 46
    KW_VOLATILE  shift, and go to state 47
    KW_RESTRICT  shift, and go to state 48
    KW_INLINE    shift, and go to state 49
    KW_EXTERN    shift, and go to state 50
    KW_STATIC    shift, and go to state 51

    func_decl_specs            go to state 57
    type_unit                  go to state 30
    type_specifier             go to state 53
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 51

   39 func_decl_specs: KW_STATIC . func_decl_specs

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 46
    KW_VOLATILE  shift, and go to state 47
    KW_RESTRICT  shift, and go to state 48
    KW_INLINE    shift, and go to state 49
    KW_EXTERN    shift, and go to state 50
    KW_STATIC    shift, and go to state 51

    func_decl_specs            go to state 58
    type_unit                  go to state 30
    type_specifier             go to state 53
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 52

   40 func_decl_specs: KW_CONST func_decl_specs .

    $default  reduce using rule 40 (func_decl_specs)


state 53

   37 func_decl_specs: type_specifier . star_list_opt
   77 type_specifier: type_specifier . type_unit

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    '*'          shift, and go to state 96

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt              go to state 99
    star_list                  go to state 74
    type_unit                  go to state 75
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 54

   41 func_decl_specs: KW_VOLATILE func_decl_specs .

    $default  reduce using rule 41 (func_decl_specs)


state 55

   42 func_decl_specs: KW_RESTRICT func_decl_specs .

    $default  reduce using rule 42 (func_decl_specs)


state 56

   43 func_decl_specs: KW_INLINE func_decl_specs .

    $default  reduce using rule 43 (func_decl_specs)


state 57

   38 func_decl_specs: KW_EXTERN func_decl_specs .

    $default  reduce using rule 38 (func_decl_specs)


state 58

   39 func_decl_specs: KW_STATIC func_decl_specs .

    $default  reduce using rule 39 (func_decl_specs)


state 59

   16 external_declaration: func_decl_specs IDENTIFIER . '(' parameter_type_list_opt ')' compound_statement
   17                     | func_decl_specs IDENTIFIER . '(' parameter_type_list_opt ')' ';'

    '('  shift, and go to state 100


state 60

   60 type_qualifier: KW_CONST .

    $default  reduce using rule 60 (type_qualifier)


state 61

   61 type_qualifier: KW_VOLATILE .

    $default  reduce using rule 61 (type_qualifier)


state 62

   62 type_qualifier: KW_RESTRICT .

    $default  reduce using rule 62 (type_qualifier)


state 63

   63 function_specifier: KW_INLINE .

    $default  reduce using rule 63 (function_specifier)


state 64

   58 storage_class_specifier: KW_EXTERN .

    $default  reduce using rule 58 (storage_class_specifier)


state 65

   59 storage_class_specifier: KW_STATIC .

    $default  reduce using rule 59 (storage_class_specifier)


state 66

  108 pointer: '*' .
  109        | '*' . type_qualifier
  110        | '*' . pointer
  111        | '*' . type_qualifier pointer

    KW_CONST     shift, and go to state 60
    KW_VOLATILE  shift, and go to state 61
    KW_RESTRICT  shift, and go to state 62
    '*'          shift, and go to state 66

    $default  reduce using rule 108 (pointer)

    type_qualifier  go to state 101
    pointer         go to state 102


state 67

   53 declaration_specifiers: declaration_specifiers declaration_specifier .

    $default  reduce using rule 53 (declaration_specifiers)


state 68

   55 declaration_specifier: type_specifier .
   77 type_specifier: type_specifier . type_unit

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15

    TYPE_NAME    [reduce using rule 55 (declaration_specifier)]
    KW_VOID      [reduce using rule 55 (declaration_specifier)]
    KW_CHAR      [reduce using rule 55 (declaration_specifier)]
    KW_SHORT     [reduce using rule 55 (declaration_specifier)]
    KW_INT       [reduce using rule 55 (declaration_specifier)]
    KW_LONG      [reduce using rule 55 (declaration_specifier)]
    KW_SIGNED    [reduce using rule 55 (declaration_specifier)]
    KW_UNSIGNED  [reduce using rule 55 (declaration_specifier)]
    KW_FLOAT     [reduce using rule 55 (declaration_specifier)]
    KW_DOUBLE    [reduce using rule 55 (declaration_specifier)]
    KW_STRUCT    [reduce using rule 55 (declaration_specifier)]
    KW_UNION     [reduce using rule 55 (declaration_specifier)]
    KW_ENUM      [reduce using rule 55 (declaration_specifier)]
    $default     reduce using rule 55 (declaration_specifier)

    type_unit                  go to state 75
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 69

  127 function_definition: declaration_specifiers declarator . compound_statement

    '{'  shift, and go to state 103

    compound_statement  go to state 104


state 70

  105 declarator: pointer_opt . direct_declarator

    IDENTIFIER  shift, and go to state 105
    '('         shift, and go to state 106

    direct_declarator  go to state 107


state 71

  107 pointer_opt: pointer .

    $default  reduce using rule 107 (pointer_opt)


state 72

    5 star_list: '*' .
  108 pointer: '*' .
  109        | '*' . type_qualifier
  110        | '*' . pointer
  111        | '*' . type_qualifier pointer

    KW_CONST     shift, and go to state 60
    KW_VOLATILE  shift, and go to state 61
    KW_RESTRICT  shift, and go to state 62

    IDENTIFIER  reduce using rule 5 (star_list)
    IDENTIFIER  [reduce using rule 108 (pointer)]
    '('         reduce using rule 5 (star_list)
    '('         [reduce using rule 108 (pointer)]
    $default    reduce using rule 5 (star_list)

    type_qualifier  go to state 101
    pointer         go to state 102


state 73

   13 external_declaration: type_specifier star_list_opt . IDENTIFIER '(' parameter_type_list_opt ')' compound_statement
   15                     | type_specifier star_list_opt . IDENTIFIER '(' parameter_type_list_opt ')' ';'
   23                     | type_specifier star_list_opt . IDENTIFIER '=' assignment_expression ';'
   29                     | type_specifier star_list_opt . IDENTIFIER ';'
   31                     | type_specifier star_list_opt . IDENTIFIER '=' initializer ';'
   33                     | type_specifier star_list_opt . IDENTIFIER array_dims '=' initializer ';'
   37 func_decl_specs: type_specifier star_list_opt .
  153 sdecl: star_list_opt . sdir

    IDENTIFIER  shift, and go to state 108
    '('         shift, and go to state 109

    IDENTIFIER  [reduce using rule 37 (func_decl_specs)]

    sdir  go to state 110


state 74

    4 star_list_opt: star_list .
    6 star_list: star_list . '*'

    '*'  shift, and go to state 111

    $default  reduce using rule 4 (star_list_opt)


state 75

   77 type_specifier: type_specifier type_unit .

    $default  reduce using rule 77 (type_specifier)


state 76

  128 function_definition: type_specifier declarator . compound_statement

    '{'  shift, and go to state 103

    compound_statement  go to state 112


state 77

    8 external_declaration: type_specifier sdecl . ',' sdecl sdecl_list ';'
   10                     | type_specifier sdecl . '=' initializer ';'

    '='  shift, and go to state 113
    ','  shift, and go to state 114


state 78

   35 external_declaration: struct_or_union_specifier ';' .

    $default  reduce using rule 35 (external_declaration)


state 79

   36 external_declaration: enum_specifier ';' .

    $default  reduce using rule 36 (external_declaration)


state 80

  229 type_qualifier_seq_opt: type_qualifier_seq_opt KW_CONST .

    $default  reduce using rule 229 (type_qualifier_seq_opt)


state 81

  230 type_qualifier_seq_opt: type_qualifier_seq_opt KW_VOLATILE .

    $default  reduce using rule 230 (type_qualifier_seq_opt)


state 82

  231 type_qualifier_seq_opt: type_qualifier_seq_opt KW_RESTRICT .

    $default  reduce using rule 231 (type_qualifier_seq_opt)


state 83

    7 external_declaration: type_qualifier_seq_opt type_specifier . sdecl ',' sdecl sdecl_list ';'
    9                     | type_qualifier_seq_opt type_specifier . sdecl '=' initializer ';'
   12                     | type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' compound_statement
   14                     | type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' ';'
   22                     | type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER '=' assignment_expression ';'
   28                     | type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER ';'
   30                     | type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER '=' initializer ';'
   32                     | type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER array_dims '=' initializer ';'
   77 type_specifier: type_specifier . type_unit

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    '*'          shift, and go to state 96

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt              go to state 115
    star_list                  go to state 74
    type_unit                  go to state 75
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44
    sdecl                      go to state 116


state 84

   80 struct_or_union_specifier: KW_STRUCT IDENTIFIER '{' . struct_declaration_list_opt '}'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 60
    KW_VOLATILE  shift, and go to state 61
    KW_RESTRICT  shift, and go to state 62
    KW_INLINE    shift, and go to state 63
    KW_EXTERN    shift, and go to state 64
    KW_STATIC    shift, and go to state 65

    $default  reduce using rule 86 (struct_declaration_list_opt)

    declaration_specifiers       go to state 85
    declaration_specifier        go to state 26
    storage_class_specifier      go to state 27
    type_qualifier               go to state 28
    function_specifier           go to state 29
    type_unit                    go to state 30
    type_specifier               go to state 68
    struct_or_union_specifier    go to state 43
    struct_declaration_list_opt  go to state 117
    struct_declaration_list      go to state 87
    struct_declaration           go to state 88
    enum_specifier               go to state 44


state 85

   53 declaration_specifiers: declaration_specifiers . declaration_specifier
   90 struct_declaration: declaration_specifiers . struct_declarator_list ';'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 60
    KW_VOLATILE  shift, and go to state 61
    KW_RESTRICT  shift, and go to state 62
    KW_INLINE    shift, and go to state 63
    KW_EXTERN    shift, and go to state 64
    KW_STATIC    shift, and go to state 65
    ':'          shift, and go to state 118
    '*'          shift, and go to state 66

    $default  reduce using rule 106 (pointer_opt)

    declaration_specifier      go to state 67
    storage_class_specifier    go to state 27
    type_qualifier             go to state 28
    function_specifier         go to state 29
    type_unit                  go to state 30
    type_specifier             go to state 68
    struct_or_union_specifier  go to state 43
    struct_declarator_list     go to state 119
    struct_declarator          go to state 120
    enum_specifier             go to state 44
    declarator                 go to state 121
    pointer_opt                go to state 70
    pointer                    go to state 71


state 86

   82 struct_or_union_specifier: KW_STRUCT '{' struct_declaration_list_opt . '}'

    '}'  shift, and go to state 122


state 87

   87 struct_declaration_list_opt: struct_declaration_list .
   89 struct_declaration_list: struct_declaration_list . struct_declaration

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 60
    KW_VOLATILE  shift, and go to state 61
    KW_RESTRICT  shift, and go to state 62
    KW_INLINE    shift, and go to state 63
    KW_EXTERN    shift, and go to state 64
    KW_STATIC    shift, and go to state 65

    $default  reduce using rule 87 (struct_declaration_list_opt)

    declaration_specifiers     go to state 85
    declaration_specifier      go to state 26
    storage_class_specifier    go to state 27
    type_qualifier             go to state 28
    function_specifier         go to state 29
    type_unit                  go to state 30
    type_specifier             go to state 68
    struct_or_union_specifier  go to state 43
    struct_declaration         go to state 123
    enum_specifier             go to state 44


state 88

   88 struct_declaration_list: struct_declaration .

    $default  reduce using rule 88 (struct_declaration_list)


state 89

   81 struct_or_union_specifier: KW_UNION IDENTIFIER '{' . struct_declaration_list_opt '}'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 60
    KW_VOLATILE  shift, and go to state 61
    KW_RESTRICT  shift, and go to state 62
    KW_INLINE    shift, and go to state 63
    KW_EXTERN    shift, and go to state 64
    KW_STATIC    shift, and go to state 65

    $default  reduce using rule 86 (struct_declaration_list_opt)

    declaration_specifiers       go to state 85
    declaration_specifier        go to state 26
    storage_class_specifier      go to state 27
    type_qualifier               go to state 28
    function_specifier           go to state 29
    type_unit                    go to state 30
    type_specifier               go to state 68
    struct_or_union_specifier    go to state 43
    struct_declaration_list_opt  go to state 124
    struct_declaration_list      go to state 87
    struct_declaration           go to state 88
    enum_specifier               go to state 44


state 90

   83 struct_or_union_specifier: KW_UNION '{' struct_declaration_list_opt . '}'

    '}'  shift, and go to state 125


state 91

   96 enum_specifier: KW_ENUM IDENTIFIER '{' . enumerator_list_opt '}'

    IDENTIFIER  shift, and go to state 92

    $default  reduce using rule 99 (enumerator_list_opt)

    enumerator_list_opt  go to state 126
    enumerator_list      go to state 94
    enumerator           go to state 95


state 92

  103 enumerator: IDENTIFIER .
  104           | IDENTIFIER . '=' constant_expression

    '='  shift, and go to state 127

    $default  reduce using rule 103 (enumerator)


state 93

   97 enum_specifier: KW_ENUM '{' enumerator_list_opt . '}'

    '}'  shift, and go to state 128


state 94

  100 enumerator_list_opt: enumerator_list .
  102 enumerator_list: enumerator_list . ',' enumerator

    ','  shift, and go to state 129

    $default  reduce using rule 100 (enumerator_list_opt)


state 95

  101 enumerator_list: enumerator .

    $default  reduce using rule 101 (enumerator_list)


state 96

    5 star_list: '*' .

    $default  reduce using rule 5 (star_list)


state 97

   19 external_declaration: KW_TYPEDEF type_specifier star_list_opt . IDENTIFIER ';'
   21                     | KW_TYPEDEF type_specifier star_list_opt . IDENTIFIER array_dims ';'
   25                     | KW_TYPEDEF type_specifier star_list_opt . '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   27                     | KW_TYPEDEF type_specifier star_list_opt . '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'

    IDENTIFIER  shift, and go to state 130
    '('         shift, and go to state 131


state 98

   18 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER ';'
   20                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER array_dims ';'
   24                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier . star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   26                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier . star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'
   77 type_specifier: type_specifier . type_unit

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    '*'          shift, and go to state 96

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt              go to state 132
    star_list                  go to state 74
    type_unit                  go to state 75
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 99

   37 func_decl_specs: type_specifier star_list_opt .

    $default  reduce using rule 37 (func_decl_specs)


state 100

   16 external_declaration: func_decl_specs IDENTIFIER '(' . parameter_type_list_opt ')' compound_statement
   17                     | func_decl_specs IDENTIFIER '(' . parameter_type_list_opt ')' ';'

    ')'       reduce using rule 44 (parameter_type_list_opt)
    $default  reduce using rule 228 (type_qualifier_seq_opt)

    parameter_type_list_opt  go to state 133
    parameter_type_list      go to state 134
    parameter_list           go to state 135
    parameter_declaration    go to state 136
    type_qualifier_seq_opt   go to state 137


state 101

  109 pointer: '*' type_qualifier .
  111        | '*' type_qualifier . pointer

    '*'  shift, and go to state 66

    $default  reduce using rule 109 (pointer)

    pointer  go to state 138


state 102

  110 pointer: '*' pointer .

    $default  reduce using rule 110 (pointer)


state 103

  134 compound_statement: '{' . block_item_list_opt '}'

    IDENTIFIER        shift, and go to state 139
    TYPE_NAME         shift, and go to state 3
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_VOID           shift, and go to state 4
    KW_CHAR           shift, and go to state 5
    KW_SHORT          shift, and go to state 6
    KW_INT            shift, and go to state 7
    KW_LONG           shift, and go to state 8
    KW_SIGNED         shift, and go to state 9
    KW_UNSIGNED       shift, and go to state 10
    KW_FLOAT          shift, and go to state 11
    KW_DOUBLE         shift, and go to state 12
    KW_STRUCT         shift, and go to state 13
    KW_UNION          shift, and go to state 14
    KW_ENUM           shift, and go to state 15
    KW_TYPEDEF        shift, and go to state 144
    KW_RETURN         shift, and go to state 145
    KW_IF             shift, and go to state 146
    KW_WHILE          shift, and go to state 147
    KW_FOR            shift, and go to state 148
    KW_DO             shift, and go to state 149
    KW_SWITCH         shift, and go to state 150
    KW_BREAK          shift, and go to state 151
    KW_CONTINUE       shift, and go to state 152
    KW_GOTO           shift, and go to state 153
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161
    ';'               shift, and go to state 162
    '{'               shift, and go to state 103

    TYPE_NAME    [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_VOID      [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_CHAR      [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_SHORT     [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_INT       [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_LONG      [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_SIGNED    [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_UNSIGNED  [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_FLOAT     [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_DOUBLE    [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_STRUCT    [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_UNION     [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_ENUM      [reduce using rule 228 (type_qualifier_seq_opt)]
    '}'          reduce using rule 135 (block_item_list_opt)
    $default     reduce using rule 228 (type_qualifier_seq_opt)

    type_unit                  go to state 30
    type_specifier             go to state 163
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44
    statement                  go to state 164
    compound_statement         go to state 165
    block_item_list_opt        go to state 166
    block_item_list            go to state 167
    block_item                 go to state 168
    expression_statement       go to state 169
    selection_statement        go to state 170
    iteration_statement        go to state 171
    jump_statement             go to state 172
    expression                 go to state 173
    assignment_expression      go to state 174
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    type_qualifier_seq_opt     go to state 187
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 104

  127 function_definition: declaration_specifiers declarator compound_statement .

    $default  reduce using rule 127 (function_definition)


state 105

  112 direct_declarator: IDENTIFIER .

    $default  reduce using rule 112 (direct_declarator)


state 106

  113 direct_declarator: '(' . declarator ')'

    '*'  shift, and go to state 66

    $default  reduce using rule 106 (pointer_opt)

    declarator   go to state 190
    pointer_opt  go to state 70
    pointer      go to state 71


state 107

  105 declarator: pointer_opt direct_declarator .
  114 direct_declarator: direct_declarator . '[' assignment_expression_opt ']'
  115                  | direct_declarator . '(' parameter_type_list_opt ')'
  116                  | direct_declarator . '(' identifier_list_opt ')'

    '('  shift, and go to state 191
    '['  shift, and go to state 192

    $default  reduce using rule 105 (declarator)


state 108

   13 external_declaration: type_specifier star_list_opt IDENTIFIER . '(' parameter_type_list_opt ')' compound_statement
   15                     | type_specifier star_list_opt IDENTIFIER . '(' parameter_type_list_opt ')' ';'
   23                     | type_specifier star_list_opt IDENTIFIER . '=' assignment_expression ';'
   29                     | type_specifier star_list_opt IDENTIFIER . ';'
   31                     | type_specifier star_list_opt IDENTIFIER . '=' initializer ';'
   33                     | type_specifier star_list_opt IDENTIFIER . array_dims '=' initializer ';'
  154 sdir: IDENTIFIER .

    '('  shift, and go to state 194
    ';'  shift, and go to state 196

    $default  reduce using rule 154 (sdir)

    array_dims  go to state 197


state 109

  155 sdir: '(' . sdecl ')'
  156     | '(' . sdecl ')' '(' fp_param_list_opt ')'

    '*'  shift, and go to state 96

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt  go to state 198
    star_list      go to state 74
    sdecl          go to state 199


state 110

  153 sdecl: star_list_opt sdir .
  157 sdir: sdir . '[' assignment_expression_opt ']'

    '['  shift, and go to state 200

    $default  reduce using rule 153 (sdecl)


state 111

    6 star_list: star_list '*' .

    $default  reduce using rule 6 (star_list)


state 112

  128 function_definition: type_specifier declarator compound_statement .

    $default  reduce using rule 128 (function_definition)


state 113

   10 external_declaration: type_specifier sdecl '=' . initializer ';'

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161
    '{'               shift, and go to state 201

    assignment_expression      go to state 202
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189
    initializer                go to state 203


state 114

    8 external_declaration: type_specifier sdecl ',' . sdecl sdecl_list ';'

    '*'  shift, and go to state 96

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt  go to state 198
    star_list      go to state 74
    sdecl          go to state 204


state 115

   12 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER '(' parameter_type_list_opt ')' compound_statement
   14                     | type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER '(' parameter_type_list_opt ')' ';'
   22                     | type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER '=' assignment_expression ';'
   28                     | type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER ';'
   30                     | type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER '=' initializer ';'
   32                     | type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER array_dims '=' initializer ';'
  153 sdecl: star_list_opt . sdir

    IDENTIFIER  shift, and go to state 205
    '('         shift, and go to state 109

    sdir  go to state 110


state 116

    7 external_declaration: type_qualifier_seq_opt type_specifier sdecl . ',' sdecl sdecl_list ';'
    9                     | type_qualifier_seq_opt type_specifier sdecl . '=' initializer ';'

    '='  shift, and go to state 206
    ','  shift, and go to state 207


state 117

   80 struct_or_union_specifier: KW_STRUCT IDENTIFIER '{' struct_declaration_list_opt . '}'

    '}'  shift, and go to state 208


state 118

   94 struct_declarator: ':' . constant_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    conditional_expression     go to state 209
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 210
    postfix_expression         go to state 188
    primary_expression         go to state 189
    constant_expression        go to state 211


state 119

   90 struct_declaration: declaration_specifiers struct_declarator_list . ';'
   92 struct_declarator_list: struct_declarator_list . ',' struct_declarator

    ','  shift, and go to state 212
    ';'  shift, and go to state 213


state 120

   91 struct_declarator_list: struct_declarator .

    $default  reduce using rule 91 (struct_declarator_list)


state 121

   93 struct_declarator: declarator .
   95                  | declarator . ':' constant_expression

    ':'  shift, and go to state 214

    $default  reduce using rule 93 (struct_declarator)


state 122

   82 struct_or_union_specifier: KW_STRUCT '{' struct_declaration_list_opt '}' .

    $default  reduce using rule 82 (struct_or_union_specifier)


state 123

   89 struct_declaration_list: struct_declaration_list struct_declaration .

    $default  reduce using rule 89 (struct_declaration_list)


state 124

   81 struct_or_union_specifier: KW_UNION IDENTIFIER '{' struct_declaration_list_opt . '}'

    '}'  shift, and go to state 215


state 125

   83 struct_or_union_specifier: KW_UNION '{' struct_declaration_list_opt '}' .

    $default  reduce using rule 83 (struct_or_union_specifier)


state 126

   96 enum_specifier: KW_ENUM IDENTIFIER '{' enumerator_list_opt . '}'

    '}'  shift, and go to state 216


state 127

  104 enumerator: IDENTIFIER '=' . constant_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    conditional_expression     go to state 209
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 210
    postfix_expression         go to state 188
    primary_expression         go to state 189
    constant_expression        go to state 217


state 128

   97 enum_specifier: KW_ENUM '{' enumerator_list_opt '}' .

    $default  reduce using rule 97 (enum_specifier)


state 129

  102 enumerator_list: enumerator_list ',' . enumerator

    IDENTIFIER  shift, and go to state 92

    enumerator  go to state 218


state 130

   19 external_declaration: KW_TYPEDEF type_specifier star_list_opt IDENTIFIER . ';'
   21                     | KW_TYPEDEF type_specifier star_list_opt IDENTIFIER . array_dims ';'

    '['  shift, and go to state 195
    ';'  shift, and go to state 219

    array_dims  go to state 220


state 131

   25 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' . '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   27                     | KW_TYPEDEF type_specifier star_list_opt '(' . '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'

    '*'  shift, and go to state 221


state 132

   18 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER ';'
   20                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER array_dims ';'
   24                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt . '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   26                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt . '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'

    IDENTIFIER  shift, and go to state 222
    '('         shift, and go to state 223


state 133

   16 external_declaration: func_decl_specs IDENTIFIER '(' parameter_type_list_opt . ')' compound_statement
   17                     | func_decl_specs IDENTIFIER '(' parameter_type_list_opt . ')' ';'

    ')'  shift, and go to state 224


state 134

   45 parameter_type_list_opt: parameter_type_list .

    $default  reduce using rule 45 (parameter_type_list_opt)


state 135

   46 parameter_type_list: parameter_list .
   47                    | parameter_list . ',' ELLIPSIS
   49 parameter_list: parameter_list . ',' parameter_declaration

    ','  shift, and go to state 225

    $default  reduce using rule 46 (parameter_type_list)


state 136

   48 parameter_list: parameter_declaration .

    $default  reduce using rule 48 (parameter_list)


state 137

   50 parameter_declaration: type_qualifier_seq_opt . type_specifier sdecl
   51                      | type_qualifier_seq_opt . type_specifier
  229 type_qualifier_seq_opt: type_qualifier_seq_opt . KW_CONST
  230                       | type_qualifier_seq_opt . KW_VOLATILE
  231                       | type_qualifier_seq_opt . KW_RESTRICT

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 80
    KW_VOLATILE  shift, and go to state 81
    KW_RESTRICT  shift, and go to state 82

    type_unit                  go to state 30
    type_specifier             go to state 226
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 138

  111 pointer: '*' type_qualifier pointer .

    $default  reduce using rule 111 (pointer)


state 139

  243 primary_expression: IDENTIFIER .

    $default  reduce using rule 243 (primary_expression)


state 140

  247 primary_expression: STRING_LITERAL .

    $default  reduce using rule 247 (primary_expression)


state 141

  244 primary_expression: INTEGER_CONSTANT .

    $default  reduce using rule 244 (primary_expression)


state 142

  245 primary_expression: FLOAT_CONSTANT .

    $default  reduce using rule 245 (primary_expression)


state 143

  246 primary_expression: CHAR_CONSTANT .

    $default  reduce using rule 246 (primary_expression)


state 144

  150 block_item: KW_TYPEDEF . type_specifier star_list_opt IDENTIFIER ';'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15

    type_unit                  go to state 30
    type_specifier             go to state 227
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 145

  166 jump_statement: KW_RETURN . expression_opt ';'

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    $default  reduce using rule 170 (expression_opt)

    expression_opt             go to state 228
    expression                 go to state 229
    assignment_expression      go to state 174
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 146

  160 selection_statement: KW_IF . '(' expression ')' statement
  161                    | KW_IF . '(' expression ')' statement KW_ELSE statement

    '('  shift, and go to state 230


state 147

  163 iteration_statement: KW_WHILE . '(' expression ')' statement

    '('  shift, and go to state 231


state 148

  165 iteration_statement: KW_FOR . '(' expression_opt ';' expression_opt ';' expression_opt ')' statement

    '('  shift, and go to state 232


state 149

  164 iteration_statement: KW_DO . statement KW_WHILE '(' expression ')' ';'

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_RETURN         shift, and go to state 145
    KW_IF             shift, and go to state 146
    KW_WHILE          shift, and go to state 147
    KW_FOR            shift, and go to state 148
    KW_DO             shift, and go to state 149
    KW_SWITCH         shift, and go to state 150
    KW_BREAK          shift, and go to state 151
    KW_CONTINUE       shift, and go to state 152
    KW_GOTO           shift, and go to state 153
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161
    ';'               shift, and go to state 162
    '{'               shift, and go to state 103

    statement                  go to state 233
    compound_statement         go to state 165
    expression_statement       go to state 169
    selection_statement        go to state 170
    iteration_statement        go to state 171
    jump_statement             go to state 172
    expression                 go to state 173
    assignment_expression      go to state 174
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 150

  162 selection_statement: KW_SWITCH . '(' expression ')' statement

    '('  shift, and go to state 234


state 151

  167 jump_statement: KW_BREAK . ';'

    ';'  shift, and go to state 235


state 152

  168 jump_statement: KW_CONTINUE . ';'

    ';'  shift, and go to state 236


state 153

  169 jump_statement: KW_GOTO . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 237


state 154

  225 unary_expression: KW_SIZEOF . unary_expression
  226                 | KW_SIZEOF . '(' type_specifier ')'

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 238

    unary_expression    go to state 239
    postfix_expression  go to state 188
    primary_expression  go to state 189


state 155

  219 unary_expression: INC . unary_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    unary_expression    go to state 240
    postfix_expression  go to state 188
    primary_expression  go to state 189


state 156

  220 unary_expression: DEC . unary_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    unary_expression    go to state 241
    postfix_expression  go to state 188
    primary_expression  go to state 189


state 157

  221 unary_expression: '+' . unary_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    unary_expression    go to state 242
    postfix_expression  go to state 188
    primary_expression  go to state 189


state 158

  222 unary_expression: '-' . unary_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    unary_expression    go to state 243
    postfix_expression  go to state 188
    primary_expression  go to state 189


state 159

  223 unary_expression: '!' . unary_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    unary_expression    go to state 244
    postfix_expression  go to state 188
    primary_expression  go to state 189


state 160

  224 unary_expression: '~' . unary_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    unary_expression    go to state 245
    postfix_expression  go to state 188
    primary_expression  go to state 189


state 161

  227 unary_expression: '(' . type_qualifier_seq_opt type_specifier star_list_opt ')' unary_expression
  248 primary_expression: '(' . expression ')'

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    $default  reduce using rule 228 (type_qualifier_seq_opt)

    expression                 go to state 246
    assignment_expression      go to state 174
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    type_qualifier_seq_opt     go to state 247
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 162

  158 expression_statement: ';' .

    $default  reduce using rule 158 (expression_statement)


state 163

   77 type_specifier: type_specifier . type_unit
  139 block_item: type_specifier . star_list_opt IDENTIFIER ';'
  142           | type_specifier . star_list_opt IDENTIFIER '=' assignment_expression ';'
  144           | type_specifier . star_list_opt IDENTIFIER '=' initializer ';'
  146           | type_specifier . star_list_opt IDENTIFIER array_dims '=' initializer ';'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    '*'          shift, and go to state 96

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt              go to state 248
    star_list                  go to state 74
    type_unit                  go to state 75
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 164

  149 block_item: statement .

    $default  reduce using rule 149 (block_item)


state 165

  129 statement: compound_statement .

    $default  reduce using rule 129 (statement)


state 166

  134 compound_statement: '{' block_item_list_opt . '}'

    '}'  shift, and go to state 249


state 167

  136 block_item_list_opt: block_item_list .
  138 block_item_list: block_item_list . block_item

    IDENTIFIER        shift, and go to state 139
    TYPE_NAME         shift, and go to state 3
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_VOID           shift, and go to state 4
    KW_CHAR           shift, and go to state 5
    KW_SHORT          shift, and go to state 6
    KW_INT            shift, and go to state 7
    KW_LONG           shift, and go to state 8
    KW_SIGNED         shift, and go to state 9
    KW_UNSIGNED       shift, and go to state 10
    KW_FLOAT          shift, and go to state 11
    KW_DOUBLE         shift, and go to state 12
    KW_STRUCT         shift, and go to state 13
    KW_UNION          shift, and go to state 14
    KW_ENUM           shift, and go to state 15
    KW_TYPEDEF        shift, and go to state 144
    KW_RETURN         shift, and go to state 145
    KW_IF             shift, and go to state 146
    KW_WHILE          shift, and go to state 147
    KW_FOR            shift, and go to state 148
    KW_DO             shift, and go to state 149
    KW_SWITCH         shift, and go to state 150
    KW_BREAK          shift, and go to state 151
    KW_CONTINUE       shift, and go to state 152
    KW_GOTO           shift, and go to state 153
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161
    ';'               shift, and go to state 162
    '{'               shift, and go to state 103

    TYPE_NAME    [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_VOID      [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_CHAR      [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_SHORT     [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_INT       [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_LONG      [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_SIGNED    [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_UNSIGNED  [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_FLOAT     [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_DOUBLE    [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_STRUCT    [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_UNION     [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_ENUM      [reduce using rule 228 (type_qualifier_seq_opt)]
    '}'          reduce using rule 136 (block_item_list_opt)
    $default     reduce using rule 228 (type_qualifier_seq_opt)

    type_unit                  go to state 30
    type_specifier             go to state 163
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44
    statement                  go to state 164
    compound_statement         go to state 165
    block_item                 go to state 250
    expression_statement       go to state 169
    selection_statement        go to state 170
    iteration_statement        go to state 171
    jump_statement             go to state 172
    expression                 go to state 173
    assignment_expression      go to state 174
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    type_qualifier_seq_opt     go to state 187
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 168

  137 block_item_list: block_item .

    $default  reduce using rule 137 (block_item_list)


state 169

  130 statement: expression_statement .

    $default  reduce using rule 130 (statement)


state 170

  131 statement: selection_statement .

    $default  reduce using rule 131 (statement)


state 171

  132 statement: iteration_statement .

    $default  reduce using rule 132 (statement)


state 172

  133 statement: jump_statement .

    $default  reduce using rule 133 (statement)


state 173

  159 expression_statement: expression . ';'
  173 expression: expression . ',' assignment_expression

    ','  shift, and go to state 251
    ';'  shift, and go to state 252


state 174

  172 expression: assignment_expression .

    $default  reduce using rule 172 (expression)


state 175

  176 assignment_expression: conditional_expression .

    $default  reduce using rule 176 (assignment_expression)


state 176

  188 conditional_expression: logical_or_expression .
  189                       | logical_or_expression . '?' expression ':' conditional_expression
  191 logical_or_expression: logical_or_expression . LOGOR logical_and_expression

    LOGOR  shift, and go to state 253
    '?'    shift, and go to state 254

    $default  reduce using rule 188 (conditional_expression)


state 177

  190 logical_or_expression: logical_and_expression .
  193 logical_and_expression: logical_and_expression . LOGAND inclusive_or_expression

    LOGAND  shift, and go to state 255

    $default  reduce using rule 190 (logical_or_expression)


state 178

  192 logical_and_expression: inclusive_or_expression .
  195 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression

    '|'  shift, and go to state 256

    $default  reduce using rule 192 (logical_and_expression)


state 179

  194 inclusive_or_expression: exclusive_or_expression .
  197 exclusive_or_expression: exclusive_or_expression . '^' and_expression

    '^'  shift, and go to state 257

    $default  reduce using rule 194 (inclusive_or_expression)


state 180

  196 exclusive_or_expression: and_expression .
  199 and_expression: and_expression . '&' equality_expression

    '&'  shift, and go to state 258

    $default  reduce using rule 196 (exclusive_or_expression)


state 181

  198 and_expression: equality_expression .
  201 equality_expression: equality_expression . EQ relational_expression
  202                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 259
    NE  shift, and go to state 260

    $default  reduce using rule 198 (and_expression)


state 182

  200 equality_expression: relational_expression .
  204 relational_expression: relational_expression . '<' shift_expression
  205                      | relational_expression . '>' shift_expression
  206                      | relational_expression . LE shift_expression
  207                      | relational_expression . GE shift_expression

    LE   shift, and go to state 261
    GE   shift, and go to state 262
    '<'  shift, and go to state 263
    '>'  shift, and go to state 264

    $default  reduce using rule 200 (equality_expression)


state 183

  203 relational_expression: shift_expression .
  209 shift_expression: shift_expression . LSHIFT additive_expression
  210                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 265
    RSHIFT  shift, and go to state 266

    $default  reduce using rule 203 (relational_expression)


state 184

  208 shift_expression: additive_expression .
  212 additive_expression: additive_expression . '+' multiplicative_expression
  213                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 267
    '-'  shift, and go to state 268

    $default  reduce using rule 208 (shift_expression)


state 185

  211 additive_expression: multiplicative_expression .
  215 multiplicative_expression: multiplicative_expression . '*' unary_expression
  216                          | multiplicative_expression . '/' unary_expression
  217                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 269
    '/'  shift, and go to state 270
    '%'  shift, and go to state 271

    $default  reduce using rule 211 (additive_expression)


state 186

  177 assignment_expression: unary_expression . '=' assignment_expression
  178                      | unary_expression . ADD_ASSIGN assignment_expression
  179                      | unary_expression . SUB_ASSIGN assignment_expression
  180                      | unary_expression . MUL_ASSIGN assignment_expression
  181                      | unary_expression . DIV_ASSIGN assignment_expression
  182                      | unary_expression . MOD_ASSIGN assignment_expression
  183                      | unary_expression . AND_ASSIGN assignment_expression
  184                      | unary_expression . OR_ASSIGN assignment_expression
  185                      | unary_expression . XOR_ASSIGN assignment_expression
  186                      | unary_expression . LSHIFT_ASSIGN assignment_expression
  187                      | unary_expression . RSHIFT_ASSIGN assignment_expression
  214 multiplicative_expression: unary_expression .

    ADD_ASSIGN     shift, and go to state 272
    SUB_ASSIGN     shift, and go to state 273
    MUL_ASSIGN     shift, and go to state 274
    DIV_ASSIGN     shift, and go to state 275
    MOD_ASSIGN     shift, and go to state 276
    AND_ASSIGN     shift, and go to state 277
    OR_ASSIGN      shift, and go to state 278
    XOR_ASSIGN     shift, and go to state 279
    LSHIFT_ASSIGN  shift, and go to state 280
    RSHIFT_ASSIGN  shift, and go to state 281
    '='            shift, and go to state 282

    $default  reduce using rule 214 (multiplicative_expression)


state 187

  140 block_item: type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER ';'
  141           | type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';'
  143           | type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER '=' initializer ';'
  145           | type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';'
  147           | type_qualifier_seq_opt . type_specifier sdecl ',' sdecl sdecl_list ';'
  148           | type_qualifier_seq_opt . type_specifier sdecl '=' initializer ';'
  229 type_qualifier_seq_opt: type_qualifier_seq_opt . KW_CONST
  230                       | type_qualifier_seq_opt . KW_VOLATILE
  231                       | type_qualifier_seq_opt . KW_RESTRICT

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 80
    KW_VOLATILE  shift, and go to state 81
    KW_RESTRICT  shift, and go to state 82

    type_unit                  go to state 30
    type_specifier             go to state 283
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 188

  218 unary_expression: postfix_expression .
  233 postfix_expression: postfix_expression . '(' argument_expression_list_opt ')'
  234                   | postfix_expression . '[' expression ']'
  235                   | postfix_expression . '.' IDENTIFIER
  236                   | postfix_expression . ARROW IDENTIFIER
  237                   | postfix_expression . INC
  238                   | postfix_expression . DEC

    ARROW  shift, and go to state 284
    INC    shift, and go to state 285
    DEC    shift, and go to state 286
    '('    shift, and go to state 287
    '['    shift, and go to state 288
    '.'    shift, and go to state 289

    $default  reduce using rule 218 (unary_expression)


state 189

  232 postfix_expression: primary_expression .

    $default  reduce using rule 232 (postfix_expression)


state 190

  113 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 290


state 191

  115 direct_declarator: direct_declarator '(' . parameter_type_list_opt ')'
  116                  | direct_declarator '(' . identifier_list_opt ')'

    IDENTIFIER  shift, and go to state 291

    ')'       reduce using rule 44 (parameter_type_list_opt)
    ')'       [reduce using rule 117 (identifier_list_opt)]
    $default  reduce using rule 228 (type_qualifier_seq_opt)

    parameter_type_list_opt  go to state 292
    parameter_type_list      go to state 134
    parameter_list           go to state 135
    parameter_declaration    go to state 136
    identifier_list_opt      go to state 293
    identifier_list          go to state 294
    type_qualifier_seq_opt   go to state 137


state 192

  114 direct_declarator: direct_declarator '[' . assignment_expression_opt ']'

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    $default  reduce using rule 174 (assignment_expression_opt)

    assignment_expression_opt  go to state 295
    assignment_expression      go to state 296
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 193

   23 external_declaration: type_specifier star_list_opt IDENTIFIER '=' . assignment_expression ';'
   31                     | type_specifier star_list_opt IDENTIFIER '=' . initializer ';'

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161
    '{'               shift, and go to state 201

    assignment_expression      go to state 297
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189
    initializer                go to state 298


state 194

   13 external_declaration: type_specifier star_list_opt IDENTIFIER '(' . parameter_type_list_opt ')' compound_statement
   15                     | type_specifier star_list_opt IDENTIFIER '(' . parameter_type_list_opt ')' ';'

    ')'       reduce using rule 44 (parameter_type_list_opt)
    $default  reduce using rule 228 (type_qualifier_seq_opt)

    parameter_type_list_opt  go to state 299
    parameter_type_list      go to state 134
    parameter_list           go to state 135
    parameter_declaration    go to state 136
    type_qualifier_seq_opt   go to state 137


state 195

   78 array_dims: '[' . INTEGER_CONSTANT ']'

    INTEGER_CONSTANT  shift, and go to state 300


state 196

   29 external_declaration: type_specifier star_list_opt IDENTIFIER ';' .

    $default  reduce using rule 29 (external_declaration)


state 197

   33 external_declaration: type_specifier star_list_opt IDENTIFIER array_dims . '=' initializer ';'
   79 array_dims: array_dims . '[' INTEGER_CONSTANT ']'

    '='  shift, and go to state 301
    '['  shift, and go to state 302


state 198

  153 sdecl: star_list_opt . sdir

    IDENTIFIER  shift, and go to state 303
    '('         shift, and go to state 109

    sdir  go to state 110


state 199

  155 sdir: '(' sdecl . ')'
  156     | '(' sdecl . ')' '(' fp_param_list_opt ')'

    ')'  shift, and go to state 304


state 200

  157 sdir: sdir '[' . assignment_expression_opt ']'

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    $default  reduce using rule 174 (assignment_expression_opt)

    assignment_expression_opt  go to state 305
    assignment_expression      go to state 296
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 201

  250 initializer: '{' . initializer_list_opt '}'

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161
    '['               shift, and go to state 306
    '.'               shift, and go to state 307
    '{'               shift, and go to state 201

    $default  reduce using rule 251 (initializer_list_opt)

    assignment_expression      go to state 202
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189
    initializer                go to state 308
    initializer_list_opt       go to state 309
    initializer_list           go to state 310
    designated_initializer     go to state 311
    designation                go to state 312
    designator                 go to state 313


state 202

  249 initializer: assignment_expression .

    $default  reduce using rule 249 (initializer)


state 203

   10 external_declaration: type_specifier sdecl '=' initializer . ';'

    ';'  shift, and go to state 314


state 204

    8 external_declaration: type_specifier sdecl ',' sdecl . sdecl_list ';'

    $default  reduce using rule 151 (sdecl_list)

    sdecl_list  go to state 315


state 205

   12 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER . '(' parameter_type_list_opt ')' compound_statement
   14                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER . '(' parameter_type_list_opt ')' ';'
   22                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER . '=' assignment_expression ';'
   28                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER . ';'
   30                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER . '=' initializer ';'
   32                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER . array_dims '=' initializer ';'
  154 sdir: IDENTIFIER .

    '('  shift, and go to state 317
    ';'  shift, and go to state 318

    $default  reduce using rule 154 (sdir)

    array_dims  go to state 319


state 206

    9 external_declaration: type_qualifier_seq_opt type_specifier sdecl '=' . initializer ';'

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161
    '{'               shift, and go to state 201

    assignment_expression      go to state 202
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189
    initializer                go to state 320


state 207

    7 external_declaration: type_qualifier_seq_opt type_specifier sdecl ',' . sdecl sdecl_list ';'

    '*'  shift, and go to state 96

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt  go to state 198
    star_list      go to state 74
    sdecl          go to state 321


state 208

   80 struct_or_union_specifier: KW_STRUCT IDENTIFIER '{' struct_declaration_list_opt '}' .

    $default  reduce using rule 80 (struct_or_union_specifier)


state 209

  263 constant_expression: conditional_expression .

    $default  reduce using rule 263 (constant_expression)


state 210

  214 multiplicative_expression: unary_expression .

    $default  reduce using rule 214 (multiplicative_expression)


state 211

   94 struct_declarator: ':' constant_expression .

    $default  reduce using rule 94 (struct_declarator)


state 212

   92 struct_declarator_list: struct_declarator_list ',' . struct_declarator

    ':'  shift, and go to state 118
    '*'  shift, and go to state 66

    $default  reduce using rule 106 (pointer_opt)

    struct_declarator  go to state 322
    declarator         go to state 121
    pointer_opt        go to state 70
    pointer            go to state 71


state 213

   90 struct_declaration: declaration_specifiers struct_declarator_list ';' .

    $default  reduce using rule 90 (struct_declaration)


state 214

   95 struct_declarator: declarator ':' . constant_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    conditional_expression     go to state 209
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 210
    postfix_expression         go to state 188
    primary_expression         go to state 189
    constant_expression        go to state 323


state 215

   81 struct_or_union_specifier: KW_UNION IDENTIFIER '{' struct_declaration_list_opt '}' .

    $default  reduce using rule 81 (struct_or_union_specifier)


state 216

   96 enum_specifier: KW_ENUM IDENTIFIER '{' enumerator_list_opt '}' .

    $default  reduce using rule 96 (enum_specifier)


state 217

  104 enumerator: IDENTIFIER '=' constant_expression .

    $default  reduce using rule 104 (enumerator)


state 218

  102 enumerator_list: enumerator_list ',' enumerator .

    $default  reduce using rule 102 (enumerator_list)


state 219

   19 external_declaration: KW_TYPEDEF type_specifier star_list_opt IDENTIFIER ';' .

    $default  reduce using rule 19 (external_declaration)


state 220

   21 external_declaration: KW_TYPEDEF type_specifier star_list_opt IDENTIFIER array_dims . ';'
   79 array_dims: array_dims . '[' INTEGER_CONSTANT ']'

    '['  shift, and go to state 302
    ';'  shift, and go to state 324


state 221

   25 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' . IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   27                     | KW_TYPEDEF type_specifier star_list_opt '(' '*' . IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'

    IDENTIFIER  shift, and go to state 325


state 222

   18 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER . ';'
   20                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER . array_dims ';'

    '['  shift, and go to state 195
    ';'  shift, and go to state 326

    array_dims  go to state 327


state 223

   24 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' . '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   26                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' . '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'

    '*'  shift, and go to state 328


state 224

   16 external_declaration: func_decl_specs IDENTIFIER '(' parameter_type_list_opt ')' . compound_statement
   17                     | func_decl_specs IDENTIFIER '(' parameter_type_list_opt ')' . ';'

    ';'  shift, and go to state 329
    '{'  shift, and go to state 103

    compound_statement  go to state 330


state 225

   47 parameter_type_list: parameter_list ',' . ELLIPSIS
   49 parameter_list: parameter_list ',' . parameter_declaration

    ELLIPSIS  shift, and go to state 331

    $default  reduce using rule 228 (type_qualifier_seq_opt)

    parameter_declaration   go to state 332
    type_qualifier_seq_opt  go to state 137


state 226

   50 parameter_declaration: type_qualifier_seq_opt type_specifier . sdecl
   51                      | type_qualifier_seq_opt type_specifier .
   77 type_specifier: type_specifier . type_unit

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    '*'          shift, and go to state 96

    ')'       reduce using rule 51 (parameter_declaration)
    ','       reduce using rule 51 (parameter_declaration)
    $default  reduce using rule 3 (star_list_opt)

    star_list_opt              go to state 198
    star_list                  go to state 74
    type_unit                  go to state 75
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44
    sdecl                      go to state 333


state 227

   77 type_specifier: type_specifier . type_unit
  150 block_item: KW_TYPEDEF type_specifier . star_list_opt IDENTIFIER ';'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    '*'          shift, and go to state 96

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt              go to state 334
    star_list                  go to state 74
    type_unit                  go to state 75
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 228

  166 jump_statement: KW_RETURN expression_opt . ';'

    ';'  shift, and go to state 335


state 229

  171 expression_opt: expression .
  173 expression: expression . ',' assignment_expression

    ','  shift, and go to state 251

    $default  reduce using rule 171 (expression_opt)


state 230

  160 selection_statement: KW_IF '(' . expression ')' statement
  161                    | KW_IF '(' . expression ')' statement KW_ELSE statement

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    expression                 go to state 336
    assignment_expression      go to state 174
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 231

  163 iteration_statement: KW_WHILE '(' . expression ')' statement

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    expression                 go to state 337
    assignment_expression      go to state 174
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 232

  165 iteration_statement: KW_FOR '(' . expression_opt ';' expression_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    $default  reduce using rule 170 (expression_opt)

    expression_opt             go to state 338
    expression                 go to state 229
    assignment_expression      go to state 174
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 233

  164 iteration_statement: KW_DO statement . KW_WHILE '(' expression ')' ';'

    KW_WHILE  shift, and go to state 339


state 234

  162 selection_statement: KW_SWITCH '(' . expression ')' statement

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    expression                 go to state 340
    assignment_expression      go to state 174
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 235

  167 jump_statement: KW_BREAK ';' .

    $default  reduce using rule 167 (jump_statement)


state 236

  168 jump_statement: KW_CONTINUE ';' .

    $default  reduce using rule 168 (jump_statement)


state 237

  169 jump_statement: KW_GOTO IDENTIFIER . ';'

    ';'  shift, and go to state 341


state 238

  226 unary_expression: KW_SIZEOF '(' . type_specifier ')'
  227                 | '(' . type_qualifier_seq_opt type_specifier star_list_opt ')' unary_expression
  248 primary_expression: '(' . expression ')'

    IDENTIFIER        shift, and go to state 139
    TYPE_NAME         shift, and go to state 3
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_VOID           shift, and go to state 4
    KW_CHAR           shift, and go to state 5
    KW_SHORT          shift, and go to state 6
    KW_INT            shift, and go to state 7
    KW_LONG           shift, and go to state 8
    KW_SIGNED         shift, and go to state 9
    KW_UNSIGNED       shift, and go to state 10
    KW_FLOAT          shift, and go to state 11
    KW_DOUBLE         shift, and go to state 12
    KW_STRUCT         shift, and go to state 13
    KW_UNION          shift, and go to state 14
    KW_ENUM           shift, and go to state 15
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    TYPE_NAME    [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_VOID      [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_CHAR      [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_SHORT     [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_INT       [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_LONG      [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_SIGNED    [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_UNSIGNED  [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_FLOAT     [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_DOUBLE    [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_STRUCT    [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_UNION     [reduce using rule 228 (type_qualifier_seq_opt)]
    KW_ENUM      [reduce using rule 228 (type_qualifier_seq_opt)]
    $default     reduce using rule 228 (type_qualifier_seq_opt)

    type_unit                  go to state 30
    type_specifier             go to state 342
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44
    expression                 go to state 246
    assignment_expression      go to state 174
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    type_qualifier_seq_opt     go to state 247
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 239

  225 unary_expression: KW_SIZEOF unary_expression .

    $default  reduce using rule 225 (unary_expression)


state 240

  219 unary_expression: INC unary_expression .

    $default  reduce using rule 219 (unary_expression)


state 241

  220 unary_expression: DEC unary_expression .

    $default  reduce using rule 220 (unary_expression)


state 242

  221 unary_expression: '+' unary_expression .

    $default  reduce using rule 221 (unary_expression)


state 243

  222 unary_expression: '-' unary_expression .

    $default  reduce using rule 222 (unary_expression)


state 244

  223 unary_expression: '!' unary_expression .

    $default  reduce using rule 223 (unary_expression)


state 245

  224 unary_expression: '~' unary_expression .

    $default  reduce using rule 224 (unary_expression)


state 246

  173 expression: expression . ',' assignment_expression
  248 primary_expression: '(' expression . ')'

    ')'  shift, and go to state 343
    ','  shift, and go to state 251


state 247

  227 unary_expression: '(' type_qualifier_seq_opt . type_specifier star_list_opt ')' unary_expression
  229 type_qualifier_seq_opt: type_qualifier_seq_opt . KW_CONST
  230                       | type_qualifier_seq_opt . KW_VOLATILE
  231                       | type_qualifier_seq_opt . KW_RESTRICT

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 80
    KW_VOLATILE  shift, and go to state 81
    KW_RESTRICT  shift, and go to state 82

    type_unit                  go to state 30
    type_specifier             go to state 344
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 248

  139 block_item: type_specifier star_list_opt . IDENTIFIER ';'
  142           | type_specifier star_list_opt . IDENTIFIER '=' assignment_expression ';'
  144           | type_specifier star_list_opt . IDENTIFIER '=' initializer ';'
  146           | type_specifier star_list_opt . IDENTIFIER array_dims '=' initializer ';'

    IDENTIFIER  shift, and go to state 345


state 249

  134 compound_statement: '{' block_item_list_opt '}' .

    $default  reduce using rule 134 (compound_statement)


state 250

  138 block_item_list: block_item_list block_item .

    $default  reduce using rule 138 (block_item_list)


state 251

  173 expression: expression ',' . assignment_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    assignment_expression      go to state 346
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 252

  159 expression_statement: expression ';' .

    $default  reduce using rule 159 (expression_statement)


state 253

  191 logical_or_expression: logical_or_expression LOGOR . logical_and_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    logical_and_expression     go to state 347
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 210
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 254

  189 conditional_expression: logical_or_expression '?' . expression ':' conditional_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    expression                 go to state 348
    assignment_expression      go to state 174
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 255

  193 logical_and_expression: logical_and_expression LOGAND . inclusive_or_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    inclusive_or_expression    go to state 349
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 210
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 256

  195 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    exclusive_or_expression    go to state 350
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 210
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 257

  197 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    and_expression             go to state 351
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 210
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 258

  199 and_expression: and_expression '&' . equality_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    equality_expression        go to state 352
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 210
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 259

  201 equality_expression: equality_expression EQ . relational_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    relational_expression      go to state 353
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 210
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 260

  202 equality_expression: equality_expression NE . relational_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    relational_expression      go to state 354
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 210
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 261

  206 relational_expression: relational_expression LE . shift_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    shift_expression           go to state 355
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 210
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 262

  207 relational_expression: relational_expression GE . shift_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    shift_expression           go to state 356
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 210
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 263

  204 relational_expression: relational_expression '<' . shift_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    shift_expression           go to state 357
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 210
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 264

  205 relational_expression: relational_expression '>' . shift_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    shift_expression           go to state 358
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 210
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 265

  209 shift_expression: shift_expression LSHIFT . additive_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    additive_expression        go to state 359
    multiplicative_expression  go to state 185
    unary_expression           go to state 210
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 266

  210 shift_expression: shift_expression RSHIFT . additive_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    additive_expression        go to state 360
    multiplicative_expression  go to state 185
    unary_expression           go to state 210
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 267

  212 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    multiplicative_expression  go to state 361
    unary_expression           go to state 210
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 268

  213 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    multiplicative_expression  go to state 362
    unary_expression           go to state 210
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 269

  215 multiplicative_expression: multiplicative_expression '*' . unary_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    unary_expression    go to state 363
    postfix_expression  go to state 188
    primary_expression  go to state 189


state 270

  216 multiplicative_expression: multiplicative_expression '/' . unary_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    unary_expression    go to state 364
    postfix_expression  go to state 188
    primary_expression  go to state 189


state 271

  217 multiplicative_expression: multiplicative_expression '%' . unary_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    unary_expression    go to state 365
    postfix_expression  go to state 188
    primary_expression  go to state 189


state 272

  178 assignment_expression: unary_expression ADD_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    assignment_expression      go to state 366
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 273

  179 assignment_expression: unary_expression SUB_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    assignment_expression      go to state 367
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 274

  180 assignment_expression: unary_expression MUL_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    assignment_expression      go to state 368
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 275

  181 assignment_expression: unary_expression DIV_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    assignment_expression      go to state 369
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 276

  182 assignment_expression: unary_expression MOD_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    assignment_expression      go to state 370
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 277

  183 assignment_expression: unary_expression AND_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    assignment_expression      go to state 371
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 278

  184 assignment_expression: unary_expression OR_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    assignment_expression      go to state 372
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 279

  185 assignment_expression: unary_expression XOR_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    assignment_expression      go to state 373
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 280

  186 assignment_expression: unary_expression LSHIFT_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    assignment_expression      go to state 374
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 281

  187 assignment_expression: unary_expression RSHIFT_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    assignment_expression      go to state 375
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 282

  177 assignment_expression: unary_expression '=' . assignment_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    assignment_expression      go to state 376
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 283

   77 type_specifier: type_specifier . type_unit
  140 block_item: type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER ';'
  141           | type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER '=' assignment_expression ';'
  143           | type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER '=' initializer ';'
  145           | type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER array_dims '=' initializer ';'
  147           | type_qualifier_seq_opt type_specifier . sdecl ',' sdecl sdecl_list ';'
  148           | type_qualifier_seq_opt type_specifier . sdecl '=' initializer ';'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    '*'          shift, and go to state 96

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt              go to state 377
    star_list                  go to state 74
    type_unit                  go to state 75
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44
    sdecl                      go to state 378


state 284

  236 postfix_expression: postfix_expression ARROW . IDENTIFIER

    IDENTIFIER  shift, and go to state 379


state 285

  237 postfix_expression: postfix_expression INC .

    $default  reduce using rule 237 (postfix_expression)


state 286

  238 postfix_expression: postfix_expression DEC .

    $default  reduce using rule 238 (postfix_expression)


state 287

  233 postfix_expression: postfix_expression '(' . argument_expression_list_opt ')'

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    $default  reduce using rule 239 (argument_expression_list_opt)

    assignment_expression         go to state 380
    conditional_expression        go to state 175
    logical_or_expression         go to state 176
    logical_and_expression        go to state 177
    inclusive_or_expression       go to state 178
    exclusive_or_expression       go to state 179
    and_expression                go to state 180
    equality_expression           go to state 181
    relational_expression         go to state 182
    shift_expression              go to state 183
    additive_expression           go to state 184
    multiplicative_expression     go to state 185
    unary_expression              go to state 186
    postfix_expression            go to state 188
    argument_expression_list_opt  go to state 381
    argument_expression_list      go to state 382
    primary_expression            go to state 189


state 288

  234 postfix_expression: postfix_expression '[' . expression ']'

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    expression                 go to state 383
    assignment_expression      go to state 174
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 289

  235 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 384


state 290

  113 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 113 (direct_declarator)


state 291

  119 identifier_list: IDENTIFIER .

    $default  reduce using rule 119 (identifier_list)


state 292

  115 direct_declarator: direct_declarator '(' parameter_type_list_opt . ')'

    ')'  shift, and go to state 385


state 293

  116 direct_declarator: direct_declarator '(' identifier_list_opt . ')'

    ')'  shift, and go to state 386


state 294

  118 identifier_list_opt: identifier_list .
  120 identifier_list: identifier_list . ',' IDENTIFIER

    ','  shift, and go to state 387

    $default  reduce using rule 118 (identifier_list_opt)


state 295

  114 direct_declarator: direct_declarator '[' assignment_expression_opt . ']'

    ']'  shift, and go to state 388


state 296

  175 assignment_expression_opt: assignment_expression .

    $default  reduce using rule 175 (assignment_expression_opt)


state 297

   23 external_declaration: type_specifier star_list_opt IDENTIFIER '=' assignment_expression . ';'
  249 initializer: assignment_expression .

    ';'  shift, and go to state 389

    ';'  [reduce using rule 249 (initializer)]


state 298

   31 external_declaration: type_specifier star_list_opt IDENTIFIER '=' initializer . ';'

    ';'  shift, and go to state 390


state 299

   13 external_declaration: type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt . ')' compound_statement
   15                     | type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt . ')' ';'

    ')'  shift, and go to state 391


state 300

   78 array_dims: '[' INTEGER_CONSTANT . ']'

    ']'  shift, and go to state 392


state 301

   33 external_declaration: type_specifier star_list_opt IDENTIFIER array_dims '=' . initializer ';'

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161
    '{'               shift, and go to state 201

    assignment_expression      go to state 202
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189
    initializer                go to state 393


state 302

   79 array_dims: array_dims '[' . INTEGER_CONSTANT ']'

    INTEGER_CONSTANT  shift, and go to state 394


state 303

  154 sdir: IDENTIFIER .

    $default  reduce using rule 154 (sdir)


state 304

  155 sdir: '(' sdecl ')' .
  156     | '(' sdecl ')' . '(' fp_param_list_opt ')'

    '('  shift, and go to state 395

    $default  reduce using rule 155 (sdir)


state 305

  157 sdir: sdir '[' assignment_expression_opt . ']'

    ']'  shift, and go to state 396


state 306

  261 designator: '[' . constant_expression ']'
  262           | '[' . constant_expression ELLIPSIS constant_expression ']'

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    conditional_expression     go to state 209
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 210
    postfix_expression         go to state 188
    primary_expression         go to state 189
    constant_expression        go to state 397


state 307

  260 designator: '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 398


state 308

  253 initializer_list: initializer .

    $default  reduce using rule 253 (initializer_list)


state 309

  250 initializer: '{' initializer_list_opt . '}'

    '}'  shift, and go to state 399


state 310

  252 initializer_list_opt: initializer_list .
  255 initializer_list: initializer_list . ',' initializer
  256                 | initializer_list . ',' designated_initializer

    ','  shift, and go to state 400

    $default  reduce using rule 252 (initializer_list_opt)


state 311

  254 initializer_list: designated_initializer .

    $default  reduce using rule 254 (initializer_list)


state 312

  257 designated_initializer: designation . '=' initializer
  259 designation: designation . designator

    '='  shift, and go to state 401
    '['  shift, and go to state 306
    '.'  shift, and go to state 307

    designator  go to state 402


state 313

  258 designation: designator .

    $default  reduce using rule 258 (designation)


state 314

   10 external_declaration: type_specifier sdecl '=' initializer ';' .

    $default  reduce using rule 10 (external_declaration)


state 315

    8 external_declaration: type_specifier sdecl ',' sdecl sdecl_list . ';'
  152 sdecl_list: sdecl_list . ',' sdecl

    ','  shift, and go to state 403
    ';'  shift, and go to state 404


state 316

   22 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' . assignment_expression ';'
   30                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' . initializer ';'

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161
    '{'               shift, and go to state 201

    assignment_expression      go to state 405
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189
    initializer                go to state 406


state 317

   12 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '(' . parameter_type_list_opt ')' compound_statement
   14                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '(' . parameter_type_list_opt ')' ';'

    ')'       reduce using rule 44 (parameter_type_list_opt)
    $default  reduce using rule 228 (type_qualifier_seq_opt)

    parameter_type_list_opt  go to state 407
    parameter_type_list      go to state 134
    parameter_list           go to state 135
    parameter_declaration    go to state 136
    type_qualifier_seq_opt   go to state 137


state 318

   28 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER ';' .

    $default  reduce using rule 28 (external_declaration)


state 319

   32 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims . '=' initializer ';'
   79 array_dims: array_dims . '[' INTEGER_CONSTANT ']'

    '='  shift, and go to state 408
    '['  shift, and go to state 302


state 320

    9 external_declaration: type_qualifier_seq_opt type_specifier sdecl '=' initializer . ';'

    ';'  shift, and go to state 409


state 321

    7 external_declaration: type_qualifier_seq_opt type_specifier sdecl ',' sdecl . sdecl_list ';'

    $default  reduce using rule 151 (sdecl_list)

    sdecl_list  go to state 410


state 322

   92 struct_declarator_list: struct_declarator_list ',' struct_declarator .

    $default  reduce using rule 92 (struct_declarator_list)


state 323

   95 struct_declarator: declarator ':' constant_expression .

    $default  reduce using rule 95 (struct_declarator)


state 324

   21 external_declaration: KW_TYPEDEF type_specifier star_list_opt IDENTIFIER array_dims ';' .

    $default  reduce using rule 21 (external_declaration)


state 325

   25 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER . ')' '(' fp_param_list_opt ')' ';'
   27                     | KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER . array_dims ')' '(' fp_param_list_opt ')' ';'

    ')'  shift, and go to state 411
    '['  shift, and go to state 195

    array_dims  go to state 412


state 326

   18 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER ';' .

    $default  reduce using rule 18 (external_declaration)


state 327

   20 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims . ';'
   79 array_dims: array_dims . '[' INTEGER_CONSTANT ']'

    '['  shift, and go to state 302
    ';'  shift, and go to state 413


state 328

   24 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' . IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   26                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' . IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'

    IDENTIFIER  shift, and go to state 414


state 329

   17 external_declaration: func_decl_specs IDENTIFIER '(' parameter_type_list_opt ')' ';' .

    $default  reduce using rule 17 (external_declaration)


state 330

   16 external_declaration: func_decl_specs IDENTIFIER '(' parameter_type_list_opt ')' compound_statement .

    $default  reduce using rule 16 (external_declaration)


state 331

   47 parameter_type_list: parameter_list ',' ELLIPSIS .

    $default  reduce using rule 47 (parameter_type_list)


state 332

   49 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 49 (parameter_list)


state 333

   50 parameter_declaration: type_qualifier_seq_opt type_specifier sdecl .

    $default  reduce using rule 50 (parameter_declaration)


state 334

  150 block_item: KW_TYPEDEF type_specifier star_list_opt . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 415


state 335

  166 jump_statement: KW_RETURN expression_opt ';' .

    $default  reduce using rule 166 (jump_statement)


state 336

  160 selection_statement: KW_IF '(' expression . ')' statement
  161                    | KW_IF '(' expression . ')' statement KW_ELSE statement
  173 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 416
    ','  shift, and go to state 251


state 337

  163 iteration_statement: KW_WHILE '(' expression . ')' statement
  173 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 417
    ','  shift, and go to state 251


state 338

  165 iteration_statement: KW_FOR '(' expression_opt . ';' expression_opt ';' expression_opt ')' statement

    ';'  shift, and go to state 418


state 339

  164 iteration_statement: KW_DO statement KW_WHILE . '(' expression ')' ';'

    '('  shift, and go to state 419


state 340

  162 selection_statement: KW_SWITCH '(' expression . ')' statement
  173 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 420
    ','  shift, and go to state 251


state 341

  169 jump_statement: KW_GOTO IDENTIFIER ';' .

    $default  reduce using rule 169 (jump_statement)


state 342

   77 type_specifier: type_specifier . type_unit
  226 unary_expression: KW_SIZEOF '(' type_specifier . ')'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    ')'          shift, and go to state 421

    type_unit                  go to state 75
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 343

  248 primary_expression: '(' expression ')' .

    $default  reduce using rule 248 (primary_expression)


state 344

   77 type_specifier: type_specifier . type_unit
  227 unary_expression: '(' type_qualifier_seq_opt type_specifier . star_list_opt ')' unary_expression

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    '*'          shift, and go to state 96

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt              go to state 422
    star_list                  go to state 74
    type_unit                  go to state 75
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 345

  139 block_item: type_specifier star_list_opt IDENTIFIER . ';'
  142           | type_specifier star_list_opt IDENTIFIER . '=' assignment_expression ';'
  144           | type_specifier star_list_opt IDENTIFIER . '=' initializer ';'
  146           | type_specifier star_list_opt IDENTIFIER . array_dims '=' initializer ';'

    '='  shift, and go to state 423
    '['  shift, and go to state 195
    ';'  shift, and go to state 424

    array_dims  go to state 425


state 346

  173 expression: expression ',' assignment_expression .

    $default  reduce using rule 173 (expression)


state 347

  191 logical_or_expression: logical_or_expression LOGOR logical_and_expression .
  193 logical_and_expression: logical_and_expression . LOGAND inclusive_or_expression

    LOGAND  shift, and go to state 255

    $default  reduce using rule 191 (logical_or_expression)


state 348

  173 expression: expression . ',' assignment_expression
  189 conditional_expression: logical_or_expression '?' expression . ':' conditional_expression

    ':'  shift, and go to state 426
    ','  shift, and go to state 251


state 349

  193 logical_and_expression: logical_and_expression LOGAND inclusive_or_expression .
  195 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression

    '|'  shift, and go to state 256

    $default  reduce using rule 193 (logical_and_expression)


state 350

  195 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .
  197 exclusive_or_expression: exclusive_or_expression . '^' and_expression

    '^'  shift, and go to state 257

    $default  reduce using rule 195 (inclusive_or_expression)


state 351

  197 exclusive_or_expression: exclusive_or_expression '^' and_expression .
  199 and_expression: and_expression . '&' equality_expression

    '&'  shift, and go to state 258

    $default  reduce using rule 197 (exclusive_or_expression)


state 352

  199 and_expression: and_expression '&' equality_expression .
  201 equality_expression: equality_expression . EQ relational_expression
  202                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 259
    NE  shift, and go to state 260

    $default  reduce using rule 199 (and_expression)


state 353

  201 equality_expression: equality_expression EQ relational_expression .
  204 relational_expression: relational_expression . '<' shift_expression
  205                      | relational_expression . '>' shift_expression
  206                      | relational_expression . LE shift_expression
  207                      | relational_expression . GE shift_expression

    LE   shift, and go to state 261
    GE   shift, and go to state 262
    '<'  shift, and go to state 263
    '>'  shift, and go to state 264

    $default  reduce using rule 201 (equality_expression)


state 354

  202 equality_expression: equality_expression NE relational_expression .
  204 relational_expression: relational_expression . '<' shift_expression
  205                      | relational_expression . '>' shift_expression
  206                      | relational_expression . LE shift_expression
  207                      | relational_expression . GE shift_expression

    LE   shift, and go to state 261
    GE   shift, and go to state 262
    '<'  shift, and go to state 263
    '>'  shift, and go to state 264

    $default  reduce using rule 202 (equality_expression)


state 355

  206 relational_expression: relational_expression LE shift_expression .
  209 shift_expression: shift_expression . LSHIFT additive_expression
  210                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 265
    RSHIFT  shift, and go to state 266

    $default  reduce using rule 206 (relational_expression)


state 356

  207 relational_expression: relational_expression GE shift_expression .
  209 shift_expression: shift_expression . LSHIFT additive_expression
  210                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 265
    RSHIFT  shift, and go to state 266

    $default  reduce using rule 207 (relational_expression)


state 357

  204 relational_expression: relational_expression '<' shift_expression .
  209 shift_expression: shift_expression . LSHIFT additive_expression
  210                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 265
    RSHIFT  shift, and go to state 266

    $default  reduce using rule 204 (relational_expression)


state 358

  205 relational_expression: relational_expression '>' shift_expression .
  209 shift_expression: shift_expression . LSHIFT additive_expression
  210                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 265
    RSHIFT  shift, and go to state 266

    $default  reduce using rule 205 (relational_expression)


state 359

  209 shift_expression: shift_expression LSHIFT additive_expression .
  212 additive_expression: additive_expression . '+' multiplicative_expression
  213                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 267
    '-'  shift, and go to state 268

    $default  reduce using rule 209 (shift_expression)


state 360

  210 shift_expression: shift_expression RSHIFT additive_expression .
  212 additive_expression: additive_expression . '+' multiplicative_expression
  213                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 267
    '-'  shift, and go to state 268

    $default  reduce using rule 210 (shift_expression)


state 361

  212 additive_expression: additive_expression '+' multiplicative_expression .
  215 multiplicative_expression: multiplicative_expression . '*' unary_expression
  216                          | multiplicative_expression . '/' unary_expression
  217                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 269
    '/'  shift, and go to state 270
    '%'  shift, and go to state 271

    $default  reduce using rule 212 (additive_expression)


state 362

  213 additive_expression: additive_expression '-' multiplicative_expression .
  215 multiplicative_expression: multiplicative_expression . '*' unary_expression
  216                          | multiplicative_expression . '/' unary_expression
  217                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 269
    '/'  shift, and go to state 270
    '%'  shift, and go to state 271

    $default  reduce using rule 213 (additive_expression)


state 363

  215 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 215 (multiplicative_expression)


state 364

  216 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 216 (multiplicative_expression)


state 365

  217 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 217 (multiplicative_expression)


state 366

  178 assignment_expression: unary_expression ADD_ASSIGN assignment_expression .

    $default  reduce using rule 178 (assignment_expression)


state 367

  179 assignment_expression: unary_expression SUB_ASSIGN assignment_expression .

    $default  reduce using rule 179 (assignment_expression)


state 368

  180 assignment_expression: unary_expression MUL_ASSIGN assignment_expression .

    $default  reduce using rule 180 (assignment_expression)


state 369

  181 assignment_expression: unary_expression DIV_ASSIGN assignment_expression .

    $default  reduce using rule 181 (assignment_expression)


state 370

  182 assignment_expression: unary_expression MOD_ASSIGN assignment_expression .

    $default  reduce using rule 182 (assignment_expression)


state 371

  183 assignment_expression: unary_expression AND_ASSIGN assignment_expression .

    $default  reduce using rule 183 (assignment_expression)


state 372

  184 assignment_expression: unary_expression OR_ASSIGN assignment_expression .

    $default  reduce using rule 184 (assignment_expression)


state 373

  185 assignment_expression: unary_expression XOR_ASSIGN assignment_expression .

    $default  reduce using rule 185 (assignment_expression)


state 374

  186 assignment_expression: unary_expression LSHIFT_ASSIGN assignment_expression .

    $default  reduce using rule 186 (assignment_expression)


state 375

  187 assignment_expression: unary_expression RSHIFT_ASSIGN assignment_expression .

    $default  reduce using rule 187 (assignment_expression)


state 376

  177 assignment_expression: unary_expression '=' assignment_expression .

    $default  reduce using rule 177 (assignment_expression)


state 377

  140 block_item: type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER ';'
  141           | type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER '=' assignment_expression ';'
  143           | type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER '=' initializer ';'
  145           | type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER array_dims '=' initializer ';'
  153 sdecl: star_list_opt . sdir

    IDENTIFIER  shift, and go to state 427
    '('         shift, and go to state 109

    sdir  go to state 110


state 378

  147 block_item: type_qualifier_seq_opt type_specifier sdecl . ',' sdecl sdecl_list ';'
  148           | type_qualifier_seq_opt type_specifier sdecl . '=' initializer ';'

    '='  shift, and go to state 428
    ','  shift, and go to state 429


state 379

  236 postfix_expression: postfix_expression ARROW IDENTIFIER .

    $default  reduce using rule 236 (postfix_expression)


state 380

  241 argument_expression_list: assignment_expression .

    $default  reduce using rule 241 (argument_expression_list)


state 381

  233 postfix_expression: postfix_expression '(' argument_expression_list_opt . ')'

    ')'  shift, and go to state 430


state 382

  240 argument_expression_list_opt: argument_expression_list .
  242 argument_expression_list: argument_expression_list . ',' assignment_expression

    ','  shift, and go to state 431

    $default  reduce using rule 240 (argument_expression_list_opt)


state 383

  173 expression: expression . ',' assignment_expression
  234 postfix_expression: postfix_expression '[' expression . ']'

    ']'  shift, and go to state 432
    ','  shift, and go to state 251


state 384

  235 postfix_expression: postfix_expression '.' IDENTIFIER .

    $default  reduce using rule 235 (postfix_expression)


state 385

  115 direct_declarator: direct_declarator '(' parameter_type_list_opt ')' .

    $default  reduce using rule 115 (direct_declarator)


state 386

  116 direct_declarator: direct_declarator '(' identifier_list_opt ')' .

    $default  reduce using rule 116 (direct_declarator)


state 387

  120 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 433


state 388

  114 direct_declarator: direct_declarator '[' assignment_expression_opt ']' .

    $default  reduce using rule 114 (direct_declarator)


state 389

   23 external_declaration: type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';' .

    $default  reduce using rule 23 (external_declaration)


state 390

   31 external_declaration: type_specifier star_list_opt IDENTIFIER '=' initializer ';' .

    $default  reduce using rule 31 (external_declaration)


state 391

   13 external_declaration: type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' . compound_statement
   15                     | type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' . ';'

    ';'  shift, and go to state 434
    '{'  shift, and go to state 103

    compound_statement  go to state 435


state 392

   78 array_dims: '[' INTEGER_CONSTANT ']' .

    $default  reduce using rule 78 (array_dims)


state 393

   33 external_declaration: type_specifier star_list_opt IDENTIFIER array_dims '=' initializer . ';'

    ';'  shift, and go to state 436


state 394

   79 array_dims: array_dims '[' INTEGER_CONSTANT . ']'

    ']'  shift, and go to state 437


state 395

  156 sdir: '(' sdecl ')' '(' . fp_param_list_opt ')'

    ')'       reduce using rule 121 (fp_param_list_opt)
    $default  reduce using rule 228 (type_qualifier_seq_opt)

    fp_param_list_opt       go to state 438
    fp_param_list           go to state 439
    fp_param                go to state 440
    type_qualifier_seq_opt  go to state 441


state 396

  157 sdir: sdir '[' assignment_expression_opt ']' .

    $default  reduce using rule 157 (sdir)


state 397

  261 designator: '[' constant_expression . ']'
  262           | '[' constant_expression . ELLIPSIS constant_expression ']'

    ELLIPSIS  shift, and go to state 442
    ']'       shift, and go to state 443


state 398

  260 designator: '.' IDENTIFIER .

    $default  reduce using rule 260 (designator)


state 399

  250 initializer: '{' initializer_list_opt '}' .

    $default  reduce using rule 250 (initializer)


state 400

  255 initializer_list: initializer_list ',' . initializer
  256                 | initializer_list ',' . designated_initializer

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161
    '['               shift, and go to state 306
    '.'               shift, and go to state 307
    '{'               shift, and go to state 201

    assignment_expression      go to state 202
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189
    initializer                go to state 444
    designated_initializer     go to state 445
    designation                go to state 312
    designator                 go to state 313


state 401

  257 designated_initializer: designation '=' . initializer

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161
    '{'               shift, and go to state 201

    assignment_expression      go to state 202
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189
    initializer                go to state 446


state 402

  259 designation: designation designator .

    $default  reduce using rule 259 (designation)


state 403

  152 sdecl_list: sdecl_list ',' . sdecl

    '*'  shift, and go to state 96

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt  go to state 198
    star_list      go to state 74
    sdecl          go to state 447


state 404

    8 external_declaration: type_specifier sdecl ',' sdecl sdecl_list ';' .

    $default  reduce using rule 8 (external_declaration)


state 405

   22 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' assignment_expression . ';'
  249 initializer: assignment_expression .

    ';'  shift, and go to state 448

    ';'  [reduce using rule 249 (initializer)]


state 406

   30 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' initializer . ';'

    ';'  shift, and go to state 449


state 407

   12 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt . ')' compound_statement
   14                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt . ')' ';'

    ')'  shift, and go to state 450


state 408

   32 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims '=' . initializer ';'

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161
    '{'               shift, and go to state 201

    assignment_expression      go to state 202
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189
    initializer                go to state 451


state 409

    9 external_declaration: type_qualifier_seq_opt type_specifier sdecl '=' initializer ';' .

    $default  reduce using rule 9 (external_declaration)


state 410

    7 external_declaration: type_qualifier_seq_opt type_specifier sdecl ',' sdecl sdecl_list . ';'
  152 sdecl_list: sdecl_list . ',' sdecl

    ','  shift, and go to state 403
    ';'  shift, and go to state 452


state 411

   25 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER ')' . '(' fp_param_list_opt ')' ';'

    '('  shift, and go to state 453


state 412

   27 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER array_dims . ')' '(' fp_param_list_opt ')' ';'
   79 array_dims: array_dims . '[' INTEGER_CONSTANT ']'

    ')'  shift, and go to state 454
    '['  shift, and go to state 302


state 413

   20 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims ';' .

    $default  reduce using rule 20 (external_declaration)


state 414

   24 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER . ')' '(' fp_param_list_opt ')' ';'
   26                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER . array_dims ')' '(' fp_param_list_opt ')' ';'

    ')'  shift, and go to state 455
    '['  shift, and go to state 195

    array_dims  go to state 456


state 415

  150 block_item: KW_TYPEDEF type_specifier star_list_opt IDENTIFIER . ';'

    ';'  shift, and go to state 457


state 416

  160 selection_statement: KW_IF '(' expression ')' . statement
  161                    | KW_IF '(' expression ')' . statement KW_ELSE statement

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_RETURN         shift, and go to state 145
    KW_IF             shift, and go to state 146
    KW_WHILE          shift, and go to state 147
    KW_FOR            shift, and go to state 148
    KW_DO             shift, and go to state 149
    KW_SWITCH         shift, and go to state 150
    KW_BREAK          shift, and go to state 151
    KW_CONTINUE       shift, and go to state 152
    KW_GOTO           shift, and go to state 153
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161
    ';'               shift, and go to state 162
    '{'               shift, and go to state 103

    statement                  go to state 458
    compound_statement         go to state 165
    expression_statement       go to state 169
    selection_statement        go to state 170
    iteration_statement        go to state 171
    jump_statement             go to state 172
    expression                 go to state 173
    assignment_expression      go to state 174
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 417

  163 iteration_statement: KW_WHILE '(' expression ')' . statement

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_RETURN         shift, and go to state 145
    KW_IF             shift, and go to state 146
    KW_WHILE          shift, and go to state 147
    KW_FOR            shift, and go to state 148
    KW_DO             shift, and go to state 149
    KW_SWITCH         shift, and go to state 150
    KW_BREAK          shift, and go to state 151
    KW_CONTINUE       shift, and go to state 152
    KW_GOTO           shift, and go to state 153
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161
    ';'               shift, and go to state 162
    '{'               shift, and go to state 103

    statement                  go to state 459
    compound_statement         go to state 165
    expression_statement       go to state 169
    selection_statement        go to state 170
    iteration_statement        go to state 171
    jump_statement             go to state 172
    expression                 go to state 173
    assignment_expression      go to state 174
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 418

  165 iteration_statement: KW_FOR '(' expression_opt ';' . expression_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    $default  reduce using rule 170 (expression_opt)

    expression_opt             go to state 460
    expression                 go to state 229
    assignment_expression      go to state 174
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 419

  164 iteration_statement: KW_DO statement KW_WHILE '(' . expression ')' ';'

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    expression                 go to state 461
    assignment_expression      go to state 174
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 420

  162 selection_statement: KW_SWITCH '(' expression ')' . statement

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_RETURN         shift, and go to state 145
    KW_IF             shift, and go to state 146
    KW_WHILE          shift, and go to state 147
    KW_FOR            shift, and go to state 148
    KW_DO             shift, and go to state 149
    KW_SWITCH         shift, and go to state 150
    KW_BREAK          shift, and go to state 151
    KW_CONTINUE       shift, and go to state 152
    KW_GOTO           shift, and go to state 153
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161
    ';'               shift, and go to state 162
    '{'               shift, and go to state 103

    statement                  go to state 462
    compound_statement         go to state 165
    expression_statement       go to state 169
    selection_statement        go to state 170
    iteration_statement        go to state 171
    jump_statement             go to state 172
    expression                 go to state 173
    assignment_expression      go to state 174
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 421

  226 unary_expression: KW_SIZEOF '(' type_specifier ')' .

    $default  reduce using rule 226 (unary_expression)


state 422

  227 unary_expression: '(' type_qualifier_seq_opt type_specifier star_list_opt . ')' unary_expression

    ')'  shift, and go to state 463


state 423

  142 block_item: type_specifier star_list_opt IDENTIFIER '=' . assignment_expression ';'
  144           | type_specifier star_list_opt IDENTIFIER '=' . initializer ';'

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161
    '{'               shift, and go to state 201

    assignment_expression      go to state 464
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189
    initializer                go to state 465


state 424

  139 block_item: type_specifier star_list_opt IDENTIFIER ';' .

    $default  reduce using rule 139 (block_item)


state 425

   79 array_dims: array_dims . '[' INTEGER_CONSTANT ']'
  146 block_item: type_specifier star_list_opt IDENTIFIER array_dims . '=' initializer ';'

    '='  shift, and go to state 466
    '['  shift, and go to state 302


state 426

  189 conditional_expression: logical_or_expression '?' expression ':' . conditional_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    conditional_expression     go to state 467
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 210
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 427

  140 block_item: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER . ';'
  141           | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER . '=' assignment_expression ';'
  143           | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER . '=' initializer ';'
  145           | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER . array_dims '=' initializer ';'
  154 sdir: IDENTIFIER .

    ';'  shift, and go to state 469

    $default  reduce using rule 154 (sdir)

    array_dims  go to state 470


state 428

  148 block_item: type_qualifier_seq_opt type_specifier sdecl '=' . initializer ';'

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161
    '{'               shift, and go to state 201

    assignment_expression      go to state 202
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189
    initializer                go to state 471


state 429

  147 block_item: type_qualifier_seq_opt type_specifier sdecl ',' . sdecl sdecl_list ';'

    '*'  shift, and go to state 96

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt  go to state 198
    star_list      go to state 74
    sdecl          go to state 472


state 430

  233 postfix_expression: postfix_expression '(' argument_expression_list_opt ')' .

    $default  reduce using rule 233 (postfix_expression)


state 431

  242 argument_expression_list: argument_expression_list ',' . assignment_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    assignment_expression      go to state 473
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 432

  234 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 234 (postfix_expression)


state 433

  120 identifier_list: identifier_list ',' IDENTIFIER .

    $default  reduce using rule 120 (identifier_list)


state 434

   15 external_declaration: type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' ';' .

    $default  reduce using rule 15 (external_declaration)


state 435

   13 external_declaration: type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' compound_statement .

    $default  reduce using rule 13 (external_declaration)


state 436

   33 external_declaration: type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';' .

    $default  reduce using rule 33 (external_declaration)


state 437

   79 array_dims: array_dims '[' INTEGER_CONSTANT ']' .

    $default  reduce using rule 79 (array_dims)


state 438

  156 sdir: '(' sdecl ')' '(' fp_param_list_opt . ')'

    ')'  shift, and go to state 474


state 439

  122 fp_param_list_opt: fp_param_list .
  124 fp_param_list: fp_param_list . ',' fp_param

    ','  shift, and go to state 475

    $default  reduce using rule 122 (fp_param_list_opt)


state 440

  123 fp_param_list: fp_param .

    $default  reduce using rule 123 (fp_param_list)


state 441

  125 fp_param: type_qualifier_seq_opt . type_specifier star_list_opt
  126         | type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER
  229 type_qualifier_seq_opt: type_qualifier_seq_opt . KW_CONST
  230                       | type_qualifier_seq_opt . KW_VOLATILE
  231                       | type_qualifier_seq_opt . KW_RESTRICT

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 80
    KW_VOLATILE  shift, and go to state 81
    KW_RESTRICT  shift, and go to state 82

    type_unit                  go to state 30
    type_specifier             go to state 476
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 442

  262 designator: '[' constant_expression ELLIPSIS . constant_expression ']'

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    conditional_expression     go to state 209
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 210
    postfix_expression         go to state 188
    primary_expression         go to state 189
    constant_expression        go to state 477


state 443

  261 designator: '[' constant_expression ']' .

    $default  reduce using rule 261 (designator)


state 444

  255 initializer_list: initializer_list ',' initializer .

    $default  reduce using rule 255 (initializer_list)


state 445

  256 initializer_list: initializer_list ',' designated_initializer .

    $default  reduce using rule 256 (initializer_list)


state 446

  257 designated_initializer: designation '=' initializer .

    $default  reduce using rule 257 (designated_initializer)


state 447

  152 sdecl_list: sdecl_list ',' sdecl .

    $default  reduce using rule 152 (sdecl_list)


state 448

   22 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';' .

    $default  reduce using rule 22 (external_declaration)


state 449

   30 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' initializer ';' .

    $default  reduce using rule 30 (external_declaration)


state 450

   12 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' . compound_statement
   14                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' . ';'

    ';'  shift, and go to state 478
    '{'  shift, and go to state 103

    compound_statement  go to state 479


state 451

   32 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims '=' initializer . ';'

    ';'  shift, and go to state 480


state 452

    7 external_declaration: type_qualifier_seq_opt type_specifier sdecl ',' sdecl sdecl_list ';' .

    $default  reduce using rule 7 (external_declaration)


state 453

   25 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' . fp_param_list_opt ')' ';'

    ')'       reduce using rule 121 (fp_param_list_opt)
    $default  reduce using rule 228 (type_qualifier_seq_opt)

    fp_param_list_opt       go to state 481
    fp_param_list           go to state 439
    fp_param                go to state 440
    type_qualifier_seq_opt  go to state 441


state 454

   27 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' . '(' fp_param_list_opt ')' ';'

    '('  shift, and go to state 482


state 455

   24 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER ')' . '(' fp_param_list_opt ')' ';'

    '('  shift, and go to state 483


state 456

   26 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER array_dims . ')' '(' fp_param_list_opt ')' ';'
   79 array_dims: array_dims . '[' INTEGER_CONSTANT ']'

    ')'  shift, and go to state 484
    '['  shift, and go to state 302


state 457

  150 block_item: KW_TYPEDEF type_specifier star_list_opt IDENTIFIER ';' .

    $default  reduce using rule 150 (block_item)


state 458

  160 selection_statement: KW_IF '(' expression ')' statement .
  161                    | KW_IF '(' expression ')' statement . KW_ELSE statement

    KW_ELSE  shift, and go to state 485

    KW_ELSE   [reduce using rule 160 (selection_statement)]
    $default  reduce using rule 160 (selection_statement)


state 459

  163 iteration_statement: KW_WHILE '(' expression ')' statement .

    $default  reduce using rule 163 (iteration_statement)


state 460

  165 iteration_statement: KW_FOR '(' expression_opt ';' expression_opt . ';' expression_opt ')' statement

    ';'  shift, and go to state 486


state 461

  164 iteration_statement: KW_DO statement KW_WHILE '(' expression . ')' ';'
  173 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 487
    ','  shift, and go to state 251


state 462

  162 selection_statement: KW_SWITCH '(' expression ')' statement .

    $default  reduce using rule 162 (selection_statement)


state 463

  227 unary_expression: '(' type_qualifier_seq_opt type_specifier star_list_opt ')' . unary_expression

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    unary_expression    go to state 488
    postfix_expression  go to state 188
    primary_expression  go to state 189


state 464

  142 block_item: type_specifier star_list_opt IDENTIFIER '=' assignment_expression . ';'
  249 initializer: assignment_expression .

    ';'  shift, and go to state 489

    ';'  [reduce using rule 249 (initializer)]


state 465

  144 block_item: type_specifier star_list_opt IDENTIFIER '=' initializer . ';'

    ';'  shift, and go to state 490


state 466

  146 block_item: type_specifier star_list_opt IDENTIFIER array_dims '=' . initializer ';'

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161
    '{'               shift, and go to state 201

    assignment_expression      go to state 202
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189
    initializer                go to state 491


state 467

  189 conditional_expression: logical_or_expression '?' expression ':' conditional_expression .

    $default  reduce using rule 189 (conditional_expression)


state 468

  141 block_item: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' . assignment_expression ';'
  143           | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' . initializer ';'

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161
    '{'               shift, and go to state 201

    assignment_expression      go to state 492
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189
    initializer                go to state 493


state 469

  140 block_item: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER ';' .

    $default  reduce using rule 140 (block_item)


state 470

   79 array_dims: array_dims . '[' INTEGER_CONSTANT ']'
  145 block_item: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims . '=' initializer ';'

    '='  shift, and go to state 494
    '['  shift, and go to state 302


state 471

  148 block_item: type_qualifier_seq_opt type_specifier sdecl '=' initializer . ';'

    ';'  shift, and go to state 495


state 472

  147 block_item: type_qualifier_seq_opt type_specifier sdecl ',' sdecl . sdecl_list ';'

    $default  reduce using rule 151 (sdecl_list)

    sdecl_list  go to state 496


state 473

  242 argument_expression_list: argument_expression_list ',' assignment_expression .

    $default  reduce using rule 242 (argument_expression_list)


state 474

  156 sdir: '(' sdecl ')' '(' fp_param_list_opt ')' .

    $default  reduce using rule 156 (sdir)


state 475

  124 fp_param_list: fp_param_list ',' . fp_param

    $default  reduce using rule 228 (type_qualifier_seq_opt)

    fp_param                go to state 497
    type_qualifier_seq_opt  go to state 441


state 476

   77 type_specifier: type_specifier . type_unit
  125 fp_param: type_qualifier_seq_opt type_specifier . star_list_opt
  126         | type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    '*'          shift, and go to state 96

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt              go to state 498
    star_list                  go to state 74
    type_unit                  go to state 75
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 477

  262 designator: '[' constant_expression ELLIPSIS constant_expression . ']'

    ']'  shift, and go to state 499


state 478

   14 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' ';' .

    $default  reduce using rule 14 (external_declaration)


state 479

   12 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' compound_statement .

    $default  reduce using rule 12 (external_declaration)


state 480

   32 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';' .

    $default  reduce using rule 32 (external_declaration)


state 481

   25 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt . ')' ';'

    ')'  shift, and go to state 500


state 482

   27 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' . fp_param_list_opt ')' ';'

    ')'       reduce using rule 121 (fp_param_list_opt)
    $default  reduce using rule 228 (type_qualifier_seq_opt)

    fp_param_list_opt       go to state 501
    fp_param_list           go to state 439
    fp_param                go to state 440
    type_qualifier_seq_opt  go to state 441


state 483

   24 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' . fp_param_list_opt ')' ';'

    ')'       reduce using rule 121 (fp_param_list_opt)
    $default  reduce using rule 228 (type_qualifier_seq_opt)

    fp_param_list_opt       go to state 502
    fp_param_list           go to state 439
    fp_param                go to state 440
    type_qualifier_seq_opt  go to state 441


state 484

   26 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' . '(' fp_param_list_opt ')' ';'

    '('  shift, and go to state 503


state 485

  161 selection_statement: KW_IF '(' expression ')' statement KW_ELSE . statement

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_RETURN         shift, and go to state 145
    KW_IF             shift, and go to state 146
    KW_WHILE          shift, and go to state 147
    KW_FOR            shift, and go to state 148
    KW_DO             shift, and go to state 149
    KW_SWITCH         shift, and go to state 150
    KW_BREAK          shift, and go to state 151
    KW_CONTINUE       shift, and go to state 152
    KW_GOTO           shift, and go to state 153
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161
    ';'               shift, and go to state 162
    '{'               shift, and go to state 103

    statement                  go to state 504
    compound_statement         go to state 165
    expression_statement       go to state 169
    selection_statement        go to state 170
    iteration_statement        go to state 171
    jump_statement             go to state 172
    expression                 go to state 173
    assignment_expression      go to state 174
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 486

  165 iteration_statement: KW_FOR '(' expression_opt ';' expression_opt ';' . expression_opt ')' statement

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161

    $default  reduce using rule 170 (expression_opt)

    expression_opt             go to state 505
    expression                 go to state 229
    assignment_expression      go to state 174
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 487

  164 iteration_statement: KW_DO statement KW_WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 506


state 488

  227 unary_expression: '(' type_qualifier_seq_opt type_specifier star_list_opt ')' unary_expression .

    $default  reduce using rule 227 (unary_expression)


state 489

  142 block_item: type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';' .

    $default  reduce using rule 142 (block_item)


state 490

  144 block_item: type_specifier star_list_opt IDENTIFIER '=' initializer ';' .

    $default  reduce using rule 144 (block_item)


state 491

  146 block_item: type_specifier star_list_opt IDENTIFIER array_dims '=' initializer . ';'

    ';'  shift, and go to state 507


state 492

  141 block_item: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' assignment_expression . ';'
  249 initializer: assignment_expression .

    ';'  shift, and go to state 508

    ';'  [reduce using rule 249 (initializer)]


state 493

  143 block_item: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' initializer . ';'

    ';'  shift, and go to state 509


state 494

  145 block_item: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims '=' . initializer ';'

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161
    '{'               shift, and go to state 201

    assignment_expression      go to state 202
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189
    initializer                go to state 510


state 495

  148 block_item: type_qualifier_seq_opt type_specifier sdecl '=' initializer ';' .

    $default  reduce using rule 148 (block_item)


state 496

  147 block_item: type_qualifier_seq_opt type_specifier sdecl ',' sdecl sdecl_list . ';'
  152 sdecl_list: sdecl_list . ',' sdecl

    ','  shift, and go to state 403
    ';'  shift, and go to state 511


state 497

  124 fp_param_list: fp_param_list ',' fp_param .

    $default  reduce using rule 124 (fp_param_list)


state 498

  125 fp_param: type_qualifier_seq_opt type_specifier star_list_opt .
  126         | type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER

    IDENTIFIER  shift, and go to state 512

    $default  reduce using rule 125 (fp_param)


state 499

  262 designator: '[' constant_expression ELLIPSIS constant_expression ']' .

    $default  reduce using rule 262 (designator)


state 500

   25 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' . ';'

    ';'  shift, and go to state 513


state 501

   27 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt . ')' ';'

    ')'  shift, and go to state 514


state 502

   24 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt . ')' ';'

    ')'  shift, and go to state 515


state 503

   26 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' . fp_param_list_opt ')' ';'

    ')'       reduce using rule 121 (fp_param_list_opt)
    $default  reduce using rule 228 (type_qualifier_seq_opt)

    fp_param_list_opt       go to state 516
    fp_param_list           go to state 439
    fp_param                go to state 440
    type_qualifier_seq_opt  go to state 441


state 504

  161 selection_statement: KW_IF '(' expression ')' statement KW_ELSE statement .

    $default  reduce using rule 161 (selection_statement)


state 505

  165 iteration_statement: KW_FOR '(' expression_opt ';' expression_opt ';' expression_opt . ')' statement

    ')'  shift, and go to state 517


state 506

  164 iteration_statement: KW_DO statement KW_WHILE '(' expression ')' ';' .

    $default  reduce using rule 164 (iteration_statement)


state 507

  146 block_item: type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';' .

    $default  reduce using rule 146 (block_item)


state 508

  141 block_item: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';' .

    $default  reduce using rule 141 (block_item)


state 509

  143 block_item: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' initializer ';' .

    $default  reduce using rule 143 (block_item)


state 510

  145 block_item: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims '=' initializer . ';'

    ';'  shift, and go to state 518


state 511

  147 block_item: type_qualifier_seq_opt type_specifier sdecl ',' sdecl sdecl_list ';' .

    $default  reduce using rule 147 (block_item)


state 512

  126 fp_param: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER .

    $default  reduce using rule 126 (fp_param)


state 513

   25 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';' .

    $default  reduce using rule 25 (external_declaration)


state 514

   27 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' . ';'

    ';'  shift, and go to state 519


state 515

   24 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' . ';'

    ';'  shift, and go to state 520


state 516

   26 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt . ')' ';'

    ')'  shift, and go to state 521


state 517

  165 iteration_statement: KW_FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' . statement

    IDENTIFIER        shift, and go to state 139
    STRING_LITERAL    shift, and go to state 140
    INTEGER_CONSTANT  shift, and go to state 141
    FLOAT_CONSTANT    shift, and go to state 142
    CHAR_CONSTANT     shift, and go to state 143
    KW_RETURN         shift, and go to state 145
    KW_IF             shift, and go to state 146
    KW_WHILE          shift, and go to state 147
    KW_FOR            shift, and go to state 148
    KW_DO             shift, and go to state 149
    KW_SWITCH         shift, and go to state 150
    KW_BREAK          shift, and go to state 151
    KW_CONTINUE       shift, and go to state 152
    KW_GOTO           shift, and go to state 153
    KW_SIZEOF         shift, and go to state 154
    INC               shift, and go to state 155
    DEC               shift, and go to state 156
    '+'               shift, and go to state 157
    '-'               shift, and go to state 158
    '!'               shift, and go to state 159
    '~'               shift, and go to state 160
    '('               shift, and go to state 161
    ';'               shift, and go to state 162
    '{'               shift, and go to state 103

    statement                  go to state 522
    compound_statement         go to state 165
    expression_statement       go to state 169
    selection_statement        go to state 170
    iteration_statement        go to state 171
    jump_statement             go to state 172
    expression                 go to state 173
    assignment_expression      go to state 174
    conditional_expression     go to state 175
    logical_or_expression      go to state 176
    logical_and_expression     go to state 177
    inclusive_or_expression    go to state 178
    exclusive_or_expression    go to state 179
    and_expression             go to state 180
    equality_expression        go to state 181
    relational_expression      go to state 182
    shift_expression           go to state 183
    additive_expression        go to state 184
    multiplicative_expression  go to state 185
    unary_expression           go to state 186
    postfix_expression         go to state 188
    primary_expression         go to state 189


state 518

  145 block_item: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';' .

    $default  reduce using rule 145 (block_item)


state 519

   27 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';' .

    $default  reduce using rule 27 (external_declaration)


state 520

   24 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';' .

    $default  reduce using rule 24 (external_declaration)


state 521

   26 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' . ';'

    ';'  shift, and go to state 523


state 522

  165 iteration_statement: KW_FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' statement .

    $default  reduce using rule 165 (iteration_statement)


state 523

   26 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';' .

    $default  reduce using rule 26 (external_declaration)
