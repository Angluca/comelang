Useless nonterminals

   declaration
   init_declarator_list_opt
   init_declarator_list
   init_declarator


Terminals which are not used

   KW_CASE
   KW_DEFAULT


Useless rules

  280 declaration: declaration_specifiers init_declarator_list_opt

  281 init_declarator_list_opt: /* empty */
  282                         | init_declarator_list

  283 init_declarator_list: init_declarator
  284                     | init_declarator_list ',' init_declarator

  285 init_declarator: declarator
  286                | declarator '=' assignment_expression
  287                | declarator '=' initializer


Rules never reduced

   19 external_declaration: /* empty */

  132 identifier_list_opt: /* empty */


State 1 conflicts: 22 shift/reduce, 17 reduce/reduce
State 16 conflicts: 13 shift/reduce
State 17 conflicts: 20 shift/reduce
State 18 conflicts: 20 shift/reduce
State 19 conflicts: 20 shift/reduce
State 20 conflicts: 20 shift/reduce
State 21 conflicts: 20 shift/reduce
State 22 conflicts: 20 shift/reduce
State 23 conflicts: 20 shift/reduce
State 32 conflicts: 14 shift/reduce, 2 reduce/reduce
State 37 conflicts: 29 reduce/reduce
State 39 conflicts: 29 reduce/reduce
State 72 conflicts: 13 shift/reduce
State 77 conflicts: 2 reduce/reduce
State 80 conflicts: 1 shift/reduce
State 112 conflicts: 13 shift/reduce
State 135 conflicts: 29 reduce/reduce
State 139 conflicts: 29 reduce/reduce
State 181 conflicts: 13 shift/reduce
State 205 conflicts: 1 reduce/reduce
State 252 conflicts: 13 shift/reduce
State 311 conflicts: 1 shift/reduce
State 418 conflicts: 1 shift/reduce
State 473 conflicts: 1 shift/reduce
State 479 conflicts: 1 shift/reduce
State 508 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: /* empty */
    2                 | translation_unit external_declaration

    3 version_opt: /* empty */
    4            | KW_VERSION INTEGER_CONSTANT

    5 star_list_opt: /* empty */
    6              | star_list

    7 star_list: '*'
    8          | '%'
    9          | '&'
   10          | '`'
   11          | star_list '*'
   12          | star_list '%'
   13          | star_list '&'
   14          | star_list '`'

   15 external_declaration: type_qualifier_seq_opt type_specifier sdecl ',' sdecl sdecl_list ';'
   16                     | type_specifier sdecl ',' sdecl sdecl_list ';'
   17                     | type_qualifier_seq_opt type_specifier sdecl '=' initializer ';'
   18                     | type_specifier sdecl '=' initializer ';'
   19                     | /* empty */
   20                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' version_opt compound_statement
   21                     | type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' version_opt compound_statement
   22                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' version_opt ';'
   23                     | type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' version_opt ';'
   24                     | func_decl_specs IDENTIFIER '(' parameter_type_list_opt ')' version_opt compound_statement
   25                     | func_decl_specs IDENTIFIER '(' parameter_type_list_opt ')' version_opt ';'
   26                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER ';'
   27                     | KW_TYPEDEF type_specifier star_list_opt IDENTIFIER ';'
   28                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims ';'
   29                     | KW_TYPEDEF type_specifier star_list_opt IDENTIFIER array_dims ';'
   30                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';'
   31                     | type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';'
   32                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   33                     | KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   34                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'
   35                     | KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'
   36                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER ';'
   37                     | type_specifier star_list_opt IDENTIFIER ';'
   38                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' initializer ';'
   39                     | type_specifier star_list_opt IDENTIFIER '=' initializer ';'
   40                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';'
   41                     | type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';'
   42                     | function_definition
   43                     | struct_or_union_specifier ';'
   44                     | enum_specifier ';'

   45 func_decl_specs: type_specifier star_list_opt
   46                | KW_EXTERN func_decl_specs
   47                | KW_STATIC func_decl_specs
   48                | KW_CONST func_decl_specs
   49                | KW_VOLATILE func_decl_specs
   50                | KW_RESTRICT func_decl_specs
   51                | KW_INLINE func_decl_specs
   52                | KW_UNIQ func_decl_specs

   53 parameter_type_list_opt: /* empty */
   54                        | parameter_type_list

   55 parameter_type_list: parameter_list
   56                    | parameter_list ',' ELLIPSIS

   57 parameter_list: parameter_declaration
   58               | parameter_list ',' parameter_declaration

   59 parameter_declaration: type_qualifier_seq_opt type_specifier sdecl
   60                      | type_qualifier_seq_opt type_specifier

   61 declaration_specifiers: declaration_specifier
   62                       | declaration_specifiers declaration_specifier

   63 declaration_specifier: storage_class_specifier
   64                      | type_specifier
   65                      | type_qualifier
   66                      | function_specifier

   67 storage_class_specifier: KW_EXTERN
   68                        | KW_STATIC

   69 type_qualifier: KW_CONST
   70               | KW_VOLATILE
   71               | KW_RESTRICT
   72               | KW_UNIQ

   73 function_specifier: KW_INLINE

   74 type_unit: KW_VOID
   75          | KW_CHAR
   76          | KW_SHORT
   77          | KW_INT
   78          | KW_LONG
   79          | KW_SIGNED
   80          | KW_UNSIGNED
   81          | KW_FLOAT
   82          | KW_DOUBLE
   83          | struct_or_union_specifier
   84          | KW_STRUCT '{' struct_declaration_list_opt '}'
   85          | KW_UNION '{' struct_declaration_list_opt '}'
   86          | KW_STRUCT IDENTIFIER
   87          | KW_UNION IDENTIFIER
   88          | enum_specifier
   89          | TYPE_NAME

   90 type_specifier: type_unit
   91               | type_specifier type_unit

   92 specifier_qualifier_list: type_qualifier_seq_opt type_specifier

   93 array_dims: '[' INTEGER_CONSTANT ']'
   94           | array_dims '[' INTEGER_CONSTANT ']'

   95 struct_or_union_specifier: KW_STRUCT IDENTIFIER '{' struct_declaration_list_opt '}'
   96                          | KW_UNION IDENTIFIER '{' struct_declaration_list_opt '}'
   97                          | KW_STRUCT '{' struct_declaration_list_opt '}'
   98                          | KW_UNION '{' struct_declaration_list_opt '}'
   99                          | KW_STRUCT IDENTIFIER
  100                          | KW_UNION IDENTIFIER

  101 struct_declaration_list_opt: /* empty */
  102                            | struct_declaration_list

  103 struct_declaration_list: struct_declaration
  104                        | struct_declaration_list struct_declaration

  105 struct_declaration: specifier_qualifier_list struct_declarator_list ';'

  106 struct_declarator_list: struct_declarator
  107                       | struct_declarator_list ',' struct_declarator

  108 struct_declarator: sdecl
  109                  | ':' constant_expression
  110                  | sdecl ':' constant_expression

  111 enum_specifier: KW_ENUM IDENTIFIER '{' enumerator_list_opt '}'
  112               | KW_ENUM '{' enumerator_list_opt '}'
  113               | KW_ENUM IDENTIFIER

  114 enumerator_list_opt: /* empty */
  115                    | enumerator_list

  116 enumerator_list: enumerator
  117                | enumerator_list ',' enumerator

  118 enumerator: IDENTIFIER
  119           | IDENTIFIER '=' constant_expression

  120 declarator: pointer_opt direct_declarator

  121 pointer_opt: /* empty */
  122            | pointer

  123 pointer: '*'
  124        | '*' type_qualifier
  125        | '*' pointer
  126        | '*' type_qualifier pointer

  127 direct_declarator: IDENTIFIER
  128                  | '(' declarator ')'
  129                  | direct_declarator '[' assignment_expression_opt ']'
  130                  | direct_declarator '(' parameter_type_list_opt ')'
  131                  | direct_declarator '(' identifier_list_opt ')'

  132 identifier_list_opt: /* empty */
  133                    | identifier_list

  134 identifier_list: IDENTIFIER
  135                | identifier_list ',' IDENTIFIER

  136 fp_param_list_opt: /* empty */
  137                  | fp_param_list

  138 fp_param_list: fp_param
  139              | fp_param_list ',' fp_param

  140 fp_param: type_qualifier_seq_opt type_specifier star_list_opt
  141         | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER

  142 function_definition: declaration_specifiers declarator compound_statement
  143                    | type_specifier declarator compound_statement

  144 statement: compound_statement
  145          | expression_statement
  146          | selection_statement
  147          | iteration_statement
  148          | jump_statement

  149 compound_statement: '{' block_item_list_opt '}'

  150 block_item_list_opt: /* empty */
  151                    | block_item_list

  152 block_item_list: block_item
  153                | block_item_list block_item

  154 block_item: type_specifier star_list_opt IDENTIFIER ';'
  155           | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER ';'
  156           | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';'
  157           | type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';'
  158           | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' initializer ';'
  159           | type_specifier star_list_opt IDENTIFIER '=' initializer ';'
  160           | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';'
  161           | type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';'
  162           | type_qualifier_seq_opt type_specifier sdecl ',' sdecl sdecl_list ';'
  163           | type_qualifier_seq_opt type_specifier sdecl '=' initializer ';'
  164           | statement
  165           | KW_TYPEDEF type_specifier star_list_opt IDENTIFIER ';'

  166 sdecl_list: /* empty */
  167           | sdecl_list ',' sdecl

  168 sdecl: star_list_opt sdir

  169 sdir: IDENTIFIER
  170     | '(' sdecl ')'
  171     | '(' sdecl ')' '(' fp_param_list_opt ')'
  172     | sdir '[' assignment_expression_opt ']'

  173 expression_statement: ';'
  174                     | expression ';'

  175 selection_statement: KW_IF '(' expression ')' statement
  176                    | KW_IF '(' expression ')' statement KW_ELSE statement
  177                    | KW_SWITCH '(' expression ')' statement

  178 iteration_statement: KW_WHILE '(' expression ')' statement
  179                    | KW_DO statement KW_WHILE '(' expression ')' ';'
  180                    | KW_FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' statement

  181 jump_statement: KW_RETURN expression_opt ';'
  182               | KW_BREAK ';'
  183               | KW_CONTINUE ';'
  184               | KW_GOTO IDENTIFIER ';'

  185 expression_opt: /* empty */
  186               | expression

  187 expression: assignment_expression
  188           | expression ',' assignment_expression

  189 assignment_expression_opt: /* empty */
  190                          | assignment_expression

  191 assignment_expression: conditional_expression
  192                      | unary_expression '=' assignment_expression
  193                      | unary_expression ADD_ASSIGN assignment_expression
  194                      | unary_expression SUB_ASSIGN assignment_expression
  195                      | unary_expression MUL_ASSIGN assignment_expression
  196                      | unary_expression DIV_ASSIGN assignment_expression
  197                      | unary_expression MOD_ASSIGN assignment_expression
  198                      | unary_expression AND_ASSIGN assignment_expression
  199                      | unary_expression OR_ASSIGN assignment_expression
  200                      | unary_expression XOR_ASSIGN assignment_expression
  201                      | unary_expression LSHIFT_ASSIGN assignment_expression
  202                      | unary_expression RSHIFT_ASSIGN assignment_expression

  203 conditional_expression: logical_or_expression
  204                       | logical_or_expression '?' expression ':' conditional_expression

  205 logical_or_expression: logical_and_expression
  206                      | logical_or_expression LOGOR logical_and_expression

  207 logical_and_expression: inclusive_or_expression
  208                       | logical_and_expression LOGAND inclusive_or_expression

  209 inclusive_or_expression: exclusive_or_expression
  210                        | inclusive_or_expression '|' exclusive_or_expression

  211 exclusive_or_expression: and_expression
  212                        | exclusive_or_expression '^' and_expression

  213 and_expression: equality_expression
  214               | and_expression '&' equality_expression

  215 equality_expression: relational_expression
  216                    | equality_expression EQ relational_expression
  217                    | equality_expression NE relational_expression

  218 relational_expression: shift_expression
  219                      | relational_expression '<' shift_expression
  220                      | relational_expression '>' shift_expression
  221                      | relational_expression LE shift_expression
  222                      | relational_expression GE shift_expression

  223 shift_expression: additive_expression
  224                 | shift_expression LSHIFT additive_expression
  225                 | shift_expression RSHIFT additive_expression

  226 additive_expression: multiplicative_expression
  227                    | additive_expression '+' multiplicative_expression
  228                    | additive_expression '-' multiplicative_expression

  229 multiplicative_expression: unary_expression
  230                          | multiplicative_expression '*' unary_expression
  231                          | multiplicative_expression '/' unary_expression
  232                          | multiplicative_expression '%' unary_expression

  233 unary_expression: postfix_expression
  234                 | INC unary_expression
  235                 | DEC unary_expression
  236                 | '+' unary_expression
  237                 | '-' unary_expression
  238                 | '!' unary_expression
  239                 | '~' unary_expression
  240                 | KW_SIZEOF unary_expression
  241                 | KW_SIZEOF '(' type_specifier ')'
  242                 | '(' type_qualifier_seq_opt type_specifier star_list_opt ')' unary_expression

  243 type_qualifier_seq_opt: /* empty */
  244                       | type_qualifier_seq_opt KW_CONST
  245                       | type_qualifier_seq_opt KW_VOLATILE
  246                       | type_qualifier_seq_opt KW_RESTRICT
  247                       | type_qualifier_seq_opt KW_UNIQ

  248 postfix_expression: primary_expression
  249                   | postfix_expression '(' argument_expression_list_opt ')'
  250                   | postfix_expression '[' expression ']'
  251                   | postfix_expression '.' IDENTIFIER
  252                   | postfix_expression ARROW IDENTIFIER
  253                   | postfix_expression INC
  254                   | postfix_expression DEC

  255 argument_expression_list_opt: /* empty */
  256                             | argument_expression_list

  257 argument_expression_list: assignment_expression
  258                         | argument_expression_list ',' assignment_expression

  259 primary_expression: IDENTIFIER
  260                   | INTEGER_CONSTANT
  261                   | FLOAT_CONSTANT
  262                   | CHAR_CONSTANT
  263                   | STRING_LITERAL
  264                   | '(' expression ')'

  265 initializer: assignment_expression
  266            | '{' initializer_list_opt '}'

  267 initializer_list_opt: /* empty */
  268                     | initializer_list

  269 initializer_list: initializer
  270                 | designated_initializer
  271                 | initializer_list ',' initializer
  272                 | initializer_list ',' designated_initializer

  273 designated_initializer: designation '=' initializer

  274 designation: designator
  275            | designation designator

  276 designator: '.' IDENTIFIER
  277           | '[' constant_expression ']'
  278           | '[' constant_expression ELLIPSIS constant_expression ']'

  279 constant_expression: conditional_expression


Terminals, with rules where they appear

$end (0) 0
'!' (33) 238
'%' (37) 8 12 232
'&' (38) 9 13 214
'(' (40) 20 21 22 23 24 25 32 33 34 35 128 130 131 170 171 175 176
    177 178 179 180 241 242 249 264
')' (41) 20 21 22 23 24 25 32 33 34 35 128 130 131 170 171 175 176
    177 178 179 180 241 242 249 264
'*' (42) 7 11 32 33 34 35 123 124 125 126 230
'+' (43) 227 236
',' (44) 15 16 56 58 107 117 135 139 162 167 188 258 271 272
'-' (45) 228 237
'.' (46) 251 276
'/' (47) 231
':' (58) 109 110 204
';' (59) 15 16 17 18 22 23 25 26 27 28 29 30 31 32 33 34 35 36 37 38
    39 40 41 43 44 105 154 155 156 157 158 159 160 161 162 163 165
    173 174 179 180 181 182 183 184
'<' (60) 219
'=' (61) 17 18 30 31 38 39 40 41 119 156 157 158 159 160 161 163 192
    273
'>' (62) 220
'?' (63) 204
'[' (91) 93 94 129 172 250 277 278
']' (93) 93 94 129 172 250 277 278
'^' (94) 212
'`' (96) 10 14
'{' (123) 84 85 95 96 97 98 111 112 149 266
'|' (124) 210
'}' (125) 84 85 95 96 97 98 111 112 149 266
'~' (126) 239
error (256)
IDENTIFIER (258) 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36
    37 38 39 40 41 86 87 95 96 99 100 111 113 118 119 127 134 135 141
    154 155 156 157 158 159 160 161 165 169 184 251 252 259 276
TYPE_NAME (259) 89
STRING_LITERAL (260) 263
INTEGER_CONSTANT (261) 4 93 94 260
FLOAT_CONSTANT (262) 261
CHAR_CONSTANT (263) 262
KW_VOID (264) 74
KW_CHAR (265) 75
KW_SHORT (266) 76
KW_INT (267) 77
KW_LONG (268) 78
KW_SIGNED (269) 79
KW_UNSIGNED (270) 80
KW_FLOAT (271) 81
KW_DOUBLE (272) 82
KW_VERSION (273) 4
KW_STRUCT (274) 84 86 95 97 99
KW_UNION (275) 85 87 96 98 100
KW_ENUM (276) 111 112 113
KW_TYPEDEF (277) 26 27 28 29 32 33 34 35 165
KW_RETURN (278) 181
KW_IF (279) 175 176
KW_ELSE (280) 176
KW_WHILE (281) 178 179
KW_FOR (282) 180
KW_DO (283) 179
KW_SWITCH (284) 177
KW_CASE (285)
KW_DEFAULT (286)
KW_BREAK (287) 182
KW_CONTINUE (288) 183
KW_GOTO (289) 184
KW_CONST (290) 48 69 244
KW_VOLATILE (291) 49 70 245
KW_RESTRICT (292) 50 71 246
KW_INLINE (293) 51 73
KW_EXTERN (294) 46 67
KW_STATIC (295) 47 68
KW_UNIQ (296) 52 72 247
KW_SIZEOF (297) 240 241
ELLIPSIS (298) 56 278
ARROW (299) 252
INC (300) 234 253
DEC (301) 235 254
LSHIFT (302) 224
RSHIFT (303) 225
LE (304) 221
GE (305) 222
EQ (306) 216
NE (307) 217
LOGAND (308) 208
LOGOR (309) 206
ADD_ASSIGN (310) 193
SUB_ASSIGN (311) 194
MUL_ASSIGN (312) 195
DIV_ASSIGN (313) 196
MOD_ASSIGN (314) 197
AND_ASSIGN (315) 198
OR_ASSIGN (316) 199
XOR_ASSIGN (317) 200
LSHIFT_ASSIGN (318) 201
RSHIFT_ASSIGN (319) 202
PREFER_EMPTY (320)


Nonterminals, with rules where they appear

$accept (91)
    on left: 0
translation_unit (92)
    on left: 1 2, on right: 0 2
version_opt (93)
    on left: 3 4, on right: 20 21 22 23 24 25
star_list_opt (94)
    on left: 5 6, on right: 20 21 22 23 26 27 28 29 30 31 32 33 34
    35 36 37 38 39 40 41 45 140 141 154 155 156 157 158 159 160 161
    165 168 242
star_list (95)
    on left: 7 8 9 10 11 12 13 14, on right: 6 11 12 13 14
external_declaration (96)
    on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32
    33 34 35 36 37 38 39 40 41 42 43 44, on right: 2
func_decl_specs (97)
    on left: 45 46 47 48 49 50 51 52, on right: 24 25 46 47 48 49 50
    51 52
parameter_type_list_opt (98)
    on left: 53 54, on right: 20 21 22 23 24 25 130
parameter_type_list (99)
    on left: 55 56, on right: 54
parameter_list (100)
    on left: 57 58, on right: 55 56 58
parameter_declaration (101)
    on left: 59 60, on right: 57 58
declaration_specifiers (102)
    on left: 61 62, on right: 62 142
declaration_specifier (103)
    on left: 63 64 65 66, on right: 61 62
storage_class_specifier (104)
    on left: 67 68, on right: 63
type_qualifier (105)
    on left: 69 70 71 72, on right: 65 124 126
function_specifier (106)
    on left: 73, on right: 66
type_unit (107)
    on left: 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89,
    on right: 90 91
type_specifier (108)
    on left: 90 91, on right: 15 16 17 18 20 21 22 23 26 27 28 29 30
    31 32 33 34 35 36 37 38 39 40 41 45 59 60 64 91 92 140 141 143
    154 155 156 157 158 159 160 161 162 163 165 241 242
specifier_qualifier_list (109)
    on left: 92, on right: 105
array_dims (110)
    on left: 93 94, on right: 28 29 34 35 40 41 94 160 161
struct_or_union_specifier (111)
    on left: 95 96 97 98 99 100, on right: 43 83
struct_declaration_list_opt (112)
    on left: 101 102, on right: 84 85 95 96 97 98
struct_declaration_list (113)
    on left: 103 104, on right: 102 104
struct_declaration (114)
    on left: 105, on right: 103 104
struct_declarator_list (115)
    on left: 106 107, on right: 105 107
struct_declarator (116)
    on left: 108 109 110, on right: 106 107
enum_specifier (117)
    on left: 111 112 113, on right: 44 88
enumerator_list_opt (118)
    on left: 114 115, on right: 111 112
enumerator_list (119)
    on left: 116 117, on right: 115 117
enumerator (120)
    on left: 118 119, on right: 116 117
declarator (121)
    on left: 120, on right: 128 142 143
pointer_opt (122)
    on left: 121 122, on right: 120
pointer (123)
    on left: 123 124 125 126, on right: 122 125 126
direct_declarator (124)
    on left: 127 128 129 130 131, on right: 120 129 130 131
identifier_list_opt (125)
    on left: 132 133, on right: 131
identifier_list (126)
    on left: 134 135, on right: 133 135
fp_param_list_opt (127)
    on left: 136 137, on right: 32 33 34 35 171
fp_param_list (128)
    on left: 138 139, on right: 137 139
fp_param (129)
    on left: 140 141, on right: 138 139
function_definition (130)
    on left: 142 143, on right: 42
statement (131)
    on left: 144 145 146 147 148, on right: 164 175 176 177 178 179
    180
compound_statement (132)
    on left: 149, on right: 20 21 24 142 143 144
block_item_list_opt (133)
    on left: 150 151, on right: 149
block_item_list (134)
    on left: 152 153, on right: 151 153
block_item (135)
    on left: 154 155 156 157 158 159 160 161 162 163 164 165,
    on right: 152 153
sdecl_list (136)
    on left: 166 167, on right: 15 16 162 167
sdecl (137)
    on left: 168, on right: 15 16 17 18 59 108 110 162 163 167 170
    171
sdir (138)
    on left: 169 170 171 172, on right: 168 172
expression_statement (139)
    on left: 173 174, on right: 145
selection_statement (140)
    on left: 175 176 177, on right: 146
iteration_statement (141)
    on left: 178 179 180, on right: 147
jump_statement (142)
    on left: 181 182 183 184, on right: 148
expression_opt (143)
    on left: 185 186, on right: 180 181
expression (144)
    on left: 187 188, on right: 174 175 176 177 178 179 186 188 204
    250 264
assignment_expression_opt (145)
    on left: 189 190, on right: 129 172
assignment_expression (146)
    on left: 191 192 193 194 195 196 197 198 199 200 201 202,
    on right: 30 31 156 157 187 188 190 192 193 194 195 196 197 198
    199 200 201 202 257 258 265
conditional_expression (147)
    on left: 203 204, on right: 191 204 279
logical_or_expression (148)
    on left: 205 206, on right: 203 204 206
logical_and_expression (149)
    on left: 207 208, on right: 205 206 208
inclusive_or_expression (150)
    on left: 209 210, on right: 207 208 210
exclusive_or_expression (151)
    on left: 211 212, on right: 209 210 212
and_expression (152)
    on left: 213 214, on right: 211 212 214
equality_expression (153)
    on left: 215 216 217, on right: 213 214 216 217
relational_expression (154)
    on left: 218 219 220 221 222, on right: 215 216 217 219 220 221
    222
shift_expression (155)
    on left: 223 224 225, on right: 218 219 220 221 222 224 225
additive_expression (156)
    on left: 226 227 228, on right: 223 224 225 227 228
multiplicative_expression (157)
    on left: 229 230 231 232, on right: 226 227 228 230 231 232
unary_expression (158)
    on left: 233 234 235 236 237 238 239 240 241 242,
    on right: 192 193 194 195 196 197 198 199 200 201 202 229 230 231
    232 234 235 236 237 238 239 240 242
type_qualifier_seq_opt (159)
    on left: 243 244 245 246 247, on right: 15 17 20 22 26 28 30 32
    34 36 38 40 59 60 92 140 141 155 156 158 160 162 163 242 244 245
    246 247
postfix_expression (160)
    on left: 248 249 250 251 252 253 254, on right: 233 249 250 251
    252 253 254
argument_expression_list_opt (161)
    on left: 255 256, on right: 249
argument_expression_list (162)
    on left: 257 258, on right: 256 258
primary_expression (163)
    on left: 259 260 261 262 263 264, on right: 248
initializer (164)
    on left: 265 266, on right: 17 18 38 39 40 41 158 159 160 161 163
    269 271 273
initializer_list_opt (165)
    on left: 267 268, on right: 266
initializer_list (166)
    on left: 269 270 271 272, on right: 268 271 272
designated_initializer (167)
    on left: 273, on right: 270 272
designation (168)
    on left: 274 275, on right: 273 275
designator (169)
    on left: 276 277 278, on right: 274 275
constant_expression (170)
    on left: 279, on right: 109 110 119 277 278


state 0

    0 $accept: . translation_unit $end

    $default  reduce using rule 1 (translation_unit)

    translation_unit  go to state 1


state 1

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . external_declaration

    $end         shift, and go to state 2
    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_TYPEDEF   shift, and go to state 16
    KW_CONST     shift, and go to state 17
    KW_VOLATILE  shift, and go to state 18
    KW_RESTRICT  shift, and go to state 19
    KW_INLINE    shift, and go to state 20
    KW_EXTERN    shift, and go to state 21
    KW_STATIC    shift, and go to state 22
    KW_UNIQ      shift, and go to state 23

    $end         [reduce using rule 19 (external_declaration)]
    TYPE_NAME    [reduce using rule 19 (external_declaration)]
    TYPE_NAME    [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_VOID      [reduce using rule 19 (external_declaration)]
    KW_VOID      [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_CHAR      [reduce using rule 19 (external_declaration)]
    KW_CHAR      [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_SHORT     [reduce using rule 19 (external_declaration)]
    KW_SHORT     [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_INT       [reduce using rule 19 (external_declaration)]
    KW_INT       [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_LONG      [reduce using rule 19 (external_declaration)]
    KW_LONG      [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_SIGNED    [reduce using rule 19 (external_declaration)]
    KW_SIGNED    [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_UNSIGNED  [reduce using rule 19 (external_declaration)]
    KW_UNSIGNED  [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_FLOAT     [reduce using rule 19 (external_declaration)]
    KW_FLOAT     [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_DOUBLE    [reduce using rule 19 (external_declaration)]
    KW_DOUBLE    [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_STRUCT    [reduce using rule 19 (external_declaration)]
    KW_STRUCT    [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_UNION     [reduce using rule 19 (external_declaration)]
    KW_UNION     [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_ENUM      [reduce using rule 19 (external_declaration)]
    KW_ENUM      [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_TYPEDEF   [reduce using rule 19 (external_declaration)]
    KW_CONST     [reduce using rule 19 (external_declaration)]
    KW_CONST     [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_VOLATILE  [reduce using rule 19 (external_declaration)]
    KW_VOLATILE  [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_RESTRICT  [reduce using rule 19 (external_declaration)]
    KW_RESTRICT  [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_INLINE    [reduce using rule 19 (external_declaration)]
    KW_EXTERN    [reduce using rule 19 (external_declaration)]
    KW_STATIC    [reduce using rule 19 (external_declaration)]
    KW_UNIQ      [reduce using rule 19 (external_declaration)]
    KW_UNIQ      [reduce using rule 243 (type_qualifier_seq_opt)]

    external_declaration       go to state 24
    func_decl_specs            go to state 25
    declaration_specifiers     go to state 26
    declaration_specifier      go to state 27
    storage_class_specifier    go to state 28
    type_qualifier             go to state 29
    function_specifier         go to state 30
    type_unit                  go to state 31
    type_specifier             go to state 32
    struct_or_union_specifier  go to state 33
    enum_specifier             go to state 34
    function_definition        go to state 35
    type_qualifier_seq_opt     go to state 36


state 2

    0 $accept: translation_unit $end .

    $default  accept


state 3

   89 type_unit: TYPE_NAME .

    $default  reduce using rule 89 (type_unit)


state 4

   74 type_unit: KW_VOID .

    $default  reduce using rule 74 (type_unit)


state 5

   75 type_unit: KW_CHAR .

    $default  reduce using rule 75 (type_unit)


state 6

   76 type_unit: KW_SHORT .

    $default  reduce using rule 76 (type_unit)


state 7

   77 type_unit: KW_INT .

    $default  reduce using rule 77 (type_unit)


state 8

   78 type_unit: KW_LONG .

    $default  reduce using rule 78 (type_unit)


state 9

   79 type_unit: KW_SIGNED .

    $default  reduce using rule 79 (type_unit)


state 10

   80 type_unit: KW_UNSIGNED .

    $default  reduce using rule 80 (type_unit)


state 11

   81 type_unit: KW_FLOAT .

    $default  reduce using rule 81 (type_unit)


state 12

   82 type_unit: KW_DOUBLE .

    $default  reduce using rule 82 (type_unit)


state 13

   84 type_unit: KW_STRUCT . '{' struct_declaration_list_opt '}'
   86          | KW_STRUCT . IDENTIFIER
   95 struct_or_union_specifier: KW_STRUCT . IDENTIFIER '{' struct_declaration_list_opt '}'
   97                          | KW_STRUCT . '{' struct_declaration_list_opt '}'
   99                          | KW_STRUCT . IDENTIFIER

    IDENTIFIER  shift, and go to state 37
    '{'         shift, and go to state 38


state 14

   85 type_unit: KW_UNION . '{' struct_declaration_list_opt '}'
   87          | KW_UNION . IDENTIFIER
   96 struct_or_union_specifier: KW_UNION . IDENTIFIER '{' struct_declaration_list_opt '}'
   98                          | KW_UNION . '{' struct_declaration_list_opt '}'
  100                          | KW_UNION . IDENTIFIER

    IDENTIFIER  shift, and go to state 39
    '{'         shift, and go to state 40


state 15

  111 enum_specifier: KW_ENUM . IDENTIFIER '{' enumerator_list_opt '}'
  112               | KW_ENUM . '{' enumerator_list_opt '}'
  113               | KW_ENUM . IDENTIFIER

    IDENTIFIER  shift, and go to state 41
    '{'         shift, and go to state 42


state 16

   26 external_declaration: KW_TYPEDEF . type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER ';'
   27                     | KW_TYPEDEF . type_specifier star_list_opt IDENTIFIER ';'
   28                     | KW_TYPEDEF . type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims ';'
   29                     | KW_TYPEDEF . type_specifier star_list_opt IDENTIFIER array_dims ';'
   32                     | KW_TYPEDEF . type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   33                     | KW_TYPEDEF . type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   34                     | KW_TYPEDEF . type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'
   35                     | KW_TYPEDEF . type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15

    TYPE_NAME    [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_VOID      [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_CHAR      [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_SHORT     [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_INT       [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_LONG      [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_SIGNED    [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_UNSIGNED  [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_FLOAT     [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_DOUBLE    [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_STRUCT    [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_UNION     [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_ENUM      [reduce using rule 243 (type_qualifier_seq_opt)]
    $default     reduce using rule 243 (type_qualifier_seq_opt)

    type_unit                  go to state 31
    type_specifier             go to state 43
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45
    type_qualifier_seq_opt     go to state 46


state 17

   48 func_decl_specs: KW_CONST . func_decl_specs
   69 type_qualifier: KW_CONST .

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 47
    KW_VOLATILE  shift, and go to state 48
    KW_RESTRICT  shift, and go to state 49
    KW_INLINE    shift, and go to state 50
    KW_EXTERN    shift, and go to state 51
    KW_STATIC    shift, and go to state 52
    KW_UNIQ      shift, and go to state 53

    TYPE_NAME    [reduce using rule 69 (type_qualifier)]
    KW_VOID      [reduce using rule 69 (type_qualifier)]
    KW_CHAR      [reduce using rule 69 (type_qualifier)]
    KW_SHORT     [reduce using rule 69 (type_qualifier)]
    KW_INT       [reduce using rule 69 (type_qualifier)]
    KW_LONG      [reduce using rule 69 (type_qualifier)]
    KW_SIGNED    [reduce using rule 69 (type_qualifier)]
    KW_UNSIGNED  [reduce using rule 69 (type_qualifier)]
    KW_FLOAT     [reduce using rule 69 (type_qualifier)]
    KW_DOUBLE    [reduce using rule 69 (type_qualifier)]
    KW_STRUCT    [reduce using rule 69 (type_qualifier)]
    KW_UNION     [reduce using rule 69 (type_qualifier)]
    KW_ENUM      [reduce using rule 69 (type_qualifier)]
    KW_CONST     [reduce using rule 69 (type_qualifier)]
    KW_VOLATILE  [reduce using rule 69 (type_qualifier)]
    KW_RESTRICT  [reduce using rule 69 (type_qualifier)]
    KW_INLINE    [reduce using rule 69 (type_qualifier)]
    KW_EXTERN    [reduce using rule 69 (type_qualifier)]
    KW_STATIC    [reduce using rule 69 (type_qualifier)]
    KW_UNIQ      [reduce using rule 69 (type_qualifier)]
    $default     reduce using rule 69 (type_qualifier)

    func_decl_specs            go to state 54
    type_unit                  go to state 31
    type_specifier             go to state 55
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45


state 18

   49 func_decl_specs: KW_VOLATILE . func_decl_specs
   70 type_qualifier: KW_VOLATILE .

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 47
    KW_VOLATILE  shift, and go to state 48
    KW_RESTRICT  shift, and go to state 49
    KW_INLINE    shift, and go to state 50
    KW_EXTERN    shift, and go to state 51
    KW_STATIC    shift, and go to state 52
    KW_UNIQ      shift, and go to state 53

    TYPE_NAME    [reduce using rule 70 (type_qualifier)]
    KW_VOID      [reduce using rule 70 (type_qualifier)]
    KW_CHAR      [reduce using rule 70 (type_qualifier)]
    KW_SHORT     [reduce using rule 70 (type_qualifier)]
    KW_INT       [reduce using rule 70 (type_qualifier)]
    KW_LONG      [reduce using rule 70 (type_qualifier)]
    KW_SIGNED    [reduce using rule 70 (type_qualifier)]
    KW_UNSIGNED  [reduce using rule 70 (type_qualifier)]
    KW_FLOAT     [reduce using rule 70 (type_qualifier)]
    KW_DOUBLE    [reduce using rule 70 (type_qualifier)]
    KW_STRUCT    [reduce using rule 70 (type_qualifier)]
    KW_UNION     [reduce using rule 70 (type_qualifier)]
    KW_ENUM      [reduce using rule 70 (type_qualifier)]
    KW_CONST     [reduce using rule 70 (type_qualifier)]
    KW_VOLATILE  [reduce using rule 70 (type_qualifier)]
    KW_RESTRICT  [reduce using rule 70 (type_qualifier)]
    KW_INLINE    [reduce using rule 70 (type_qualifier)]
    KW_EXTERN    [reduce using rule 70 (type_qualifier)]
    KW_STATIC    [reduce using rule 70 (type_qualifier)]
    KW_UNIQ      [reduce using rule 70 (type_qualifier)]
    $default     reduce using rule 70 (type_qualifier)

    func_decl_specs            go to state 56
    type_unit                  go to state 31
    type_specifier             go to state 55
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45


state 19

   50 func_decl_specs: KW_RESTRICT . func_decl_specs
   71 type_qualifier: KW_RESTRICT .

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 47
    KW_VOLATILE  shift, and go to state 48
    KW_RESTRICT  shift, and go to state 49
    KW_INLINE    shift, and go to state 50
    KW_EXTERN    shift, and go to state 51
    KW_STATIC    shift, and go to state 52
    KW_UNIQ      shift, and go to state 53

    TYPE_NAME    [reduce using rule 71 (type_qualifier)]
    KW_VOID      [reduce using rule 71 (type_qualifier)]
    KW_CHAR      [reduce using rule 71 (type_qualifier)]
    KW_SHORT     [reduce using rule 71 (type_qualifier)]
    KW_INT       [reduce using rule 71 (type_qualifier)]
    KW_LONG      [reduce using rule 71 (type_qualifier)]
    KW_SIGNED    [reduce using rule 71 (type_qualifier)]
    KW_UNSIGNED  [reduce using rule 71 (type_qualifier)]
    KW_FLOAT     [reduce using rule 71 (type_qualifier)]
    KW_DOUBLE    [reduce using rule 71 (type_qualifier)]
    KW_STRUCT    [reduce using rule 71 (type_qualifier)]
    KW_UNION     [reduce using rule 71 (type_qualifier)]
    KW_ENUM      [reduce using rule 71 (type_qualifier)]
    KW_CONST     [reduce using rule 71 (type_qualifier)]
    KW_VOLATILE  [reduce using rule 71 (type_qualifier)]
    KW_RESTRICT  [reduce using rule 71 (type_qualifier)]
    KW_INLINE    [reduce using rule 71 (type_qualifier)]
    KW_EXTERN    [reduce using rule 71 (type_qualifier)]
    KW_STATIC    [reduce using rule 71 (type_qualifier)]
    KW_UNIQ      [reduce using rule 71 (type_qualifier)]
    $default     reduce using rule 71 (type_qualifier)

    func_decl_specs            go to state 57
    type_unit                  go to state 31
    type_specifier             go to state 55
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45


state 20

   51 func_decl_specs: KW_INLINE . func_decl_specs
   73 function_specifier: KW_INLINE .

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 47
    KW_VOLATILE  shift, and go to state 48
    KW_RESTRICT  shift, and go to state 49
    KW_INLINE    shift, and go to state 50
    KW_EXTERN    shift, and go to state 51
    KW_STATIC    shift, and go to state 52
    KW_UNIQ      shift, and go to state 53

    TYPE_NAME    [reduce using rule 73 (function_specifier)]
    KW_VOID      [reduce using rule 73 (function_specifier)]
    KW_CHAR      [reduce using rule 73 (function_specifier)]
    KW_SHORT     [reduce using rule 73 (function_specifier)]
    KW_INT       [reduce using rule 73 (function_specifier)]
    KW_LONG      [reduce using rule 73 (function_specifier)]
    KW_SIGNED    [reduce using rule 73 (function_specifier)]
    KW_UNSIGNED  [reduce using rule 73 (function_specifier)]
    KW_FLOAT     [reduce using rule 73 (function_specifier)]
    KW_DOUBLE    [reduce using rule 73 (function_specifier)]
    KW_STRUCT    [reduce using rule 73 (function_specifier)]
    KW_UNION     [reduce using rule 73 (function_specifier)]
    KW_ENUM      [reduce using rule 73 (function_specifier)]
    KW_CONST     [reduce using rule 73 (function_specifier)]
    KW_VOLATILE  [reduce using rule 73 (function_specifier)]
    KW_RESTRICT  [reduce using rule 73 (function_specifier)]
    KW_INLINE    [reduce using rule 73 (function_specifier)]
    KW_EXTERN    [reduce using rule 73 (function_specifier)]
    KW_STATIC    [reduce using rule 73 (function_specifier)]
    KW_UNIQ      [reduce using rule 73 (function_specifier)]
    $default     reduce using rule 73 (function_specifier)

    func_decl_specs            go to state 58
    type_unit                  go to state 31
    type_specifier             go to state 55
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45


state 21

   46 func_decl_specs: KW_EXTERN . func_decl_specs
   67 storage_class_specifier: KW_EXTERN .

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 47
    KW_VOLATILE  shift, and go to state 48
    KW_RESTRICT  shift, and go to state 49
    KW_INLINE    shift, and go to state 50
    KW_EXTERN    shift, and go to state 51
    KW_STATIC    shift, and go to state 52
    KW_UNIQ      shift, and go to state 53

    TYPE_NAME    [reduce using rule 67 (storage_class_specifier)]
    KW_VOID      [reduce using rule 67 (storage_class_specifier)]
    KW_CHAR      [reduce using rule 67 (storage_class_specifier)]
    KW_SHORT     [reduce using rule 67 (storage_class_specifier)]
    KW_INT       [reduce using rule 67 (storage_class_specifier)]
    KW_LONG      [reduce using rule 67 (storage_class_specifier)]
    KW_SIGNED    [reduce using rule 67 (storage_class_specifier)]
    KW_UNSIGNED  [reduce using rule 67 (storage_class_specifier)]
    KW_FLOAT     [reduce using rule 67 (storage_class_specifier)]
    KW_DOUBLE    [reduce using rule 67 (storage_class_specifier)]
    KW_STRUCT    [reduce using rule 67 (storage_class_specifier)]
    KW_UNION     [reduce using rule 67 (storage_class_specifier)]
    KW_ENUM      [reduce using rule 67 (storage_class_specifier)]
    KW_CONST     [reduce using rule 67 (storage_class_specifier)]
    KW_VOLATILE  [reduce using rule 67 (storage_class_specifier)]
    KW_RESTRICT  [reduce using rule 67 (storage_class_specifier)]
    KW_INLINE    [reduce using rule 67 (storage_class_specifier)]
    KW_EXTERN    [reduce using rule 67 (storage_class_specifier)]
    KW_STATIC    [reduce using rule 67 (storage_class_specifier)]
    KW_UNIQ      [reduce using rule 67 (storage_class_specifier)]
    $default     reduce using rule 67 (storage_class_specifier)

    func_decl_specs            go to state 59
    type_unit                  go to state 31
    type_specifier             go to state 55
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45


state 22

   47 func_decl_specs: KW_STATIC . func_decl_specs
   68 storage_class_specifier: KW_STATIC .

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 47
    KW_VOLATILE  shift, and go to state 48
    KW_RESTRICT  shift, and go to state 49
    KW_INLINE    shift, and go to state 50
    KW_EXTERN    shift, and go to state 51
    KW_STATIC    shift, and go to state 52
    KW_UNIQ      shift, and go to state 53

    TYPE_NAME    [reduce using rule 68 (storage_class_specifier)]
    KW_VOID      [reduce using rule 68 (storage_class_specifier)]
    KW_CHAR      [reduce using rule 68 (storage_class_specifier)]
    KW_SHORT     [reduce using rule 68 (storage_class_specifier)]
    KW_INT       [reduce using rule 68 (storage_class_specifier)]
    KW_LONG      [reduce using rule 68 (storage_class_specifier)]
    KW_SIGNED    [reduce using rule 68 (storage_class_specifier)]
    KW_UNSIGNED  [reduce using rule 68 (storage_class_specifier)]
    KW_FLOAT     [reduce using rule 68 (storage_class_specifier)]
    KW_DOUBLE    [reduce using rule 68 (storage_class_specifier)]
    KW_STRUCT    [reduce using rule 68 (storage_class_specifier)]
    KW_UNION     [reduce using rule 68 (storage_class_specifier)]
    KW_ENUM      [reduce using rule 68 (storage_class_specifier)]
    KW_CONST     [reduce using rule 68 (storage_class_specifier)]
    KW_VOLATILE  [reduce using rule 68 (storage_class_specifier)]
    KW_RESTRICT  [reduce using rule 68 (storage_class_specifier)]
    KW_INLINE    [reduce using rule 68 (storage_class_specifier)]
    KW_EXTERN    [reduce using rule 68 (storage_class_specifier)]
    KW_STATIC    [reduce using rule 68 (storage_class_specifier)]
    KW_UNIQ      [reduce using rule 68 (storage_class_specifier)]
    $default     reduce using rule 68 (storage_class_specifier)

    func_decl_specs            go to state 60
    type_unit                  go to state 31
    type_specifier             go to state 55
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45


state 23

   52 func_decl_specs: KW_UNIQ . func_decl_specs
   72 type_qualifier: KW_UNIQ .

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 47
    KW_VOLATILE  shift, and go to state 48
    KW_RESTRICT  shift, and go to state 49
    KW_INLINE    shift, and go to state 50
    KW_EXTERN    shift, and go to state 51
    KW_STATIC    shift, and go to state 52
    KW_UNIQ      shift, and go to state 53

    TYPE_NAME    [reduce using rule 72 (type_qualifier)]
    KW_VOID      [reduce using rule 72 (type_qualifier)]
    KW_CHAR      [reduce using rule 72 (type_qualifier)]
    KW_SHORT     [reduce using rule 72 (type_qualifier)]
    KW_INT       [reduce using rule 72 (type_qualifier)]
    KW_LONG      [reduce using rule 72 (type_qualifier)]
    KW_SIGNED    [reduce using rule 72 (type_qualifier)]
    KW_UNSIGNED  [reduce using rule 72 (type_qualifier)]
    KW_FLOAT     [reduce using rule 72 (type_qualifier)]
    KW_DOUBLE    [reduce using rule 72 (type_qualifier)]
    KW_STRUCT    [reduce using rule 72 (type_qualifier)]
    KW_UNION     [reduce using rule 72 (type_qualifier)]
    KW_ENUM      [reduce using rule 72 (type_qualifier)]
    KW_CONST     [reduce using rule 72 (type_qualifier)]
    KW_VOLATILE  [reduce using rule 72 (type_qualifier)]
    KW_RESTRICT  [reduce using rule 72 (type_qualifier)]
    KW_INLINE    [reduce using rule 72 (type_qualifier)]
    KW_EXTERN    [reduce using rule 72 (type_qualifier)]
    KW_STATIC    [reduce using rule 72 (type_qualifier)]
    KW_UNIQ      [reduce using rule 72 (type_qualifier)]
    $default     reduce using rule 72 (type_qualifier)

    func_decl_specs            go to state 61
    type_unit                  go to state 31
    type_specifier             go to state 55
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45


state 24

    2 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 2 (translation_unit)


state 25

   24 external_declaration: func_decl_specs . IDENTIFIER '(' parameter_type_list_opt ')' version_opt compound_statement
   25                     | func_decl_specs . IDENTIFIER '(' parameter_type_list_opt ')' version_opt ';'

    IDENTIFIER  shift, and go to state 62


state 26

   62 declaration_specifiers: declaration_specifiers . declaration_specifier
  142 function_definition: declaration_specifiers . declarator compound_statement

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 63
    KW_VOLATILE  shift, and go to state 64
    KW_RESTRICT  shift, and go to state 65
    KW_INLINE    shift, and go to state 66
    KW_EXTERN    shift, and go to state 67
    KW_STATIC    shift, and go to state 68
    KW_UNIQ      shift, and go to state 69
    '*'          shift, and go to state 70

    $default  reduce using rule 121 (pointer_opt)

    declaration_specifier      go to state 71
    storage_class_specifier    go to state 28
    type_qualifier             go to state 29
    function_specifier         go to state 30
    type_unit                  go to state 31
    type_specifier             go to state 72
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45
    declarator                 go to state 73
    pointer_opt                go to state 74
    pointer                    go to state 75


state 27

   61 declaration_specifiers: declaration_specifier .

    $default  reduce using rule 61 (declaration_specifiers)


state 28

   63 declaration_specifier: storage_class_specifier .

    $default  reduce using rule 63 (declaration_specifier)


state 29

   65 declaration_specifier: type_qualifier .

    $default  reduce using rule 65 (declaration_specifier)


state 30

   66 declaration_specifier: function_specifier .

    $default  reduce using rule 66 (declaration_specifier)


state 31

   90 type_specifier: type_unit .

    $default  reduce using rule 90 (type_specifier)


state 32

   16 external_declaration: type_specifier . sdecl ',' sdecl sdecl_list ';'
   18                     | type_specifier . sdecl '=' initializer ';'
   21                     | type_specifier . star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' version_opt compound_statement
   23                     | type_specifier . star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' version_opt ';'
   31                     | type_specifier . star_list_opt IDENTIFIER '=' assignment_expression ';'
   37                     | type_specifier . star_list_opt IDENTIFIER ';'
   39                     | type_specifier . star_list_opt IDENTIFIER '=' initializer ';'
   41                     | type_specifier . star_list_opt IDENTIFIER array_dims '=' initializer ';'
   45 func_decl_specs: type_specifier . star_list_opt
   64 declaration_specifier: type_specifier .
   91 type_specifier: type_specifier . type_unit
  143 function_definition: type_specifier . declarator compound_statement

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    '&'          shift, and go to state 76
    '*'          shift, and go to state 77
    '%'          shift, and go to state 78
    '`'          shift, and go to state 79

    IDENTIFIER   reduce using rule 5 (star_list_opt)
    IDENTIFIER   [reduce using rule 64 (declaration_specifier)]
    IDENTIFIER   [reduce using rule 121 (pointer_opt)]
    TYPE_NAME    [reduce using rule 64 (declaration_specifier)]
    KW_VOID      [reduce using rule 64 (declaration_specifier)]
    KW_CHAR      [reduce using rule 64 (declaration_specifier)]
    KW_SHORT     [reduce using rule 64 (declaration_specifier)]
    KW_INT       [reduce using rule 64 (declaration_specifier)]
    KW_LONG      [reduce using rule 64 (declaration_specifier)]
    KW_SIGNED    [reduce using rule 64 (declaration_specifier)]
    KW_UNSIGNED  [reduce using rule 64 (declaration_specifier)]
    KW_FLOAT     [reduce using rule 64 (declaration_specifier)]
    KW_DOUBLE    [reduce using rule 64 (declaration_specifier)]
    KW_STRUCT    [reduce using rule 64 (declaration_specifier)]
    KW_UNION     [reduce using rule 64 (declaration_specifier)]
    KW_ENUM      [reduce using rule 64 (declaration_specifier)]
    '*'          [reduce using rule 64 (declaration_specifier)]
    '('          reduce using rule 5 (star_list_opt)
    '('          [reduce using rule 64 (declaration_specifier)]
    '('          [reduce using rule 121 (pointer_opt)]
    $default     reduce using rule 64 (declaration_specifier)

    star_list_opt              go to state 80
    star_list                  go to state 81
    type_unit                  go to state 82
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45
    declarator                 go to state 83
    pointer_opt                go to state 74
    pointer                    go to state 75
    sdecl                      go to state 84


state 33

   43 external_declaration: struct_or_union_specifier . ';'
   83 type_unit: struct_or_union_specifier .

    ';'  shift, and go to state 85

    $default  reduce using rule 83 (type_unit)


state 34

   44 external_declaration: enum_specifier . ';'
   88 type_unit: enum_specifier .

    ';'  shift, and go to state 86

    $default  reduce using rule 88 (type_unit)


state 35

   42 external_declaration: function_definition .

    $default  reduce using rule 42 (external_declaration)


state 36

   15 external_declaration: type_qualifier_seq_opt . type_specifier sdecl ',' sdecl sdecl_list ';'
   17                     | type_qualifier_seq_opt . type_specifier sdecl '=' initializer ';'
   20                     | type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' version_opt compound_statement
   22                     | type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' version_opt ';'
   30                     | type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';'
   36                     | type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER ';'
   38                     | type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER '=' initializer ';'
   40                     | type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';'
  244 type_qualifier_seq_opt: type_qualifier_seq_opt . KW_CONST
  245                       | type_qualifier_seq_opt . KW_VOLATILE
  246                       | type_qualifier_seq_opt . KW_RESTRICT
  247                       | type_qualifier_seq_opt . KW_UNIQ

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 87
    KW_VOLATILE  shift, and go to state 88
    KW_RESTRICT  shift, and go to state 89
    KW_UNIQ      shift, and go to state 90

    type_unit                  go to state 31
    type_specifier             go to state 91
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45


state 37

   86 type_unit: KW_STRUCT IDENTIFIER .
   95 struct_or_union_specifier: KW_STRUCT IDENTIFIER . '{' struct_declaration_list_opt '}'
   99                          | KW_STRUCT IDENTIFIER .

    '{'  shift, and go to state 92

    IDENTIFIER   reduce using rule 86 (type_unit)
    IDENTIFIER   [reduce using rule 99 (struct_or_union_specifier)]
    TYPE_NAME    reduce using rule 86 (type_unit)
    TYPE_NAME    [reduce using rule 99 (struct_or_union_specifier)]
    KW_VOID      reduce using rule 86 (type_unit)
    KW_VOID      [reduce using rule 99 (struct_or_union_specifier)]
    KW_CHAR      reduce using rule 86 (type_unit)
    KW_CHAR      [reduce using rule 99 (struct_or_union_specifier)]
    KW_SHORT     reduce using rule 86 (type_unit)
    KW_SHORT     [reduce using rule 99 (struct_or_union_specifier)]
    KW_INT       reduce using rule 86 (type_unit)
    KW_INT       [reduce using rule 99 (struct_or_union_specifier)]
    KW_LONG      reduce using rule 86 (type_unit)
    KW_LONG      [reduce using rule 99 (struct_or_union_specifier)]
    KW_SIGNED    reduce using rule 86 (type_unit)
    KW_SIGNED    [reduce using rule 99 (struct_or_union_specifier)]
    KW_UNSIGNED  reduce using rule 86 (type_unit)
    KW_UNSIGNED  [reduce using rule 99 (struct_or_union_specifier)]
    KW_FLOAT     reduce using rule 86 (type_unit)
    KW_FLOAT     [reduce using rule 99 (struct_or_union_specifier)]
    KW_DOUBLE    reduce using rule 86 (type_unit)
    KW_DOUBLE    [reduce using rule 99 (struct_or_union_specifier)]
    KW_STRUCT    reduce using rule 86 (type_unit)
    KW_STRUCT    [reduce using rule 99 (struct_or_union_specifier)]
    KW_UNION     reduce using rule 86 (type_unit)
    KW_UNION     [reduce using rule 99 (struct_or_union_specifier)]
    KW_ENUM      reduce using rule 86 (type_unit)
    KW_ENUM      [reduce using rule 99 (struct_or_union_specifier)]
    KW_CONST     reduce using rule 86 (type_unit)
    KW_CONST     [reduce using rule 99 (struct_or_union_specifier)]
    KW_VOLATILE  reduce using rule 86 (type_unit)
    KW_VOLATILE  [reduce using rule 99 (struct_or_union_specifier)]
    KW_RESTRICT  reduce using rule 86 (type_unit)
    KW_RESTRICT  [reduce using rule 99 (struct_or_union_specifier)]
    KW_INLINE    reduce using rule 86 (type_unit)
    KW_INLINE    [reduce using rule 99 (struct_or_union_specifier)]
    KW_EXTERN    reduce using rule 86 (type_unit)
    KW_EXTERN    [reduce using rule 99 (struct_or_union_specifier)]
    KW_STATIC    reduce using rule 86 (type_unit)
    KW_STATIC    [reduce using rule 99 (struct_or_union_specifier)]
    KW_UNIQ      reduce using rule 86 (type_unit)
    KW_UNIQ      [reduce using rule 99 (struct_or_union_specifier)]
    ':'          reduce using rule 86 (type_unit)
    ':'          [reduce using rule 99 (struct_or_union_specifier)]
    '&'          reduce using rule 86 (type_unit)
    '&'          [reduce using rule 99 (struct_or_union_specifier)]
    '*'          reduce using rule 86 (type_unit)
    '*'          [reduce using rule 99 (struct_or_union_specifier)]
    '%'          reduce using rule 86 (type_unit)
    '%'          [reduce using rule 99 (struct_or_union_specifier)]
    '('          reduce using rule 86 (type_unit)
    '('          [reduce using rule 99 (struct_or_union_specifier)]
    ')'          reduce using rule 86 (type_unit)
    ')'          [reduce using rule 99 (struct_or_union_specifier)]
    '`'          reduce using rule 86 (type_unit)
    '`'          [reduce using rule 99 (struct_or_union_specifier)]
    ','          reduce using rule 86 (type_unit)
    ','          [reduce using rule 99 (struct_or_union_specifier)]
    ';'          reduce using rule 99 (struct_or_union_specifier)
    $default     reduce using rule 86 (type_unit)


state 38

   84 type_unit: KW_STRUCT '{' . struct_declaration_list_opt '}'
   97 struct_or_union_specifier: KW_STRUCT '{' . struct_declaration_list_opt '}'

    '}'       reduce using rule 101 (struct_declaration_list_opt)
    $default  reduce using rule 243 (type_qualifier_seq_opt)

    specifier_qualifier_list     go to state 93
    struct_declaration_list_opt  go to state 94
    struct_declaration_list      go to state 95
    struct_declaration           go to state 96
    type_qualifier_seq_opt       go to state 97


state 39

   87 type_unit: KW_UNION IDENTIFIER .
   96 struct_or_union_specifier: KW_UNION IDENTIFIER . '{' struct_declaration_list_opt '}'
  100                          | KW_UNION IDENTIFIER .

    '{'  shift, and go to state 98

    IDENTIFIER   reduce using rule 87 (type_unit)
    IDENTIFIER   [reduce using rule 100 (struct_or_union_specifier)]
    TYPE_NAME    reduce using rule 87 (type_unit)
    TYPE_NAME    [reduce using rule 100 (struct_or_union_specifier)]
    KW_VOID      reduce using rule 87 (type_unit)
    KW_VOID      [reduce using rule 100 (struct_or_union_specifier)]
    KW_CHAR      reduce using rule 87 (type_unit)
    KW_CHAR      [reduce using rule 100 (struct_or_union_specifier)]
    KW_SHORT     reduce using rule 87 (type_unit)
    KW_SHORT     [reduce using rule 100 (struct_or_union_specifier)]
    KW_INT       reduce using rule 87 (type_unit)
    KW_INT       [reduce using rule 100 (struct_or_union_specifier)]
    KW_LONG      reduce using rule 87 (type_unit)
    KW_LONG      [reduce using rule 100 (struct_or_union_specifier)]
    KW_SIGNED    reduce using rule 87 (type_unit)
    KW_SIGNED    [reduce using rule 100 (struct_or_union_specifier)]
    KW_UNSIGNED  reduce using rule 87 (type_unit)
    KW_UNSIGNED  [reduce using rule 100 (struct_or_union_specifier)]
    KW_FLOAT     reduce using rule 87 (type_unit)
    KW_FLOAT     [reduce using rule 100 (struct_or_union_specifier)]
    KW_DOUBLE    reduce using rule 87 (type_unit)
    KW_DOUBLE    [reduce using rule 100 (struct_or_union_specifier)]
    KW_STRUCT    reduce using rule 87 (type_unit)
    KW_STRUCT    [reduce using rule 100 (struct_or_union_specifier)]
    KW_UNION     reduce using rule 87 (type_unit)
    KW_UNION     [reduce using rule 100 (struct_or_union_specifier)]
    KW_ENUM      reduce using rule 87 (type_unit)
    KW_ENUM      [reduce using rule 100 (struct_or_union_specifier)]
    KW_CONST     reduce using rule 87 (type_unit)
    KW_CONST     [reduce using rule 100 (struct_or_union_specifier)]
    KW_VOLATILE  reduce using rule 87 (type_unit)
    KW_VOLATILE  [reduce using rule 100 (struct_or_union_specifier)]
    KW_RESTRICT  reduce using rule 87 (type_unit)
    KW_RESTRICT  [reduce using rule 100 (struct_or_union_specifier)]
    KW_INLINE    reduce using rule 87 (type_unit)
    KW_INLINE    [reduce using rule 100 (struct_or_union_specifier)]
    KW_EXTERN    reduce using rule 87 (type_unit)
    KW_EXTERN    [reduce using rule 100 (struct_or_union_specifier)]
    KW_STATIC    reduce using rule 87 (type_unit)
    KW_STATIC    [reduce using rule 100 (struct_or_union_specifier)]
    KW_UNIQ      reduce using rule 87 (type_unit)
    KW_UNIQ      [reduce using rule 100 (struct_or_union_specifier)]
    ':'          reduce using rule 87 (type_unit)
    ':'          [reduce using rule 100 (struct_or_union_specifier)]
    '&'          reduce using rule 87 (type_unit)
    '&'          [reduce using rule 100 (struct_or_union_specifier)]
    '*'          reduce using rule 87 (type_unit)
    '*'          [reduce using rule 100 (struct_or_union_specifier)]
    '%'          reduce using rule 87 (type_unit)
    '%'          [reduce using rule 100 (struct_or_union_specifier)]
    '('          reduce using rule 87 (type_unit)
    '('          [reduce using rule 100 (struct_or_union_specifier)]
    ')'          reduce using rule 87 (type_unit)
    ')'          [reduce using rule 100 (struct_or_union_specifier)]
    '`'          reduce using rule 87 (type_unit)
    '`'          [reduce using rule 100 (struct_or_union_specifier)]
    ','          reduce using rule 87 (type_unit)
    ','          [reduce using rule 100 (struct_or_union_specifier)]
    ';'          reduce using rule 100 (struct_or_union_specifier)
    $default     reduce using rule 87 (type_unit)


state 40

   85 type_unit: KW_UNION '{' . struct_declaration_list_opt '}'
   98 struct_or_union_specifier: KW_UNION '{' . struct_declaration_list_opt '}'

    '}'       reduce using rule 101 (struct_declaration_list_opt)
    $default  reduce using rule 243 (type_qualifier_seq_opt)

    specifier_qualifier_list     go to state 93
    struct_declaration_list_opt  go to state 99
    struct_declaration_list      go to state 95
    struct_declaration           go to state 96
    type_qualifier_seq_opt       go to state 97


state 41

  111 enum_specifier: KW_ENUM IDENTIFIER . '{' enumerator_list_opt '}'
  113               | KW_ENUM IDENTIFIER .

    '{'  shift, and go to state 100

    $default  reduce using rule 113 (enum_specifier)


state 42

  112 enum_specifier: KW_ENUM '{' . enumerator_list_opt '}'

    IDENTIFIER  shift, and go to state 101

    $default  reduce using rule 114 (enumerator_list_opt)

    enumerator_list_opt  go to state 102
    enumerator_list      go to state 103
    enumerator           go to state 104


state 43

   27 external_declaration: KW_TYPEDEF type_specifier . star_list_opt IDENTIFIER ';'
   29                     | KW_TYPEDEF type_specifier . star_list_opt IDENTIFIER array_dims ';'
   33                     | KW_TYPEDEF type_specifier . star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   35                     | KW_TYPEDEF type_specifier . star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'
   91 type_specifier: type_specifier . type_unit

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    '&'          shift, and go to state 76
    '*'          shift, and go to state 105
    '%'          shift, and go to state 78
    '`'          shift, and go to state 79

    $default  reduce using rule 5 (star_list_opt)

    star_list_opt              go to state 106
    star_list                  go to state 81
    type_unit                  go to state 82
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45


state 44

   83 type_unit: struct_or_union_specifier .

    $default  reduce using rule 83 (type_unit)


state 45

   88 type_unit: enum_specifier .

    $default  reduce using rule 88 (type_unit)


state 46

   26 external_declaration: KW_TYPEDEF type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER ';'
   28                     | KW_TYPEDEF type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER array_dims ';'
   32                     | KW_TYPEDEF type_qualifier_seq_opt . type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   34                     | KW_TYPEDEF type_qualifier_seq_opt . type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'
  244 type_qualifier_seq_opt: type_qualifier_seq_opt . KW_CONST
  245                       | type_qualifier_seq_opt . KW_VOLATILE
  246                       | type_qualifier_seq_opt . KW_RESTRICT
  247                       | type_qualifier_seq_opt . KW_UNIQ

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 87
    KW_VOLATILE  shift, and go to state 88
    KW_RESTRICT  shift, and go to state 89
    KW_UNIQ      shift, and go to state 90

    type_unit                  go to state 31
    type_specifier             go to state 107
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45


state 47

   48 func_decl_specs: KW_CONST . func_decl_specs

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 47
    KW_VOLATILE  shift, and go to state 48
    KW_RESTRICT  shift, and go to state 49
    KW_INLINE    shift, and go to state 50
    KW_EXTERN    shift, and go to state 51
    KW_STATIC    shift, and go to state 52
    KW_UNIQ      shift, and go to state 53

    func_decl_specs            go to state 54
    type_unit                  go to state 31
    type_specifier             go to state 55
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45


state 48

   49 func_decl_specs: KW_VOLATILE . func_decl_specs

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 47
    KW_VOLATILE  shift, and go to state 48
    KW_RESTRICT  shift, and go to state 49
    KW_INLINE    shift, and go to state 50
    KW_EXTERN    shift, and go to state 51
    KW_STATIC    shift, and go to state 52
    KW_UNIQ      shift, and go to state 53

    func_decl_specs            go to state 56
    type_unit                  go to state 31
    type_specifier             go to state 55
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45


state 49

   50 func_decl_specs: KW_RESTRICT . func_decl_specs

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 47
    KW_VOLATILE  shift, and go to state 48
    KW_RESTRICT  shift, and go to state 49
    KW_INLINE    shift, and go to state 50
    KW_EXTERN    shift, and go to state 51
    KW_STATIC    shift, and go to state 52
    KW_UNIQ      shift, and go to state 53

    func_decl_specs            go to state 57
    type_unit                  go to state 31
    type_specifier             go to state 55
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45


state 50

   51 func_decl_specs: KW_INLINE . func_decl_specs

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 47
    KW_VOLATILE  shift, and go to state 48
    KW_RESTRICT  shift, and go to state 49
    KW_INLINE    shift, and go to state 50
    KW_EXTERN    shift, and go to state 51
    KW_STATIC    shift, and go to state 52
    KW_UNIQ      shift, and go to state 53

    func_decl_specs            go to state 58
    type_unit                  go to state 31
    type_specifier             go to state 55
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45


state 51

   46 func_decl_specs: KW_EXTERN . func_decl_specs

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 47
    KW_VOLATILE  shift, and go to state 48
    KW_RESTRICT  shift, and go to state 49
    KW_INLINE    shift, and go to state 50
    KW_EXTERN    shift, and go to state 51
    KW_STATIC    shift, and go to state 52
    KW_UNIQ      shift, and go to state 53

    func_decl_specs            go to state 59
    type_unit                  go to state 31
    type_specifier             go to state 55
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45


state 52

   47 func_decl_specs: KW_STATIC . func_decl_specs

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 47
    KW_VOLATILE  shift, and go to state 48
    KW_RESTRICT  shift, and go to state 49
    KW_INLINE    shift, and go to state 50
    KW_EXTERN    shift, and go to state 51
    KW_STATIC    shift, and go to state 52
    KW_UNIQ      shift, and go to state 53

    func_decl_specs            go to state 60
    type_unit                  go to state 31
    type_specifier             go to state 55
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45


state 53

   52 func_decl_specs: KW_UNIQ . func_decl_specs

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 47
    KW_VOLATILE  shift, and go to state 48
    KW_RESTRICT  shift, and go to state 49
    KW_INLINE    shift, and go to state 50
    KW_EXTERN    shift, and go to state 51
    KW_STATIC    shift, and go to state 52
    KW_UNIQ      shift, and go to state 53

    func_decl_specs            go to state 61
    type_unit                  go to state 31
    type_specifier             go to state 55
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45


state 54

   48 func_decl_specs: KW_CONST func_decl_specs .

    $default  reduce using rule 48 (func_decl_specs)


state 55

   45 func_decl_specs: type_specifier . star_list_opt
   91 type_specifier: type_specifier . type_unit

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    '&'          shift, and go to state 76
    '*'          shift, and go to state 105
    '%'          shift, and go to state 78
    '`'          shift, and go to state 79

    $default  reduce using rule 5 (star_list_opt)

    star_list_opt              go to state 108
    star_list                  go to state 81
    type_unit                  go to state 82
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45


state 56

   49 func_decl_specs: KW_VOLATILE func_decl_specs .

    $default  reduce using rule 49 (func_decl_specs)


state 57

   50 func_decl_specs: KW_RESTRICT func_decl_specs .

    $default  reduce using rule 50 (func_decl_specs)


state 58

   51 func_decl_specs: KW_INLINE func_decl_specs .

    $default  reduce using rule 51 (func_decl_specs)


state 59

   46 func_decl_specs: KW_EXTERN func_decl_specs .

    $default  reduce using rule 46 (func_decl_specs)


state 60

   47 func_decl_specs: KW_STATIC func_decl_specs .

    $default  reduce using rule 47 (func_decl_specs)


state 61

   52 func_decl_specs: KW_UNIQ func_decl_specs .

    $default  reduce using rule 52 (func_decl_specs)


state 62

   24 external_declaration: func_decl_specs IDENTIFIER . '(' parameter_type_list_opt ')' version_opt compound_statement
   25                     | func_decl_specs IDENTIFIER . '(' parameter_type_list_opt ')' version_opt ';'

    '('  shift, and go to state 109


state 63

   69 type_qualifier: KW_CONST .

    $default  reduce using rule 69 (type_qualifier)


state 64

   70 type_qualifier: KW_VOLATILE .

    $default  reduce using rule 70 (type_qualifier)


state 65

   71 type_qualifier: KW_RESTRICT .

    $default  reduce using rule 71 (type_qualifier)


state 66

   73 function_specifier: KW_INLINE .

    $default  reduce using rule 73 (function_specifier)


state 67

   67 storage_class_specifier: KW_EXTERN .

    $default  reduce using rule 67 (storage_class_specifier)


state 68

   68 storage_class_specifier: KW_STATIC .

    $default  reduce using rule 68 (storage_class_specifier)


state 69

   72 type_qualifier: KW_UNIQ .

    $default  reduce using rule 72 (type_qualifier)


state 70

  123 pointer: '*' .
  124        | '*' . type_qualifier
  125        | '*' . pointer
  126        | '*' . type_qualifier pointer

    KW_CONST     shift, and go to state 63
    KW_VOLATILE  shift, and go to state 64
    KW_RESTRICT  shift, and go to state 65
    KW_UNIQ      shift, and go to state 69
    '*'          shift, and go to state 70

    $default  reduce using rule 123 (pointer)

    type_qualifier  go to state 110
    pointer         go to state 111


state 71

   62 declaration_specifiers: declaration_specifiers declaration_specifier .

    $default  reduce using rule 62 (declaration_specifiers)


state 72

   64 declaration_specifier: type_specifier .
   91 type_specifier: type_specifier . type_unit

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15

    TYPE_NAME    [reduce using rule 64 (declaration_specifier)]
    KW_VOID      [reduce using rule 64 (declaration_specifier)]
    KW_CHAR      [reduce using rule 64 (declaration_specifier)]
    KW_SHORT     [reduce using rule 64 (declaration_specifier)]
    KW_INT       [reduce using rule 64 (declaration_specifier)]
    KW_LONG      [reduce using rule 64 (declaration_specifier)]
    KW_SIGNED    [reduce using rule 64 (declaration_specifier)]
    KW_UNSIGNED  [reduce using rule 64 (declaration_specifier)]
    KW_FLOAT     [reduce using rule 64 (declaration_specifier)]
    KW_DOUBLE    [reduce using rule 64 (declaration_specifier)]
    KW_STRUCT    [reduce using rule 64 (declaration_specifier)]
    KW_UNION     [reduce using rule 64 (declaration_specifier)]
    KW_ENUM      [reduce using rule 64 (declaration_specifier)]
    $default     reduce using rule 64 (declaration_specifier)

    type_unit                  go to state 82
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45


state 73

  142 function_definition: declaration_specifiers declarator . compound_statement

    '{'  shift, and go to state 112

    compound_statement  go to state 113


state 74

  120 declarator: pointer_opt . direct_declarator

    IDENTIFIER  shift, and go to state 114
    '('         shift, and go to state 115

    direct_declarator  go to state 116


state 75

  122 pointer_opt: pointer .

    $default  reduce using rule 122 (pointer_opt)


state 76

    9 star_list: '&' .

    $default  reduce using rule 9 (star_list)


state 77

    7 star_list: '*' .
  123 pointer: '*' .
  124        | '*' . type_qualifier
  125        | '*' . pointer
  126        | '*' . type_qualifier pointer

    KW_CONST     shift, and go to state 63
    KW_VOLATILE  shift, and go to state 64
    KW_RESTRICT  shift, and go to state 65
    KW_UNIQ      shift, and go to state 69

    IDENTIFIER  reduce using rule 7 (star_list)
    IDENTIFIER  [reduce using rule 123 (pointer)]
    '('         reduce using rule 7 (star_list)
    '('         [reduce using rule 123 (pointer)]
    $default    reduce using rule 7 (star_list)

    type_qualifier  go to state 110
    pointer         go to state 111


state 78

    8 star_list: '%' .

    $default  reduce using rule 8 (star_list)


state 79

   10 star_list: '`' .

    $default  reduce using rule 10 (star_list)


state 80

   21 external_declaration: type_specifier star_list_opt . IDENTIFIER '(' parameter_type_list_opt ')' version_opt compound_statement
   23                     | type_specifier star_list_opt . IDENTIFIER '(' parameter_type_list_opt ')' version_opt ';'
   31                     | type_specifier star_list_opt . IDENTIFIER '=' assignment_expression ';'
   37                     | type_specifier star_list_opt . IDENTIFIER ';'
   39                     | type_specifier star_list_opt . IDENTIFIER '=' initializer ';'
   41                     | type_specifier star_list_opt . IDENTIFIER array_dims '=' initializer ';'
   45 func_decl_specs: type_specifier star_list_opt .
  168 sdecl: star_list_opt . sdir

    IDENTIFIER  shift, and go to state 117
    '('         shift, and go to state 118

    IDENTIFIER  [reduce using rule 45 (func_decl_specs)]

    sdir  go to state 119


state 81

    6 star_list_opt: star_list .
   11 star_list: star_list . '*'
   12          | star_list . '%'
   13          | star_list . '&'
   14          | star_list . '`'

    '&'  shift, and go to state 120
    '*'  shift, and go to state 121
    '%'  shift, and go to state 122
    '`'  shift, and go to state 123

    $default  reduce using rule 6 (star_list_opt)


state 82

   91 type_specifier: type_specifier type_unit .

    $default  reduce using rule 91 (type_specifier)


state 83

  143 function_definition: type_specifier declarator . compound_statement

    '{'  shift, and go to state 112

    compound_statement  go to state 124


state 84

   16 external_declaration: type_specifier sdecl . ',' sdecl sdecl_list ';'
   18                     | type_specifier sdecl . '=' initializer ';'

    '='  shift, and go to state 125
    ','  shift, and go to state 126


state 85

   43 external_declaration: struct_or_union_specifier ';' .

    $default  reduce using rule 43 (external_declaration)


state 86

   44 external_declaration: enum_specifier ';' .

    $default  reduce using rule 44 (external_declaration)


state 87

  244 type_qualifier_seq_opt: type_qualifier_seq_opt KW_CONST .

    $default  reduce using rule 244 (type_qualifier_seq_opt)


state 88

  245 type_qualifier_seq_opt: type_qualifier_seq_opt KW_VOLATILE .

    $default  reduce using rule 245 (type_qualifier_seq_opt)


state 89

  246 type_qualifier_seq_opt: type_qualifier_seq_opt KW_RESTRICT .

    $default  reduce using rule 246 (type_qualifier_seq_opt)


state 90

  247 type_qualifier_seq_opt: type_qualifier_seq_opt KW_UNIQ .

    $default  reduce using rule 247 (type_qualifier_seq_opt)


state 91

   15 external_declaration: type_qualifier_seq_opt type_specifier . sdecl ',' sdecl sdecl_list ';'
   17                     | type_qualifier_seq_opt type_specifier . sdecl '=' initializer ';'
   20                     | type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' version_opt compound_statement
   22                     | type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' version_opt ';'
   30                     | type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER '=' assignment_expression ';'
   36                     | type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER ';'
   38                     | type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER '=' initializer ';'
   40                     | type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER array_dims '=' initializer ';'
   91 type_specifier: type_specifier . type_unit

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    '&'          shift, and go to state 76
    '*'          shift, and go to state 105
    '%'          shift, and go to state 78
    '`'          shift, and go to state 79

    $default  reduce using rule 5 (star_list_opt)

    star_list_opt              go to state 127
    star_list                  go to state 81
    type_unit                  go to state 82
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45
    sdecl                      go to state 128


state 92

   95 struct_or_union_specifier: KW_STRUCT IDENTIFIER '{' . struct_declaration_list_opt '}'

    '}'       reduce using rule 101 (struct_declaration_list_opt)
    $default  reduce using rule 243 (type_qualifier_seq_opt)

    specifier_qualifier_list     go to state 93
    struct_declaration_list_opt  go to state 129
    struct_declaration_list      go to state 95
    struct_declaration           go to state 96
    type_qualifier_seq_opt       go to state 97


state 93

  105 struct_declaration: specifier_qualifier_list . struct_declarator_list ';'

    ':'  shift, and go to state 130
    '&'  shift, and go to state 76
    '*'  shift, and go to state 105
    '%'  shift, and go to state 78
    '`'  shift, and go to state 79

    $default  reduce using rule 5 (star_list_opt)

    star_list_opt           go to state 131
    star_list               go to state 81
    struct_declarator_list  go to state 132
    struct_declarator       go to state 133
    sdecl                   go to state 134


state 94

   84 type_unit: KW_STRUCT '{' struct_declaration_list_opt . '}'
   97 struct_or_union_specifier: KW_STRUCT '{' struct_declaration_list_opt . '}'

    '}'  shift, and go to state 135


state 95

  102 struct_declaration_list_opt: struct_declaration_list .
  104 struct_declaration_list: struct_declaration_list . struct_declaration

    '}'       reduce using rule 102 (struct_declaration_list_opt)
    $default  reduce using rule 243 (type_qualifier_seq_opt)

    specifier_qualifier_list  go to state 93
    struct_declaration        go to state 136
    type_qualifier_seq_opt    go to state 97


state 96

  103 struct_declaration_list: struct_declaration .

    $default  reduce using rule 103 (struct_declaration_list)


state 97

   92 specifier_qualifier_list: type_qualifier_seq_opt . type_specifier
  244 type_qualifier_seq_opt: type_qualifier_seq_opt . KW_CONST
  245                       | type_qualifier_seq_opt . KW_VOLATILE
  246                       | type_qualifier_seq_opt . KW_RESTRICT
  247                       | type_qualifier_seq_opt . KW_UNIQ

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 87
    KW_VOLATILE  shift, and go to state 88
    KW_RESTRICT  shift, and go to state 89
    KW_UNIQ      shift, and go to state 90

    type_unit                  go to state 31
    type_specifier             go to state 137
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45


state 98

   96 struct_or_union_specifier: KW_UNION IDENTIFIER '{' . struct_declaration_list_opt '}'

    '}'       reduce using rule 101 (struct_declaration_list_opt)
    $default  reduce using rule 243 (type_qualifier_seq_opt)

    specifier_qualifier_list     go to state 93
    struct_declaration_list_opt  go to state 138
    struct_declaration_list      go to state 95
    struct_declaration           go to state 96
    type_qualifier_seq_opt       go to state 97


state 99

   85 type_unit: KW_UNION '{' struct_declaration_list_opt . '}'
   98 struct_or_union_specifier: KW_UNION '{' struct_declaration_list_opt . '}'

    '}'  shift, and go to state 139


state 100

  111 enum_specifier: KW_ENUM IDENTIFIER '{' . enumerator_list_opt '}'

    IDENTIFIER  shift, and go to state 101

    $default  reduce using rule 114 (enumerator_list_opt)

    enumerator_list_opt  go to state 140
    enumerator_list      go to state 103
    enumerator           go to state 104


state 101

  118 enumerator: IDENTIFIER .
  119           | IDENTIFIER . '=' constant_expression

    '='  shift, and go to state 141

    $default  reduce using rule 118 (enumerator)


state 102

  112 enum_specifier: KW_ENUM '{' enumerator_list_opt . '}'

    '}'  shift, and go to state 142


state 103

  115 enumerator_list_opt: enumerator_list .
  117 enumerator_list: enumerator_list . ',' enumerator

    ','  shift, and go to state 143

    $default  reduce using rule 115 (enumerator_list_opt)


state 104

  116 enumerator_list: enumerator .

    $default  reduce using rule 116 (enumerator_list)


state 105

    7 star_list: '*' .

    $default  reduce using rule 7 (star_list)


state 106

   27 external_declaration: KW_TYPEDEF type_specifier star_list_opt . IDENTIFIER ';'
   29                     | KW_TYPEDEF type_specifier star_list_opt . IDENTIFIER array_dims ';'
   33                     | KW_TYPEDEF type_specifier star_list_opt . '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   35                     | KW_TYPEDEF type_specifier star_list_opt . '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'

    IDENTIFIER  shift, and go to state 144
    '('         shift, and go to state 145


state 107

   26 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER ';'
   28                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER array_dims ';'
   32                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier . star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   34                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier . star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'
   91 type_specifier: type_specifier . type_unit

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    '&'          shift, and go to state 76
    '*'          shift, and go to state 105
    '%'          shift, and go to state 78
    '`'          shift, and go to state 79

    $default  reduce using rule 5 (star_list_opt)

    star_list_opt              go to state 146
    star_list                  go to state 81
    type_unit                  go to state 82
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45


state 108

   45 func_decl_specs: type_specifier star_list_opt .

    $default  reduce using rule 45 (func_decl_specs)


state 109

   24 external_declaration: func_decl_specs IDENTIFIER '(' . parameter_type_list_opt ')' version_opt compound_statement
   25                     | func_decl_specs IDENTIFIER '(' . parameter_type_list_opt ')' version_opt ';'

    ')'       reduce using rule 53 (parameter_type_list_opt)
    $default  reduce using rule 243 (type_qualifier_seq_opt)

    parameter_type_list_opt  go to state 147
    parameter_type_list      go to state 148
    parameter_list           go to state 149
    parameter_declaration    go to state 150
    type_qualifier_seq_opt   go to state 151


state 110

  124 pointer: '*' type_qualifier .
  126        | '*' type_qualifier . pointer

    '*'  shift, and go to state 70

    $default  reduce using rule 124 (pointer)

    pointer  go to state 152


state 111

  125 pointer: '*' pointer .

    $default  reduce using rule 125 (pointer)


state 112

  149 compound_statement: '{' . block_item_list_opt '}'

    IDENTIFIER        shift, and go to state 153
    TYPE_NAME         shift, and go to state 3
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_VOID           shift, and go to state 4
    KW_CHAR           shift, and go to state 5
    KW_SHORT          shift, and go to state 6
    KW_INT            shift, and go to state 7
    KW_LONG           shift, and go to state 8
    KW_SIGNED         shift, and go to state 9
    KW_UNSIGNED       shift, and go to state 10
    KW_FLOAT          shift, and go to state 11
    KW_DOUBLE         shift, and go to state 12
    KW_STRUCT         shift, and go to state 13
    KW_UNION          shift, and go to state 14
    KW_ENUM           shift, and go to state 15
    KW_TYPEDEF        shift, and go to state 158
    KW_RETURN         shift, and go to state 159
    KW_IF             shift, and go to state 160
    KW_WHILE          shift, and go to state 161
    KW_FOR            shift, and go to state 162
    KW_DO             shift, and go to state 163
    KW_SWITCH         shift, and go to state 164
    KW_BREAK          shift, and go to state 165
    KW_CONTINUE       shift, and go to state 166
    KW_GOTO           shift, and go to state 167
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175
    ';'               shift, and go to state 176
    '{'               shift, and go to state 112

    TYPE_NAME    [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_VOID      [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_CHAR      [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_SHORT     [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_INT       [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_LONG      [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_SIGNED    [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_UNSIGNED  [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_FLOAT     [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_DOUBLE    [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_STRUCT    [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_UNION     [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_ENUM      [reduce using rule 243 (type_qualifier_seq_opt)]
    '}'          reduce using rule 150 (block_item_list_opt)
    $default     reduce using rule 243 (type_qualifier_seq_opt)

    type_unit                  go to state 31
    type_specifier             go to state 177
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45
    statement                  go to state 178
    compound_statement         go to state 179
    block_item_list_opt        go to state 180
    block_item_list            go to state 181
    block_item                 go to state 182
    expression_statement       go to state 183
    selection_statement        go to state 184
    iteration_statement        go to state 185
    jump_statement             go to state 186
    expression                 go to state 187
    assignment_expression      go to state 188
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    type_qualifier_seq_opt     go to state 201
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 113

  142 function_definition: declaration_specifiers declarator compound_statement .

    $default  reduce using rule 142 (function_definition)


state 114

  127 direct_declarator: IDENTIFIER .

    $default  reduce using rule 127 (direct_declarator)


state 115

  128 direct_declarator: '(' . declarator ')'

    '*'  shift, and go to state 70

    $default  reduce using rule 121 (pointer_opt)

    declarator   go to state 204
    pointer_opt  go to state 74
    pointer      go to state 75


state 116

  120 declarator: pointer_opt direct_declarator .
  129 direct_declarator: direct_declarator . '[' assignment_expression_opt ']'
  130                  | direct_declarator . '(' parameter_type_list_opt ')'
  131                  | direct_declarator . '(' identifier_list_opt ')'

    '('  shift, and go to state 205
    '['  shift, and go to state 206

    $default  reduce using rule 120 (declarator)


state 117

   21 external_declaration: type_specifier star_list_opt IDENTIFIER . '(' parameter_type_list_opt ')' version_opt compound_statement
   23                     | type_specifier star_list_opt IDENTIFIER . '(' parameter_type_list_opt ')' version_opt ';'
   31                     | type_specifier star_list_opt IDENTIFIER . '=' assignment_expression ';'
   37                     | type_specifier star_list_opt IDENTIFIER . ';'
   39                     | type_specifier star_list_opt IDENTIFIER . '=' initializer ';'
   41                     | type_specifier star_list_opt IDENTIFIER . array_dims '=' initializer ';'
  169 sdir: IDENTIFIER .

    '('  shift, and go to state 208
    ';'  shift, and go to state 210

    $default  reduce using rule 169 (sdir)

    array_dims  go to state 211


state 118

  170 sdir: '(' . sdecl ')'
  171     | '(' . sdecl ')' '(' fp_param_list_opt ')'

    '&'  shift, and go to state 76
    '*'  shift, and go to state 105
    '%'  shift, and go to state 78
    '`'  shift, and go to state 79

    $default  reduce using rule 5 (star_list_opt)

    star_list_opt  go to state 131
    star_list      go to state 81
    sdecl          go to state 212


state 119

  168 sdecl: star_list_opt sdir .
  172 sdir: sdir . '[' assignment_expression_opt ']'

    '['  shift, and go to state 213

    $default  reduce using rule 168 (sdecl)


state 120

   13 star_list: star_list '&' .

    $default  reduce using rule 13 (star_list)


state 121

   11 star_list: star_list '*' .

    $default  reduce using rule 11 (star_list)


state 122

   12 star_list: star_list '%' .

    $default  reduce using rule 12 (star_list)


state 123

   14 star_list: star_list '`' .

    $default  reduce using rule 14 (star_list)


state 124

  143 function_definition: type_specifier declarator compound_statement .

    $default  reduce using rule 143 (function_definition)


state 125

   18 external_declaration: type_specifier sdecl '=' . initializer ';'

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175
    '{'               shift, and go to state 214

    assignment_expression      go to state 215
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203
    initializer                go to state 216


state 126

   16 external_declaration: type_specifier sdecl ',' . sdecl sdecl_list ';'

    '&'  shift, and go to state 76
    '*'  shift, and go to state 105
    '%'  shift, and go to state 78
    '`'  shift, and go to state 79

    $default  reduce using rule 5 (star_list_opt)

    star_list_opt  go to state 131
    star_list      go to state 81
    sdecl          go to state 217


state 127

   20 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER '(' parameter_type_list_opt ')' version_opt compound_statement
   22                     | type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER '(' parameter_type_list_opt ')' version_opt ';'
   30                     | type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER '=' assignment_expression ';'
   36                     | type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER ';'
   38                     | type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER '=' initializer ';'
   40                     | type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER array_dims '=' initializer ';'
  168 sdecl: star_list_opt . sdir

    IDENTIFIER  shift, and go to state 218
    '('         shift, and go to state 118

    sdir  go to state 119


state 128

   15 external_declaration: type_qualifier_seq_opt type_specifier sdecl . ',' sdecl sdecl_list ';'
   17                     | type_qualifier_seq_opt type_specifier sdecl . '=' initializer ';'

    '='  shift, and go to state 219
    ','  shift, and go to state 220


state 129

   95 struct_or_union_specifier: KW_STRUCT IDENTIFIER '{' struct_declaration_list_opt . '}'

    '}'  shift, and go to state 221


state 130

  109 struct_declarator: ':' . constant_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    conditional_expression     go to state 222
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 223
    postfix_expression         go to state 202
    primary_expression         go to state 203
    constant_expression        go to state 224


state 131

  168 sdecl: star_list_opt . sdir

    IDENTIFIER  shift, and go to state 225
    '('         shift, and go to state 118

    sdir  go to state 119


state 132

  105 struct_declaration: specifier_qualifier_list struct_declarator_list . ';'
  107 struct_declarator_list: struct_declarator_list . ',' struct_declarator

    ','  shift, and go to state 226
    ';'  shift, and go to state 227


state 133

  106 struct_declarator_list: struct_declarator .

    $default  reduce using rule 106 (struct_declarator_list)


state 134

  108 struct_declarator: sdecl .
  110                  | sdecl . ':' constant_expression

    ':'  shift, and go to state 228

    $default  reduce using rule 108 (struct_declarator)


state 135

   84 type_unit: KW_STRUCT '{' struct_declaration_list_opt '}' .
   97 struct_or_union_specifier: KW_STRUCT '{' struct_declaration_list_opt '}' .

    IDENTIFIER   reduce using rule 84 (type_unit)
    IDENTIFIER   [reduce using rule 97 (struct_or_union_specifier)]
    TYPE_NAME    reduce using rule 84 (type_unit)
    TYPE_NAME    [reduce using rule 97 (struct_or_union_specifier)]
    KW_VOID      reduce using rule 84 (type_unit)
    KW_VOID      [reduce using rule 97 (struct_or_union_specifier)]
    KW_CHAR      reduce using rule 84 (type_unit)
    KW_CHAR      [reduce using rule 97 (struct_or_union_specifier)]
    KW_SHORT     reduce using rule 84 (type_unit)
    KW_SHORT     [reduce using rule 97 (struct_or_union_specifier)]
    KW_INT       reduce using rule 84 (type_unit)
    KW_INT       [reduce using rule 97 (struct_or_union_specifier)]
    KW_LONG      reduce using rule 84 (type_unit)
    KW_LONG      [reduce using rule 97 (struct_or_union_specifier)]
    KW_SIGNED    reduce using rule 84 (type_unit)
    KW_SIGNED    [reduce using rule 97 (struct_or_union_specifier)]
    KW_UNSIGNED  reduce using rule 84 (type_unit)
    KW_UNSIGNED  [reduce using rule 97 (struct_or_union_specifier)]
    KW_FLOAT     reduce using rule 84 (type_unit)
    KW_FLOAT     [reduce using rule 97 (struct_or_union_specifier)]
    KW_DOUBLE    reduce using rule 84 (type_unit)
    KW_DOUBLE    [reduce using rule 97 (struct_or_union_specifier)]
    KW_STRUCT    reduce using rule 84 (type_unit)
    KW_STRUCT    [reduce using rule 97 (struct_or_union_specifier)]
    KW_UNION     reduce using rule 84 (type_unit)
    KW_UNION     [reduce using rule 97 (struct_or_union_specifier)]
    KW_ENUM      reduce using rule 84 (type_unit)
    KW_ENUM      [reduce using rule 97 (struct_or_union_specifier)]
    KW_CONST     reduce using rule 84 (type_unit)
    KW_CONST     [reduce using rule 97 (struct_or_union_specifier)]
    KW_VOLATILE  reduce using rule 84 (type_unit)
    KW_VOLATILE  [reduce using rule 97 (struct_or_union_specifier)]
    KW_RESTRICT  reduce using rule 84 (type_unit)
    KW_RESTRICT  [reduce using rule 97 (struct_or_union_specifier)]
    KW_INLINE    reduce using rule 84 (type_unit)
    KW_INLINE    [reduce using rule 97 (struct_or_union_specifier)]
    KW_EXTERN    reduce using rule 84 (type_unit)
    KW_EXTERN    [reduce using rule 97 (struct_or_union_specifier)]
    KW_STATIC    reduce using rule 84 (type_unit)
    KW_STATIC    [reduce using rule 97 (struct_or_union_specifier)]
    KW_UNIQ      reduce using rule 84 (type_unit)
    KW_UNIQ      [reduce using rule 97 (struct_or_union_specifier)]
    ':'          reduce using rule 84 (type_unit)
    ':'          [reduce using rule 97 (struct_or_union_specifier)]
    '&'          reduce using rule 84 (type_unit)
    '&'          [reduce using rule 97 (struct_or_union_specifier)]
    '*'          reduce using rule 84 (type_unit)
    '*'          [reduce using rule 97 (struct_or_union_specifier)]
    '%'          reduce using rule 84 (type_unit)
    '%'          [reduce using rule 97 (struct_or_union_specifier)]
    '('          reduce using rule 84 (type_unit)
    '('          [reduce using rule 97 (struct_or_union_specifier)]
    ')'          reduce using rule 84 (type_unit)
    ')'          [reduce using rule 97 (struct_or_union_specifier)]
    '`'          reduce using rule 84 (type_unit)
    '`'          [reduce using rule 97 (struct_or_union_specifier)]
    ','          reduce using rule 84 (type_unit)
    ','          [reduce using rule 97 (struct_or_union_specifier)]
    ';'          reduce using rule 97 (struct_or_union_specifier)
    $default     reduce using rule 84 (type_unit)


state 136

  104 struct_declaration_list: struct_declaration_list struct_declaration .

    $default  reduce using rule 104 (struct_declaration_list)


state 137

   91 type_specifier: type_specifier . type_unit
   92 specifier_qualifier_list: type_qualifier_seq_opt type_specifier .

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15

    $default  reduce using rule 92 (specifier_qualifier_list)

    type_unit                  go to state 82
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45


state 138

   96 struct_or_union_specifier: KW_UNION IDENTIFIER '{' struct_declaration_list_opt . '}'

    '}'  shift, and go to state 229


state 139

   85 type_unit: KW_UNION '{' struct_declaration_list_opt '}' .
   98 struct_or_union_specifier: KW_UNION '{' struct_declaration_list_opt '}' .

    IDENTIFIER   reduce using rule 85 (type_unit)
    IDENTIFIER   [reduce using rule 98 (struct_or_union_specifier)]
    TYPE_NAME    reduce using rule 85 (type_unit)
    TYPE_NAME    [reduce using rule 98 (struct_or_union_specifier)]
    KW_VOID      reduce using rule 85 (type_unit)
    KW_VOID      [reduce using rule 98 (struct_or_union_specifier)]
    KW_CHAR      reduce using rule 85 (type_unit)
    KW_CHAR      [reduce using rule 98 (struct_or_union_specifier)]
    KW_SHORT     reduce using rule 85 (type_unit)
    KW_SHORT     [reduce using rule 98 (struct_or_union_specifier)]
    KW_INT       reduce using rule 85 (type_unit)
    KW_INT       [reduce using rule 98 (struct_or_union_specifier)]
    KW_LONG      reduce using rule 85 (type_unit)
    KW_LONG      [reduce using rule 98 (struct_or_union_specifier)]
    KW_SIGNED    reduce using rule 85 (type_unit)
    KW_SIGNED    [reduce using rule 98 (struct_or_union_specifier)]
    KW_UNSIGNED  reduce using rule 85 (type_unit)
    KW_UNSIGNED  [reduce using rule 98 (struct_or_union_specifier)]
    KW_FLOAT     reduce using rule 85 (type_unit)
    KW_FLOAT     [reduce using rule 98 (struct_or_union_specifier)]
    KW_DOUBLE    reduce using rule 85 (type_unit)
    KW_DOUBLE    [reduce using rule 98 (struct_or_union_specifier)]
    KW_STRUCT    reduce using rule 85 (type_unit)
    KW_STRUCT    [reduce using rule 98 (struct_or_union_specifier)]
    KW_UNION     reduce using rule 85 (type_unit)
    KW_UNION     [reduce using rule 98 (struct_or_union_specifier)]
    KW_ENUM      reduce using rule 85 (type_unit)
    KW_ENUM      [reduce using rule 98 (struct_or_union_specifier)]
    KW_CONST     reduce using rule 85 (type_unit)
    KW_CONST     [reduce using rule 98 (struct_or_union_specifier)]
    KW_VOLATILE  reduce using rule 85 (type_unit)
    KW_VOLATILE  [reduce using rule 98 (struct_or_union_specifier)]
    KW_RESTRICT  reduce using rule 85 (type_unit)
    KW_RESTRICT  [reduce using rule 98 (struct_or_union_specifier)]
    KW_INLINE    reduce using rule 85 (type_unit)
    KW_INLINE    [reduce using rule 98 (struct_or_union_specifier)]
    KW_EXTERN    reduce using rule 85 (type_unit)
    KW_EXTERN    [reduce using rule 98 (struct_or_union_specifier)]
    KW_STATIC    reduce using rule 85 (type_unit)
    KW_STATIC    [reduce using rule 98 (struct_or_union_specifier)]
    KW_UNIQ      reduce using rule 85 (type_unit)
    KW_UNIQ      [reduce using rule 98 (struct_or_union_specifier)]
    ':'          reduce using rule 85 (type_unit)
    ':'          [reduce using rule 98 (struct_or_union_specifier)]
    '&'          reduce using rule 85 (type_unit)
    '&'          [reduce using rule 98 (struct_or_union_specifier)]
    '*'          reduce using rule 85 (type_unit)
    '*'          [reduce using rule 98 (struct_or_union_specifier)]
    '%'          reduce using rule 85 (type_unit)
    '%'          [reduce using rule 98 (struct_or_union_specifier)]
    '('          reduce using rule 85 (type_unit)
    '('          [reduce using rule 98 (struct_or_union_specifier)]
    ')'          reduce using rule 85 (type_unit)
    ')'          [reduce using rule 98 (struct_or_union_specifier)]
    '`'          reduce using rule 85 (type_unit)
    '`'          [reduce using rule 98 (struct_or_union_specifier)]
    ','          reduce using rule 85 (type_unit)
    ','          [reduce using rule 98 (struct_or_union_specifier)]
    ';'          reduce using rule 98 (struct_or_union_specifier)
    $default     reduce using rule 85 (type_unit)


state 140

  111 enum_specifier: KW_ENUM IDENTIFIER '{' enumerator_list_opt . '}'

    '}'  shift, and go to state 230


state 141

  119 enumerator: IDENTIFIER '=' . constant_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    conditional_expression     go to state 222
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 223
    postfix_expression         go to state 202
    primary_expression         go to state 203
    constant_expression        go to state 231


state 142

  112 enum_specifier: KW_ENUM '{' enumerator_list_opt '}' .

    $default  reduce using rule 112 (enum_specifier)


state 143

  117 enumerator_list: enumerator_list ',' . enumerator

    IDENTIFIER  shift, and go to state 101

    enumerator  go to state 232


state 144

   27 external_declaration: KW_TYPEDEF type_specifier star_list_opt IDENTIFIER . ';'
   29                     | KW_TYPEDEF type_specifier star_list_opt IDENTIFIER . array_dims ';'

    '['  shift, and go to state 209
    ';'  shift, and go to state 233

    array_dims  go to state 234


state 145

   33 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' . '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   35                     | KW_TYPEDEF type_specifier star_list_opt '(' . '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'

    '*'  shift, and go to state 235


state 146

   26 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER ';'
   28                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER array_dims ';'
   32                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt . '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   34                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt . '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'

    IDENTIFIER  shift, and go to state 236
    '('         shift, and go to state 237


state 147

   24 external_declaration: func_decl_specs IDENTIFIER '(' parameter_type_list_opt . ')' version_opt compound_statement
   25                     | func_decl_specs IDENTIFIER '(' parameter_type_list_opt . ')' version_opt ';'

    ')'  shift, and go to state 238


state 148

   54 parameter_type_list_opt: parameter_type_list .

    $default  reduce using rule 54 (parameter_type_list_opt)


state 149

   55 parameter_type_list: parameter_list .
   56                    | parameter_list . ',' ELLIPSIS
   58 parameter_list: parameter_list . ',' parameter_declaration

    ','  shift, and go to state 239

    $default  reduce using rule 55 (parameter_type_list)


state 150

   57 parameter_list: parameter_declaration .

    $default  reduce using rule 57 (parameter_list)


state 151

   59 parameter_declaration: type_qualifier_seq_opt . type_specifier sdecl
   60                      | type_qualifier_seq_opt . type_specifier
  244 type_qualifier_seq_opt: type_qualifier_seq_opt . KW_CONST
  245                       | type_qualifier_seq_opt . KW_VOLATILE
  246                       | type_qualifier_seq_opt . KW_RESTRICT
  247                       | type_qualifier_seq_opt . KW_UNIQ

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 87
    KW_VOLATILE  shift, and go to state 88
    KW_RESTRICT  shift, and go to state 89
    KW_UNIQ      shift, and go to state 90

    type_unit                  go to state 31
    type_specifier             go to state 240
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45


state 152

  126 pointer: '*' type_qualifier pointer .

    $default  reduce using rule 126 (pointer)


state 153

  259 primary_expression: IDENTIFIER .

    $default  reduce using rule 259 (primary_expression)


state 154

  263 primary_expression: STRING_LITERAL .

    $default  reduce using rule 263 (primary_expression)


state 155

  260 primary_expression: INTEGER_CONSTANT .

    $default  reduce using rule 260 (primary_expression)


state 156

  261 primary_expression: FLOAT_CONSTANT .

    $default  reduce using rule 261 (primary_expression)


state 157

  262 primary_expression: CHAR_CONSTANT .

    $default  reduce using rule 262 (primary_expression)


state 158

  165 block_item: KW_TYPEDEF . type_specifier star_list_opt IDENTIFIER ';'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15

    type_unit                  go to state 31
    type_specifier             go to state 241
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45


state 159

  181 jump_statement: KW_RETURN . expression_opt ';'

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    $default  reduce using rule 185 (expression_opt)

    expression_opt             go to state 242
    expression                 go to state 243
    assignment_expression      go to state 188
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 160

  175 selection_statement: KW_IF . '(' expression ')' statement
  176                    | KW_IF . '(' expression ')' statement KW_ELSE statement

    '('  shift, and go to state 244


state 161

  178 iteration_statement: KW_WHILE . '(' expression ')' statement

    '('  shift, and go to state 245


state 162

  180 iteration_statement: KW_FOR . '(' expression_opt ';' expression_opt ';' expression_opt ')' statement

    '('  shift, and go to state 246


state 163

  179 iteration_statement: KW_DO . statement KW_WHILE '(' expression ')' ';'

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_RETURN         shift, and go to state 159
    KW_IF             shift, and go to state 160
    KW_WHILE          shift, and go to state 161
    KW_FOR            shift, and go to state 162
    KW_DO             shift, and go to state 163
    KW_SWITCH         shift, and go to state 164
    KW_BREAK          shift, and go to state 165
    KW_CONTINUE       shift, and go to state 166
    KW_GOTO           shift, and go to state 167
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175
    ';'               shift, and go to state 176
    '{'               shift, and go to state 112

    statement                  go to state 247
    compound_statement         go to state 179
    expression_statement       go to state 183
    selection_statement        go to state 184
    iteration_statement        go to state 185
    jump_statement             go to state 186
    expression                 go to state 187
    assignment_expression      go to state 188
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 164

  177 selection_statement: KW_SWITCH . '(' expression ')' statement

    '('  shift, and go to state 248


state 165

  182 jump_statement: KW_BREAK . ';'

    ';'  shift, and go to state 249


state 166

  183 jump_statement: KW_CONTINUE . ';'

    ';'  shift, and go to state 250


state 167

  184 jump_statement: KW_GOTO . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 251


state 168

  240 unary_expression: KW_SIZEOF . unary_expression
  241                 | KW_SIZEOF . '(' type_specifier ')'

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 252

    unary_expression    go to state 253
    postfix_expression  go to state 202
    primary_expression  go to state 203


state 169

  234 unary_expression: INC . unary_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    unary_expression    go to state 254
    postfix_expression  go to state 202
    primary_expression  go to state 203


state 170

  235 unary_expression: DEC . unary_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    unary_expression    go to state 255
    postfix_expression  go to state 202
    primary_expression  go to state 203


state 171

  236 unary_expression: '+' . unary_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    unary_expression    go to state 256
    postfix_expression  go to state 202
    primary_expression  go to state 203


state 172

  237 unary_expression: '-' . unary_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    unary_expression    go to state 257
    postfix_expression  go to state 202
    primary_expression  go to state 203


state 173

  238 unary_expression: '!' . unary_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    unary_expression    go to state 258
    postfix_expression  go to state 202
    primary_expression  go to state 203


state 174

  239 unary_expression: '~' . unary_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    unary_expression    go to state 259
    postfix_expression  go to state 202
    primary_expression  go to state 203


state 175

  242 unary_expression: '(' . type_qualifier_seq_opt type_specifier star_list_opt ')' unary_expression
  264 primary_expression: '(' . expression ')'

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    $default  reduce using rule 243 (type_qualifier_seq_opt)

    expression                 go to state 260
    assignment_expression      go to state 188
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    type_qualifier_seq_opt     go to state 261
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 176

  173 expression_statement: ';' .

    $default  reduce using rule 173 (expression_statement)


state 177

   91 type_specifier: type_specifier . type_unit
  154 block_item: type_specifier . star_list_opt IDENTIFIER ';'
  157           | type_specifier . star_list_opt IDENTIFIER '=' assignment_expression ';'
  159           | type_specifier . star_list_opt IDENTIFIER '=' initializer ';'
  161           | type_specifier . star_list_opt IDENTIFIER array_dims '=' initializer ';'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    '&'          shift, and go to state 76
    '*'          shift, and go to state 105
    '%'          shift, and go to state 78
    '`'          shift, and go to state 79

    $default  reduce using rule 5 (star_list_opt)

    star_list_opt              go to state 262
    star_list                  go to state 81
    type_unit                  go to state 82
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45


state 178

  164 block_item: statement .

    $default  reduce using rule 164 (block_item)


state 179

  144 statement: compound_statement .

    $default  reduce using rule 144 (statement)


state 180

  149 compound_statement: '{' block_item_list_opt . '}'

    '}'  shift, and go to state 263


state 181

  151 block_item_list_opt: block_item_list .
  153 block_item_list: block_item_list . block_item

    IDENTIFIER        shift, and go to state 153
    TYPE_NAME         shift, and go to state 3
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_VOID           shift, and go to state 4
    KW_CHAR           shift, and go to state 5
    KW_SHORT          shift, and go to state 6
    KW_INT            shift, and go to state 7
    KW_LONG           shift, and go to state 8
    KW_SIGNED         shift, and go to state 9
    KW_UNSIGNED       shift, and go to state 10
    KW_FLOAT          shift, and go to state 11
    KW_DOUBLE         shift, and go to state 12
    KW_STRUCT         shift, and go to state 13
    KW_UNION          shift, and go to state 14
    KW_ENUM           shift, and go to state 15
    KW_TYPEDEF        shift, and go to state 158
    KW_RETURN         shift, and go to state 159
    KW_IF             shift, and go to state 160
    KW_WHILE          shift, and go to state 161
    KW_FOR            shift, and go to state 162
    KW_DO             shift, and go to state 163
    KW_SWITCH         shift, and go to state 164
    KW_BREAK          shift, and go to state 165
    KW_CONTINUE       shift, and go to state 166
    KW_GOTO           shift, and go to state 167
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175
    ';'               shift, and go to state 176
    '{'               shift, and go to state 112

    TYPE_NAME    [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_VOID      [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_CHAR      [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_SHORT     [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_INT       [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_LONG      [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_SIGNED    [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_UNSIGNED  [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_FLOAT     [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_DOUBLE    [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_STRUCT    [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_UNION     [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_ENUM      [reduce using rule 243 (type_qualifier_seq_opt)]
    '}'          reduce using rule 151 (block_item_list_opt)
    $default     reduce using rule 243 (type_qualifier_seq_opt)

    type_unit                  go to state 31
    type_specifier             go to state 177
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45
    statement                  go to state 178
    compound_statement         go to state 179
    block_item                 go to state 264
    expression_statement       go to state 183
    selection_statement        go to state 184
    iteration_statement        go to state 185
    jump_statement             go to state 186
    expression                 go to state 187
    assignment_expression      go to state 188
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    type_qualifier_seq_opt     go to state 201
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 182

  152 block_item_list: block_item .

    $default  reduce using rule 152 (block_item_list)


state 183

  145 statement: expression_statement .

    $default  reduce using rule 145 (statement)


state 184

  146 statement: selection_statement .

    $default  reduce using rule 146 (statement)


state 185

  147 statement: iteration_statement .

    $default  reduce using rule 147 (statement)


state 186

  148 statement: jump_statement .

    $default  reduce using rule 148 (statement)


state 187

  174 expression_statement: expression . ';'
  188 expression: expression . ',' assignment_expression

    ','  shift, and go to state 265
    ';'  shift, and go to state 266


state 188

  187 expression: assignment_expression .

    $default  reduce using rule 187 (expression)


state 189

  191 assignment_expression: conditional_expression .

    $default  reduce using rule 191 (assignment_expression)


state 190

  203 conditional_expression: logical_or_expression .
  204                       | logical_or_expression . '?' expression ':' conditional_expression
  206 logical_or_expression: logical_or_expression . LOGOR logical_and_expression

    LOGOR  shift, and go to state 267
    '?'    shift, and go to state 268

    $default  reduce using rule 203 (conditional_expression)


state 191

  205 logical_or_expression: logical_and_expression .
  208 logical_and_expression: logical_and_expression . LOGAND inclusive_or_expression

    LOGAND  shift, and go to state 269

    $default  reduce using rule 205 (logical_or_expression)


state 192

  207 logical_and_expression: inclusive_or_expression .
  210 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression

    '|'  shift, and go to state 270

    $default  reduce using rule 207 (logical_and_expression)


state 193

  209 inclusive_or_expression: exclusive_or_expression .
  212 exclusive_or_expression: exclusive_or_expression . '^' and_expression

    '^'  shift, and go to state 271

    $default  reduce using rule 209 (inclusive_or_expression)


state 194

  211 exclusive_or_expression: and_expression .
  214 and_expression: and_expression . '&' equality_expression

    '&'  shift, and go to state 272

    $default  reduce using rule 211 (exclusive_or_expression)


state 195

  213 and_expression: equality_expression .
  216 equality_expression: equality_expression . EQ relational_expression
  217                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 273
    NE  shift, and go to state 274

    $default  reduce using rule 213 (and_expression)


state 196

  215 equality_expression: relational_expression .
  219 relational_expression: relational_expression . '<' shift_expression
  220                      | relational_expression . '>' shift_expression
  221                      | relational_expression . LE shift_expression
  222                      | relational_expression . GE shift_expression

    LE   shift, and go to state 275
    GE   shift, and go to state 276
    '<'  shift, and go to state 277
    '>'  shift, and go to state 278

    $default  reduce using rule 215 (equality_expression)


state 197

  218 relational_expression: shift_expression .
  224 shift_expression: shift_expression . LSHIFT additive_expression
  225                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 279
    RSHIFT  shift, and go to state 280

    $default  reduce using rule 218 (relational_expression)


state 198

  223 shift_expression: additive_expression .
  227 additive_expression: additive_expression . '+' multiplicative_expression
  228                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 281
    '-'  shift, and go to state 282

    $default  reduce using rule 223 (shift_expression)


state 199

  226 additive_expression: multiplicative_expression .
  230 multiplicative_expression: multiplicative_expression . '*' unary_expression
  231                          | multiplicative_expression . '/' unary_expression
  232                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 283
    '/'  shift, and go to state 284
    '%'  shift, and go to state 285

    $default  reduce using rule 226 (additive_expression)


state 200

  192 assignment_expression: unary_expression . '=' assignment_expression
  193                      | unary_expression . ADD_ASSIGN assignment_expression
  194                      | unary_expression . SUB_ASSIGN assignment_expression
  195                      | unary_expression . MUL_ASSIGN assignment_expression
  196                      | unary_expression . DIV_ASSIGN assignment_expression
  197                      | unary_expression . MOD_ASSIGN assignment_expression
  198                      | unary_expression . AND_ASSIGN assignment_expression
  199                      | unary_expression . OR_ASSIGN assignment_expression
  200                      | unary_expression . XOR_ASSIGN assignment_expression
  201                      | unary_expression . LSHIFT_ASSIGN assignment_expression
  202                      | unary_expression . RSHIFT_ASSIGN assignment_expression
  229 multiplicative_expression: unary_expression .

    ADD_ASSIGN     shift, and go to state 286
    SUB_ASSIGN     shift, and go to state 287
    MUL_ASSIGN     shift, and go to state 288
    DIV_ASSIGN     shift, and go to state 289
    MOD_ASSIGN     shift, and go to state 290
    AND_ASSIGN     shift, and go to state 291
    OR_ASSIGN      shift, and go to state 292
    XOR_ASSIGN     shift, and go to state 293
    LSHIFT_ASSIGN  shift, and go to state 294
    RSHIFT_ASSIGN  shift, and go to state 295
    '='            shift, and go to state 296

    $default  reduce using rule 229 (multiplicative_expression)


state 201

  155 block_item: type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER ';'
  156           | type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';'
  158           | type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER '=' initializer ';'
  160           | type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';'
  162           | type_qualifier_seq_opt . type_specifier sdecl ',' sdecl sdecl_list ';'
  163           | type_qualifier_seq_opt . type_specifier sdecl '=' initializer ';'
  244 type_qualifier_seq_opt: type_qualifier_seq_opt . KW_CONST
  245                       | type_qualifier_seq_opt . KW_VOLATILE
  246                       | type_qualifier_seq_opt . KW_RESTRICT
  247                       | type_qualifier_seq_opt . KW_UNIQ

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 87
    KW_VOLATILE  shift, and go to state 88
    KW_RESTRICT  shift, and go to state 89
    KW_UNIQ      shift, and go to state 90

    type_unit                  go to state 31
    type_specifier             go to state 297
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45


state 202

  233 unary_expression: postfix_expression .
  249 postfix_expression: postfix_expression . '(' argument_expression_list_opt ')'
  250                   | postfix_expression . '[' expression ']'
  251                   | postfix_expression . '.' IDENTIFIER
  252                   | postfix_expression . ARROW IDENTIFIER
  253                   | postfix_expression . INC
  254                   | postfix_expression . DEC

    ARROW  shift, and go to state 298
    INC    shift, and go to state 299
    DEC    shift, and go to state 300
    '('    shift, and go to state 301
    '['    shift, and go to state 302
    '.'    shift, and go to state 303

    $default  reduce using rule 233 (unary_expression)


state 203

  248 postfix_expression: primary_expression .

    $default  reduce using rule 248 (postfix_expression)


state 204

  128 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 304


state 205

  130 direct_declarator: direct_declarator '(' . parameter_type_list_opt ')'
  131                  | direct_declarator '(' . identifier_list_opt ')'

    IDENTIFIER  shift, and go to state 305

    ')'       reduce using rule 53 (parameter_type_list_opt)
    ')'       [reduce using rule 132 (identifier_list_opt)]
    $default  reduce using rule 243 (type_qualifier_seq_opt)

    parameter_type_list_opt  go to state 306
    parameter_type_list      go to state 148
    parameter_list           go to state 149
    parameter_declaration    go to state 150
    identifier_list_opt      go to state 307
    identifier_list          go to state 308
    type_qualifier_seq_opt   go to state 151


state 206

  129 direct_declarator: direct_declarator '[' . assignment_expression_opt ']'

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    $default  reduce using rule 189 (assignment_expression_opt)

    assignment_expression_opt  go to state 309
    assignment_expression      go to state 310
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 207

   31 external_declaration: type_specifier star_list_opt IDENTIFIER '=' . assignment_expression ';'
   39                     | type_specifier star_list_opt IDENTIFIER '=' . initializer ';'

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175
    '{'               shift, and go to state 214

    assignment_expression      go to state 311
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203
    initializer                go to state 312


state 208

   21 external_declaration: type_specifier star_list_opt IDENTIFIER '(' . parameter_type_list_opt ')' version_opt compound_statement
   23                     | type_specifier star_list_opt IDENTIFIER '(' . parameter_type_list_opt ')' version_opt ';'

    ')'       reduce using rule 53 (parameter_type_list_opt)
    $default  reduce using rule 243 (type_qualifier_seq_opt)

    parameter_type_list_opt  go to state 313
    parameter_type_list      go to state 148
    parameter_list           go to state 149
    parameter_declaration    go to state 150
    type_qualifier_seq_opt   go to state 151


state 209

   93 array_dims: '[' . INTEGER_CONSTANT ']'

    INTEGER_CONSTANT  shift, and go to state 314


state 210

   37 external_declaration: type_specifier star_list_opt IDENTIFIER ';' .

    $default  reduce using rule 37 (external_declaration)


state 211

   41 external_declaration: type_specifier star_list_opt IDENTIFIER array_dims . '=' initializer ';'
   94 array_dims: array_dims . '[' INTEGER_CONSTANT ']'

    '='  shift, and go to state 315
    '['  shift, and go to state 316


state 212

  170 sdir: '(' sdecl . ')'
  171     | '(' sdecl . ')' '(' fp_param_list_opt ')'

    ')'  shift, and go to state 317


state 213

  172 sdir: sdir '[' . assignment_expression_opt ']'

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    $default  reduce using rule 189 (assignment_expression_opt)

    assignment_expression_opt  go to state 318
    assignment_expression      go to state 310
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 214

  266 initializer: '{' . initializer_list_opt '}'

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175
    '['               shift, and go to state 319
    '.'               shift, and go to state 320
    '{'               shift, and go to state 214

    $default  reduce using rule 267 (initializer_list_opt)

    assignment_expression      go to state 215
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203
    initializer                go to state 321
    initializer_list_opt       go to state 322
    initializer_list           go to state 323
    designated_initializer     go to state 324
    designation                go to state 325
    designator                 go to state 326


state 215

  265 initializer: assignment_expression .

    $default  reduce using rule 265 (initializer)


state 216

   18 external_declaration: type_specifier sdecl '=' initializer . ';'

    ';'  shift, and go to state 327


state 217

   16 external_declaration: type_specifier sdecl ',' sdecl . sdecl_list ';'

    $default  reduce using rule 166 (sdecl_list)

    sdecl_list  go to state 328


state 218

   20 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER . '(' parameter_type_list_opt ')' version_opt compound_statement
   22                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER . '(' parameter_type_list_opt ')' version_opt ';'
   30                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER . '=' assignment_expression ';'
   36                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER . ';'
   38                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER . '=' initializer ';'
   40                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER . array_dims '=' initializer ';'
  169 sdir: IDENTIFIER .

    '('  shift, and go to state 330
    ';'  shift, and go to state 331

    $default  reduce using rule 169 (sdir)

    array_dims  go to state 332


state 219

   17 external_declaration: type_qualifier_seq_opt type_specifier sdecl '=' . initializer ';'

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175
    '{'               shift, and go to state 214

    assignment_expression      go to state 215
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203
    initializer                go to state 333


state 220

   15 external_declaration: type_qualifier_seq_opt type_specifier sdecl ',' . sdecl sdecl_list ';'

    '&'  shift, and go to state 76
    '*'  shift, and go to state 105
    '%'  shift, and go to state 78
    '`'  shift, and go to state 79

    $default  reduce using rule 5 (star_list_opt)

    star_list_opt  go to state 131
    star_list      go to state 81
    sdecl          go to state 334


state 221

   95 struct_or_union_specifier: KW_STRUCT IDENTIFIER '{' struct_declaration_list_opt '}' .

    $default  reduce using rule 95 (struct_or_union_specifier)


state 222

  279 constant_expression: conditional_expression .

    $default  reduce using rule 279 (constant_expression)


state 223

  229 multiplicative_expression: unary_expression .

    $default  reduce using rule 229 (multiplicative_expression)


state 224

  109 struct_declarator: ':' constant_expression .

    $default  reduce using rule 109 (struct_declarator)


state 225

  169 sdir: IDENTIFIER .

    $default  reduce using rule 169 (sdir)


state 226

  107 struct_declarator_list: struct_declarator_list ',' . struct_declarator

    ':'  shift, and go to state 130
    '&'  shift, and go to state 76
    '*'  shift, and go to state 105
    '%'  shift, and go to state 78
    '`'  shift, and go to state 79

    $default  reduce using rule 5 (star_list_opt)

    star_list_opt      go to state 131
    star_list          go to state 81
    struct_declarator  go to state 335
    sdecl              go to state 134


state 227

  105 struct_declaration: specifier_qualifier_list struct_declarator_list ';' .

    $default  reduce using rule 105 (struct_declaration)


state 228

  110 struct_declarator: sdecl ':' . constant_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    conditional_expression     go to state 222
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 223
    postfix_expression         go to state 202
    primary_expression         go to state 203
    constant_expression        go to state 336


state 229

   96 struct_or_union_specifier: KW_UNION IDENTIFIER '{' struct_declaration_list_opt '}' .

    $default  reduce using rule 96 (struct_or_union_specifier)


state 230

  111 enum_specifier: KW_ENUM IDENTIFIER '{' enumerator_list_opt '}' .

    $default  reduce using rule 111 (enum_specifier)


state 231

  119 enumerator: IDENTIFIER '=' constant_expression .

    $default  reduce using rule 119 (enumerator)


state 232

  117 enumerator_list: enumerator_list ',' enumerator .

    $default  reduce using rule 117 (enumerator_list)


state 233

   27 external_declaration: KW_TYPEDEF type_specifier star_list_opt IDENTIFIER ';' .

    $default  reduce using rule 27 (external_declaration)


state 234

   29 external_declaration: KW_TYPEDEF type_specifier star_list_opt IDENTIFIER array_dims . ';'
   94 array_dims: array_dims . '[' INTEGER_CONSTANT ']'

    '['  shift, and go to state 316
    ';'  shift, and go to state 337


state 235

   33 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' . IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   35                     | KW_TYPEDEF type_specifier star_list_opt '(' '*' . IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'

    IDENTIFIER  shift, and go to state 338


state 236

   26 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER . ';'
   28                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER . array_dims ';'

    '['  shift, and go to state 209
    ';'  shift, and go to state 339

    array_dims  go to state 340


state 237

   32 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' . '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   34                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' . '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'

    '*'  shift, and go to state 341


state 238

   24 external_declaration: func_decl_specs IDENTIFIER '(' parameter_type_list_opt ')' . version_opt compound_statement
   25                     | func_decl_specs IDENTIFIER '(' parameter_type_list_opt ')' . version_opt ';'

    KW_VERSION  shift, and go to state 342

    $default  reduce using rule 3 (version_opt)

    version_opt  go to state 343


state 239

   56 parameter_type_list: parameter_list ',' . ELLIPSIS
   58 parameter_list: parameter_list ',' . parameter_declaration

    ELLIPSIS  shift, and go to state 344

    $default  reduce using rule 243 (type_qualifier_seq_opt)

    parameter_declaration   go to state 345
    type_qualifier_seq_opt  go to state 151


state 240

   59 parameter_declaration: type_qualifier_seq_opt type_specifier . sdecl
   60                      | type_qualifier_seq_opt type_specifier .
   91 type_specifier: type_specifier . type_unit

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    '&'          shift, and go to state 76
    '*'          shift, and go to state 105
    '%'          shift, and go to state 78
    '`'          shift, and go to state 79

    ')'       reduce using rule 60 (parameter_declaration)
    ','       reduce using rule 60 (parameter_declaration)
    $default  reduce using rule 5 (star_list_opt)

    star_list_opt              go to state 131
    star_list                  go to state 81
    type_unit                  go to state 82
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45
    sdecl                      go to state 346


state 241

   91 type_specifier: type_specifier . type_unit
  165 block_item: KW_TYPEDEF type_specifier . star_list_opt IDENTIFIER ';'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    '&'          shift, and go to state 76
    '*'          shift, and go to state 105
    '%'          shift, and go to state 78
    '`'          shift, and go to state 79

    $default  reduce using rule 5 (star_list_opt)

    star_list_opt              go to state 347
    star_list                  go to state 81
    type_unit                  go to state 82
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45


state 242

  181 jump_statement: KW_RETURN expression_opt . ';'

    ';'  shift, and go to state 348


state 243

  186 expression_opt: expression .
  188 expression: expression . ',' assignment_expression

    ','  shift, and go to state 265

    $default  reduce using rule 186 (expression_opt)


state 244

  175 selection_statement: KW_IF '(' . expression ')' statement
  176                    | KW_IF '(' . expression ')' statement KW_ELSE statement

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    expression                 go to state 349
    assignment_expression      go to state 188
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 245

  178 iteration_statement: KW_WHILE '(' . expression ')' statement

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    expression                 go to state 350
    assignment_expression      go to state 188
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 246

  180 iteration_statement: KW_FOR '(' . expression_opt ';' expression_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    $default  reduce using rule 185 (expression_opt)

    expression_opt             go to state 351
    expression                 go to state 243
    assignment_expression      go to state 188
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 247

  179 iteration_statement: KW_DO statement . KW_WHILE '(' expression ')' ';'

    KW_WHILE  shift, and go to state 352


state 248

  177 selection_statement: KW_SWITCH '(' . expression ')' statement

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    expression                 go to state 353
    assignment_expression      go to state 188
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 249

  182 jump_statement: KW_BREAK ';' .

    $default  reduce using rule 182 (jump_statement)


state 250

  183 jump_statement: KW_CONTINUE ';' .

    $default  reduce using rule 183 (jump_statement)


state 251

  184 jump_statement: KW_GOTO IDENTIFIER . ';'

    ';'  shift, and go to state 354


state 252

  241 unary_expression: KW_SIZEOF '(' . type_specifier ')'
  242                 | '(' . type_qualifier_seq_opt type_specifier star_list_opt ')' unary_expression
  264 primary_expression: '(' . expression ')'

    IDENTIFIER        shift, and go to state 153
    TYPE_NAME         shift, and go to state 3
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_VOID           shift, and go to state 4
    KW_CHAR           shift, and go to state 5
    KW_SHORT          shift, and go to state 6
    KW_INT            shift, and go to state 7
    KW_LONG           shift, and go to state 8
    KW_SIGNED         shift, and go to state 9
    KW_UNSIGNED       shift, and go to state 10
    KW_FLOAT          shift, and go to state 11
    KW_DOUBLE         shift, and go to state 12
    KW_STRUCT         shift, and go to state 13
    KW_UNION          shift, and go to state 14
    KW_ENUM           shift, and go to state 15
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    TYPE_NAME    [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_VOID      [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_CHAR      [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_SHORT     [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_INT       [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_LONG      [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_SIGNED    [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_UNSIGNED  [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_FLOAT     [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_DOUBLE    [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_STRUCT    [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_UNION     [reduce using rule 243 (type_qualifier_seq_opt)]
    KW_ENUM      [reduce using rule 243 (type_qualifier_seq_opt)]
    $default     reduce using rule 243 (type_qualifier_seq_opt)

    type_unit                  go to state 31
    type_specifier             go to state 355
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45
    expression                 go to state 260
    assignment_expression      go to state 188
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    type_qualifier_seq_opt     go to state 261
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 253

  240 unary_expression: KW_SIZEOF unary_expression .

    $default  reduce using rule 240 (unary_expression)


state 254

  234 unary_expression: INC unary_expression .

    $default  reduce using rule 234 (unary_expression)


state 255

  235 unary_expression: DEC unary_expression .

    $default  reduce using rule 235 (unary_expression)


state 256

  236 unary_expression: '+' unary_expression .

    $default  reduce using rule 236 (unary_expression)


state 257

  237 unary_expression: '-' unary_expression .

    $default  reduce using rule 237 (unary_expression)


state 258

  238 unary_expression: '!' unary_expression .

    $default  reduce using rule 238 (unary_expression)


state 259

  239 unary_expression: '~' unary_expression .

    $default  reduce using rule 239 (unary_expression)


state 260

  188 expression: expression . ',' assignment_expression
  264 primary_expression: '(' expression . ')'

    ')'  shift, and go to state 356
    ','  shift, and go to state 265


state 261

  242 unary_expression: '(' type_qualifier_seq_opt . type_specifier star_list_opt ')' unary_expression
  244 type_qualifier_seq_opt: type_qualifier_seq_opt . KW_CONST
  245                       | type_qualifier_seq_opt . KW_VOLATILE
  246                       | type_qualifier_seq_opt . KW_RESTRICT
  247                       | type_qualifier_seq_opt . KW_UNIQ

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 87
    KW_VOLATILE  shift, and go to state 88
    KW_RESTRICT  shift, and go to state 89
    KW_UNIQ      shift, and go to state 90

    type_unit                  go to state 31
    type_specifier             go to state 357
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45


state 262

  154 block_item: type_specifier star_list_opt . IDENTIFIER ';'
  157           | type_specifier star_list_opt . IDENTIFIER '=' assignment_expression ';'
  159           | type_specifier star_list_opt . IDENTIFIER '=' initializer ';'
  161           | type_specifier star_list_opt . IDENTIFIER array_dims '=' initializer ';'

    IDENTIFIER  shift, and go to state 358


state 263

  149 compound_statement: '{' block_item_list_opt '}' .

    $default  reduce using rule 149 (compound_statement)


state 264

  153 block_item_list: block_item_list block_item .

    $default  reduce using rule 153 (block_item_list)


state 265

  188 expression: expression ',' . assignment_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    assignment_expression      go to state 359
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 266

  174 expression_statement: expression ';' .

    $default  reduce using rule 174 (expression_statement)


state 267

  206 logical_or_expression: logical_or_expression LOGOR . logical_and_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    logical_and_expression     go to state 360
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 223
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 268

  204 conditional_expression: logical_or_expression '?' . expression ':' conditional_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    expression                 go to state 361
    assignment_expression      go to state 188
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 269

  208 logical_and_expression: logical_and_expression LOGAND . inclusive_or_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    inclusive_or_expression    go to state 362
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 223
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 270

  210 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    exclusive_or_expression    go to state 363
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 223
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 271

  212 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    and_expression             go to state 364
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 223
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 272

  214 and_expression: and_expression '&' . equality_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    equality_expression        go to state 365
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 223
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 273

  216 equality_expression: equality_expression EQ . relational_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    relational_expression      go to state 366
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 223
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 274

  217 equality_expression: equality_expression NE . relational_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    relational_expression      go to state 367
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 223
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 275

  221 relational_expression: relational_expression LE . shift_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    shift_expression           go to state 368
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 223
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 276

  222 relational_expression: relational_expression GE . shift_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    shift_expression           go to state 369
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 223
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 277

  219 relational_expression: relational_expression '<' . shift_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    shift_expression           go to state 370
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 223
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 278

  220 relational_expression: relational_expression '>' . shift_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    shift_expression           go to state 371
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 223
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 279

  224 shift_expression: shift_expression LSHIFT . additive_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    additive_expression        go to state 372
    multiplicative_expression  go to state 199
    unary_expression           go to state 223
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 280

  225 shift_expression: shift_expression RSHIFT . additive_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    additive_expression        go to state 373
    multiplicative_expression  go to state 199
    unary_expression           go to state 223
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 281

  227 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    multiplicative_expression  go to state 374
    unary_expression           go to state 223
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 282

  228 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    multiplicative_expression  go to state 375
    unary_expression           go to state 223
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 283

  230 multiplicative_expression: multiplicative_expression '*' . unary_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    unary_expression    go to state 376
    postfix_expression  go to state 202
    primary_expression  go to state 203


state 284

  231 multiplicative_expression: multiplicative_expression '/' . unary_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    unary_expression    go to state 377
    postfix_expression  go to state 202
    primary_expression  go to state 203


state 285

  232 multiplicative_expression: multiplicative_expression '%' . unary_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    unary_expression    go to state 378
    postfix_expression  go to state 202
    primary_expression  go to state 203


state 286

  193 assignment_expression: unary_expression ADD_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    assignment_expression      go to state 379
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 287

  194 assignment_expression: unary_expression SUB_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    assignment_expression      go to state 380
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 288

  195 assignment_expression: unary_expression MUL_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    assignment_expression      go to state 381
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 289

  196 assignment_expression: unary_expression DIV_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    assignment_expression      go to state 382
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 290

  197 assignment_expression: unary_expression MOD_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    assignment_expression      go to state 383
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 291

  198 assignment_expression: unary_expression AND_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    assignment_expression      go to state 384
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 292

  199 assignment_expression: unary_expression OR_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    assignment_expression      go to state 385
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 293

  200 assignment_expression: unary_expression XOR_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    assignment_expression      go to state 386
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 294

  201 assignment_expression: unary_expression LSHIFT_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    assignment_expression      go to state 387
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 295

  202 assignment_expression: unary_expression RSHIFT_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    assignment_expression      go to state 388
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 296

  192 assignment_expression: unary_expression '=' . assignment_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    assignment_expression      go to state 389
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 297

   91 type_specifier: type_specifier . type_unit
  155 block_item: type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER ';'
  156           | type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER '=' assignment_expression ';'
  158           | type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER '=' initializer ';'
  160           | type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER array_dims '=' initializer ';'
  162           | type_qualifier_seq_opt type_specifier . sdecl ',' sdecl sdecl_list ';'
  163           | type_qualifier_seq_opt type_specifier . sdecl '=' initializer ';'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    '&'          shift, and go to state 76
    '*'          shift, and go to state 105
    '%'          shift, and go to state 78
    '`'          shift, and go to state 79

    $default  reduce using rule 5 (star_list_opt)

    star_list_opt              go to state 390
    star_list                  go to state 81
    type_unit                  go to state 82
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45
    sdecl                      go to state 391


state 298

  252 postfix_expression: postfix_expression ARROW . IDENTIFIER

    IDENTIFIER  shift, and go to state 392


state 299

  253 postfix_expression: postfix_expression INC .

    $default  reduce using rule 253 (postfix_expression)


state 300

  254 postfix_expression: postfix_expression DEC .

    $default  reduce using rule 254 (postfix_expression)


state 301

  249 postfix_expression: postfix_expression '(' . argument_expression_list_opt ')'

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    $default  reduce using rule 255 (argument_expression_list_opt)

    assignment_expression         go to state 393
    conditional_expression        go to state 189
    logical_or_expression         go to state 190
    logical_and_expression        go to state 191
    inclusive_or_expression       go to state 192
    exclusive_or_expression       go to state 193
    and_expression                go to state 194
    equality_expression           go to state 195
    relational_expression         go to state 196
    shift_expression              go to state 197
    additive_expression           go to state 198
    multiplicative_expression     go to state 199
    unary_expression              go to state 200
    postfix_expression            go to state 202
    argument_expression_list_opt  go to state 394
    argument_expression_list      go to state 395
    primary_expression            go to state 203


state 302

  250 postfix_expression: postfix_expression '[' . expression ']'

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    expression                 go to state 396
    assignment_expression      go to state 188
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 303

  251 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 397


state 304

  128 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 128 (direct_declarator)


state 305

  134 identifier_list: IDENTIFIER .

    $default  reduce using rule 134 (identifier_list)


state 306

  130 direct_declarator: direct_declarator '(' parameter_type_list_opt . ')'

    ')'  shift, and go to state 398


state 307

  131 direct_declarator: direct_declarator '(' identifier_list_opt . ')'

    ')'  shift, and go to state 399


state 308

  133 identifier_list_opt: identifier_list .
  135 identifier_list: identifier_list . ',' IDENTIFIER

    ','  shift, and go to state 400

    $default  reduce using rule 133 (identifier_list_opt)


state 309

  129 direct_declarator: direct_declarator '[' assignment_expression_opt . ']'

    ']'  shift, and go to state 401


state 310

  190 assignment_expression_opt: assignment_expression .

    $default  reduce using rule 190 (assignment_expression_opt)


state 311

   31 external_declaration: type_specifier star_list_opt IDENTIFIER '=' assignment_expression . ';'
  265 initializer: assignment_expression .

    ';'  shift, and go to state 402

    ';'  [reduce using rule 265 (initializer)]


state 312

   39 external_declaration: type_specifier star_list_opt IDENTIFIER '=' initializer . ';'

    ';'  shift, and go to state 403


state 313

   21 external_declaration: type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt . ')' version_opt compound_statement
   23                     | type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt . ')' version_opt ';'

    ')'  shift, and go to state 404


state 314

   93 array_dims: '[' INTEGER_CONSTANT . ']'

    ']'  shift, and go to state 405


state 315

   41 external_declaration: type_specifier star_list_opt IDENTIFIER array_dims '=' . initializer ';'

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175
    '{'               shift, and go to state 214

    assignment_expression      go to state 215
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203
    initializer                go to state 406


state 316

   94 array_dims: array_dims '[' . INTEGER_CONSTANT ']'

    INTEGER_CONSTANT  shift, and go to state 407


state 317

  170 sdir: '(' sdecl ')' .
  171     | '(' sdecl ')' . '(' fp_param_list_opt ')'

    '('  shift, and go to state 408

    $default  reduce using rule 170 (sdir)


state 318

  172 sdir: sdir '[' assignment_expression_opt . ']'

    ']'  shift, and go to state 409


state 319

  277 designator: '[' . constant_expression ']'
  278           | '[' . constant_expression ELLIPSIS constant_expression ']'

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    conditional_expression     go to state 222
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 223
    postfix_expression         go to state 202
    primary_expression         go to state 203
    constant_expression        go to state 410


state 320

  276 designator: '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 411


state 321

  269 initializer_list: initializer .

    $default  reduce using rule 269 (initializer_list)


state 322

  266 initializer: '{' initializer_list_opt . '}'

    '}'  shift, and go to state 412


state 323

  268 initializer_list_opt: initializer_list .
  271 initializer_list: initializer_list . ',' initializer
  272                 | initializer_list . ',' designated_initializer

    ','  shift, and go to state 413

    $default  reduce using rule 268 (initializer_list_opt)


state 324

  270 initializer_list: designated_initializer .

    $default  reduce using rule 270 (initializer_list)


state 325

  273 designated_initializer: designation . '=' initializer
  275 designation: designation . designator

    '='  shift, and go to state 414
    '['  shift, and go to state 319
    '.'  shift, and go to state 320

    designator  go to state 415


state 326

  274 designation: designator .

    $default  reduce using rule 274 (designation)


state 327

   18 external_declaration: type_specifier sdecl '=' initializer ';' .

    $default  reduce using rule 18 (external_declaration)


state 328

   16 external_declaration: type_specifier sdecl ',' sdecl sdecl_list . ';'
  167 sdecl_list: sdecl_list . ',' sdecl

    ','  shift, and go to state 416
    ';'  shift, and go to state 417


state 329

   30 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' . assignment_expression ';'
   38                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' . initializer ';'

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175
    '{'               shift, and go to state 214

    assignment_expression      go to state 418
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203
    initializer                go to state 419


state 330

   20 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '(' . parameter_type_list_opt ')' version_opt compound_statement
   22                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '(' . parameter_type_list_opt ')' version_opt ';'

    ')'       reduce using rule 53 (parameter_type_list_opt)
    $default  reduce using rule 243 (type_qualifier_seq_opt)

    parameter_type_list_opt  go to state 420
    parameter_type_list      go to state 148
    parameter_list           go to state 149
    parameter_declaration    go to state 150
    type_qualifier_seq_opt   go to state 151


state 331

   36 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER ';' .

    $default  reduce using rule 36 (external_declaration)


state 332

   40 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims . '=' initializer ';'
   94 array_dims: array_dims . '[' INTEGER_CONSTANT ']'

    '='  shift, and go to state 421
    '['  shift, and go to state 316


state 333

   17 external_declaration: type_qualifier_seq_opt type_specifier sdecl '=' initializer . ';'

    ';'  shift, and go to state 422


state 334

   15 external_declaration: type_qualifier_seq_opt type_specifier sdecl ',' sdecl . sdecl_list ';'

    $default  reduce using rule 166 (sdecl_list)

    sdecl_list  go to state 423


state 335

  107 struct_declarator_list: struct_declarator_list ',' struct_declarator .

    $default  reduce using rule 107 (struct_declarator_list)


state 336

  110 struct_declarator: sdecl ':' constant_expression .

    $default  reduce using rule 110 (struct_declarator)


state 337

   29 external_declaration: KW_TYPEDEF type_specifier star_list_opt IDENTIFIER array_dims ';' .

    $default  reduce using rule 29 (external_declaration)


state 338

   33 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER . ')' '(' fp_param_list_opt ')' ';'
   35                     | KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER . array_dims ')' '(' fp_param_list_opt ')' ';'

    ')'  shift, and go to state 424
    '['  shift, and go to state 209

    array_dims  go to state 425


state 339

   26 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER ';' .

    $default  reduce using rule 26 (external_declaration)


state 340

   28 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims . ';'
   94 array_dims: array_dims . '[' INTEGER_CONSTANT ']'

    '['  shift, and go to state 316
    ';'  shift, and go to state 426


state 341

   32 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' . IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   34                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' . IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'

    IDENTIFIER  shift, and go to state 427


state 342

    4 version_opt: KW_VERSION . INTEGER_CONSTANT

    INTEGER_CONSTANT  shift, and go to state 428


state 343

   24 external_declaration: func_decl_specs IDENTIFIER '(' parameter_type_list_opt ')' version_opt . compound_statement
   25                     | func_decl_specs IDENTIFIER '(' parameter_type_list_opt ')' version_opt . ';'

    ';'  shift, and go to state 429
    '{'  shift, and go to state 112

    compound_statement  go to state 430


state 344

   56 parameter_type_list: parameter_list ',' ELLIPSIS .

    $default  reduce using rule 56 (parameter_type_list)


state 345

   58 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 58 (parameter_list)


state 346

   59 parameter_declaration: type_qualifier_seq_opt type_specifier sdecl .

    $default  reduce using rule 59 (parameter_declaration)


state 347

  165 block_item: KW_TYPEDEF type_specifier star_list_opt . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 431


state 348

  181 jump_statement: KW_RETURN expression_opt ';' .

    $default  reduce using rule 181 (jump_statement)


state 349

  175 selection_statement: KW_IF '(' expression . ')' statement
  176                    | KW_IF '(' expression . ')' statement KW_ELSE statement
  188 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 432
    ','  shift, and go to state 265


state 350

  178 iteration_statement: KW_WHILE '(' expression . ')' statement
  188 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 433
    ','  shift, and go to state 265


state 351

  180 iteration_statement: KW_FOR '(' expression_opt . ';' expression_opt ';' expression_opt ')' statement

    ';'  shift, and go to state 434


state 352

  179 iteration_statement: KW_DO statement KW_WHILE . '(' expression ')' ';'

    '('  shift, and go to state 435


state 353

  177 selection_statement: KW_SWITCH '(' expression . ')' statement
  188 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 436
    ','  shift, and go to state 265


state 354

  184 jump_statement: KW_GOTO IDENTIFIER ';' .

    $default  reduce using rule 184 (jump_statement)


state 355

   91 type_specifier: type_specifier . type_unit
  241 unary_expression: KW_SIZEOF '(' type_specifier . ')'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    ')'          shift, and go to state 437

    type_unit                  go to state 82
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45


state 356

  264 primary_expression: '(' expression ')' .

    $default  reduce using rule 264 (primary_expression)


state 357

   91 type_specifier: type_specifier . type_unit
  242 unary_expression: '(' type_qualifier_seq_opt type_specifier . star_list_opt ')' unary_expression

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    '&'          shift, and go to state 76
    '*'          shift, and go to state 105
    '%'          shift, and go to state 78
    '`'          shift, and go to state 79

    $default  reduce using rule 5 (star_list_opt)

    star_list_opt              go to state 438
    star_list                  go to state 81
    type_unit                  go to state 82
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45


state 358

  154 block_item: type_specifier star_list_opt IDENTIFIER . ';'
  157           | type_specifier star_list_opt IDENTIFIER . '=' assignment_expression ';'
  159           | type_specifier star_list_opt IDENTIFIER . '=' initializer ';'
  161           | type_specifier star_list_opt IDENTIFIER . array_dims '=' initializer ';'

    '='  shift, and go to state 439
    '['  shift, and go to state 209
    ';'  shift, and go to state 440

    array_dims  go to state 441


state 359

  188 expression: expression ',' assignment_expression .

    $default  reduce using rule 188 (expression)


state 360

  206 logical_or_expression: logical_or_expression LOGOR logical_and_expression .
  208 logical_and_expression: logical_and_expression . LOGAND inclusive_or_expression

    LOGAND  shift, and go to state 269

    $default  reduce using rule 206 (logical_or_expression)


state 361

  188 expression: expression . ',' assignment_expression
  204 conditional_expression: logical_or_expression '?' expression . ':' conditional_expression

    ':'  shift, and go to state 442
    ','  shift, and go to state 265


state 362

  208 logical_and_expression: logical_and_expression LOGAND inclusive_or_expression .
  210 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression

    '|'  shift, and go to state 270

    $default  reduce using rule 208 (logical_and_expression)


state 363

  210 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .
  212 exclusive_or_expression: exclusive_or_expression . '^' and_expression

    '^'  shift, and go to state 271

    $default  reduce using rule 210 (inclusive_or_expression)


state 364

  212 exclusive_or_expression: exclusive_or_expression '^' and_expression .
  214 and_expression: and_expression . '&' equality_expression

    '&'  shift, and go to state 272

    $default  reduce using rule 212 (exclusive_or_expression)


state 365

  214 and_expression: and_expression '&' equality_expression .
  216 equality_expression: equality_expression . EQ relational_expression
  217                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 273
    NE  shift, and go to state 274

    $default  reduce using rule 214 (and_expression)


state 366

  216 equality_expression: equality_expression EQ relational_expression .
  219 relational_expression: relational_expression . '<' shift_expression
  220                      | relational_expression . '>' shift_expression
  221                      | relational_expression . LE shift_expression
  222                      | relational_expression . GE shift_expression

    LE   shift, and go to state 275
    GE   shift, and go to state 276
    '<'  shift, and go to state 277
    '>'  shift, and go to state 278

    $default  reduce using rule 216 (equality_expression)


state 367

  217 equality_expression: equality_expression NE relational_expression .
  219 relational_expression: relational_expression . '<' shift_expression
  220                      | relational_expression . '>' shift_expression
  221                      | relational_expression . LE shift_expression
  222                      | relational_expression . GE shift_expression

    LE   shift, and go to state 275
    GE   shift, and go to state 276
    '<'  shift, and go to state 277
    '>'  shift, and go to state 278

    $default  reduce using rule 217 (equality_expression)


state 368

  221 relational_expression: relational_expression LE shift_expression .
  224 shift_expression: shift_expression . LSHIFT additive_expression
  225                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 279
    RSHIFT  shift, and go to state 280

    $default  reduce using rule 221 (relational_expression)


state 369

  222 relational_expression: relational_expression GE shift_expression .
  224 shift_expression: shift_expression . LSHIFT additive_expression
  225                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 279
    RSHIFT  shift, and go to state 280

    $default  reduce using rule 222 (relational_expression)


state 370

  219 relational_expression: relational_expression '<' shift_expression .
  224 shift_expression: shift_expression . LSHIFT additive_expression
  225                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 279
    RSHIFT  shift, and go to state 280

    $default  reduce using rule 219 (relational_expression)


state 371

  220 relational_expression: relational_expression '>' shift_expression .
  224 shift_expression: shift_expression . LSHIFT additive_expression
  225                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 279
    RSHIFT  shift, and go to state 280

    $default  reduce using rule 220 (relational_expression)


state 372

  224 shift_expression: shift_expression LSHIFT additive_expression .
  227 additive_expression: additive_expression . '+' multiplicative_expression
  228                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 281
    '-'  shift, and go to state 282

    $default  reduce using rule 224 (shift_expression)


state 373

  225 shift_expression: shift_expression RSHIFT additive_expression .
  227 additive_expression: additive_expression . '+' multiplicative_expression
  228                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 281
    '-'  shift, and go to state 282

    $default  reduce using rule 225 (shift_expression)


state 374

  227 additive_expression: additive_expression '+' multiplicative_expression .
  230 multiplicative_expression: multiplicative_expression . '*' unary_expression
  231                          | multiplicative_expression . '/' unary_expression
  232                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 283
    '/'  shift, and go to state 284
    '%'  shift, and go to state 285

    $default  reduce using rule 227 (additive_expression)


state 375

  228 additive_expression: additive_expression '-' multiplicative_expression .
  230 multiplicative_expression: multiplicative_expression . '*' unary_expression
  231                          | multiplicative_expression . '/' unary_expression
  232                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 283
    '/'  shift, and go to state 284
    '%'  shift, and go to state 285

    $default  reduce using rule 228 (additive_expression)


state 376

  230 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 230 (multiplicative_expression)


state 377

  231 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 231 (multiplicative_expression)


state 378

  232 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 232 (multiplicative_expression)


state 379

  193 assignment_expression: unary_expression ADD_ASSIGN assignment_expression .

    $default  reduce using rule 193 (assignment_expression)


state 380

  194 assignment_expression: unary_expression SUB_ASSIGN assignment_expression .

    $default  reduce using rule 194 (assignment_expression)


state 381

  195 assignment_expression: unary_expression MUL_ASSIGN assignment_expression .

    $default  reduce using rule 195 (assignment_expression)


state 382

  196 assignment_expression: unary_expression DIV_ASSIGN assignment_expression .

    $default  reduce using rule 196 (assignment_expression)


state 383

  197 assignment_expression: unary_expression MOD_ASSIGN assignment_expression .

    $default  reduce using rule 197 (assignment_expression)


state 384

  198 assignment_expression: unary_expression AND_ASSIGN assignment_expression .

    $default  reduce using rule 198 (assignment_expression)


state 385

  199 assignment_expression: unary_expression OR_ASSIGN assignment_expression .

    $default  reduce using rule 199 (assignment_expression)


state 386

  200 assignment_expression: unary_expression XOR_ASSIGN assignment_expression .

    $default  reduce using rule 200 (assignment_expression)


state 387

  201 assignment_expression: unary_expression LSHIFT_ASSIGN assignment_expression .

    $default  reduce using rule 201 (assignment_expression)


state 388

  202 assignment_expression: unary_expression RSHIFT_ASSIGN assignment_expression .

    $default  reduce using rule 202 (assignment_expression)


state 389

  192 assignment_expression: unary_expression '=' assignment_expression .

    $default  reduce using rule 192 (assignment_expression)


state 390

  155 block_item: type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER ';'
  156           | type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER '=' assignment_expression ';'
  158           | type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER '=' initializer ';'
  160           | type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER array_dims '=' initializer ';'
  168 sdecl: star_list_opt . sdir

    IDENTIFIER  shift, and go to state 443
    '('         shift, and go to state 118

    sdir  go to state 119


state 391

  162 block_item: type_qualifier_seq_opt type_specifier sdecl . ',' sdecl sdecl_list ';'
  163           | type_qualifier_seq_opt type_specifier sdecl . '=' initializer ';'

    '='  shift, and go to state 444
    ','  shift, and go to state 445


state 392

  252 postfix_expression: postfix_expression ARROW IDENTIFIER .

    $default  reduce using rule 252 (postfix_expression)


state 393

  257 argument_expression_list: assignment_expression .

    $default  reduce using rule 257 (argument_expression_list)


state 394

  249 postfix_expression: postfix_expression '(' argument_expression_list_opt . ')'

    ')'  shift, and go to state 446


state 395

  256 argument_expression_list_opt: argument_expression_list .
  258 argument_expression_list: argument_expression_list . ',' assignment_expression

    ','  shift, and go to state 447

    $default  reduce using rule 256 (argument_expression_list_opt)


state 396

  188 expression: expression . ',' assignment_expression
  250 postfix_expression: postfix_expression '[' expression . ']'

    ']'  shift, and go to state 448
    ','  shift, and go to state 265


state 397

  251 postfix_expression: postfix_expression '.' IDENTIFIER .

    $default  reduce using rule 251 (postfix_expression)


state 398

  130 direct_declarator: direct_declarator '(' parameter_type_list_opt ')' .

    $default  reduce using rule 130 (direct_declarator)


state 399

  131 direct_declarator: direct_declarator '(' identifier_list_opt ')' .

    $default  reduce using rule 131 (direct_declarator)


state 400

  135 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 449


state 401

  129 direct_declarator: direct_declarator '[' assignment_expression_opt ']' .

    $default  reduce using rule 129 (direct_declarator)


state 402

   31 external_declaration: type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';' .

    $default  reduce using rule 31 (external_declaration)


state 403

   39 external_declaration: type_specifier star_list_opt IDENTIFIER '=' initializer ';' .

    $default  reduce using rule 39 (external_declaration)


state 404

   21 external_declaration: type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' . version_opt compound_statement
   23                     | type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' . version_opt ';'

    KW_VERSION  shift, and go to state 342

    $default  reduce using rule 3 (version_opt)

    version_opt  go to state 450


state 405

   93 array_dims: '[' INTEGER_CONSTANT ']' .

    $default  reduce using rule 93 (array_dims)


state 406

   41 external_declaration: type_specifier star_list_opt IDENTIFIER array_dims '=' initializer . ';'

    ';'  shift, and go to state 451


state 407

   94 array_dims: array_dims '[' INTEGER_CONSTANT . ']'

    ']'  shift, and go to state 452


state 408

  171 sdir: '(' sdecl ')' '(' . fp_param_list_opt ')'

    ')'       reduce using rule 136 (fp_param_list_opt)
    $default  reduce using rule 243 (type_qualifier_seq_opt)

    fp_param_list_opt       go to state 453
    fp_param_list           go to state 454
    fp_param                go to state 455
    type_qualifier_seq_opt  go to state 456


state 409

  172 sdir: sdir '[' assignment_expression_opt ']' .

    $default  reduce using rule 172 (sdir)


state 410

  277 designator: '[' constant_expression . ']'
  278           | '[' constant_expression . ELLIPSIS constant_expression ']'

    ELLIPSIS  shift, and go to state 457
    ']'       shift, and go to state 458


state 411

  276 designator: '.' IDENTIFIER .

    $default  reduce using rule 276 (designator)


state 412

  266 initializer: '{' initializer_list_opt '}' .

    $default  reduce using rule 266 (initializer)


state 413

  271 initializer_list: initializer_list ',' . initializer
  272                 | initializer_list ',' . designated_initializer

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175
    '['               shift, and go to state 319
    '.'               shift, and go to state 320
    '{'               shift, and go to state 214

    assignment_expression      go to state 215
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203
    initializer                go to state 459
    designated_initializer     go to state 460
    designation                go to state 325
    designator                 go to state 326


state 414

  273 designated_initializer: designation '=' . initializer

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175
    '{'               shift, and go to state 214

    assignment_expression      go to state 215
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203
    initializer                go to state 461


state 415

  275 designation: designation designator .

    $default  reduce using rule 275 (designation)


state 416

  167 sdecl_list: sdecl_list ',' . sdecl

    '&'  shift, and go to state 76
    '*'  shift, and go to state 105
    '%'  shift, and go to state 78
    '`'  shift, and go to state 79

    $default  reduce using rule 5 (star_list_opt)

    star_list_opt  go to state 131
    star_list      go to state 81
    sdecl          go to state 462


state 417

   16 external_declaration: type_specifier sdecl ',' sdecl sdecl_list ';' .

    $default  reduce using rule 16 (external_declaration)


state 418

   30 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' assignment_expression . ';'
  265 initializer: assignment_expression .

    ';'  shift, and go to state 463

    ';'  [reduce using rule 265 (initializer)]


state 419

   38 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' initializer . ';'

    ';'  shift, and go to state 464


state 420

   20 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt . ')' version_opt compound_statement
   22                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt . ')' version_opt ';'

    ')'  shift, and go to state 465


state 421

   40 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims '=' . initializer ';'

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175
    '{'               shift, and go to state 214

    assignment_expression      go to state 215
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203
    initializer                go to state 466


state 422

   17 external_declaration: type_qualifier_seq_opt type_specifier sdecl '=' initializer ';' .

    $default  reduce using rule 17 (external_declaration)


state 423

   15 external_declaration: type_qualifier_seq_opt type_specifier sdecl ',' sdecl sdecl_list . ';'
  167 sdecl_list: sdecl_list . ',' sdecl

    ','  shift, and go to state 416
    ';'  shift, and go to state 467


state 424

   33 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER ')' . '(' fp_param_list_opt ')' ';'

    '('  shift, and go to state 468


state 425

   35 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER array_dims . ')' '(' fp_param_list_opt ')' ';'
   94 array_dims: array_dims . '[' INTEGER_CONSTANT ']'

    ')'  shift, and go to state 469
    '['  shift, and go to state 316


state 426

   28 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims ';' .

    $default  reduce using rule 28 (external_declaration)


state 427

   32 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER . ')' '(' fp_param_list_opt ')' ';'
   34                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER . array_dims ')' '(' fp_param_list_opt ')' ';'

    ')'  shift, and go to state 470
    '['  shift, and go to state 209

    array_dims  go to state 471


state 428

    4 version_opt: KW_VERSION INTEGER_CONSTANT .

    $default  reduce using rule 4 (version_opt)


state 429

   25 external_declaration: func_decl_specs IDENTIFIER '(' parameter_type_list_opt ')' version_opt ';' .

    $default  reduce using rule 25 (external_declaration)


state 430

   24 external_declaration: func_decl_specs IDENTIFIER '(' parameter_type_list_opt ')' version_opt compound_statement .

    $default  reduce using rule 24 (external_declaration)


state 431

  165 block_item: KW_TYPEDEF type_specifier star_list_opt IDENTIFIER . ';'

    ';'  shift, and go to state 472


state 432

  175 selection_statement: KW_IF '(' expression ')' . statement
  176                    | KW_IF '(' expression ')' . statement KW_ELSE statement

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_RETURN         shift, and go to state 159
    KW_IF             shift, and go to state 160
    KW_WHILE          shift, and go to state 161
    KW_FOR            shift, and go to state 162
    KW_DO             shift, and go to state 163
    KW_SWITCH         shift, and go to state 164
    KW_BREAK          shift, and go to state 165
    KW_CONTINUE       shift, and go to state 166
    KW_GOTO           shift, and go to state 167
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175
    ';'               shift, and go to state 176
    '{'               shift, and go to state 112

    statement                  go to state 473
    compound_statement         go to state 179
    expression_statement       go to state 183
    selection_statement        go to state 184
    iteration_statement        go to state 185
    jump_statement             go to state 186
    expression                 go to state 187
    assignment_expression      go to state 188
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 433

  178 iteration_statement: KW_WHILE '(' expression ')' . statement

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_RETURN         shift, and go to state 159
    KW_IF             shift, and go to state 160
    KW_WHILE          shift, and go to state 161
    KW_FOR            shift, and go to state 162
    KW_DO             shift, and go to state 163
    KW_SWITCH         shift, and go to state 164
    KW_BREAK          shift, and go to state 165
    KW_CONTINUE       shift, and go to state 166
    KW_GOTO           shift, and go to state 167
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175
    ';'               shift, and go to state 176
    '{'               shift, and go to state 112

    statement                  go to state 474
    compound_statement         go to state 179
    expression_statement       go to state 183
    selection_statement        go to state 184
    iteration_statement        go to state 185
    jump_statement             go to state 186
    expression                 go to state 187
    assignment_expression      go to state 188
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 434

  180 iteration_statement: KW_FOR '(' expression_opt ';' . expression_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    $default  reduce using rule 185 (expression_opt)

    expression_opt             go to state 475
    expression                 go to state 243
    assignment_expression      go to state 188
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 435

  179 iteration_statement: KW_DO statement KW_WHILE '(' . expression ')' ';'

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    expression                 go to state 476
    assignment_expression      go to state 188
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 436

  177 selection_statement: KW_SWITCH '(' expression ')' . statement

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_RETURN         shift, and go to state 159
    KW_IF             shift, and go to state 160
    KW_WHILE          shift, and go to state 161
    KW_FOR            shift, and go to state 162
    KW_DO             shift, and go to state 163
    KW_SWITCH         shift, and go to state 164
    KW_BREAK          shift, and go to state 165
    KW_CONTINUE       shift, and go to state 166
    KW_GOTO           shift, and go to state 167
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175
    ';'               shift, and go to state 176
    '{'               shift, and go to state 112

    statement                  go to state 477
    compound_statement         go to state 179
    expression_statement       go to state 183
    selection_statement        go to state 184
    iteration_statement        go to state 185
    jump_statement             go to state 186
    expression                 go to state 187
    assignment_expression      go to state 188
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 437

  241 unary_expression: KW_SIZEOF '(' type_specifier ')' .

    $default  reduce using rule 241 (unary_expression)


state 438

  242 unary_expression: '(' type_qualifier_seq_opt type_specifier star_list_opt . ')' unary_expression

    ')'  shift, and go to state 478


state 439

  157 block_item: type_specifier star_list_opt IDENTIFIER '=' . assignment_expression ';'
  159           | type_specifier star_list_opt IDENTIFIER '=' . initializer ';'

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175
    '{'               shift, and go to state 214

    assignment_expression      go to state 479
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203
    initializer                go to state 480


state 440

  154 block_item: type_specifier star_list_opt IDENTIFIER ';' .

    $default  reduce using rule 154 (block_item)


state 441

   94 array_dims: array_dims . '[' INTEGER_CONSTANT ']'
  161 block_item: type_specifier star_list_opt IDENTIFIER array_dims . '=' initializer ';'

    '='  shift, and go to state 481
    '['  shift, and go to state 316


state 442

  204 conditional_expression: logical_or_expression '?' expression ':' . conditional_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    conditional_expression     go to state 482
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 223
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 443

  155 block_item: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER . ';'
  156           | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER . '=' assignment_expression ';'
  158           | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER . '=' initializer ';'
  160           | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER . array_dims '=' initializer ';'
  169 sdir: IDENTIFIER .

    ';'  shift, and go to state 484

    $default  reduce using rule 169 (sdir)

    array_dims  go to state 485


state 444

  163 block_item: type_qualifier_seq_opt type_specifier sdecl '=' . initializer ';'

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175
    '{'               shift, and go to state 214

    assignment_expression      go to state 215
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203
    initializer                go to state 486


state 445

  162 block_item: type_qualifier_seq_opt type_specifier sdecl ',' . sdecl sdecl_list ';'

    '&'  shift, and go to state 76
    '*'  shift, and go to state 105
    '%'  shift, and go to state 78
    '`'  shift, and go to state 79

    $default  reduce using rule 5 (star_list_opt)

    star_list_opt  go to state 131
    star_list      go to state 81
    sdecl          go to state 487


state 446

  249 postfix_expression: postfix_expression '(' argument_expression_list_opt ')' .

    $default  reduce using rule 249 (postfix_expression)


state 447

  258 argument_expression_list: argument_expression_list ',' . assignment_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    assignment_expression      go to state 488
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 448

  250 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 250 (postfix_expression)


state 449

  135 identifier_list: identifier_list ',' IDENTIFIER .

    $default  reduce using rule 135 (identifier_list)


state 450

   21 external_declaration: type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' version_opt . compound_statement
   23                     | type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' version_opt . ';'

    ';'  shift, and go to state 489
    '{'  shift, and go to state 112

    compound_statement  go to state 490


state 451

   41 external_declaration: type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';' .

    $default  reduce using rule 41 (external_declaration)


state 452

   94 array_dims: array_dims '[' INTEGER_CONSTANT ']' .

    $default  reduce using rule 94 (array_dims)


state 453

  171 sdir: '(' sdecl ')' '(' fp_param_list_opt . ')'

    ')'  shift, and go to state 491


state 454

  137 fp_param_list_opt: fp_param_list .
  139 fp_param_list: fp_param_list . ',' fp_param

    ','  shift, and go to state 492

    $default  reduce using rule 137 (fp_param_list_opt)


state 455

  138 fp_param_list: fp_param .

    $default  reduce using rule 138 (fp_param_list)


state 456

  140 fp_param: type_qualifier_seq_opt . type_specifier star_list_opt
  141         | type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER
  244 type_qualifier_seq_opt: type_qualifier_seq_opt . KW_CONST
  245                       | type_qualifier_seq_opt . KW_VOLATILE
  246                       | type_qualifier_seq_opt . KW_RESTRICT
  247                       | type_qualifier_seq_opt . KW_UNIQ

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 87
    KW_VOLATILE  shift, and go to state 88
    KW_RESTRICT  shift, and go to state 89
    KW_UNIQ      shift, and go to state 90

    type_unit                  go to state 31
    type_specifier             go to state 493
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45


state 457

  278 designator: '[' constant_expression ELLIPSIS . constant_expression ']'

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    conditional_expression     go to state 222
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 223
    postfix_expression         go to state 202
    primary_expression         go to state 203
    constant_expression        go to state 494


state 458

  277 designator: '[' constant_expression ']' .

    $default  reduce using rule 277 (designator)


state 459

  271 initializer_list: initializer_list ',' initializer .

    $default  reduce using rule 271 (initializer_list)


state 460

  272 initializer_list: initializer_list ',' designated_initializer .

    $default  reduce using rule 272 (initializer_list)


state 461

  273 designated_initializer: designation '=' initializer .

    $default  reduce using rule 273 (designated_initializer)


state 462

  167 sdecl_list: sdecl_list ',' sdecl .

    $default  reduce using rule 167 (sdecl_list)


state 463

   30 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';' .

    $default  reduce using rule 30 (external_declaration)


state 464

   38 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' initializer ';' .

    $default  reduce using rule 38 (external_declaration)


state 465

   20 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' . version_opt compound_statement
   22                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' . version_opt ';'

    KW_VERSION  shift, and go to state 342

    $default  reduce using rule 3 (version_opt)

    version_opt  go to state 495


state 466

   40 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims '=' initializer . ';'

    ';'  shift, and go to state 496


state 467

   15 external_declaration: type_qualifier_seq_opt type_specifier sdecl ',' sdecl sdecl_list ';' .

    $default  reduce using rule 15 (external_declaration)


state 468

   33 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' . fp_param_list_opt ')' ';'

    ')'       reduce using rule 136 (fp_param_list_opt)
    $default  reduce using rule 243 (type_qualifier_seq_opt)

    fp_param_list_opt       go to state 497
    fp_param_list           go to state 454
    fp_param                go to state 455
    type_qualifier_seq_opt  go to state 456


state 469

   35 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' . '(' fp_param_list_opt ')' ';'

    '('  shift, and go to state 498


state 470

   32 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER ')' . '(' fp_param_list_opt ')' ';'

    '('  shift, and go to state 499


state 471

   34 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER array_dims . ')' '(' fp_param_list_opt ')' ';'
   94 array_dims: array_dims . '[' INTEGER_CONSTANT ']'

    ')'  shift, and go to state 500
    '['  shift, and go to state 316


state 472

  165 block_item: KW_TYPEDEF type_specifier star_list_opt IDENTIFIER ';' .

    $default  reduce using rule 165 (block_item)


state 473

  175 selection_statement: KW_IF '(' expression ')' statement .
  176                    | KW_IF '(' expression ')' statement . KW_ELSE statement

    KW_ELSE  shift, and go to state 501

    KW_ELSE   [reduce using rule 175 (selection_statement)]
    $default  reduce using rule 175 (selection_statement)


state 474

  178 iteration_statement: KW_WHILE '(' expression ')' statement .

    $default  reduce using rule 178 (iteration_statement)


state 475

  180 iteration_statement: KW_FOR '(' expression_opt ';' expression_opt . ';' expression_opt ')' statement

    ';'  shift, and go to state 502


state 476

  179 iteration_statement: KW_DO statement KW_WHILE '(' expression . ')' ';'
  188 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 503
    ','  shift, and go to state 265


state 477

  177 selection_statement: KW_SWITCH '(' expression ')' statement .

    $default  reduce using rule 177 (selection_statement)


state 478

  242 unary_expression: '(' type_qualifier_seq_opt type_specifier star_list_opt ')' . unary_expression

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    unary_expression    go to state 504
    postfix_expression  go to state 202
    primary_expression  go to state 203


state 479

  157 block_item: type_specifier star_list_opt IDENTIFIER '=' assignment_expression . ';'
  265 initializer: assignment_expression .

    ';'  shift, and go to state 505

    ';'  [reduce using rule 265 (initializer)]


state 480

  159 block_item: type_specifier star_list_opt IDENTIFIER '=' initializer . ';'

    ';'  shift, and go to state 506


state 481

  161 block_item: type_specifier star_list_opt IDENTIFIER array_dims '=' . initializer ';'

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175
    '{'               shift, and go to state 214

    assignment_expression      go to state 215
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203
    initializer                go to state 507


state 482

  204 conditional_expression: logical_or_expression '?' expression ':' conditional_expression .

    $default  reduce using rule 204 (conditional_expression)


state 483

  156 block_item: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' . assignment_expression ';'
  158           | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' . initializer ';'

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175
    '{'               shift, and go to state 214

    assignment_expression      go to state 508
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203
    initializer                go to state 509


state 484

  155 block_item: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER ';' .

    $default  reduce using rule 155 (block_item)


state 485

   94 array_dims: array_dims . '[' INTEGER_CONSTANT ']'
  160 block_item: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims . '=' initializer ';'

    '='  shift, and go to state 510
    '['  shift, and go to state 316


state 486

  163 block_item: type_qualifier_seq_opt type_specifier sdecl '=' initializer . ';'

    ';'  shift, and go to state 511


state 487

  162 block_item: type_qualifier_seq_opt type_specifier sdecl ',' sdecl . sdecl_list ';'

    $default  reduce using rule 166 (sdecl_list)

    sdecl_list  go to state 512


state 488

  258 argument_expression_list: argument_expression_list ',' assignment_expression .

    $default  reduce using rule 258 (argument_expression_list)


state 489

   23 external_declaration: type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' version_opt ';' .

    $default  reduce using rule 23 (external_declaration)


state 490

   21 external_declaration: type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' version_opt compound_statement .

    $default  reduce using rule 21 (external_declaration)


state 491

  171 sdir: '(' sdecl ')' '(' fp_param_list_opt ')' .

    $default  reduce using rule 171 (sdir)


state 492

  139 fp_param_list: fp_param_list ',' . fp_param

    $default  reduce using rule 243 (type_qualifier_seq_opt)

    fp_param                go to state 513
    type_qualifier_seq_opt  go to state 456


state 493

   91 type_specifier: type_specifier . type_unit
  140 fp_param: type_qualifier_seq_opt type_specifier . star_list_opt
  141         | type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    '&'          shift, and go to state 76
    '*'          shift, and go to state 105
    '%'          shift, and go to state 78
    '`'          shift, and go to state 79

    $default  reduce using rule 5 (star_list_opt)

    star_list_opt              go to state 514
    star_list                  go to state 81
    type_unit                  go to state 82
    struct_or_union_specifier  go to state 44
    enum_specifier             go to state 45


state 494

  278 designator: '[' constant_expression ELLIPSIS constant_expression . ']'

    ']'  shift, and go to state 515


state 495

   20 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' version_opt . compound_statement
   22                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' version_opt . ';'

    ';'  shift, and go to state 516
    '{'  shift, and go to state 112

    compound_statement  go to state 517


state 496

   40 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';' .

    $default  reduce using rule 40 (external_declaration)


state 497

   33 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt . ')' ';'

    ')'  shift, and go to state 518


state 498

   35 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' . fp_param_list_opt ')' ';'

    ')'       reduce using rule 136 (fp_param_list_opt)
    $default  reduce using rule 243 (type_qualifier_seq_opt)

    fp_param_list_opt       go to state 519
    fp_param_list           go to state 454
    fp_param                go to state 455
    type_qualifier_seq_opt  go to state 456


state 499

   32 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' . fp_param_list_opt ')' ';'

    ')'       reduce using rule 136 (fp_param_list_opt)
    $default  reduce using rule 243 (type_qualifier_seq_opt)

    fp_param_list_opt       go to state 520
    fp_param_list           go to state 454
    fp_param                go to state 455
    type_qualifier_seq_opt  go to state 456


state 500

   34 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' . '(' fp_param_list_opt ')' ';'

    '('  shift, and go to state 521


state 501

  176 selection_statement: KW_IF '(' expression ')' statement KW_ELSE . statement

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_RETURN         shift, and go to state 159
    KW_IF             shift, and go to state 160
    KW_WHILE          shift, and go to state 161
    KW_FOR            shift, and go to state 162
    KW_DO             shift, and go to state 163
    KW_SWITCH         shift, and go to state 164
    KW_BREAK          shift, and go to state 165
    KW_CONTINUE       shift, and go to state 166
    KW_GOTO           shift, and go to state 167
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175
    ';'               shift, and go to state 176
    '{'               shift, and go to state 112

    statement                  go to state 522
    compound_statement         go to state 179
    expression_statement       go to state 183
    selection_statement        go to state 184
    iteration_statement        go to state 185
    jump_statement             go to state 186
    expression                 go to state 187
    assignment_expression      go to state 188
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 502

  180 iteration_statement: KW_FOR '(' expression_opt ';' expression_opt ';' . expression_opt ')' statement

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175

    $default  reduce using rule 185 (expression_opt)

    expression_opt             go to state 523
    expression                 go to state 243
    assignment_expression      go to state 188
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 503

  179 iteration_statement: KW_DO statement KW_WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 524


state 504

  242 unary_expression: '(' type_qualifier_seq_opt type_specifier star_list_opt ')' unary_expression .

    $default  reduce using rule 242 (unary_expression)


state 505

  157 block_item: type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';' .

    $default  reduce using rule 157 (block_item)


state 506

  159 block_item: type_specifier star_list_opt IDENTIFIER '=' initializer ';' .

    $default  reduce using rule 159 (block_item)


state 507

  161 block_item: type_specifier star_list_opt IDENTIFIER array_dims '=' initializer . ';'

    ';'  shift, and go to state 525


state 508

  156 block_item: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' assignment_expression . ';'
  265 initializer: assignment_expression .

    ';'  shift, and go to state 526

    ';'  [reduce using rule 265 (initializer)]


state 509

  158 block_item: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' initializer . ';'

    ';'  shift, and go to state 527


state 510

  160 block_item: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims '=' . initializer ';'

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175
    '{'               shift, and go to state 214

    assignment_expression      go to state 215
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203
    initializer                go to state 528


state 511

  163 block_item: type_qualifier_seq_opt type_specifier sdecl '=' initializer ';' .

    $default  reduce using rule 163 (block_item)


state 512

  162 block_item: type_qualifier_seq_opt type_specifier sdecl ',' sdecl sdecl_list . ';'
  167 sdecl_list: sdecl_list . ',' sdecl

    ','  shift, and go to state 416
    ';'  shift, and go to state 529


state 513

  139 fp_param_list: fp_param_list ',' fp_param .

    $default  reduce using rule 139 (fp_param_list)


state 514

  140 fp_param: type_qualifier_seq_opt type_specifier star_list_opt .
  141         | type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER

    IDENTIFIER  shift, and go to state 530

    $default  reduce using rule 140 (fp_param)


state 515

  278 designator: '[' constant_expression ELLIPSIS constant_expression ']' .

    $default  reduce using rule 278 (designator)


state 516

   22 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' version_opt ';' .

    $default  reduce using rule 22 (external_declaration)


state 517

   20 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' version_opt compound_statement .

    $default  reduce using rule 20 (external_declaration)


state 518

   33 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' . ';'

    ';'  shift, and go to state 531


state 519

   35 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt . ')' ';'

    ')'  shift, and go to state 532


state 520

   32 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt . ')' ';'

    ')'  shift, and go to state 533


state 521

   34 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' . fp_param_list_opt ')' ';'

    ')'       reduce using rule 136 (fp_param_list_opt)
    $default  reduce using rule 243 (type_qualifier_seq_opt)

    fp_param_list_opt       go to state 534
    fp_param_list           go to state 454
    fp_param                go to state 455
    type_qualifier_seq_opt  go to state 456


state 522

  176 selection_statement: KW_IF '(' expression ')' statement KW_ELSE statement .

    $default  reduce using rule 176 (selection_statement)


state 523

  180 iteration_statement: KW_FOR '(' expression_opt ';' expression_opt ';' expression_opt . ')' statement

    ')'  shift, and go to state 535


state 524

  179 iteration_statement: KW_DO statement KW_WHILE '(' expression ')' ';' .

    $default  reduce using rule 179 (iteration_statement)


state 525

  161 block_item: type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';' .

    $default  reduce using rule 161 (block_item)


state 526

  156 block_item: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';' .

    $default  reduce using rule 156 (block_item)


state 527

  158 block_item: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' initializer ';' .

    $default  reduce using rule 158 (block_item)


state 528

  160 block_item: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims '=' initializer . ';'

    ';'  shift, and go to state 536


state 529

  162 block_item: type_qualifier_seq_opt type_specifier sdecl ',' sdecl sdecl_list ';' .

    $default  reduce using rule 162 (block_item)


state 530

  141 fp_param: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER .

    $default  reduce using rule 141 (fp_param)


state 531

   33 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';' .

    $default  reduce using rule 33 (external_declaration)


state 532

   35 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' . ';'

    ';'  shift, and go to state 537


state 533

   32 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' . ';'

    ';'  shift, and go to state 538


state 534

   34 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt . ')' ';'

    ')'  shift, and go to state 539


state 535

  180 iteration_statement: KW_FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' . statement

    IDENTIFIER        shift, and go to state 153
    STRING_LITERAL    shift, and go to state 154
    INTEGER_CONSTANT  shift, and go to state 155
    FLOAT_CONSTANT    shift, and go to state 156
    CHAR_CONSTANT     shift, and go to state 157
    KW_RETURN         shift, and go to state 159
    KW_IF             shift, and go to state 160
    KW_WHILE          shift, and go to state 161
    KW_FOR            shift, and go to state 162
    KW_DO             shift, and go to state 163
    KW_SWITCH         shift, and go to state 164
    KW_BREAK          shift, and go to state 165
    KW_CONTINUE       shift, and go to state 166
    KW_GOTO           shift, and go to state 167
    KW_SIZEOF         shift, and go to state 168
    INC               shift, and go to state 169
    DEC               shift, and go to state 170
    '+'               shift, and go to state 171
    '-'               shift, and go to state 172
    '!'               shift, and go to state 173
    '~'               shift, and go to state 174
    '('               shift, and go to state 175
    ';'               shift, and go to state 176
    '{'               shift, and go to state 112

    statement                  go to state 540
    compound_statement         go to state 179
    expression_statement       go to state 183
    selection_statement        go to state 184
    iteration_statement        go to state 185
    jump_statement             go to state 186
    expression                 go to state 187
    assignment_expression      go to state 188
    conditional_expression     go to state 189
    logical_or_expression      go to state 190
    logical_and_expression     go to state 191
    inclusive_or_expression    go to state 192
    exclusive_or_expression    go to state 193
    and_expression             go to state 194
    equality_expression        go to state 195
    relational_expression      go to state 196
    shift_expression           go to state 197
    additive_expression        go to state 198
    multiplicative_expression  go to state 199
    unary_expression           go to state 200
    postfix_expression         go to state 202
    primary_expression         go to state 203


state 536

  160 block_item: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';' .

    $default  reduce using rule 160 (block_item)


state 537

   35 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';' .

    $default  reduce using rule 35 (external_declaration)


state 538

   32 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';' .

    $default  reduce using rule 32 (external_declaration)


state 539

   34 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' . ';'

    ';'  shift, and go to state 541


state 540

  180 iteration_statement: KW_FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' statement .

    $default  reduce using rule 180 (iteration_statement)


state 541

   34 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';' .

    $default  reduce using rule 34 (external_declaration)
