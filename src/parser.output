Terminals which are not used

   KW_ALIGNOF
   KW_AUTO_TYPE
   KW_EXTENSION
   LSHIFT
   RSHIFT
   '?'
   '|'
   '^'
   '!'
   '~'


Rules never reduced

   47 declarator_opt: declarator

   66 parameter_type_list_opt: /* empty */

  119 function_declspec: KW_INT
  120                  | declaration_specifiers


State 3 conflicts: 1 reduce/reduce
State 37 conflicts: 1 reduce/reduce
State 45 conflicts: 1 shift/reduce, 2 reduce/reduce
State 70 conflicts: 17 reduce/reduce
State 113 conflicts: 2 shift/reduce
State 114 conflicts: 1 shift/reduce
State 116 conflicts: 3 shift/reduce
State 119 conflicts: 1 shift/reduce
State 136 conflicts: 1 shift/reduce
State 207 conflicts: 1 reduce/reduce
State 224 conflicts: 2 shift/reduce, 2 reduce/reduce
State 396 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: /* empty */
    2                 | translation_unit external_declaration

    3 external_declaration: function_definition
    4                     | declaration ';'
    5                     | static_assert_declaration
    6                     | simple_function_definition

    7 declaration: declaration_specifiers declarator_opt
    8            | declaration_specifiers init_declarator_list

    9 declaration_specifiers: declaration_specifier
   10                       | declaration_specifiers declaration_specifier

   11 declaration_specifier: storage_class_specifier
   12                      | type_specifier
   13                      | type_qualifier
   14                      | function_specifier
   15                      | alignment_specifier
   16                      | attribute_specifier
   17                      | declspec_specifier

   18 storage_class_specifier: KW_TYPEDEF
   19                        | KW_EXTERN
   20                        | KW_STATIC
   21                        | KW_THREAD_LOCAL
   22                        | KW_AUTO
   23                        | KW_REGISTER

   24 type_qualifier: KW_CONST
   25               | KW_VOLATILE
   26               | KW_RESTRICT
   27               | KW_ATOMIC

   28 function_specifier: KW_INLINE
   29                   | KW_NORETURN

   30 alignment_specifier: KW_ALIGNAS '(' type_specifier ')'
   31                    | KW_ALIGNAS '(' INTEGER_CONSTANT ')'

   32 attribute_specifier: KW_ATTRIBUTE '(' attribute_arg_list_opt ')'

   33 declspec_specifier: KW_DECLSPEC '(' attribute_arg_list_opt ')'

   34 attribute_arg_list_opt: /* empty */
   35                       | attribute_arg_list

   36 attribute_arg_list: attribute_arg
   37                   | attribute_arg_list ',' attribute_arg

   38 attribute_arg: IDENTIFIER
   39              | STRING_LITERAL
   40              | INTEGER_CONSTANT
   41              | '(' attribute_arg_list_opt ')'

   42 init_declarator_list: init_declarator
   43                     | init_declarator_list ',' init_declarator

   44 init_declarator: declarator
   45                | declarator '=' initializer

   46 declarator_opt: /* empty */
   47               | declarator

   48 declarator: pointer_opt direct_declarator

   49 pointer_opt: /* empty */
   50            | pointer

   51 pointer: '*'
   52        | '*' type_qualifier_list
   53        | '*' pointer
   54        | '*' type_qualifier_list pointer

   55 type_qualifier_list: type_qualifier
   56                    | type_qualifier_list type_qualifier

   57 direct_declarator: IDENTIFIER
   58                  | '(' declarator ')'
   59                  | direct_declarator '[' assignment_expression_opt ']'
   60                  | direct_declarator '(' parameter_type_list_opt ')'
   61                  | direct_declarator '(' identifier_list_opt ')'

   62 identifier_list_opt: /* empty */
   63                    | identifier_list

   64 identifier_list: IDENTIFIER
   65                | identifier_list ',' IDENTIFIER

   66 parameter_type_list_opt: /* empty */
   67                        | parameter_type_list

   68 parameter_type_list: parameter_list
   69                    | parameter_list ',' ELLIPSIS

   70 parameter_list: parameter_declaration
   71               | parameter_list ',' parameter_declaration

   72 parameter_declaration: declaration_specifiers declarator
   73                      | declaration_specifiers

   74 type_specifier: KW_VOID
   75               | KW_CHAR
   76               | KW_SHORT
   77               | KW_INT
   78               | KW_LONG
   79               | KW_FLOAT
   80               | KW_DOUBLE
   81               | KW_SIGNED
   82               | KW_UNSIGNED
   83               | KW_BOOL
   84               | KW_COMPLEX
   85               | KW_IMAGINARY
   86               | struct_or_union_specifier
   87               | enum_specifier
   88               | KW_TYPEOF '(' type_specifier ')'

   89 specifier_qualifier_list: type_specifier
   90                         | type_qualifier
   91                         | specifier_qualifier_list type_specifier
   92                         | specifier_qualifier_list type_qualifier

   93 struct_or_union_specifier: KW_STRUCT IDENTIFIER
   94                          | KW_UNION IDENTIFIER
   95                          | KW_STRUCT '{' struct_declaration_list '}'
   96                          | KW_UNION '{' struct_declaration_list '}'
   97                          | KW_STRUCT IDENTIFIER '{' struct_declaration_list '}'
   98                          | KW_UNION IDENTIFIER '{' struct_declaration_list '}'

   99 struct_declaration_list: struct_declaration
  100                        | struct_declaration_list struct_declaration

  101 struct_declaration: specifier_qualifier_list struct_declarator_list ';'
  102                   | static_assert_declaration

  103 struct_declarator_list: struct_declarator
  104                       | struct_declarator_list ',' struct_declarator

  105 struct_declarator: declarator
  106                  | ':' constant_expression
  107                  | declarator ':' constant_expression

  108 enum_specifier: KW_ENUM IDENTIFIER
  109               | KW_ENUM '{' enumerator_list_opt '}'
  110               | KW_ENUM IDENTIFIER '{' enumerator_list_opt '}'

  111 enumerator_list_opt: /* empty */
  112                    | enumerator_list

  113 enumerator_list: enumerator
  114                | enumerator_list ',' enumerator
  115                | enumerator_list ','

  116 enumerator: IDENTIFIER
  117           | IDENTIFIER '=' constant_expression

  118 simple_function_definition: function_declspec IDENTIFIER '(' simple_param_list_opt ')' compound_statement

  119 function_declspec: KW_INT
  120                  | declaration_specifiers

  121 simple_param_list_opt: /* empty */
  122                      | simple_param_list

  123 simple_param_list: simple_param
  124                  | simple_param_list ',' simple_param

  125 simple_param: declaration_specifiers pointer_opt IDENTIFIER
  126             | declaration_specifiers pointer_opt

  127 function_definition: type_specifier declarator compound_statement

  128 compound_statement: '{' block_item_list_opt '}'

  129 block_item_list_opt: /* empty */
  130                    | block_item_list

  131 block_item_list: block_item
  132                | block_item_list block_item

  133 block_item: declaration ';'
  134           | statement

  135 asm_statement: KW_ASM asm_qualifiers_opt '(' asm_arguments ')' ';'

  136 asm_qualifiers_opt: /* empty */
  137                   | asm_qualifiers_opt KW_VOLATILE
  138                   | asm_qualifiers_opt KW_INLINE
  139                   | asm_qualifiers_opt KW_GOTO

  140 asm_arguments: string_seq
  141              | string_seq ':' asm_output_operands_opt
  142              | string_seq ':' asm_output_operands_opt ':' asm_input_operands_opt
  143              | string_seq ':' asm_output_operands_opt ':' asm_input_operands_opt ':' asm_clobbers_opt
  144              | string_seq ':' asm_output_operands_opt ':' asm_input_operands_opt ':' asm_clobbers_opt ':' asm_goto_labels_opt

  145 asm_output_operands_opt: /* empty */
  146                        | asm_output_operands

  147 asm_input_operands_opt: /* empty */
  148                       | asm_input_operands

  149 asm_clobbers_opt: /* empty */
  150                 | asm_clobbers

  151 asm_goto_labels_opt: /* empty */
  152                    | asm_goto_labels

  153 asm_output_operands: asm_output_operand
  154                    | asm_output_operands ',' asm_output_operand

  155 asm_input_operands: asm_input_operand
  156                   | asm_input_operands ',' asm_input_operand

  157 asm_output_operand: asm_symbolic_name_opt STRING_LITERAL '(' unary_expression ')'

  158 asm_input_operand: asm_symbolic_name_opt STRING_LITERAL '(' assignment_expression ')'

  159 asm_symbolic_name_opt: /* empty */
  160                      | '[' IDENTIFIER ']'

  161 asm_clobbers: STRING_LITERAL
  162             | asm_clobbers ',' STRING_LITERAL

  163 asm_goto_labels: IDENTIFIER
  164                | asm_goto_labels ',' IDENTIFIER

  165 static_assert_declaration: KW_STATIC_ASSERT '(' conditional_expression ',' STRING_LITERAL ')' ';'

  166 statement: ';'
  167          | expression ';'
  168          | KW_RETURN expression_opt ';'
  169          | compound_statement
  170          | labeled_statement
  171          | KW_IF '(' expression ')' statement
  172          | KW_IF '(' expression ')' statement KW_ELSE statement
  173          | KW_WHILE '(' expression ')' statement
  174          | KW_DO statement KW_WHILE '(' expression ')' ';'
  175          | KW_FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' statement
  176          | KW_FOR '(' declaration expression_opt ';' expression_opt ')' statement
  177          | KW_SWITCH '(' expression ')' statement
  178          | KW_BREAK ';'
  179          | KW_CONTINUE ';'
  180          | KW_GOTO IDENTIFIER ';'
  181          | asm_statement

  182 labeled_statement: IDENTIFIER ':' statement
  183                  | KW_CASE constant_expression ':' statement
  184                  | KW_DEFAULT ':' statement

  185 expression_opt: /* empty */
  186               | expression

  187 expression: assignment_expression

  188 assignment_expression: conditional_expression
  189                      | unary_expression '=' assignment_expression
  190                      | unary_expression ADD_ASSIGN assignment_expression
  191                      | unary_expression SUB_ASSIGN assignment_expression
  192                      | unary_expression MUL_ASSIGN assignment_expression
  193                      | unary_expression DIV_ASSIGN assignment_expression
  194                      | unary_expression MOD_ASSIGN assignment_expression
  195                      | unary_expression AND_ASSIGN assignment_expression
  196                      | unary_expression OR_ASSIGN assignment_expression
  197                      | unary_expression XOR_ASSIGN assignment_expression
  198                      | unary_expression LSHIFT_ASSIGN assignment_expression
  199                      | unary_expression RSHIFT_ASSIGN assignment_expression

  200 conditional_expression: logical_or_expression

  201 logical_or_expression: logical_and_expression
  202                      | logical_or_expression LOGOR logical_and_expression

  203 logical_and_expression: equality_expression
  204                       | logical_and_expression LOGAND equality_expression

  205 equality_expression: relational_expression
  206                    | equality_expression EQ relational_expression
  207                    | equality_expression NE relational_expression

  208 relational_expression: additive_expression
  209                      | relational_expression '<' additive_expression
  210                      | relational_expression '>' additive_expression
  211                      | relational_expression LE additive_expression
  212                      | relational_expression GE additive_expression

  213 additive_expression: multiplicative_expression
  214                    | additive_expression '+' multiplicative_expression
  215                    | additive_expression '-' multiplicative_expression

  216 multiplicative_expression: unary_expression
  217                          | multiplicative_expression '*' unary_expression
  218                          | multiplicative_expression '/' unary_expression
  219                          | multiplicative_expression '%' unary_expression

  220 unary_expression: postfix_expression
  221                 | INC unary_expression
  222                 | DEC unary_expression
  223                 | '&' unary_expression
  224                 | '*' unary_expression
  225                 | '+' unary_expression
  226                 | '-' unary_expression
  227                 | KW_SIZEOF unary_expression
  228                 | KW_SIZEOF '(' type_specifier ')'
  229                 | KW_TYPEOF '(' expression ')'

  230 postfix_expression: primary_expression
  231                   | postfix_expression '(' argument_expression_list_opt ')'
  232                   | postfix_expression INC
  233                   | postfix_expression DEC
  234                   | postfix_expression '[' expression ']'
  235                   | postfix_expression '.' IDENTIFIER
  236                   | postfix_expression ARROW IDENTIFIER
  237                   | KW_GENERIC '(' assignment_expression ',' assignment_expression ')'

  238 argument_expression_list_opt: /* empty */
  239                             | argument_expression_list

  240 argument_expression_list: assignment_expression
  241                         | argument_expression_list ',' assignment_expression

  242 primary_expression: IDENTIFIER
  243                   | constant
  244                   | string_seq
  245                   | '(' expression ')'
  246                   | LPAREN_BRACE compound_statement ')'

  247 constant: INTEGER_CONSTANT
  248         | FLOAT_CONSTANT
  249         | CHAR_CONSTANT

  250 string_seq: STRING_LITERAL
  251           | string_seq STRING_LITERAL

  252 assignment_expression_opt: /* empty */
  253                          | assignment_expression

  254 initializer: assignment_expression
  255            | '{' initializer_list '}'
  256            | '{' initializer_list ',' '}'

  257 initializer_list: designation_opt initializer
  258                 | initializer_list ',' designation_opt initializer

  259 designation_opt: /* empty */
  260                | designation

  261 designation: designator_list '='

  262 designator_list: designator
  263                | designator_list designator

  264 designator: '.' IDENTIFIER
  265           | '[' constant_expression ']'

  266 constant_expression: conditional_expression


Terminals, with rules where they appear

$end (0) 0
'!' (33)
'%' (37) 219
'&' (38) 223
'(' (40) 30 31 32 33 41 58 60 61 88 118 135 157 158 165 171 172 173
    174 175 176 177 228 229 231 237 245
')' (41) 30 31 32 33 41 58 60 61 88 118 135 157 158 165 171 172 173
    174 175 176 177 228 229 231 237 245 246
'*' (42) 51 52 53 54 217 224
'+' (43) 214 225
',' (44) 37 43 65 69 71 104 114 115 124 154 156 162 164 165 237 241
    256 258
'-' (45) 215 226
'.' (46) 235 264
'/' (47) 218
':' (58) 106 107 141 142 143 144 182 183 184
';' (59) 4 101 133 135 165 166 167 168 174 175 176 178 179 180
'<' (60) 209
'=' (61) 45 117 189 261
'>' (62) 210
'?' (63)
'[' (91) 59 160 234 265
']' (93) 59 160 234 265
'^' (94)
'{' (123) 95 96 97 98 109 110 128 255 256
'|' (124)
'}' (125) 95 96 97 98 109 110 128 255 256
'~' (126)
error (256)
IDENTIFIER (258) 38 57 64 65 93 94 97 98 108 110 116 117 118 125 160
    163 164 180 182 235 236 242 264
STRING_LITERAL (259) 39 157 158 161 162 165 250 251
INTEGER_CONSTANT (260) 31 40 247
FLOAT_CONSTANT (261) 248
CHAR_CONSTANT (262) 249
KW_INT (263) 77 119
KW_CHAR (264) 75
KW_VOID (265) 74
KW_FLOAT (266) 79
KW_DOUBLE (267) 80
KW_SHORT (268) 76
KW_LONG (269) 78
KW_SIGNED (270) 81
KW_UNSIGNED (271) 82
KW_BOOL (272) 83
KW_COMPLEX (273) 84
KW_IMAGINARY (274) 85
KW_STRUCT (275) 93 95 97
KW_UNION (276) 94 96 98
KW_ENUM (277) 108 109 110
KW_TYPEDEF (278) 18
KW_RETURN (279) 168
KW_IF (280) 171 172
KW_ELSE (281) 172
KW_WHILE (282) 173 174
KW_FOR (283) 175 176
KW_DO (284) 174
KW_SWITCH (285) 177
KW_CASE (286) 183
KW_DEFAULT (287) 184
KW_BREAK (288) 178
KW_CONTINUE (289) 179
KW_GOTO (290) 139 180
KW_SIZEOF (291) 227 228
KW_ALIGNAS (292) 30 31
KW_ALIGNOF (293)
KW_NORETURN (294) 29
KW_THREAD_LOCAL (295) 21
KW_ATOMIC (296) 27
KW_CONST (297) 24
KW_VOLATILE (298) 25 137
KW_RESTRICT (299) 26
KW_INLINE (300) 28 138
KW_EXTERN (301) 19
KW_STATIC (302) 20
KW_REGISTER (303) 23
KW_AUTO (304) 22
KW_STATIC_ASSERT (305) 165
KW_GENERIC (306) 237
KW_TYPEOF (307) 88 229
KW_AUTO_TYPE (308)
KW_ATTRIBUTE (309) 32
KW_DECLSPEC (310) 33
KW_EXTENSION (311)
KW_ASM (312) 135
ELLIPSIS (313) 69
ARROW (314) 236
INC (315) 221 232
DEC (316) 222 233
LSHIFT (317)
RSHIFT (318)
LE (319) 211
GE (320) 212
EQ (321) 206
NE (322) 207
LOGAND (323) 204
LOGOR (324) 202
ADD_ASSIGN (325) 190
SUB_ASSIGN (326) 191
MUL_ASSIGN (327) 192
DIV_ASSIGN (328) 193
MOD_ASSIGN (329) 194
AND_ASSIGN (330) 195
OR_ASSIGN (331) 196
XOR_ASSIGN (332) 197
LSHIFT_ASSIGN (333) 198
RSHIFT_ASSIGN (334) 199
LPAREN_BRACE (335) 246


Nonterminals, with rules where they appear

$accept (105)
    on left: 0
translation_unit (106)
    on left: 1 2, on right: 0 2
external_declaration (107)
    on left: 3 4 5 6, on right: 2
declaration (108)
    on left: 7 8, on right: 4 133 176
declaration_specifiers (109)
    on left: 9 10, on right: 7 8 10 72 73 120 125 126
declaration_specifier (110)
    on left: 11 12 13 14 15 16 17, on right: 9 10
storage_class_specifier (111)
    on left: 18 19 20 21 22 23, on right: 11
type_qualifier (112)
    on left: 24 25 26 27, on right: 13 55 56 90 92
function_specifier (113)
    on left: 28 29, on right: 14
alignment_specifier (114)
    on left: 30 31, on right: 15
attribute_specifier (115)
    on left: 32, on right: 16
declspec_specifier (116)
    on left: 33, on right: 17
attribute_arg_list_opt (117)
    on left: 34 35, on right: 32 33 41
attribute_arg_list (118)
    on left: 36 37, on right: 35 37
attribute_arg (119)
    on left: 38 39 40 41, on right: 36 37
init_declarator_list (120)
    on left: 42 43, on right: 8 43
init_declarator (121)
    on left: 44 45, on right: 42 43
declarator_opt (122)
    on left: 46 47, on right: 7
declarator (123)
    on left: 48, on right: 44 45 47 58 72 105 107 127
pointer_opt (124)
    on left: 49 50, on right: 48 125 126
pointer (125)
    on left: 51 52 53 54, on right: 50 53 54
type_qualifier_list (126)
    on left: 55 56, on right: 52 54 56
direct_declarator (127)
    on left: 57 58 59 60 61, on right: 48 59 60 61
identifier_list_opt (128)
    on left: 62 63, on right: 61
identifier_list (129)
    on left: 64 65, on right: 63 65
parameter_type_list_opt (130)
    on left: 66 67, on right: 60
parameter_type_list (131)
    on left: 68 69, on right: 67
parameter_list (132)
    on left: 70 71, on right: 68 69 71
parameter_declaration (133)
    on left: 72 73, on right: 70 71
type_specifier (134)
    on left: 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88,
    on right: 12 30 88 89 91 127 228
specifier_qualifier_list (135)
    on left: 89 90 91 92, on right: 91 92 101
struct_or_union_specifier (136)
    on left: 93 94 95 96 97 98, on right: 86
struct_declaration_list (137)
    on left: 99 100, on right: 95 96 97 98 100
struct_declaration (138)
    on left: 101 102, on right: 99 100
struct_declarator_list (139)
    on left: 103 104, on right: 101 104
struct_declarator (140)
    on left: 105 106 107, on right: 103 104
enum_specifier (141)
    on left: 108 109 110, on right: 87
enumerator_list_opt (142)
    on left: 111 112, on right: 109 110
enumerator_list (143)
    on left: 113 114 115, on right: 112 114 115
enumerator (144)
    on left: 116 117, on right: 113 114
simple_function_definition (145)
    on left: 118, on right: 6
function_declspec (146)
    on left: 119 120, on right: 118
simple_param_list_opt (147)
    on left: 121 122, on right: 118
simple_param_list (148)
    on left: 123 124, on right: 122 124
simple_param (149)
    on left: 125 126, on right: 123 124
function_definition (150)
    on left: 127, on right: 3
compound_statement (151)
    on left: 128, on right: 118 127 169 246
block_item_list_opt (152)
    on left: 129 130, on right: 128
block_item_list (153)
    on left: 131 132, on right: 130 132
block_item (154)
    on left: 133 134, on right: 131 132
asm_statement (155)
    on left: 135, on right: 181
asm_qualifiers_opt (156)
    on left: 136 137 138 139, on right: 135 137 138 139
asm_arguments (157)
    on left: 140 141 142 143 144, on right: 135
asm_output_operands_opt (158)
    on left: 145 146, on right: 141 142 143 144
asm_input_operands_opt (159)
    on left: 147 148, on right: 142 143 144
asm_clobbers_opt (160)
    on left: 149 150, on right: 143 144
asm_goto_labels_opt (161)
    on left: 151 152, on right: 144
asm_output_operands (162)
    on left: 153 154, on right: 146 154
asm_input_operands (163)
    on left: 155 156, on right: 148 156
asm_output_operand (164)
    on left: 157, on right: 153 154
asm_input_operand (165)
    on left: 158, on right: 155 156
asm_symbolic_name_opt (166)
    on left: 159 160, on right: 157 158
asm_clobbers (167)
    on left: 161 162, on right: 150 162
asm_goto_labels (168)
    on left: 163 164, on right: 152 164
static_assert_declaration (169)
    on left: 165, on right: 5 102
statement (170)
    on left: 166 167 168 169 170 171 172 173 174 175 176 177 178 179
    180 181, on right: 134 171 172 173 174 175 176 177 182 183 184
labeled_statement (171)
    on left: 182 183 184, on right: 170
expression_opt (172)
    on left: 185 186, on right: 168 175 176
expression (173)
    on left: 187, on right: 167 171 172 173 174 177 186 229 234 245
assignment_expression (174)
    on left: 188 189 190 191 192 193 194 195 196 197 198 199,
    on right: 158 187 189 190 191 192 193 194 195 196 197 198 199 237
    240 241 253 254
conditional_expression (175)
    on left: 200, on right: 165 188 266
logical_or_expression (176)
    on left: 201 202, on right: 200 202
logical_and_expression (177)
    on left: 203 204, on right: 201 202 204
equality_expression (178)
    on left: 205 206 207, on right: 203 204 206 207
relational_expression (179)
    on left: 208 209 210 211 212, on right: 205 206 207 209 210 211
    212
additive_expression (180)
    on left: 213 214 215, on right: 208 209 210 211 212 214 215
multiplicative_expression (181)
    on left: 216 217 218 219, on right: 213 214 215 217 218 219
unary_expression (182)
    on left: 220 221 222 223 224 225 226 227 228 229,
    on right: 157 189 190 191 192 193 194 195 196 197 198 199 216 217
    218 219 221 222 223 224 225 226 227
postfix_expression (183)
    on left: 230 231 232 233 234 235 236 237, on right: 220 231 232
    233 234 235 236
argument_expression_list_opt (184)
    on left: 238 239, on right: 231
argument_expression_list (185)
    on left: 240 241, on right: 239 241
primary_expression (186)
    on left: 242 243 244 245 246, on right: 230
constant (187)
    on left: 247 248 249, on right: 243
string_seq (188)
    on left: 250 251, on right: 140 141 142 143 144 244 251
assignment_expression_opt (189)
    on left: 252 253, on right: 59
initializer (190)
    on left: 254 255 256, on right: 45 257 258
initializer_list (191)
    on left: 257 258, on right: 255 256 258
designation_opt (192)
    on left: 259 260, on right: 257 258
designation (193)
    on left: 261, on right: 260
designator_list (194)
    on left: 262 263, on right: 261 263
designator (195)
    on left: 264 265, on right: 262 263
constant_expression (196)
    on left: 266, on right: 106 107 117 183 265


state 0

    0 $accept: . translation_unit $end

    $default  reduce using rule 1 (translation_unit)

    translation_unit  go to state 1


state 1

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . external_declaration

    $end              shift, and go to state 2
    KW_INT            shift, and go to state 3
    KW_CHAR           shift, and go to state 4
    KW_VOID           shift, and go to state 5
    KW_FLOAT          shift, and go to state 6
    KW_DOUBLE         shift, and go to state 7
    KW_SHORT          shift, and go to state 8
    KW_LONG           shift, and go to state 9
    KW_SIGNED         shift, and go to state 10
    KW_UNSIGNED       shift, and go to state 11
    KW_BOOL           shift, and go to state 12
    KW_COMPLEX        shift, and go to state 13
    KW_IMAGINARY      shift, and go to state 14
    KW_STRUCT         shift, and go to state 15
    KW_UNION          shift, and go to state 16
    KW_ENUM           shift, and go to state 17
    KW_TYPEDEF        shift, and go to state 18
    KW_ALIGNAS        shift, and go to state 19
    KW_NORETURN       shift, and go to state 20
    KW_THREAD_LOCAL   shift, and go to state 21
    KW_ATOMIC         shift, and go to state 22
    KW_CONST          shift, and go to state 23
    KW_VOLATILE       shift, and go to state 24
    KW_RESTRICT       shift, and go to state 25
    KW_INLINE         shift, and go to state 26
    KW_EXTERN         shift, and go to state 27
    KW_STATIC         shift, and go to state 28
    KW_REGISTER       shift, and go to state 29
    KW_AUTO           shift, and go to state 30
    KW_STATIC_ASSERT  shift, and go to state 31
    KW_TYPEOF         shift, and go to state 32
    KW_ATTRIBUTE      shift, and go to state 33
    KW_DECLSPEC       shift, and go to state 34

    external_declaration        go to state 35
    declaration                 go to state 36
    declaration_specifiers      go to state 37
    declaration_specifier       go to state 38
    storage_class_specifier     go to state 39
    type_qualifier              go to state 40
    function_specifier          go to state 41
    alignment_specifier         go to state 42
    attribute_specifier         go to state 43
    declspec_specifier          go to state 44
    type_specifier              go to state 45
    struct_or_union_specifier   go to state 46
    enum_specifier              go to state 47
    simple_function_definition  go to state 48
    function_declspec           go to state 49
    function_definition         go to state 50
    static_assert_declaration   go to state 51


state 2

    0 $accept: translation_unit $end .

    $default  accept


state 3

   77 type_specifier: KW_INT .
  119 function_declspec: KW_INT .

    IDENTIFIER  reduce using rule 77 (type_specifier)
    IDENTIFIER  [reduce using rule 119 (function_declspec)]
    $default    reduce using rule 77 (type_specifier)


state 4

   75 type_specifier: KW_CHAR .

    $default  reduce using rule 75 (type_specifier)


state 5

   74 type_specifier: KW_VOID .

    $default  reduce using rule 74 (type_specifier)


state 6

   79 type_specifier: KW_FLOAT .

    $default  reduce using rule 79 (type_specifier)


state 7

   80 type_specifier: KW_DOUBLE .

    $default  reduce using rule 80 (type_specifier)


state 8

   76 type_specifier: KW_SHORT .

    $default  reduce using rule 76 (type_specifier)


state 9

   78 type_specifier: KW_LONG .

    $default  reduce using rule 78 (type_specifier)


state 10

   81 type_specifier: KW_SIGNED .

    $default  reduce using rule 81 (type_specifier)


state 11

   82 type_specifier: KW_UNSIGNED .

    $default  reduce using rule 82 (type_specifier)


state 12

   83 type_specifier: KW_BOOL .

    $default  reduce using rule 83 (type_specifier)


state 13

   84 type_specifier: KW_COMPLEX .

    $default  reduce using rule 84 (type_specifier)


state 14

   85 type_specifier: KW_IMAGINARY .

    $default  reduce using rule 85 (type_specifier)


state 15

   93 struct_or_union_specifier: KW_STRUCT . IDENTIFIER
   95                          | KW_STRUCT . '{' struct_declaration_list '}'
   97                          | KW_STRUCT . IDENTIFIER '{' struct_declaration_list '}'

    IDENTIFIER  shift, and go to state 52
    '{'         shift, and go to state 53


state 16

   94 struct_or_union_specifier: KW_UNION . IDENTIFIER
   96                          | KW_UNION . '{' struct_declaration_list '}'
   98                          | KW_UNION . IDENTIFIER '{' struct_declaration_list '}'

    IDENTIFIER  shift, and go to state 54
    '{'         shift, and go to state 55


state 17

  108 enum_specifier: KW_ENUM . IDENTIFIER
  109               | KW_ENUM . '{' enumerator_list_opt '}'
  110               | KW_ENUM . IDENTIFIER '{' enumerator_list_opt '}'

    IDENTIFIER  shift, and go to state 56
    '{'         shift, and go to state 57


state 18

   18 storage_class_specifier: KW_TYPEDEF .

    $default  reduce using rule 18 (storage_class_specifier)


state 19

   30 alignment_specifier: KW_ALIGNAS . '(' type_specifier ')'
   31                    | KW_ALIGNAS . '(' INTEGER_CONSTANT ')'

    '('  shift, and go to state 58


state 20

   29 function_specifier: KW_NORETURN .

    $default  reduce using rule 29 (function_specifier)


state 21

   21 storage_class_specifier: KW_THREAD_LOCAL .

    $default  reduce using rule 21 (storage_class_specifier)


state 22

   27 type_qualifier: KW_ATOMIC .

    $default  reduce using rule 27 (type_qualifier)


state 23

   24 type_qualifier: KW_CONST .

    $default  reduce using rule 24 (type_qualifier)


state 24

   25 type_qualifier: KW_VOLATILE .

    $default  reduce using rule 25 (type_qualifier)


state 25

   26 type_qualifier: KW_RESTRICT .

    $default  reduce using rule 26 (type_qualifier)


state 26

   28 function_specifier: KW_INLINE .

    $default  reduce using rule 28 (function_specifier)


state 27

   19 storage_class_specifier: KW_EXTERN .

    $default  reduce using rule 19 (storage_class_specifier)


state 28

   20 storage_class_specifier: KW_STATIC .

    $default  reduce using rule 20 (storage_class_specifier)


state 29

   23 storage_class_specifier: KW_REGISTER .

    $default  reduce using rule 23 (storage_class_specifier)


state 30

   22 storage_class_specifier: KW_AUTO .

    $default  reduce using rule 22 (storage_class_specifier)


state 31

  165 static_assert_declaration: KW_STATIC_ASSERT . '(' conditional_expression ',' STRING_LITERAL ')' ';'

    '('  shift, and go to state 59


state 32

   88 type_specifier: KW_TYPEOF . '(' type_specifier ')'

    '('  shift, and go to state 60


state 33

   32 attribute_specifier: KW_ATTRIBUTE . '(' attribute_arg_list_opt ')'

    '('  shift, and go to state 61


state 34

   33 declspec_specifier: KW_DECLSPEC . '(' attribute_arg_list_opt ')'

    '('  shift, and go to state 62


state 35

    2 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 2 (translation_unit)


state 36

    4 external_declaration: declaration . ';'

    ';'  shift, and go to state 63


state 37

    7 declaration: declaration_specifiers . declarator_opt
    8            | declaration_specifiers . init_declarator_list
   10 declaration_specifiers: declaration_specifiers . declaration_specifier
  120 function_declspec: declaration_specifiers .

    KW_INT           shift, and go to state 64
    KW_CHAR          shift, and go to state 4
    KW_VOID          shift, and go to state 5
    KW_FLOAT         shift, and go to state 6
    KW_DOUBLE        shift, and go to state 7
    KW_SHORT         shift, and go to state 8
    KW_LONG          shift, and go to state 9
    KW_SIGNED        shift, and go to state 10
    KW_UNSIGNED      shift, and go to state 11
    KW_BOOL          shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_IMAGINARY     shift, and go to state 14
    KW_STRUCT        shift, and go to state 15
    KW_UNION         shift, and go to state 16
    KW_ENUM          shift, and go to state 17
    KW_TYPEDEF       shift, and go to state 18
    KW_ALIGNAS       shift, and go to state 19
    KW_NORETURN      shift, and go to state 20
    KW_THREAD_LOCAL  shift, and go to state 21
    KW_ATOMIC        shift, and go to state 22
    KW_CONST         shift, and go to state 23
    KW_VOLATILE      shift, and go to state 24
    KW_RESTRICT      shift, and go to state 25
    KW_INLINE        shift, and go to state 26
    KW_EXTERN        shift, and go to state 27
    KW_STATIC        shift, and go to state 28
    KW_REGISTER      shift, and go to state 29
    KW_AUTO          shift, and go to state 30
    KW_TYPEOF        shift, and go to state 32
    KW_ATTRIBUTE     shift, and go to state 33
    KW_DECLSPEC      shift, and go to state 34
    '*'              shift, and go to state 65

    IDENTIFIER  reduce using rule 49 (pointer_opt)
    IDENTIFIER  [reduce using rule 120 (function_declspec)]
    ';'         reduce using rule 46 (declarator_opt)
    $default    reduce using rule 49 (pointer_opt)

    declaration_specifier      go to state 66
    storage_class_specifier    go to state 39
    type_qualifier             go to state 40
    function_specifier         go to state 41
    alignment_specifier        go to state 42
    attribute_specifier        go to state 43
    declspec_specifier         go to state 44
    init_declarator_list       go to state 67
    init_declarator            go to state 68
    declarator_opt             go to state 69
    declarator                 go to state 70
    pointer_opt                go to state 71
    pointer                    go to state 72
    type_specifier             go to state 73
    struct_or_union_specifier  go to state 46
    enum_specifier             go to state 47


state 38

    9 declaration_specifiers: declaration_specifier .

    $default  reduce using rule 9 (declaration_specifiers)


state 39

   11 declaration_specifier: storage_class_specifier .

    $default  reduce using rule 11 (declaration_specifier)


state 40

   13 declaration_specifier: type_qualifier .

    $default  reduce using rule 13 (declaration_specifier)


state 41

   14 declaration_specifier: function_specifier .

    $default  reduce using rule 14 (declaration_specifier)


state 42

   15 declaration_specifier: alignment_specifier .

    $default  reduce using rule 15 (declaration_specifier)


state 43

   16 declaration_specifier: attribute_specifier .

    $default  reduce using rule 16 (declaration_specifier)


state 44

   17 declaration_specifier: declspec_specifier .

    $default  reduce using rule 17 (declaration_specifier)


state 45

   12 declaration_specifier: type_specifier .
  127 function_definition: type_specifier . declarator compound_statement

    '*'  shift, and go to state 65

    IDENTIFIER  reduce using rule 12 (declaration_specifier)
    IDENTIFIER  [reduce using rule 49 (pointer_opt)]
    '*'         [reduce using rule 12 (declaration_specifier)]
    '('         reduce using rule 12 (declaration_specifier)
    '('         [reduce using rule 49 (pointer_opt)]
    $default    reduce using rule 12 (declaration_specifier)

    declarator   go to state 74
    pointer_opt  go to state 71
    pointer      go to state 72


state 46

   86 type_specifier: struct_or_union_specifier .

    $default  reduce using rule 86 (type_specifier)


state 47

   87 type_specifier: enum_specifier .

    $default  reduce using rule 87 (type_specifier)


state 48

    6 external_declaration: simple_function_definition .

    $default  reduce using rule 6 (external_declaration)


state 49

  118 simple_function_definition: function_declspec . IDENTIFIER '(' simple_param_list_opt ')' compound_statement

    IDENTIFIER  shift, and go to state 75


state 50

    3 external_declaration: function_definition .

    $default  reduce using rule 3 (external_declaration)


state 51

    5 external_declaration: static_assert_declaration .

    $default  reduce using rule 5 (external_declaration)


state 52

   93 struct_or_union_specifier: KW_STRUCT IDENTIFIER .
   97                          | KW_STRUCT IDENTIFIER . '{' struct_declaration_list '}'

    '{'  shift, and go to state 76

    $default  reduce using rule 93 (struct_or_union_specifier)


state 53

   95 struct_or_union_specifier: KW_STRUCT '{' . struct_declaration_list '}'

    KW_INT            shift, and go to state 64
    KW_CHAR           shift, and go to state 4
    KW_VOID           shift, and go to state 5
    KW_FLOAT          shift, and go to state 6
    KW_DOUBLE         shift, and go to state 7
    KW_SHORT          shift, and go to state 8
    KW_LONG           shift, and go to state 9
    KW_SIGNED         shift, and go to state 10
    KW_UNSIGNED       shift, and go to state 11
    KW_BOOL           shift, and go to state 12
    KW_COMPLEX        shift, and go to state 13
    KW_IMAGINARY      shift, and go to state 14
    KW_STRUCT         shift, and go to state 15
    KW_UNION          shift, and go to state 16
    KW_ENUM           shift, and go to state 17
    KW_ATOMIC         shift, and go to state 22
    KW_CONST          shift, and go to state 23
    KW_VOLATILE       shift, and go to state 24
    KW_RESTRICT       shift, and go to state 25
    KW_STATIC_ASSERT  shift, and go to state 31
    KW_TYPEOF         shift, and go to state 32

    type_qualifier             go to state 77
    type_specifier             go to state 78
    specifier_qualifier_list   go to state 79
    struct_or_union_specifier  go to state 46
    struct_declaration_list    go to state 80
    struct_declaration         go to state 81
    enum_specifier             go to state 47
    static_assert_declaration  go to state 82


state 54

   94 struct_or_union_specifier: KW_UNION IDENTIFIER .
   98                          | KW_UNION IDENTIFIER . '{' struct_declaration_list '}'

    '{'  shift, and go to state 83

    $default  reduce using rule 94 (struct_or_union_specifier)


state 55

   96 struct_or_union_specifier: KW_UNION '{' . struct_declaration_list '}'

    KW_INT            shift, and go to state 64
    KW_CHAR           shift, and go to state 4
    KW_VOID           shift, and go to state 5
    KW_FLOAT          shift, and go to state 6
    KW_DOUBLE         shift, and go to state 7
    KW_SHORT          shift, and go to state 8
    KW_LONG           shift, and go to state 9
    KW_SIGNED         shift, and go to state 10
    KW_UNSIGNED       shift, and go to state 11
    KW_BOOL           shift, and go to state 12
    KW_COMPLEX        shift, and go to state 13
    KW_IMAGINARY      shift, and go to state 14
    KW_STRUCT         shift, and go to state 15
    KW_UNION          shift, and go to state 16
    KW_ENUM           shift, and go to state 17
    KW_ATOMIC         shift, and go to state 22
    KW_CONST          shift, and go to state 23
    KW_VOLATILE       shift, and go to state 24
    KW_RESTRICT       shift, and go to state 25
    KW_STATIC_ASSERT  shift, and go to state 31
    KW_TYPEOF         shift, and go to state 32

    type_qualifier             go to state 77
    type_specifier             go to state 78
    specifier_qualifier_list   go to state 79
    struct_or_union_specifier  go to state 46
    struct_declaration_list    go to state 84
    struct_declaration         go to state 81
    enum_specifier             go to state 47
    static_assert_declaration  go to state 82


state 56

  108 enum_specifier: KW_ENUM IDENTIFIER .
  110               | KW_ENUM IDENTIFIER . '{' enumerator_list_opt '}'

    '{'  shift, and go to state 85

    $default  reduce using rule 108 (enum_specifier)


state 57

  109 enum_specifier: KW_ENUM '{' . enumerator_list_opt '}'

    IDENTIFIER  shift, and go to state 86

    $default  reduce using rule 111 (enumerator_list_opt)

    enumerator_list_opt  go to state 87
    enumerator_list      go to state 88
    enumerator           go to state 89


state 58

   30 alignment_specifier: KW_ALIGNAS '(' . type_specifier ')'
   31                    | KW_ALIGNAS '(' . INTEGER_CONSTANT ')'

    INTEGER_CONSTANT  shift, and go to state 90
    KW_INT            shift, and go to state 64
    KW_CHAR           shift, and go to state 4
    KW_VOID           shift, and go to state 5
    KW_FLOAT          shift, and go to state 6
    KW_DOUBLE         shift, and go to state 7
    KW_SHORT          shift, and go to state 8
    KW_LONG           shift, and go to state 9
    KW_SIGNED         shift, and go to state 10
    KW_UNSIGNED       shift, and go to state 11
    KW_BOOL           shift, and go to state 12
    KW_COMPLEX        shift, and go to state 13
    KW_IMAGINARY      shift, and go to state 14
    KW_STRUCT         shift, and go to state 15
    KW_UNION          shift, and go to state 16
    KW_ENUM           shift, and go to state 17
    KW_TYPEOF         shift, and go to state 32

    type_specifier             go to state 91
    struct_or_union_specifier  go to state 46
    enum_specifier             go to state 47


state 59

  165 static_assert_declaration: KW_STATIC_ASSERT '(' . conditional_expression ',' STRING_LITERAL ')' ';'

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    conditional_expression     go to state 108
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 60

   88 type_specifier: KW_TYPEOF '(' . type_specifier ')'

    KW_INT        shift, and go to state 64
    KW_CHAR       shift, and go to state 4
    KW_VOID       shift, and go to state 5
    KW_FLOAT      shift, and go to state 6
    KW_DOUBLE     shift, and go to state 7
    KW_SHORT      shift, and go to state 8
    KW_LONG       shift, and go to state 9
    KW_SIGNED     shift, and go to state 10
    KW_UNSIGNED   shift, and go to state 11
    KW_BOOL       shift, and go to state 12
    KW_COMPLEX    shift, and go to state 13
    KW_IMAGINARY  shift, and go to state 14
    KW_STRUCT     shift, and go to state 15
    KW_UNION      shift, and go to state 16
    KW_ENUM       shift, and go to state 17
    KW_TYPEOF     shift, and go to state 32

    type_specifier             go to state 120
    struct_or_union_specifier  go to state 46
    enum_specifier             go to state 47


state 61

   32 attribute_specifier: KW_ATTRIBUTE '(' . attribute_arg_list_opt ')'

    IDENTIFIER        shift, and go to state 121
    STRING_LITERAL    shift, and go to state 122
    INTEGER_CONSTANT  shift, and go to state 123
    '('               shift, and go to state 124

    $default  reduce using rule 34 (attribute_arg_list_opt)

    attribute_arg_list_opt  go to state 125
    attribute_arg_list      go to state 126
    attribute_arg           go to state 127


state 62

   33 declspec_specifier: KW_DECLSPEC '(' . attribute_arg_list_opt ')'

    IDENTIFIER        shift, and go to state 121
    STRING_LITERAL    shift, and go to state 122
    INTEGER_CONSTANT  shift, and go to state 123
    '('               shift, and go to state 124

    $default  reduce using rule 34 (attribute_arg_list_opt)

    attribute_arg_list_opt  go to state 128
    attribute_arg_list      go to state 126
    attribute_arg           go to state 127


state 63

    4 external_declaration: declaration ';' .

    $default  reduce using rule 4 (external_declaration)


state 64

   77 type_specifier: KW_INT .

    $default  reduce using rule 77 (type_specifier)


state 65

   51 pointer: '*' .
   52        | '*' . type_qualifier_list
   53        | '*' . pointer
   54        | '*' . type_qualifier_list pointer

    KW_ATOMIC    shift, and go to state 22
    KW_CONST     shift, and go to state 23
    KW_VOLATILE  shift, and go to state 24
    KW_RESTRICT  shift, and go to state 25
    '*'          shift, and go to state 65

    $default  reduce using rule 51 (pointer)

    type_qualifier       go to state 129
    pointer              go to state 130
    type_qualifier_list  go to state 131


state 66

   10 declaration_specifiers: declaration_specifiers declaration_specifier .

    $default  reduce using rule 10 (declaration_specifiers)


state 67

    8 declaration: declaration_specifiers init_declarator_list .
   43 init_declarator_list: init_declarator_list . ',' init_declarator

    ','  shift, and go to state 132

    $default  reduce using rule 8 (declaration)


state 68

   42 init_declarator_list: init_declarator .

    $default  reduce using rule 42 (init_declarator_list)


state 69

    7 declaration: declaration_specifiers declarator_opt .

    $default  reduce using rule 7 (declaration)


state 70

   44 init_declarator: declarator .
   45                | declarator . '=' initializer
   47 declarator_opt: declarator .

    '='  shift, and go to state 133

    IDENTIFIER        reduce using rule 44 (init_declarator)
    IDENTIFIER        [reduce using rule 47 (declarator_opt)]
    STRING_LITERAL    reduce using rule 44 (init_declarator)
    STRING_LITERAL    [reduce using rule 47 (declarator_opt)]
    INTEGER_CONSTANT  reduce using rule 44 (init_declarator)
    INTEGER_CONSTANT  [reduce using rule 47 (declarator_opt)]
    FLOAT_CONSTANT    reduce using rule 44 (init_declarator)
    FLOAT_CONSTANT    [reduce using rule 47 (declarator_opt)]
    CHAR_CONSTANT     reduce using rule 44 (init_declarator)
    CHAR_CONSTANT     [reduce using rule 47 (declarator_opt)]
    KW_SIZEOF         reduce using rule 44 (init_declarator)
    KW_SIZEOF         [reduce using rule 47 (declarator_opt)]
    KW_GENERIC        reduce using rule 44 (init_declarator)
    KW_GENERIC        [reduce using rule 47 (declarator_opt)]
    KW_TYPEOF         reduce using rule 44 (init_declarator)
    KW_TYPEOF         [reduce using rule 47 (declarator_opt)]
    INC               reduce using rule 44 (init_declarator)
    INC               [reduce using rule 47 (declarator_opt)]
    DEC               reduce using rule 44 (init_declarator)
    DEC               [reduce using rule 47 (declarator_opt)]
    LPAREN_BRACE      reduce using rule 44 (init_declarator)
    LPAREN_BRACE      [reduce using rule 47 (declarator_opt)]
    '&'               reduce using rule 44 (init_declarator)
    '&'               [reduce using rule 47 (declarator_opt)]
    '+'               reduce using rule 44 (init_declarator)
    '+'               [reduce using rule 47 (declarator_opt)]
    '-'               reduce using rule 44 (init_declarator)
    '-'               [reduce using rule 47 (declarator_opt)]
    '*'               reduce using rule 44 (init_declarator)
    '*'               [reduce using rule 47 (declarator_opt)]
    '('               reduce using rule 44 (init_declarator)
    '('               [reduce using rule 47 (declarator_opt)]
    ';'               reduce using rule 44 (init_declarator)
    ';'               [reduce using rule 47 (declarator_opt)]
    $default          reduce using rule 44 (init_declarator)


state 71

   48 declarator: pointer_opt . direct_declarator

    IDENTIFIER  shift, and go to state 134
    '('         shift, and go to state 135

    direct_declarator  go to state 136


state 72

   50 pointer_opt: pointer .

    $default  reduce using rule 50 (pointer_opt)


state 73

   12 declaration_specifier: type_specifier .

    $default  reduce using rule 12 (declaration_specifier)


state 74

  127 function_definition: type_specifier declarator . compound_statement

    '{'  shift, and go to state 137

    compound_statement  go to state 138


state 75

  118 simple_function_definition: function_declspec IDENTIFIER . '(' simple_param_list_opt ')' compound_statement

    '('  shift, and go to state 139


state 76

   97 struct_or_union_specifier: KW_STRUCT IDENTIFIER '{' . struct_declaration_list '}'

    KW_INT            shift, and go to state 64
    KW_CHAR           shift, and go to state 4
    KW_VOID           shift, and go to state 5
    KW_FLOAT          shift, and go to state 6
    KW_DOUBLE         shift, and go to state 7
    KW_SHORT          shift, and go to state 8
    KW_LONG           shift, and go to state 9
    KW_SIGNED         shift, and go to state 10
    KW_UNSIGNED       shift, and go to state 11
    KW_BOOL           shift, and go to state 12
    KW_COMPLEX        shift, and go to state 13
    KW_IMAGINARY      shift, and go to state 14
    KW_STRUCT         shift, and go to state 15
    KW_UNION          shift, and go to state 16
    KW_ENUM           shift, and go to state 17
    KW_ATOMIC         shift, and go to state 22
    KW_CONST          shift, and go to state 23
    KW_VOLATILE       shift, and go to state 24
    KW_RESTRICT       shift, and go to state 25
    KW_STATIC_ASSERT  shift, and go to state 31
    KW_TYPEOF         shift, and go to state 32

    type_qualifier             go to state 77
    type_specifier             go to state 78
    specifier_qualifier_list   go to state 79
    struct_or_union_specifier  go to state 46
    struct_declaration_list    go to state 140
    struct_declaration         go to state 81
    enum_specifier             go to state 47
    static_assert_declaration  go to state 82


state 77

   90 specifier_qualifier_list: type_qualifier .

    $default  reduce using rule 90 (specifier_qualifier_list)


state 78

   89 specifier_qualifier_list: type_specifier .

    $default  reduce using rule 89 (specifier_qualifier_list)


state 79

   91 specifier_qualifier_list: specifier_qualifier_list . type_specifier
   92                         | specifier_qualifier_list . type_qualifier
  101 struct_declaration: specifier_qualifier_list . struct_declarator_list ';'

    KW_INT        shift, and go to state 64
    KW_CHAR       shift, and go to state 4
    KW_VOID       shift, and go to state 5
    KW_FLOAT      shift, and go to state 6
    KW_DOUBLE     shift, and go to state 7
    KW_SHORT      shift, and go to state 8
    KW_LONG       shift, and go to state 9
    KW_SIGNED     shift, and go to state 10
    KW_UNSIGNED   shift, and go to state 11
    KW_BOOL       shift, and go to state 12
    KW_COMPLEX    shift, and go to state 13
    KW_IMAGINARY  shift, and go to state 14
    KW_STRUCT     shift, and go to state 15
    KW_UNION      shift, and go to state 16
    KW_ENUM       shift, and go to state 17
    KW_ATOMIC     shift, and go to state 22
    KW_CONST      shift, and go to state 23
    KW_VOLATILE   shift, and go to state 24
    KW_RESTRICT   shift, and go to state 25
    KW_TYPEOF     shift, and go to state 32
    ':'           shift, and go to state 141
    '*'           shift, and go to state 65

    $default  reduce using rule 49 (pointer_opt)

    type_qualifier             go to state 142
    declarator                 go to state 143
    pointer_opt                go to state 71
    pointer                    go to state 72
    type_specifier             go to state 144
    struct_or_union_specifier  go to state 46
    struct_declarator_list     go to state 145
    struct_declarator          go to state 146
    enum_specifier             go to state 47


state 80

   95 struct_or_union_specifier: KW_STRUCT '{' struct_declaration_list . '}'
  100 struct_declaration_list: struct_declaration_list . struct_declaration

    KW_INT            shift, and go to state 64
    KW_CHAR           shift, and go to state 4
    KW_VOID           shift, and go to state 5
    KW_FLOAT          shift, and go to state 6
    KW_DOUBLE         shift, and go to state 7
    KW_SHORT          shift, and go to state 8
    KW_LONG           shift, and go to state 9
    KW_SIGNED         shift, and go to state 10
    KW_UNSIGNED       shift, and go to state 11
    KW_BOOL           shift, and go to state 12
    KW_COMPLEX        shift, and go to state 13
    KW_IMAGINARY      shift, and go to state 14
    KW_STRUCT         shift, and go to state 15
    KW_UNION          shift, and go to state 16
    KW_ENUM           shift, and go to state 17
    KW_ATOMIC         shift, and go to state 22
    KW_CONST          shift, and go to state 23
    KW_VOLATILE       shift, and go to state 24
    KW_RESTRICT       shift, and go to state 25
    KW_STATIC_ASSERT  shift, and go to state 31
    KW_TYPEOF         shift, and go to state 32
    '}'               shift, and go to state 147

    type_qualifier             go to state 77
    type_specifier             go to state 78
    specifier_qualifier_list   go to state 79
    struct_or_union_specifier  go to state 46
    struct_declaration         go to state 148
    enum_specifier             go to state 47
    static_assert_declaration  go to state 82


state 81

   99 struct_declaration_list: struct_declaration .

    $default  reduce using rule 99 (struct_declaration_list)


state 82

  102 struct_declaration: static_assert_declaration .

    $default  reduce using rule 102 (struct_declaration)


state 83

   98 struct_or_union_specifier: KW_UNION IDENTIFIER '{' . struct_declaration_list '}'

    KW_INT            shift, and go to state 64
    KW_CHAR           shift, and go to state 4
    KW_VOID           shift, and go to state 5
    KW_FLOAT          shift, and go to state 6
    KW_DOUBLE         shift, and go to state 7
    KW_SHORT          shift, and go to state 8
    KW_LONG           shift, and go to state 9
    KW_SIGNED         shift, and go to state 10
    KW_UNSIGNED       shift, and go to state 11
    KW_BOOL           shift, and go to state 12
    KW_COMPLEX        shift, and go to state 13
    KW_IMAGINARY      shift, and go to state 14
    KW_STRUCT         shift, and go to state 15
    KW_UNION          shift, and go to state 16
    KW_ENUM           shift, and go to state 17
    KW_ATOMIC         shift, and go to state 22
    KW_CONST          shift, and go to state 23
    KW_VOLATILE       shift, and go to state 24
    KW_RESTRICT       shift, and go to state 25
    KW_STATIC_ASSERT  shift, and go to state 31
    KW_TYPEOF         shift, and go to state 32

    type_qualifier             go to state 77
    type_specifier             go to state 78
    specifier_qualifier_list   go to state 79
    struct_or_union_specifier  go to state 46
    struct_declaration_list    go to state 149
    struct_declaration         go to state 81
    enum_specifier             go to state 47
    static_assert_declaration  go to state 82


state 84

   96 struct_or_union_specifier: KW_UNION '{' struct_declaration_list . '}'
  100 struct_declaration_list: struct_declaration_list . struct_declaration

    KW_INT            shift, and go to state 64
    KW_CHAR           shift, and go to state 4
    KW_VOID           shift, and go to state 5
    KW_FLOAT          shift, and go to state 6
    KW_DOUBLE         shift, and go to state 7
    KW_SHORT          shift, and go to state 8
    KW_LONG           shift, and go to state 9
    KW_SIGNED         shift, and go to state 10
    KW_UNSIGNED       shift, and go to state 11
    KW_BOOL           shift, and go to state 12
    KW_COMPLEX        shift, and go to state 13
    KW_IMAGINARY      shift, and go to state 14
    KW_STRUCT         shift, and go to state 15
    KW_UNION          shift, and go to state 16
    KW_ENUM           shift, and go to state 17
    KW_ATOMIC         shift, and go to state 22
    KW_CONST          shift, and go to state 23
    KW_VOLATILE       shift, and go to state 24
    KW_RESTRICT       shift, and go to state 25
    KW_STATIC_ASSERT  shift, and go to state 31
    KW_TYPEOF         shift, and go to state 32
    '}'               shift, and go to state 150

    type_qualifier             go to state 77
    type_specifier             go to state 78
    specifier_qualifier_list   go to state 79
    struct_or_union_specifier  go to state 46
    struct_declaration         go to state 148
    enum_specifier             go to state 47
    static_assert_declaration  go to state 82


state 85

  110 enum_specifier: KW_ENUM IDENTIFIER '{' . enumerator_list_opt '}'

    IDENTIFIER  shift, and go to state 86

    $default  reduce using rule 111 (enumerator_list_opt)

    enumerator_list_opt  go to state 151
    enumerator_list      go to state 88
    enumerator           go to state 89


state 86

  116 enumerator: IDENTIFIER .
  117           | IDENTIFIER . '=' constant_expression

    '='  shift, and go to state 152

    $default  reduce using rule 116 (enumerator)


state 87

  109 enum_specifier: KW_ENUM '{' enumerator_list_opt . '}'

    '}'  shift, and go to state 153


state 88

  112 enumerator_list_opt: enumerator_list .
  114 enumerator_list: enumerator_list . ',' enumerator
  115                | enumerator_list . ','

    ','  shift, and go to state 154

    $default  reduce using rule 112 (enumerator_list_opt)


state 89

  113 enumerator_list: enumerator .

    $default  reduce using rule 113 (enumerator_list)


state 90

   31 alignment_specifier: KW_ALIGNAS '(' INTEGER_CONSTANT . ')'

    ')'  shift, and go to state 155


state 91

   30 alignment_specifier: KW_ALIGNAS '(' type_specifier . ')'

    ')'  shift, and go to state 156


state 92

  242 primary_expression: IDENTIFIER .

    $default  reduce using rule 242 (primary_expression)


state 93

  250 string_seq: STRING_LITERAL .

    $default  reduce using rule 250 (string_seq)


state 94

  247 constant: INTEGER_CONSTANT .

    $default  reduce using rule 247 (constant)


state 95

  248 constant: FLOAT_CONSTANT .

    $default  reduce using rule 248 (constant)


state 96

  249 constant: CHAR_CONSTANT .

    $default  reduce using rule 249 (constant)


state 97

  227 unary_expression: KW_SIZEOF . unary_expression
  228                 | KW_SIZEOF . '(' type_specifier ')'

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 157

    unary_expression    go to state 158
    postfix_expression  go to state 116
    primary_expression  go to state 117
    constant            go to state 118
    string_seq          go to state 119


state 98

  237 postfix_expression: KW_GENERIC . '(' assignment_expression ',' assignment_expression ')'

    '('  shift, and go to state 159


state 99

  229 unary_expression: KW_TYPEOF . '(' expression ')'

    '('  shift, and go to state 160


state 100

  221 unary_expression: INC . unary_expression

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    unary_expression    go to state 161
    postfix_expression  go to state 116
    primary_expression  go to state 117
    constant            go to state 118
    string_seq          go to state 119


state 101

  222 unary_expression: DEC . unary_expression

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    unary_expression    go to state 162
    postfix_expression  go to state 116
    primary_expression  go to state 117
    constant            go to state 118
    string_seq          go to state 119


state 102

  246 primary_expression: LPAREN_BRACE . compound_statement ')'

    '{'  shift, and go to state 137

    compound_statement  go to state 163


state 103

  223 unary_expression: '&' . unary_expression

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    unary_expression    go to state 164
    postfix_expression  go to state 116
    primary_expression  go to state 117
    constant            go to state 118
    string_seq          go to state 119


state 104

  225 unary_expression: '+' . unary_expression

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    unary_expression    go to state 165
    postfix_expression  go to state 116
    primary_expression  go to state 117
    constant            go to state 118
    string_seq          go to state 119


state 105

  226 unary_expression: '-' . unary_expression

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    unary_expression    go to state 166
    postfix_expression  go to state 116
    primary_expression  go to state 117
    constant            go to state 118
    string_seq          go to state 119


state 106

  224 unary_expression: '*' . unary_expression

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    unary_expression    go to state 167
    postfix_expression  go to state 116
    primary_expression  go to state 117
    constant            go to state 118
    string_seq          go to state 119


state 107

  245 primary_expression: '(' . expression ')'

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    expression                 go to state 168
    assignment_expression      go to state 169
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 108

  165 static_assert_declaration: KW_STATIC_ASSERT '(' conditional_expression . ',' STRING_LITERAL ')' ';'

    ','  shift, and go to state 172


state 109

  200 conditional_expression: logical_or_expression .
  202 logical_or_expression: logical_or_expression . LOGOR logical_and_expression

    LOGOR  shift, and go to state 173

    $default  reduce using rule 200 (conditional_expression)


state 110

  201 logical_or_expression: logical_and_expression .
  204 logical_and_expression: logical_and_expression . LOGAND equality_expression

    LOGAND  shift, and go to state 174

    $default  reduce using rule 201 (logical_or_expression)


state 111

  203 logical_and_expression: equality_expression .
  206 equality_expression: equality_expression . EQ relational_expression
  207                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 175
    NE  shift, and go to state 176

    $default  reduce using rule 203 (logical_and_expression)


state 112

  205 equality_expression: relational_expression .
  209 relational_expression: relational_expression . '<' additive_expression
  210                      | relational_expression . '>' additive_expression
  211                      | relational_expression . LE additive_expression
  212                      | relational_expression . GE additive_expression

    LE   shift, and go to state 177
    GE   shift, and go to state 178
    '<'  shift, and go to state 179
    '>'  shift, and go to state 180

    $default  reduce using rule 205 (equality_expression)


state 113

  208 relational_expression: additive_expression .
  214 additive_expression: additive_expression . '+' multiplicative_expression
  215                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 181
    '-'  shift, and go to state 182

    '+'       [reduce using rule 208 (relational_expression)]
    '-'       [reduce using rule 208 (relational_expression)]
    $default  reduce using rule 208 (relational_expression)


state 114

  213 additive_expression: multiplicative_expression .
  217 multiplicative_expression: multiplicative_expression . '*' unary_expression
  218                          | multiplicative_expression . '/' unary_expression
  219                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 183
    '/'  shift, and go to state 184
    '%'  shift, and go to state 185

    '*'       [reduce using rule 213 (additive_expression)]
    $default  reduce using rule 213 (additive_expression)


state 115

  216 multiplicative_expression: unary_expression .

    $default  reduce using rule 216 (multiplicative_expression)


state 116

  220 unary_expression: postfix_expression .
  231 postfix_expression: postfix_expression . '(' argument_expression_list_opt ')'
  232                   | postfix_expression . INC
  233                   | postfix_expression . DEC
  234                   | postfix_expression . '[' expression ']'
  235                   | postfix_expression . '.' IDENTIFIER
  236                   | postfix_expression . ARROW IDENTIFIER

    ARROW  shift, and go to state 186
    INC    shift, and go to state 187
    DEC    shift, and go to state 188
    '['    shift, and go to state 189
    '('    shift, and go to state 190
    '.'    shift, and go to state 191

    INC       [reduce using rule 220 (unary_expression)]
    DEC       [reduce using rule 220 (unary_expression)]
    '('       [reduce using rule 220 (unary_expression)]
    $default  reduce using rule 220 (unary_expression)


state 117

  230 postfix_expression: primary_expression .

    $default  reduce using rule 230 (postfix_expression)


state 118

  243 primary_expression: constant .

    $default  reduce using rule 243 (primary_expression)


state 119

  244 primary_expression: string_seq .
  251 string_seq: string_seq . STRING_LITERAL

    STRING_LITERAL  shift, and go to state 192

    STRING_LITERAL  [reduce using rule 244 (primary_expression)]
    $default        reduce using rule 244 (primary_expression)


state 120

   88 type_specifier: KW_TYPEOF '(' type_specifier . ')'

    ')'  shift, and go to state 193


state 121

   38 attribute_arg: IDENTIFIER .

    $default  reduce using rule 38 (attribute_arg)


state 122

   39 attribute_arg: STRING_LITERAL .

    $default  reduce using rule 39 (attribute_arg)


state 123

   40 attribute_arg: INTEGER_CONSTANT .

    $default  reduce using rule 40 (attribute_arg)


state 124

   41 attribute_arg: '(' . attribute_arg_list_opt ')'

    IDENTIFIER        shift, and go to state 121
    STRING_LITERAL    shift, and go to state 122
    INTEGER_CONSTANT  shift, and go to state 123
    '('               shift, and go to state 124

    $default  reduce using rule 34 (attribute_arg_list_opt)

    attribute_arg_list_opt  go to state 194
    attribute_arg_list      go to state 126
    attribute_arg           go to state 127


state 125

   32 attribute_specifier: KW_ATTRIBUTE '(' attribute_arg_list_opt . ')'

    ')'  shift, and go to state 195


state 126

   35 attribute_arg_list_opt: attribute_arg_list .
   37 attribute_arg_list: attribute_arg_list . ',' attribute_arg

    ','  shift, and go to state 196

    $default  reduce using rule 35 (attribute_arg_list_opt)


state 127

   36 attribute_arg_list: attribute_arg .

    $default  reduce using rule 36 (attribute_arg_list)


state 128

   33 declspec_specifier: KW_DECLSPEC '(' attribute_arg_list_opt . ')'

    ')'  shift, and go to state 197


state 129

   55 type_qualifier_list: type_qualifier .

    $default  reduce using rule 55 (type_qualifier_list)


state 130

   53 pointer: '*' pointer .

    $default  reduce using rule 53 (pointer)


state 131

   52 pointer: '*' type_qualifier_list .
   54        | '*' type_qualifier_list . pointer
   56 type_qualifier_list: type_qualifier_list . type_qualifier

    KW_ATOMIC    shift, and go to state 22
    KW_CONST     shift, and go to state 23
    KW_VOLATILE  shift, and go to state 24
    KW_RESTRICT  shift, and go to state 25
    '*'          shift, and go to state 65

    $default  reduce using rule 52 (pointer)

    type_qualifier  go to state 198
    pointer         go to state 199


state 132

   43 init_declarator_list: init_declarator_list ',' . init_declarator

    '*'  shift, and go to state 65

    $default  reduce using rule 49 (pointer_opt)

    init_declarator  go to state 200
    declarator       go to state 201
    pointer_opt      go to state 71
    pointer          go to state 72


state 133

   45 init_declarator: declarator '=' . initializer

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107
    '{'               shift, and go to state 202

    assignment_expression      go to state 203
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119
    initializer                go to state 204


state 134

   57 direct_declarator: IDENTIFIER .

    $default  reduce using rule 57 (direct_declarator)


state 135

   58 direct_declarator: '(' . declarator ')'

    '*'  shift, and go to state 65

    $default  reduce using rule 49 (pointer_opt)

    declarator   go to state 205
    pointer_opt  go to state 71
    pointer      go to state 72


state 136

   48 declarator: pointer_opt direct_declarator .
   59 direct_declarator: direct_declarator . '[' assignment_expression_opt ']'
   60                  | direct_declarator . '(' parameter_type_list_opt ')'
   61                  | direct_declarator . '(' identifier_list_opt ')'

    '['  shift, and go to state 206
    '('  shift, and go to state 207

    '('       [reduce using rule 48 (declarator)]
    $default  reduce using rule 48 (declarator)


state 137

  128 compound_statement: '{' . block_item_list_opt '}'

    IDENTIFIER        shift, and go to state 208
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_INT            shift, and go to state 64
    KW_CHAR           shift, and go to state 4
    KW_VOID           shift, and go to state 5
    KW_FLOAT          shift, and go to state 6
    KW_DOUBLE         shift, and go to state 7
    KW_SHORT          shift, and go to state 8
    KW_LONG           shift, and go to state 9
    KW_SIGNED         shift, and go to state 10
    KW_UNSIGNED       shift, and go to state 11
    KW_BOOL           shift, and go to state 12
    KW_COMPLEX        shift, and go to state 13
    KW_IMAGINARY      shift, and go to state 14
    KW_STRUCT         shift, and go to state 15
    KW_UNION          shift, and go to state 16
    KW_ENUM           shift, and go to state 17
    KW_TYPEDEF        shift, and go to state 18
    KW_RETURN         shift, and go to state 209
    KW_IF             shift, and go to state 210
    KW_WHILE          shift, and go to state 211
    KW_FOR            shift, and go to state 212
    KW_DO             shift, and go to state 213
    KW_SWITCH         shift, and go to state 214
    KW_CASE           shift, and go to state 215
    KW_DEFAULT        shift, and go to state 216
    KW_BREAK          shift, and go to state 217
    KW_CONTINUE       shift, and go to state 218
    KW_GOTO           shift, and go to state 219
    KW_SIZEOF         shift, and go to state 97
    KW_ALIGNAS        shift, and go to state 19
    KW_NORETURN       shift, and go to state 20
    KW_THREAD_LOCAL   shift, and go to state 21
    KW_ATOMIC         shift, and go to state 22
    KW_CONST          shift, and go to state 23
    KW_VOLATILE       shift, and go to state 24
    KW_RESTRICT       shift, and go to state 25
    KW_INLINE         shift, and go to state 26
    KW_EXTERN         shift, and go to state 27
    KW_STATIC         shift, and go to state 28
    KW_REGISTER       shift, and go to state 29
    KW_AUTO           shift, and go to state 30
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 220
    KW_ATTRIBUTE      shift, and go to state 33
    KW_DECLSPEC       shift, and go to state 34
    KW_ASM            shift, and go to state 221
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107
    ';'               shift, and go to state 222
    '{'               shift, and go to state 137

    $default  reduce using rule 129 (block_item_list_opt)

    declaration                go to state 223
    declaration_specifiers     go to state 224
    declaration_specifier      go to state 38
    storage_class_specifier    go to state 39
    type_qualifier             go to state 40
    function_specifier         go to state 41
    alignment_specifier        go to state 42
    attribute_specifier        go to state 43
    declspec_specifier         go to state 44
    type_specifier             go to state 73
    struct_or_union_specifier  go to state 46
    enum_specifier             go to state 47
    compound_statement         go to state 225
    block_item_list_opt        go to state 226
    block_item_list            go to state 227
    block_item                 go to state 228
    asm_statement              go to state 229
    statement                  go to state 230
    labeled_statement          go to state 231
    expression                 go to state 232
    assignment_expression      go to state 169
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 138

  127 function_definition: type_specifier declarator compound_statement .

    $default  reduce using rule 127 (function_definition)


state 139

  118 simple_function_definition: function_declspec IDENTIFIER '(' . simple_param_list_opt ')' compound_statement

    KW_INT           shift, and go to state 64
    KW_CHAR          shift, and go to state 4
    KW_VOID          shift, and go to state 5
    KW_FLOAT         shift, and go to state 6
    KW_DOUBLE        shift, and go to state 7
    KW_SHORT         shift, and go to state 8
    KW_LONG          shift, and go to state 9
    KW_SIGNED        shift, and go to state 10
    KW_UNSIGNED      shift, and go to state 11
    KW_BOOL          shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_IMAGINARY     shift, and go to state 14
    KW_STRUCT        shift, and go to state 15
    KW_UNION         shift, and go to state 16
    KW_ENUM          shift, and go to state 17
    KW_TYPEDEF       shift, and go to state 18
    KW_ALIGNAS       shift, and go to state 19
    KW_NORETURN      shift, and go to state 20
    KW_THREAD_LOCAL  shift, and go to state 21
    KW_ATOMIC        shift, and go to state 22
    KW_CONST         shift, and go to state 23
    KW_VOLATILE      shift, and go to state 24
    KW_RESTRICT      shift, and go to state 25
    KW_INLINE        shift, and go to state 26
    KW_EXTERN        shift, and go to state 27
    KW_STATIC        shift, and go to state 28
    KW_REGISTER      shift, and go to state 29
    KW_AUTO          shift, and go to state 30
    KW_TYPEOF        shift, and go to state 32
    KW_ATTRIBUTE     shift, and go to state 33
    KW_DECLSPEC      shift, and go to state 34

    $default  reduce using rule 121 (simple_param_list_opt)

    declaration_specifiers     go to state 233
    declaration_specifier      go to state 38
    storage_class_specifier    go to state 39
    type_qualifier             go to state 40
    function_specifier         go to state 41
    alignment_specifier        go to state 42
    attribute_specifier        go to state 43
    declspec_specifier         go to state 44
    type_specifier             go to state 73
    struct_or_union_specifier  go to state 46
    enum_specifier             go to state 47
    simple_param_list_opt      go to state 234
    simple_param_list          go to state 235
    simple_param               go to state 236


state 140

   97 struct_or_union_specifier: KW_STRUCT IDENTIFIER '{' struct_declaration_list . '}'
  100 struct_declaration_list: struct_declaration_list . struct_declaration

    KW_INT            shift, and go to state 64
    KW_CHAR           shift, and go to state 4
    KW_VOID           shift, and go to state 5
    KW_FLOAT          shift, and go to state 6
    KW_DOUBLE         shift, and go to state 7
    KW_SHORT          shift, and go to state 8
    KW_LONG           shift, and go to state 9
    KW_SIGNED         shift, and go to state 10
    KW_UNSIGNED       shift, and go to state 11
    KW_BOOL           shift, and go to state 12
    KW_COMPLEX        shift, and go to state 13
    KW_IMAGINARY      shift, and go to state 14
    KW_STRUCT         shift, and go to state 15
    KW_UNION          shift, and go to state 16
    KW_ENUM           shift, and go to state 17
    KW_ATOMIC         shift, and go to state 22
    KW_CONST          shift, and go to state 23
    KW_VOLATILE       shift, and go to state 24
    KW_RESTRICT       shift, and go to state 25
    KW_STATIC_ASSERT  shift, and go to state 31
    KW_TYPEOF         shift, and go to state 32
    '}'               shift, and go to state 237

    type_qualifier             go to state 77
    type_specifier             go to state 78
    specifier_qualifier_list   go to state 79
    struct_or_union_specifier  go to state 46
    struct_declaration         go to state 148
    enum_specifier             go to state 47
    static_assert_declaration  go to state 82


state 141

  106 struct_declarator: ':' . constant_expression

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    conditional_expression     go to state 238
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119
    constant_expression        go to state 239


state 142

   92 specifier_qualifier_list: specifier_qualifier_list type_qualifier .

    $default  reduce using rule 92 (specifier_qualifier_list)


state 143

  105 struct_declarator: declarator .
  107                  | declarator . ':' constant_expression

    ':'  shift, and go to state 240

    $default  reduce using rule 105 (struct_declarator)


state 144

   91 specifier_qualifier_list: specifier_qualifier_list type_specifier .

    $default  reduce using rule 91 (specifier_qualifier_list)


state 145

  101 struct_declaration: specifier_qualifier_list struct_declarator_list . ';'
  104 struct_declarator_list: struct_declarator_list . ',' struct_declarator

    ';'  shift, and go to state 241
    ','  shift, and go to state 242


state 146

  103 struct_declarator_list: struct_declarator .

    $default  reduce using rule 103 (struct_declarator_list)


state 147

   95 struct_or_union_specifier: KW_STRUCT '{' struct_declaration_list '}' .

    $default  reduce using rule 95 (struct_or_union_specifier)


state 148

  100 struct_declaration_list: struct_declaration_list struct_declaration .

    $default  reduce using rule 100 (struct_declaration_list)


state 149

   98 struct_or_union_specifier: KW_UNION IDENTIFIER '{' struct_declaration_list . '}'
  100 struct_declaration_list: struct_declaration_list . struct_declaration

    KW_INT            shift, and go to state 64
    KW_CHAR           shift, and go to state 4
    KW_VOID           shift, and go to state 5
    KW_FLOAT          shift, and go to state 6
    KW_DOUBLE         shift, and go to state 7
    KW_SHORT          shift, and go to state 8
    KW_LONG           shift, and go to state 9
    KW_SIGNED         shift, and go to state 10
    KW_UNSIGNED       shift, and go to state 11
    KW_BOOL           shift, and go to state 12
    KW_COMPLEX        shift, and go to state 13
    KW_IMAGINARY      shift, and go to state 14
    KW_STRUCT         shift, and go to state 15
    KW_UNION          shift, and go to state 16
    KW_ENUM           shift, and go to state 17
    KW_ATOMIC         shift, and go to state 22
    KW_CONST          shift, and go to state 23
    KW_VOLATILE       shift, and go to state 24
    KW_RESTRICT       shift, and go to state 25
    KW_STATIC_ASSERT  shift, and go to state 31
    KW_TYPEOF         shift, and go to state 32
    '}'               shift, and go to state 243

    type_qualifier             go to state 77
    type_specifier             go to state 78
    specifier_qualifier_list   go to state 79
    struct_or_union_specifier  go to state 46
    struct_declaration         go to state 148
    enum_specifier             go to state 47
    static_assert_declaration  go to state 82


state 150

   96 struct_or_union_specifier: KW_UNION '{' struct_declaration_list '}' .

    $default  reduce using rule 96 (struct_or_union_specifier)


state 151

  110 enum_specifier: KW_ENUM IDENTIFIER '{' enumerator_list_opt . '}'

    '}'  shift, and go to state 244


state 152

  117 enumerator: IDENTIFIER '=' . constant_expression

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    conditional_expression     go to state 238
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119
    constant_expression        go to state 245


state 153

  109 enum_specifier: KW_ENUM '{' enumerator_list_opt '}' .

    $default  reduce using rule 109 (enum_specifier)


state 154

  114 enumerator_list: enumerator_list ',' . enumerator
  115                | enumerator_list ',' .

    IDENTIFIER  shift, and go to state 86

    $default  reduce using rule 115 (enumerator_list)

    enumerator  go to state 246


state 155

   31 alignment_specifier: KW_ALIGNAS '(' INTEGER_CONSTANT ')' .

    $default  reduce using rule 31 (alignment_specifier)


state 156

   30 alignment_specifier: KW_ALIGNAS '(' type_specifier ')' .

    $default  reduce using rule 30 (alignment_specifier)


state 157

  228 unary_expression: KW_SIZEOF '(' . type_specifier ')'
  245 primary_expression: '(' . expression ')'

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_INT            shift, and go to state 64
    KW_CHAR           shift, and go to state 4
    KW_VOID           shift, and go to state 5
    KW_FLOAT          shift, and go to state 6
    KW_DOUBLE         shift, and go to state 7
    KW_SHORT          shift, and go to state 8
    KW_LONG           shift, and go to state 9
    KW_SIGNED         shift, and go to state 10
    KW_UNSIGNED       shift, and go to state 11
    KW_BOOL           shift, and go to state 12
    KW_COMPLEX        shift, and go to state 13
    KW_IMAGINARY      shift, and go to state 14
    KW_STRUCT         shift, and go to state 15
    KW_UNION          shift, and go to state 16
    KW_ENUM           shift, and go to state 17
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 220
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    type_specifier             go to state 247
    struct_or_union_specifier  go to state 46
    enum_specifier             go to state 47
    expression                 go to state 168
    assignment_expression      go to state 169
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 158

  227 unary_expression: KW_SIZEOF unary_expression .

    $default  reduce using rule 227 (unary_expression)


state 159

  237 postfix_expression: KW_GENERIC '(' . assignment_expression ',' assignment_expression ')'

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    assignment_expression      go to state 248
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 160

  229 unary_expression: KW_TYPEOF '(' . expression ')'

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    expression                 go to state 249
    assignment_expression      go to state 169
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 161

  221 unary_expression: INC unary_expression .

    $default  reduce using rule 221 (unary_expression)


state 162

  222 unary_expression: DEC unary_expression .

    $default  reduce using rule 222 (unary_expression)


state 163

  246 primary_expression: LPAREN_BRACE compound_statement . ')'

    ')'  shift, and go to state 250


state 164

  223 unary_expression: '&' unary_expression .

    $default  reduce using rule 223 (unary_expression)


state 165

  225 unary_expression: '+' unary_expression .

    $default  reduce using rule 225 (unary_expression)


state 166

  226 unary_expression: '-' unary_expression .

    $default  reduce using rule 226 (unary_expression)


state 167

  224 unary_expression: '*' unary_expression .

    $default  reduce using rule 224 (unary_expression)


state 168

  245 primary_expression: '(' expression . ')'

    ')'  shift, and go to state 251


state 169

  187 expression: assignment_expression .

    $default  reduce using rule 187 (expression)


state 170

  188 assignment_expression: conditional_expression .

    $default  reduce using rule 188 (assignment_expression)


state 171

  189 assignment_expression: unary_expression . '=' assignment_expression
  190                      | unary_expression . ADD_ASSIGN assignment_expression
  191                      | unary_expression . SUB_ASSIGN assignment_expression
  192                      | unary_expression . MUL_ASSIGN assignment_expression
  193                      | unary_expression . DIV_ASSIGN assignment_expression
  194                      | unary_expression . MOD_ASSIGN assignment_expression
  195                      | unary_expression . AND_ASSIGN assignment_expression
  196                      | unary_expression . OR_ASSIGN assignment_expression
  197                      | unary_expression . XOR_ASSIGN assignment_expression
  198                      | unary_expression . LSHIFT_ASSIGN assignment_expression
  199                      | unary_expression . RSHIFT_ASSIGN assignment_expression
  216 multiplicative_expression: unary_expression .

    ADD_ASSIGN     shift, and go to state 252
    SUB_ASSIGN     shift, and go to state 253
    MUL_ASSIGN     shift, and go to state 254
    DIV_ASSIGN     shift, and go to state 255
    MOD_ASSIGN     shift, and go to state 256
    AND_ASSIGN     shift, and go to state 257
    OR_ASSIGN      shift, and go to state 258
    XOR_ASSIGN     shift, and go to state 259
    LSHIFT_ASSIGN  shift, and go to state 260
    RSHIFT_ASSIGN  shift, and go to state 261
    '='            shift, and go to state 262

    $default  reduce using rule 216 (multiplicative_expression)


state 172

  165 static_assert_declaration: KW_STATIC_ASSERT '(' conditional_expression ',' . STRING_LITERAL ')' ';'

    STRING_LITERAL  shift, and go to state 263


state 173

  202 logical_or_expression: logical_or_expression LOGOR . logical_and_expression

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    logical_and_expression     go to state 264
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 174

  204 logical_and_expression: logical_and_expression LOGAND . equality_expression

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    equality_expression        go to state 265
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 175

  206 equality_expression: equality_expression EQ . relational_expression

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    relational_expression      go to state 266
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 176

  207 equality_expression: equality_expression NE . relational_expression

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    relational_expression      go to state 267
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 177

  211 relational_expression: relational_expression LE . additive_expression

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    additive_expression        go to state 268
    multiplicative_expression  go to state 114
    unary_expression           go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 178

  212 relational_expression: relational_expression GE . additive_expression

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    additive_expression        go to state 269
    multiplicative_expression  go to state 114
    unary_expression           go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 179

  209 relational_expression: relational_expression '<' . additive_expression

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    additive_expression        go to state 270
    multiplicative_expression  go to state 114
    unary_expression           go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 180

  210 relational_expression: relational_expression '>' . additive_expression

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    additive_expression        go to state 271
    multiplicative_expression  go to state 114
    unary_expression           go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 181

  214 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    multiplicative_expression  go to state 272
    unary_expression           go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 182

  215 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    multiplicative_expression  go to state 273
    unary_expression           go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 183

  217 multiplicative_expression: multiplicative_expression '*' . unary_expression

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    unary_expression    go to state 274
    postfix_expression  go to state 116
    primary_expression  go to state 117
    constant            go to state 118
    string_seq          go to state 119


state 184

  218 multiplicative_expression: multiplicative_expression '/' . unary_expression

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    unary_expression    go to state 275
    postfix_expression  go to state 116
    primary_expression  go to state 117
    constant            go to state 118
    string_seq          go to state 119


state 185

  219 multiplicative_expression: multiplicative_expression '%' . unary_expression

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    unary_expression    go to state 276
    postfix_expression  go to state 116
    primary_expression  go to state 117
    constant            go to state 118
    string_seq          go to state 119


state 186

  236 postfix_expression: postfix_expression ARROW . IDENTIFIER

    IDENTIFIER  shift, and go to state 277


state 187

  232 postfix_expression: postfix_expression INC .

    $default  reduce using rule 232 (postfix_expression)


state 188

  233 postfix_expression: postfix_expression DEC .

    $default  reduce using rule 233 (postfix_expression)


state 189

  234 postfix_expression: postfix_expression '[' . expression ']'

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    expression                 go to state 278
    assignment_expression      go to state 169
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 190

  231 postfix_expression: postfix_expression '(' . argument_expression_list_opt ')'

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    $default  reduce using rule 238 (argument_expression_list_opt)

    assignment_expression         go to state 279
    conditional_expression        go to state 170
    logical_or_expression         go to state 109
    logical_and_expression        go to state 110
    equality_expression           go to state 111
    relational_expression         go to state 112
    additive_expression           go to state 113
    multiplicative_expression     go to state 114
    unary_expression              go to state 171
    postfix_expression            go to state 116
    argument_expression_list_opt  go to state 280
    argument_expression_list      go to state 281
    primary_expression            go to state 117
    constant                      go to state 118
    string_seq                    go to state 119


state 191

  235 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 282


state 192

  251 string_seq: string_seq STRING_LITERAL .

    $default  reduce using rule 251 (string_seq)


state 193

   88 type_specifier: KW_TYPEOF '(' type_specifier ')' .

    $default  reduce using rule 88 (type_specifier)


state 194

   41 attribute_arg: '(' attribute_arg_list_opt . ')'

    ')'  shift, and go to state 283


state 195

   32 attribute_specifier: KW_ATTRIBUTE '(' attribute_arg_list_opt ')' .

    $default  reduce using rule 32 (attribute_specifier)


state 196

   37 attribute_arg_list: attribute_arg_list ',' . attribute_arg

    IDENTIFIER        shift, and go to state 121
    STRING_LITERAL    shift, and go to state 122
    INTEGER_CONSTANT  shift, and go to state 123
    '('               shift, and go to state 124

    attribute_arg  go to state 284


state 197

   33 declspec_specifier: KW_DECLSPEC '(' attribute_arg_list_opt ')' .

    $default  reduce using rule 33 (declspec_specifier)


state 198

   56 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 56 (type_qualifier_list)


state 199

   54 pointer: '*' type_qualifier_list pointer .

    $default  reduce using rule 54 (pointer)


state 200

   43 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 43 (init_declarator_list)


state 201

   44 init_declarator: declarator .
   45                | declarator . '=' initializer

    '='  shift, and go to state 133

    $default  reduce using rule 44 (init_declarator)


state 202

  255 initializer: '{' . initializer_list '}'
  256            | '{' . initializer_list ',' '}'

    '['  shift, and go to state 285
    '.'  shift, and go to state 286

    $default  reduce using rule 259 (designation_opt)

    initializer_list  go to state 287
    designation_opt   go to state 288
    designation       go to state 289
    designator_list   go to state 290
    designator        go to state 291


state 203

  254 initializer: assignment_expression .

    $default  reduce using rule 254 (initializer)


state 204

   45 init_declarator: declarator '=' initializer .

    $default  reduce using rule 45 (init_declarator)


state 205

   58 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 292


state 206

   59 direct_declarator: direct_declarator '[' . assignment_expression_opt ']'

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    $default  reduce using rule 252 (assignment_expression_opt)

    assignment_expression      go to state 293
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119
    assignment_expression_opt  go to state 294


state 207

   60 direct_declarator: direct_declarator '(' . parameter_type_list_opt ')'
   61                  | direct_declarator '(' . identifier_list_opt ')'

    IDENTIFIER       shift, and go to state 295
    KW_INT           shift, and go to state 64
    KW_CHAR          shift, and go to state 4
    KW_VOID          shift, and go to state 5
    KW_FLOAT         shift, and go to state 6
    KW_DOUBLE        shift, and go to state 7
    KW_SHORT         shift, and go to state 8
    KW_LONG          shift, and go to state 9
    KW_SIGNED        shift, and go to state 10
    KW_UNSIGNED      shift, and go to state 11
    KW_BOOL          shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_IMAGINARY     shift, and go to state 14
    KW_STRUCT        shift, and go to state 15
    KW_UNION         shift, and go to state 16
    KW_ENUM          shift, and go to state 17
    KW_TYPEDEF       shift, and go to state 18
    KW_ALIGNAS       shift, and go to state 19
    KW_NORETURN      shift, and go to state 20
    KW_THREAD_LOCAL  shift, and go to state 21
    KW_ATOMIC        shift, and go to state 22
    KW_CONST         shift, and go to state 23
    KW_VOLATILE      shift, and go to state 24
    KW_RESTRICT      shift, and go to state 25
    KW_INLINE        shift, and go to state 26
    KW_EXTERN        shift, and go to state 27
    KW_STATIC        shift, and go to state 28
    KW_REGISTER      shift, and go to state 29
    KW_AUTO          shift, and go to state 30
    KW_TYPEOF        shift, and go to state 32
    KW_ATTRIBUTE     shift, and go to state 33
    KW_DECLSPEC      shift, and go to state 34

    ')'       reduce using rule 62 (identifier_list_opt)
    ')'       [reduce using rule 66 (parameter_type_list_opt)]
    $default  reduce using rule 62 (identifier_list_opt)

    declaration_specifiers     go to state 296
    declaration_specifier      go to state 38
    storage_class_specifier    go to state 39
    type_qualifier             go to state 40
    function_specifier         go to state 41
    alignment_specifier        go to state 42
    attribute_specifier        go to state 43
    declspec_specifier         go to state 44
    identifier_list_opt        go to state 297
    identifier_list            go to state 298
    parameter_type_list_opt    go to state 299
    parameter_type_list        go to state 300
    parameter_list             go to state 301
    parameter_declaration      go to state 302
    type_specifier             go to state 73
    struct_or_union_specifier  go to state 46
    enum_specifier             go to state 47


state 208

  182 labeled_statement: IDENTIFIER . ':' statement
  242 primary_expression: IDENTIFIER .

    ':'  shift, and go to state 303

    $default  reduce using rule 242 (primary_expression)


state 209

  168 statement: KW_RETURN . expression_opt ';'

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    $default  reduce using rule 185 (expression_opt)

    expression_opt             go to state 304
    expression                 go to state 305
    assignment_expression      go to state 169
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 210

  171 statement: KW_IF . '(' expression ')' statement
  172          | KW_IF . '(' expression ')' statement KW_ELSE statement

    '('  shift, and go to state 306


state 211

  173 statement: KW_WHILE . '(' expression ')' statement

    '('  shift, and go to state 307


state 212

  175 statement: KW_FOR . '(' expression_opt ';' expression_opt ';' expression_opt ')' statement
  176          | KW_FOR . '(' declaration expression_opt ';' expression_opt ')' statement

    '('  shift, and go to state 308


state 213

  174 statement: KW_DO . statement KW_WHILE '(' expression ')' ';'

    IDENTIFIER        shift, and go to state 208
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_RETURN         shift, and go to state 209
    KW_IF             shift, and go to state 210
    KW_WHILE          shift, and go to state 211
    KW_FOR            shift, and go to state 212
    KW_DO             shift, and go to state 213
    KW_SWITCH         shift, and go to state 214
    KW_CASE           shift, and go to state 215
    KW_DEFAULT        shift, and go to state 216
    KW_BREAK          shift, and go to state 217
    KW_CONTINUE       shift, and go to state 218
    KW_GOTO           shift, and go to state 219
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    KW_ASM            shift, and go to state 221
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107
    ';'               shift, and go to state 222
    '{'               shift, and go to state 137

    compound_statement         go to state 225
    asm_statement              go to state 229
    statement                  go to state 309
    labeled_statement          go to state 231
    expression                 go to state 232
    assignment_expression      go to state 169
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 214

  177 statement: KW_SWITCH . '(' expression ')' statement

    '('  shift, and go to state 310


state 215

  183 labeled_statement: KW_CASE . constant_expression ':' statement

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    conditional_expression     go to state 238
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119
    constant_expression        go to state 311


state 216

  184 labeled_statement: KW_DEFAULT . ':' statement

    ':'  shift, and go to state 312


state 217

  178 statement: KW_BREAK . ';'

    ';'  shift, and go to state 313


state 218

  179 statement: KW_CONTINUE . ';'

    ';'  shift, and go to state 314


state 219

  180 statement: KW_GOTO . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 315


state 220

   88 type_specifier: KW_TYPEOF . '(' type_specifier ')'
  229 unary_expression: KW_TYPEOF . '(' expression ')'

    '('  shift, and go to state 316


state 221

  135 asm_statement: KW_ASM . asm_qualifiers_opt '(' asm_arguments ')' ';'

    $default  reduce using rule 136 (asm_qualifiers_opt)

    asm_qualifiers_opt  go to state 317


state 222

  166 statement: ';' .

    $default  reduce using rule 166 (statement)


state 223

  133 block_item: declaration . ';'

    ';'  shift, and go to state 318


state 224

    7 declaration: declaration_specifiers . declarator_opt
    8            | declaration_specifiers . init_declarator_list
   10 declaration_specifiers: declaration_specifiers . declaration_specifier

    KW_INT           shift, and go to state 64
    KW_CHAR          shift, and go to state 4
    KW_VOID          shift, and go to state 5
    KW_FLOAT         shift, and go to state 6
    KW_DOUBLE        shift, and go to state 7
    KW_SHORT         shift, and go to state 8
    KW_LONG          shift, and go to state 9
    KW_SIGNED        shift, and go to state 10
    KW_UNSIGNED      shift, and go to state 11
    KW_BOOL          shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_IMAGINARY     shift, and go to state 14
    KW_STRUCT        shift, and go to state 15
    KW_UNION         shift, and go to state 16
    KW_ENUM          shift, and go to state 17
    KW_TYPEDEF       shift, and go to state 18
    KW_ALIGNAS       shift, and go to state 19
    KW_NORETURN      shift, and go to state 20
    KW_THREAD_LOCAL  shift, and go to state 21
    KW_ATOMIC        shift, and go to state 22
    KW_CONST         shift, and go to state 23
    KW_VOLATILE      shift, and go to state 24
    KW_RESTRICT      shift, and go to state 25
    KW_INLINE        shift, and go to state 26
    KW_EXTERN        shift, and go to state 27
    KW_STATIC        shift, and go to state 28
    KW_REGISTER      shift, and go to state 29
    KW_AUTO          shift, and go to state 30
    KW_TYPEOF        shift, and go to state 32
    KW_ATTRIBUTE     shift, and go to state 33
    KW_DECLSPEC      shift, and go to state 34
    '*'              shift, and go to state 65

    IDENTIFIER  reduce using rule 46 (declarator_opt)
    IDENTIFIER  [reduce using rule 49 (pointer_opt)]
    KW_TYPEOF   [reduce using rule 46 (declarator_opt)]
    '*'         [reduce using rule 46 (declarator_opt)]
    '('         reduce using rule 46 (declarator_opt)
    '('         [reduce using rule 49 (pointer_opt)]
    $default    reduce using rule 46 (declarator_opt)

    declaration_specifier      go to state 66
    storage_class_specifier    go to state 39
    type_qualifier             go to state 40
    function_specifier         go to state 41
    alignment_specifier        go to state 42
    attribute_specifier        go to state 43
    declspec_specifier         go to state 44
    init_declarator_list       go to state 67
    init_declarator            go to state 68
    declarator_opt             go to state 69
    declarator                 go to state 70
    pointer_opt                go to state 71
    pointer                    go to state 72
    type_specifier             go to state 73
    struct_or_union_specifier  go to state 46
    enum_specifier             go to state 47


state 225

  169 statement: compound_statement .

    $default  reduce using rule 169 (statement)


state 226

  128 compound_statement: '{' block_item_list_opt . '}'

    '}'  shift, and go to state 319


state 227

  130 block_item_list_opt: block_item_list .
  132 block_item_list: block_item_list . block_item

    IDENTIFIER        shift, and go to state 208
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_INT            shift, and go to state 64
    KW_CHAR           shift, and go to state 4
    KW_VOID           shift, and go to state 5
    KW_FLOAT          shift, and go to state 6
    KW_DOUBLE         shift, and go to state 7
    KW_SHORT          shift, and go to state 8
    KW_LONG           shift, and go to state 9
    KW_SIGNED         shift, and go to state 10
    KW_UNSIGNED       shift, and go to state 11
    KW_BOOL           shift, and go to state 12
    KW_COMPLEX        shift, and go to state 13
    KW_IMAGINARY      shift, and go to state 14
    KW_STRUCT         shift, and go to state 15
    KW_UNION          shift, and go to state 16
    KW_ENUM           shift, and go to state 17
    KW_TYPEDEF        shift, and go to state 18
    KW_RETURN         shift, and go to state 209
    KW_IF             shift, and go to state 210
    KW_WHILE          shift, and go to state 211
    KW_FOR            shift, and go to state 212
    KW_DO             shift, and go to state 213
    KW_SWITCH         shift, and go to state 214
    KW_CASE           shift, and go to state 215
    KW_DEFAULT        shift, and go to state 216
    KW_BREAK          shift, and go to state 217
    KW_CONTINUE       shift, and go to state 218
    KW_GOTO           shift, and go to state 219
    KW_SIZEOF         shift, and go to state 97
    KW_ALIGNAS        shift, and go to state 19
    KW_NORETURN       shift, and go to state 20
    KW_THREAD_LOCAL   shift, and go to state 21
    KW_ATOMIC         shift, and go to state 22
    KW_CONST          shift, and go to state 23
    KW_VOLATILE       shift, and go to state 24
    KW_RESTRICT       shift, and go to state 25
    KW_INLINE         shift, and go to state 26
    KW_EXTERN         shift, and go to state 27
    KW_STATIC         shift, and go to state 28
    KW_REGISTER       shift, and go to state 29
    KW_AUTO           shift, and go to state 30
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 220
    KW_ATTRIBUTE      shift, and go to state 33
    KW_DECLSPEC       shift, and go to state 34
    KW_ASM            shift, and go to state 221
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107
    ';'               shift, and go to state 222
    '{'               shift, and go to state 137

    $default  reduce using rule 130 (block_item_list_opt)

    declaration                go to state 223
    declaration_specifiers     go to state 224
    declaration_specifier      go to state 38
    storage_class_specifier    go to state 39
    type_qualifier             go to state 40
    function_specifier         go to state 41
    alignment_specifier        go to state 42
    attribute_specifier        go to state 43
    declspec_specifier         go to state 44
    type_specifier             go to state 73
    struct_or_union_specifier  go to state 46
    enum_specifier             go to state 47
    compound_statement         go to state 225
    block_item                 go to state 320
    asm_statement              go to state 229
    statement                  go to state 230
    labeled_statement          go to state 231
    expression                 go to state 232
    assignment_expression      go to state 169
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 228

  131 block_item_list: block_item .

    $default  reduce using rule 131 (block_item_list)


state 229

  181 statement: asm_statement .

    $default  reduce using rule 181 (statement)


state 230

  134 block_item: statement .

    $default  reduce using rule 134 (block_item)


state 231

  170 statement: labeled_statement .

    $default  reduce using rule 170 (statement)


state 232

  167 statement: expression . ';'

    ';'  shift, and go to state 321


state 233

   10 declaration_specifiers: declaration_specifiers . declaration_specifier
  125 simple_param: declaration_specifiers . pointer_opt IDENTIFIER
  126             | declaration_specifiers . pointer_opt

    KW_INT           shift, and go to state 64
    KW_CHAR          shift, and go to state 4
    KW_VOID          shift, and go to state 5
    KW_FLOAT         shift, and go to state 6
    KW_DOUBLE        shift, and go to state 7
    KW_SHORT         shift, and go to state 8
    KW_LONG          shift, and go to state 9
    KW_SIGNED        shift, and go to state 10
    KW_UNSIGNED      shift, and go to state 11
    KW_BOOL          shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_IMAGINARY     shift, and go to state 14
    KW_STRUCT        shift, and go to state 15
    KW_UNION         shift, and go to state 16
    KW_ENUM          shift, and go to state 17
    KW_TYPEDEF       shift, and go to state 18
    KW_ALIGNAS       shift, and go to state 19
    KW_NORETURN      shift, and go to state 20
    KW_THREAD_LOCAL  shift, and go to state 21
    KW_ATOMIC        shift, and go to state 22
    KW_CONST         shift, and go to state 23
    KW_VOLATILE      shift, and go to state 24
    KW_RESTRICT      shift, and go to state 25
    KW_INLINE        shift, and go to state 26
    KW_EXTERN        shift, and go to state 27
    KW_STATIC        shift, and go to state 28
    KW_REGISTER      shift, and go to state 29
    KW_AUTO          shift, and go to state 30
    KW_TYPEOF        shift, and go to state 32
    KW_ATTRIBUTE     shift, and go to state 33
    KW_DECLSPEC      shift, and go to state 34
    '*'              shift, and go to state 65

    $default  reduce using rule 49 (pointer_opt)

    declaration_specifier      go to state 66
    storage_class_specifier    go to state 39
    type_qualifier             go to state 40
    function_specifier         go to state 41
    alignment_specifier        go to state 42
    attribute_specifier        go to state 43
    declspec_specifier         go to state 44
    pointer_opt                go to state 322
    pointer                    go to state 72
    type_specifier             go to state 73
    struct_or_union_specifier  go to state 46
    enum_specifier             go to state 47


state 234

  118 simple_function_definition: function_declspec IDENTIFIER '(' simple_param_list_opt . ')' compound_statement

    ')'  shift, and go to state 323


state 235

  122 simple_param_list_opt: simple_param_list .
  124 simple_param_list: simple_param_list . ',' simple_param

    ','  shift, and go to state 324

    $default  reduce using rule 122 (simple_param_list_opt)


state 236

  123 simple_param_list: simple_param .

    $default  reduce using rule 123 (simple_param_list)


state 237

   97 struct_or_union_specifier: KW_STRUCT IDENTIFIER '{' struct_declaration_list '}' .

    $default  reduce using rule 97 (struct_or_union_specifier)


state 238

  266 constant_expression: conditional_expression .

    $default  reduce using rule 266 (constant_expression)


state 239

  106 struct_declarator: ':' constant_expression .

    $default  reduce using rule 106 (struct_declarator)


state 240

  107 struct_declarator: declarator ':' . constant_expression

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    conditional_expression     go to state 238
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119
    constant_expression        go to state 325


state 241

  101 struct_declaration: specifier_qualifier_list struct_declarator_list ';' .

    $default  reduce using rule 101 (struct_declaration)


state 242

  104 struct_declarator_list: struct_declarator_list ',' . struct_declarator

    ':'  shift, and go to state 141
    '*'  shift, and go to state 65

    $default  reduce using rule 49 (pointer_opt)

    declarator         go to state 143
    pointer_opt        go to state 71
    pointer            go to state 72
    struct_declarator  go to state 326


state 243

   98 struct_or_union_specifier: KW_UNION IDENTIFIER '{' struct_declaration_list '}' .

    $default  reduce using rule 98 (struct_or_union_specifier)


state 244

  110 enum_specifier: KW_ENUM IDENTIFIER '{' enumerator_list_opt '}' .

    $default  reduce using rule 110 (enum_specifier)


state 245

  117 enumerator: IDENTIFIER '=' constant_expression .

    $default  reduce using rule 117 (enumerator)


state 246

  114 enumerator_list: enumerator_list ',' enumerator .

    $default  reduce using rule 114 (enumerator_list)


state 247

  228 unary_expression: KW_SIZEOF '(' type_specifier . ')'

    ')'  shift, and go to state 327


state 248

  237 postfix_expression: KW_GENERIC '(' assignment_expression . ',' assignment_expression ')'

    ','  shift, and go to state 328


state 249

  229 unary_expression: KW_TYPEOF '(' expression . ')'

    ')'  shift, and go to state 329


state 250

  246 primary_expression: LPAREN_BRACE compound_statement ')' .

    $default  reduce using rule 246 (primary_expression)


state 251

  245 primary_expression: '(' expression ')' .

    $default  reduce using rule 245 (primary_expression)


state 252

  190 assignment_expression: unary_expression ADD_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    assignment_expression      go to state 330
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 253

  191 assignment_expression: unary_expression SUB_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    assignment_expression      go to state 331
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 254

  192 assignment_expression: unary_expression MUL_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    assignment_expression      go to state 332
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 255

  193 assignment_expression: unary_expression DIV_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    assignment_expression      go to state 333
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 256

  194 assignment_expression: unary_expression MOD_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    assignment_expression      go to state 334
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 257

  195 assignment_expression: unary_expression AND_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    assignment_expression      go to state 335
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 258

  196 assignment_expression: unary_expression OR_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    assignment_expression      go to state 336
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 259

  197 assignment_expression: unary_expression XOR_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    assignment_expression      go to state 337
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 260

  198 assignment_expression: unary_expression LSHIFT_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    assignment_expression      go to state 338
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 261

  199 assignment_expression: unary_expression RSHIFT_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    assignment_expression      go to state 339
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 262

  189 assignment_expression: unary_expression '=' . assignment_expression

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    assignment_expression      go to state 340
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 263

  165 static_assert_declaration: KW_STATIC_ASSERT '(' conditional_expression ',' STRING_LITERAL . ')' ';'

    ')'  shift, and go to state 341


state 264

  202 logical_or_expression: logical_or_expression LOGOR logical_and_expression .
  204 logical_and_expression: logical_and_expression . LOGAND equality_expression

    LOGAND  shift, and go to state 174

    $default  reduce using rule 202 (logical_or_expression)


state 265

  204 logical_and_expression: logical_and_expression LOGAND equality_expression .
  206 equality_expression: equality_expression . EQ relational_expression
  207                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 175
    NE  shift, and go to state 176

    $default  reduce using rule 204 (logical_and_expression)


state 266

  206 equality_expression: equality_expression EQ relational_expression .
  209 relational_expression: relational_expression . '<' additive_expression
  210                      | relational_expression . '>' additive_expression
  211                      | relational_expression . LE additive_expression
  212                      | relational_expression . GE additive_expression

    LE   shift, and go to state 177
    GE   shift, and go to state 178
    '<'  shift, and go to state 179
    '>'  shift, and go to state 180

    $default  reduce using rule 206 (equality_expression)


state 267

  207 equality_expression: equality_expression NE relational_expression .
  209 relational_expression: relational_expression . '<' additive_expression
  210                      | relational_expression . '>' additive_expression
  211                      | relational_expression . LE additive_expression
  212                      | relational_expression . GE additive_expression

    LE   shift, and go to state 177
    GE   shift, and go to state 178
    '<'  shift, and go to state 179
    '>'  shift, and go to state 180

    $default  reduce using rule 207 (equality_expression)


state 268

  211 relational_expression: relational_expression LE additive_expression .
  214 additive_expression: additive_expression . '+' multiplicative_expression
  215                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 181
    '-'  shift, and go to state 182

    $default  reduce using rule 211 (relational_expression)


state 269

  212 relational_expression: relational_expression GE additive_expression .
  214 additive_expression: additive_expression . '+' multiplicative_expression
  215                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 181
    '-'  shift, and go to state 182

    $default  reduce using rule 212 (relational_expression)


state 270

  209 relational_expression: relational_expression '<' additive_expression .
  214 additive_expression: additive_expression . '+' multiplicative_expression
  215                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 181
    '-'  shift, and go to state 182

    $default  reduce using rule 209 (relational_expression)


state 271

  210 relational_expression: relational_expression '>' additive_expression .
  214 additive_expression: additive_expression . '+' multiplicative_expression
  215                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 181
    '-'  shift, and go to state 182

    $default  reduce using rule 210 (relational_expression)


state 272

  214 additive_expression: additive_expression '+' multiplicative_expression .
  217 multiplicative_expression: multiplicative_expression . '*' unary_expression
  218                          | multiplicative_expression . '/' unary_expression
  219                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 183
    '/'  shift, and go to state 184
    '%'  shift, and go to state 185

    $default  reduce using rule 214 (additive_expression)


state 273

  215 additive_expression: additive_expression '-' multiplicative_expression .
  217 multiplicative_expression: multiplicative_expression . '*' unary_expression
  218                          | multiplicative_expression . '/' unary_expression
  219                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 183
    '/'  shift, and go to state 184
    '%'  shift, and go to state 185

    $default  reduce using rule 215 (additive_expression)


state 274

  217 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 217 (multiplicative_expression)


state 275

  218 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 218 (multiplicative_expression)


state 276

  219 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 219 (multiplicative_expression)


state 277

  236 postfix_expression: postfix_expression ARROW IDENTIFIER .

    $default  reduce using rule 236 (postfix_expression)


state 278

  234 postfix_expression: postfix_expression '[' expression . ']'

    ']'  shift, and go to state 342


state 279

  240 argument_expression_list: assignment_expression .

    $default  reduce using rule 240 (argument_expression_list)


state 280

  231 postfix_expression: postfix_expression '(' argument_expression_list_opt . ')'

    ')'  shift, and go to state 343


state 281

  239 argument_expression_list_opt: argument_expression_list .
  241 argument_expression_list: argument_expression_list . ',' assignment_expression

    ','  shift, and go to state 344

    $default  reduce using rule 239 (argument_expression_list_opt)


state 282

  235 postfix_expression: postfix_expression '.' IDENTIFIER .

    $default  reduce using rule 235 (postfix_expression)


state 283

   41 attribute_arg: '(' attribute_arg_list_opt ')' .

    $default  reduce using rule 41 (attribute_arg)


state 284

   37 attribute_arg_list: attribute_arg_list ',' attribute_arg .

    $default  reduce using rule 37 (attribute_arg_list)


state 285

  265 designator: '[' . constant_expression ']'

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    conditional_expression     go to state 238
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 115
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119
    constant_expression        go to state 345


state 286

  264 designator: '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 346


state 287

  255 initializer: '{' initializer_list . '}'
  256            | '{' initializer_list . ',' '}'
  258 initializer_list: initializer_list . ',' designation_opt initializer

    ','  shift, and go to state 347
    '}'  shift, and go to state 348


state 288

  257 initializer_list: designation_opt . initializer

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107
    '{'               shift, and go to state 202

    assignment_expression      go to state 203
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119
    initializer                go to state 349


state 289

  260 designation_opt: designation .

    $default  reduce using rule 260 (designation_opt)


state 290

  261 designation: designator_list . '='
  263 designator_list: designator_list . designator

    '='  shift, and go to state 350
    '['  shift, and go to state 285
    '.'  shift, and go to state 286

    designator  go to state 351


state 291

  262 designator_list: designator .

    $default  reduce using rule 262 (designator_list)


state 292

   58 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 58 (direct_declarator)


state 293

  253 assignment_expression_opt: assignment_expression .

    $default  reduce using rule 253 (assignment_expression_opt)


state 294

   59 direct_declarator: direct_declarator '[' assignment_expression_opt . ']'

    ']'  shift, and go to state 352


state 295

   64 identifier_list: IDENTIFIER .

    $default  reduce using rule 64 (identifier_list)


state 296

   10 declaration_specifiers: declaration_specifiers . declaration_specifier
   72 parameter_declaration: declaration_specifiers . declarator
   73                      | declaration_specifiers .

    KW_INT           shift, and go to state 64
    KW_CHAR          shift, and go to state 4
    KW_VOID          shift, and go to state 5
    KW_FLOAT         shift, and go to state 6
    KW_DOUBLE        shift, and go to state 7
    KW_SHORT         shift, and go to state 8
    KW_LONG          shift, and go to state 9
    KW_SIGNED        shift, and go to state 10
    KW_UNSIGNED      shift, and go to state 11
    KW_BOOL          shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_IMAGINARY     shift, and go to state 14
    KW_STRUCT        shift, and go to state 15
    KW_UNION         shift, and go to state 16
    KW_ENUM          shift, and go to state 17
    KW_TYPEDEF       shift, and go to state 18
    KW_ALIGNAS       shift, and go to state 19
    KW_NORETURN      shift, and go to state 20
    KW_THREAD_LOCAL  shift, and go to state 21
    KW_ATOMIC        shift, and go to state 22
    KW_CONST         shift, and go to state 23
    KW_VOLATILE      shift, and go to state 24
    KW_RESTRICT      shift, and go to state 25
    KW_INLINE        shift, and go to state 26
    KW_EXTERN        shift, and go to state 27
    KW_STATIC        shift, and go to state 28
    KW_REGISTER      shift, and go to state 29
    KW_AUTO          shift, and go to state 30
    KW_TYPEOF        shift, and go to state 32
    KW_ATTRIBUTE     shift, and go to state 33
    KW_DECLSPEC      shift, and go to state 34
    '*'              shift, and go to state 65

    ')'       reduce using rule 73 (parameter_declaration)
    ','       reduce using rule 73 (parameter_declaration)
    $default  reduce using rule 49 (pointer_opt)

    declaration_specifier      go to state 66
    storage_class_specifier    go to state 39
    type_qualifier             go to state 40
    function_specifier         go to state 41
    alignment_specifier        go to state 42
    attribute_specifier        go to state 43
    declspec_specifier         go to state 44
    declarator                 go to state 353
    pointer_opt                go to state 71
    pointer                    go to state 72
    type_specifier             go to state 73
    struct_or_union_specifier  go to state 46
    enum_specifier             go to state 47


state 297

   61 direct_declarator: direct_declarator '(' identifier_list_opt . ')'

    ')'  shift, and go to state 354


state 298

   63 identifier_list_opt: identifier_list .
   65 identifier_list: identifier_list . ',' IDENTIFIER

    ','  shift, and go to state 355

    $default  reduce using rule 63 (identifier_list_opt)


state 299

   60 direct_declarator: direct_declarator '(' parameter_type_list_opt . ')'

    ')'  shift, and go to state 356


state 300

   67 parameter_type_list_opt: parameter_type_list .

    $default  reduce using rule 67 (parameter_type_list_opt)


state 301

   68 parameter_type_list: parameter_list .
   69                    | parameter_list . ',' ELLIPSIS
   71 parameter_list: parameter_list . ',' parameter_declaration

    ','  shift, and go to state 357

    $default  reduce using rule 68 (parameter_type_list)


state 302

   70 parameter_list: parameter_declaration .

    $default  reduce using rule 70 (parameter_list)


state 303

  182 labeled_statement: IDENTIFIER ':' . statement

    IDENTIFIER        shift, and go to state 208
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_RETURN         shift, and go to state 209
    KW_IF             shift, and go to state 210
    KW_WHILE          shift, and go to state 211
    KW_FOR            shift, and go to state 212
    KW_DO             shift, and go to state 213
    KW_SWITCH         shift, and go to state 214
    KW_CASE           shift, and go to state 215
    KW_DEFAULT        shift, and go to state 216
    KW_BREAK          shift, and go to state 217
    KW_CONTINUE       shift, and go to state 218
    KW_GOTO           shift, and go to state 219
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    KW_ASM            shift, and go to state 221
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107
    ';'               shift, and go to state 222
    '{'               shift, and go to state 137

    compound_statement         go to state 225
    asm_statement              go to state 229
    statement                  go to state 358
    labeled_statement          go to state 231
    expression                 go to state 232
    assignment_expression      go to state 169
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 304

  168 statement: KW_RETURN expression_opt . ';'

    ';'  shift, and go to state 359


state 305

  186 expression_opt: expression .

    $default  reduce using rule 186 (expression_opt)


state 306

  171 statement: KW_IF '(' . expression ')' statement
  172          | KW_IF '(' . expression ')' statement KW_ELSE statement

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    expression                 go to state 360
    assignment_expression      go to state 169
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 307

  173 statement: KW_WHILE '(' . expression ')' statement

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    expression                 go to state 361
    assignment_expression      go to state 169
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 308

  175 statement: KW_FOR '(' . expression_opt ';' expression_opt ';' expression_opt ')' statement
  176          | KW_FOR '(' . declaration expression_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_INT            shift, and go to state 64
    KW_CHAR           shift, and go to state 4
    KW_VOID           shift, and go to state 5
    KW_FLOAT          shift, and go to state 6
    KW_DOUBLE         shift, and go to state 7
    KW_SHORT          shift, and go to state 8
    KW_LONG           shift, and go to state 9
    KW_SIGNED         shift, and go to state 10
    KW_UNSIGNED       shift, and go to state 11
    KW_BOOL           shift, and go to state 12
    KW_COMPLEX        shift, and go to state 13
    KW_IMAGINARY      shift, and go to state 14
    KW_STRUCT         shift, and go to state 15
    KW_UNION          shift, and go to state 16
    KW_ENUM           shift, and go to state 17
    KW_TYPEDEF        shift, and go to state 18
    KW_SIZEOF         shift, and go to state 97
    KW_ALIGNAS        shift, and go to state 19
    KW_NORETURN       shift, and go to state 20
    KW_THREAD_LOCAL   shift, and go to state 21
    KW_ATOMIC         shift, and go to state 22
    KW_CONST          shift, and go to state 23
    KW_VOLATILE       shift, and go to state 24
    KW_RESTRICT       shift, and go to state 25
    KW_INLINE         shift, and go to state 26
    KW_EXTERN         shift, and go to state 27
    KW_STATIC         shift, and go to state 28
    KW_REGISTER       shift, and go to state 29
    KW_AUTO           shift, and go to state 30
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 220
    KW_ATTRIBUTE      shift, and go to state 33
    KW_DECLSPEC       shift, and go to state 34
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    $default  reduce using rule 185 (expression_opt)

    declaration                go to state 362
    declaration_specifiers     go to state 224
    declaration_specifier      go to state 38
    storage_class_specifier    go to state 39
    type_qualifier             go to state 40
    function_specifier         go to state 41
    alignment_specifier        go to state 42
    attribute_specifier        go to state 43
    declspec_specifier         go to state 44
    type_specifier             go to state 73
    struct_or_union_specifier  go to state 46
    enum_specifier             go to state 47
    expression_opt             go to state 363
    expression                 go to state 305
    assignment_expression      go to state 169
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 309

  174 statement: KW_DO statement . KW_WHILE '(' expression ')' ';'

    KW_WHILE  shift, and go to state 364


state 310

  177 statement: KW_SWITCH '(' . expression ')' statement

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    expression                 go to state 365
    assignment_expression      go to state 169
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 311

  183 labeled_statement: KW_CASE constant_expression . ':' statement

    ':'  shift, and go to state 366


state 312

  184 labeled_statement: KW_DEFAULT ':' . statement

    IDENTIFIER        shift, and go to state 208
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_RETURN         shift, and go to state 209
    KW_IF             shift, and go to state 210
    KW_WHILE          shift, and go to state 211
    KW_FOR            shift, and go to state 212
    KW_DO             shift, and go to state 213
    KW_SWITCH         shift, and go to state 214
    KW_CASE           shift, and go to state 215
    KW_DEFAULT        shift, and go to state 216
    KW_BREAK          shift, and go to state 217
    KW_CONTINUE       shift, and go to state 218
    KW_GOTO           shift, and go to state 219
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    KW_ASM            shift, and go to state 221
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107
    ';'               shift, and go to state 222
    '{'               shift, and go to state 137

    compound_statement         go to state 225
    asm_statement              go to state 229
    statement                  go to state 367
    labeled_statement          go to state 231
    expression                 go to state 232
    assignment_expression      go to state 169
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 313

  178 statement: KW_BREAK ';' .

    $default  reduce using rule 178 (statement)


state 314

  179 statement: KW_CONTINUE ';' .

    $default  reduce using rule 179 (statement)


state 315

  180 statement: KW_GOTO IDENTIFIER . ';'

    ';'  shift, and go to state 368


state 316

   88 type_specifier: KW_TYPEOF '(' . type_specifier ')'
  229 unary_expression: KW_TYPEOF '(' . expression ')'

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_INT            shift, and go to state 64
    KW_CHAR           shift, and go to state 4
    KW_VOID           shift, and go to state 5
    KW_FLOAT          shift, and go to state 6
    KW_DOUBLE         shift, and go to state 7
    KW_SHORT          shift, and go to state 8
    KW_LONG           shift, and go to state 9
    KW_SIGNED         shift, and go to state 10
    KW_UNSIGNED       shift, and go to state 11
    KW_BOOL           shift, and go to state 12
    KW_COMPLEX        shift, and go to state 13
    KW_IMAGINARY      shift, and go to state 14
    KW_STRUCT         shift, and go to state 15
    KW_UNION          shift, and go to state 16
    KW_ENUM           shift, and go to state 17
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 220
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    type_specifier             go to state 120
    struct_or_union_specifier  go to state 46
    enum_specifier             go to state 47
    expression                 go to state 249
    assignment_expression      go to state 169
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 317

  135 asm_statement: KW_ASM asm_qualifiers_opt . '(' asm_arguments ')' ';'
  137 asm_qualifiers_opt: asm_qualifiers_opt . KW_VOLATILE
  138                   | asm_qualifiers_opt . KW_INLINE
  139                   | asm_qualifiers_opt . KW_GOTO

    KW_GOTO      shift, and go to state 369
    KW_VOLATILE  shift, and go to state 370
    KW_INLINE    shift, and go to state 371
    '('          shift, and go to state 372


state 318

  133 block_item: declaration ';' .

    $default  reduce using rule 133 (block_item)


state 319

  128 compound_statement: '{' block_item_list_opt '}' .

    $default  reduce using rule 128 (compound_statement)


state 320

  132 block_item_list: block_item_list block_item .

    $default  reduce using rule 132 (block_item_list)


state 321

  167 statement: expression ';' .

    $default  reduce using rule 167 (statement)


state 322

  125 simple_param: declaration_specifiers pointer_opt . IDENTIFIER
  126             | declaration_specifiers pointer_opt .

    IDENTIFIER  shift, and go to state 373

    $default  reduce using rule 126 (simple_param)


state 323

  118 simple_function_definition: function_declspec IDENTIFIER '(' simple_param_list_opt ')' . compound_statement

    '{'  shift, and go to state 137

    compound_statement  go to state 374


state 324

  124 simple_param_list: simple_param_list ',' . simple_param

    KW_INT           shift, and go to state 64
    KW_CHAR          shift, and go to state 4
    KW_VOID          shift, and go to state 5
    KW_FLOAT         shift, and go to state 6
    KW_DOUBLE        shift, and go to state 7
    KW_SHORT         shift, and go to state 8
    KW_LONG          shift, and go to state 9
    KW_SIGNED        shift, and go to state 10
    KW_UNSIGNED      shift, and go to state 11
    KW_BOOL          shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_IMAGINARY     shift, and go to state 14
    KW_STRUCT        shift, and go to state 15
    KW_UNION         shift, and go to state 16
    KW_ENUM          shift, and go to state 17
    KW_TYPEDEF       shift, and go to state 18
    KW_ALIGNAS       shift, and go to state 19
    KW_NORETURN      shift, and go to state 20
    KW_THREAD_LOCAL  shift, and go to state 21
    KW_ATOMIC        shift, and go to state 22
    KW_CONST         shift, and go to state 23
    KW_VOLATILE      shift, and go to state 24
    KW_RESTRICT      shift, and go to state 25
    KW_INLINE        shift, and go to state 26
    KW_EXTERN        shift, and go to state 27
    KW_STATIC        shift, and go to state 28
    KW_REGISTER      shift, and go to state 29
    KW_AUTO          shift, and go to state 30
    KW_TYPEOF        shift, and go to state 32
    KW_ATTRIBUTE     shift, and go to state 33
    KW_DECLSPEC      shift, and go to state 34

    declaration_specifiers     go to state 233
    declaration_specifier      go to state 38
    storage_class_specifier    go to state 39
    type_qualifier             go to state 40
    function_specifier         go to state 41
    alignment_specifier        go to state 42
    attribute_specifier        go to state 43
    declspec_specifier         go to state 44
    type_specifier             go to state 73
    struct_or_union_specifier  go to state 46
    enum_specifier             go to state 47
    simple_param               go to state 375


state 325

  107 struct_declarator: declarator ':' constant_expression .

    $default  reduce using rule 107 (struct_declarator)


state 326

  104 struct_declarator_list: struct_declarator_list ',' struct_declarator .

    $default  reduce using rule 104 (struct_declarator_list)


state 327

  228 unary_expression: KW_SIZEOF '(' type_specifier ')' .

    $default  reduce using rule 228 (unary_expression)


state 328

  237 postfix_expression: KW_GENERIC '(' assignment_expression ',' . assignment_expression ')'

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    assignment_expression      go to state 376
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 329

  229 unary_expression: KW_TYPEOF '(' expression ')' .

    $default  reduce using rule 229 (unary_expression)


state 330

  190 assignment_expression: unary_expression ADD_ASSIGN assignment_expression .

    $default  reduce using rule 190 (assignment_expression)


state 331

  191 assignment_expression: unary_expression SUB_ASSIGN assignment_expression .

    $default  reduce using rule 191 (assignment_expression)


state 332

  192 assignment_expression: unary_expression MUL_ASSIGN assignment_expression .

    $default  reduce using rule 192 (assignment_expression)


state 333

  193 assignment_expression: unary_expression DIV_ASSIGN assignment_expression .

    $default  reduce using rule 193 (assignment_expression)


state 334

  194 assignment_expression: unary_expression MOD_ASSIGN assignment_expression .

    $default  reduce using rule 194 (assignment_expression)


state 335

  195 assignment_expression: unary_expression AND_ASSIGN assignment_expression .

    $default  reduce using rule 195 (assignment_expression)


state 336

  196 assignment_expression: unary_expression OR_ASSIGN assignment_expression .

    $default  reduce using rule 196 (assignment_expression)


state 337

  197 assignment_expression: unary_expression XOR_ASSIGN assignment_expression .

    $default  reduce using rule 197 (assignment_expression)


state 338

  198 assignment_expression: unary_expression LSHIFT_ASSIGN assignment_expression .

    $default  reduce using rule 198 (assignment_expression)


state 339

  199 assignment_expression: unary_expression RSHIFT_ASSIGN assignment_expression .

    $default  reduce using rule 199 (assignment_expression)


state 340

  189 assignment_expression: unary_expression '=' assignment_expression .

    $default  reduce using rule 189 (assignment_expression)


state 341

  165 static_assert_declaration: KW_STATIC_ASSERT '(' conditional_expression ',' STRING_LITERAL ')' . ';'

    ';'  shift, and go to state 377


state 342

  234 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 234 (postfix_expression)


state 343

  231 postfix_expression: postfix_expression '(' argument_expression_list_opt ')' .

    $default  reduce using rule 231 (postfix_expression)


state 344

  241 argument_expression_list: argument_expression_list ',' . assignment_expression

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    assignment_expression      go to state 378
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 345

  265 designator: '[' constant_expression . ']'

    ']'  shift, and go to state 379


state 346

  264 designator: '.' IDENTIFIER .

    $default  reduce using rule 264 (designator)


state 347

  256 initializer: '{' initializer_list ',' . '}'
  258 initializer_list: initializer_list ',' . designation_opt initializer

    '['  shift, and go to state 285
    '.'  shift, and go to state 286
    '}'  shift, and go to state 380

    $default  reduce using rule 259 (designation_opt)

    designation_opt  go to state 381
    designation      go to state 289
    designator_list  go to state 290
    designator       go to state 291


state 348

  255 initializer: '{' initializer_list '}' .

    $default  reduce using rule 255 (initializer)


state 349

  257 initializer_list: designation_opt initializer .

    $default  reduce using rule 257 (initializer_list)


state 350

  261 designation: designator_list '=' .

    $default  reduce using rule 261 (designation)


state 351

  263 designator_list: designator_list designator .

    $default  reduce using rule 263 (designator_list)


state 352

   59 direct_declarator: direct_declarator '[' assignment_expression_opt ']' .

    $default  reduce using rule 59 (direct_declarator)


state 353

   72 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 72 (parameter_declaration)


state 354

   61 direct_declarator: direct_declarator '(' identifier_list_opt ')' .

    $default  reduce using rule 61 (direct_declarator)


state 355

   65 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 382


state 356

   60 direct_declarator: direct_declarator '(' parameter_type_list_opt ')' .

    $default  reduce using rule 60 (direct_declarator)


state 357

   69 parameter_type_list: parameter_list ',' . ELLIPSIS
   71 parameter_list: parameter_list ',' . parameter_declaration

    KW_INT           shift, and go to state 64
    KW_CHAR          shift, and go to state 4
    KW_VOID          shift, and go to state 5
    KW_FLOAT         shift, and go to state 6
    KW_DOUBLE        shift, and go to state 7
    KW_SHORT         shift, and go to state 8
    KW_LONG          shift, and go to state 9
    KW_SIGNED        shift, and go to state 10
    KW_UNSIGNED      shift, and go to state 11
    KW_BOOL          shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_IMAGINARY     shift, and go to state 14
    KW_STRUCT        shift, and go to state 15
    KW_UNION         shift, and go to state 16
    KW_ENUM          shift, and go to state 17
    KW_TYPEDEF       shift, and go to state 18
    KW_ALIGNAS       shift, and go to state 19
    KW_NORETURN      shift, and go to state 20
    KW_THREAD_LOCAL  shift, and go to state 21
    KW_ATOMIC        shift, and go to state 22
    KW_CONST         shift, and go to state 23
    KW_VOLATILE      shift, and go to state 24
    KW_RESTRICT      shift, and go to state 25
    KW_INLINE        shift, and go to state 26
    KW_EXTERN        shift, and go to state 27
    KW_STATIC        shift, and go to state 28
    KW_REGISTER      shift, and go to state 29
    KW_AUTO          shift, and go to state 30
    KW_TYPEOF        shift, and go to state 32
    KW_ATTRIBUTE     shift, and go to state 33
    KW_DECLSPEC      shift, and go to state 34
    ELLIPSIS         shift, and go to state 383

    declaration_specifiers     go to state 296
    declaration_specifier      go to state 38
    storage_class_specifier    go to state 39
    type_qualifier             go to state 40
    function_specifier         go to state 41
    alignment_specifier        go to state 42
    attribute_specifier        go to state 43
    declspec_specifier         go to state 44
    parameter_declaration      go to state 384
    type_specifier             go to state 73
    struct_or_union_specifier  go to state 46
    enum_specifier             go to state 47


state 358

  182 labeled_statement: IDENTIFIER ':' statement .

    $default  reduce using rule 182 (labeled_statement)


state 359

  168 statement: KW_RETURN expression_opt ';' .

    $default  reduce using rule 168 (statement)


state 360

  171 statement: KW_IF '(' expression . ')' statement
  172          | KW_IF '(' expression . ')' statement KW_ELSE statement

    ')'  shift, and go to state 385


state 361

  173 statement: KW_WHILE '(' expression . ')' statement

    ')'  shift, and go to state 386


state 362

  176 statement: KW_FOR '(' declaration . expression_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    $default  reduce using rule 185 (expression_opt)

    expression_opt             go to state 387
    expression                 go to state 305
    assignment_expression      go to state 169
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 363

  175 statement: KW_FOR '(' expression_opt . ';' expression_opt ';' expression_opt ')' statement

    ';'  shift, and go to state 388


state 364

  174 statement: KW_DO statement KW_WHILE . '(' expression ')' ';'

    '('  shift, and go to state 389


state 365

  177 statement: KW_SWITCH '(' expression . ')' statement

    ')'  shift, and go to state 390


state 366

  183 labeled_statement: KW_CASE constant_expression ':' . statement

    IDENTIFIER        shift, and go to state 208
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_RETURN         shift, and go to state 209
    KW_IF             shift, and go to state 210
    KW_WHILE          shift, and go to state 211
    KW_FOR            shift, and go to state 212
    KW_DO             shift, and go to state 213
    KW_SWITCH         shift, and go to state 214
    KW_CASE           shift, and go to state 215
    KW_DEFAULT        shift, and go to state 216
    KW_BREAK          shift, and go to state 217
    KW_CONTINUE       shift, and go to state 218
    KW_GOTO           shift, and go to state 219
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    KW_ASM            shift, and go to state 221
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107
    ';'               shift, and go to state 222
    '{'               shift, and go to state 137

    compound_statement         go to state 225
    asm_statement              go to state 229
    statement                  go to state 391
    labeled_statement          go to state 231
    expression                 go to state 232
    assignment_expression      go to state 169
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 367

  184 labeled_statement: KW_DEFAULT ':' statement .

    $default  reduce using rule 184 (labeled_statement)


state 368

  180 statement: KW_GOTO IDENTIFIER ';' .

    $default  reduce using rule 180 (statement)


state 369

  139 asm_qualifiers_opt: asm_qualifiers_opt KW_GOTO .

    $default  reduce using rule 139 (asm_qualifiers_opt)


state 370

  137 asm_qualifiers_opt: asm_qualifiers_opt KW_VOLATILE .

    $default  reduce using rule 137 (asm_qualifiers_opt)


state 371

  138 asm_qualifiers_opt: asm_qualifiers_opt KW_INLINE .

    $default  reduce using rule 138 (asm_qualifiers_opt)


state 372

  135 asm_statement: KW_ASM asm_qualifiers_opt '(' . asm_arguments ')' ';'

    STRING_LITERAL  shift, and go to state 93

    asm_arguments  go to state 392
    string_seq     go to state 393


state 373

  125 simple_param: declaration_specifiers pointer_opt IDENTIFIER .

    $default  reduce using rule 125 (simple_param)


state 374

  118 simple_function_definition: function_declspec IDENTIFIER '(' simple_param_list_opt ')' compound_statement .

    $default  reduce using rule 118 (simple_function_definition)


state 375

  124 simple_param_list: simple_param_list ',' simple_param .

    $default  reduce using rule 124 (simple_param_list)


state 376

  237 postfix_expression: KW_GENERIC '(' assignment_expression ',' assignment_expression . ')'

    ')'  shift, and go to state 394


state 377

  165 static_assert_declaration: KW_STATIC_ASSERT '(' conditional_expression ',' STRING_LITERAL ')' ';' .

    $default  reduce using rule 165 (static_assert_declaration)


state 378

  241 argument_expression_list: argument_expression_list ',' assignment_expression .

    $default  reduce using rule 241 (argument_expression_list)


state 379

  265 designator: '[' constant_expression ']' .

    $default  reduce using rule 265 (designator)


state 380

  256 initializer: '{' initializer_list ',' '}' .

    $default  reduce using rule 256 (initializer)


state 381

  258 initializer_list: initializer_list ',' designation_opt . initializer

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107
    '{'               shift, and go to state 202

    assignment_expression      go to state 203
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119
    initializer                go to state 395


state 382

   65 identifier_list: identifier_list ',' IDENTIFIER .

    $default  reduce using rule 65 (identifier_list)


state 383

   69 parameter_type_list: parameter_list ',' ELLIPSIS .

    $default  reduce using rule 69 (parameter_type_list)


state 384

   71 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 71 (parameter_list)


state 385

  171 statement: KW_IF '(' expression ')' . statement
  172          | KW_IF '(' expression ')' . statement KW_ELSE statement

    IDENTIFIER        shift, and go to state 208
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_RETURN         shift, and go to state 209
    KW_IF             shift, and go to state 210
    KW_WHILE          shift, and go to state 211
    KW_FOR            shift, and go to state 212
    KW_DO             shift, and go to state 213
    KW_SWITCH         shift, and go to state 214
    KW_CASE           shift, and go to state 215
    KW_DEFAULT        shift, and go to state 216
    KW_BREAK          shift, and go to state 217
    KW_CONTINUE       shift, and go to state 218
    KW_GOTO           shift, and go to state 219
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    KW_ASM            shift, and go to state 221
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107
    ';'               shift, and go to state 222
    '{'               shift, and go to state 137

    compound_statement         go to state 225
    asm_statement              go to state 229
    statement                  go to state 396
    labeled_statement          go to state 231
    expression                 go to state 232
    assignment_expression      go to state 169
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 386

  173 statement: KW_WHILE '(' expression ')' . statement

    IDENTIFIER        shift, and go to state 208
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_RETURN         shift, and go to state 209
    KW_IF             shift, and go to state 210
    KW_WHILE          shift, and go to state 211
    KW_FOR            shift, and go to state 212
    KW_DO             shift, and go to state 213
    KW_SWITCH         shift, and go to state 214
    KW_CASE           shift, and go to state 215
    KW_DEFAULT        shift, and go to state 216
    KW_BREAK          shift, and go to state 217
    KW_CONTINUE       shift, and go to state 218
    KW_GOTO           shift, and go to state 219
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    KW_ASM            shift, and go to state 221
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107
    ';'               shift, and go to state 222
    '{'               shift, and go to state 137

    compound_statement         go to state 225
    asm_statement              go to state 229
    statement                  go to state 397
    labeled_statement          go to state 231
    expression                 go to state 232
    assignment_expression      go to state 169
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 387

  176 statement: KW_FOR '(' declaration expression_opt . ';' expression_opt ')' statement

    ';'  shift, and go to state 398


state 388

  175 statement: KW_FOR '(' expression_opt ';' . expression_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    $default  reduce using rule 185 (expression_opt)

    expression_opt             go to state 399
    expression                 go to state 305
    assignment_expression      go to state 169
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 389

  174 statement: KW_DO statement KW_WHILE '(' . expression ')' ';'

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    expression                 go to state 400
    assignment_expression      go to state 169
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 390

  177 statement: KW_SWITCH '(' expression ')' . statement

    IDENTIFIER        shift, and go to state 208
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_RETURN         shift, and go to state 209
    KW_IF             shift, and go to state 210
    KW_WHILE          shift, and go to state 211
    KW_FOR            shift, and go to state 212
    KW_DO             shift, and go to state 213
    KW_SWITCH         shift, and go to state 214
    KW_CASE           shift, and go to state 215
    KW_DEFAULT        shift, and go to state 216
    KW_BREAK          shift, and go to state 217
    KW_CONTINUE       shift, and go to state 218
    KW_GOTO           shift, and go to state 219
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    KW_ASM            shift, and go to state 221
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107
    ';'               shift, and go to state 222
    '{'               shift, and go to state 137

    compound_statement         go to state 225
    asm_statement              go to state 229
    statement                  go to state 401
    labeled_statement          go to state 231
    expression                 go to state 232
    assignment_expression      go to state 169
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 391

  183 labeled_statement: KW_CASE constant_expression ':' statement .

    $default  reduce using rule 183 (labeled_statement)


state 392

  135 asm_statement: KW_ASM asm_qualifiers_opt '(' asm_arguments . ')' ';'

    ')'  shift, and go to state 402


state 393

  140 asm_arguments: string_seq .
  141              | string_seq . ':' asm_output_operands_opt
  142              | string_seq . ':' asm_output_operands_opt ':' asm_input_operands_opt
  143              | string_seq . ':' asm_output_operands_opt ':' asm_input_operands_opt ':' asm_clobbers_opt
  144              | string_seq . ':' asm_output_operands_opt ':' asm_input_operands_opt ':' asm_clobbers_opt ':' asm_goto_labels_opt
  251 string_seq: string_seq . STRING_LITERAL

    STRING_LITERAL  shift, and go to state 192
    ':'             shift, and go to state 403

    $default  reduce using rule 140 (asm_arguments)


state 394

  237 postfix_expression: KW_GENERIC '(' assignment_expression ',' assignment_expression ')' .

    $default  reduce using rule 237 (postfix_expression)


state 395

  258 initializer_list: initializer_list ',' designation_opt initializer .

    $default  reduce using rule 258 (initializer_list)


state 396

  171 statement: KW_IF '(' expression ')' statement .
  172          | KW_IF '(' expression ')' statement . KW_ELSE statement

    KW_ELSE  shift, and go to state 404

    KW_ELSE   [reduce using rule 171 (statement)]
    $default  reduce using rule 171 (statement)


state 397

  173 statement: KW_WHILE '(' expression ')' statement .

    $default  reduce using rule 173 (statement)


state 398

  176 statement: KW_FOR '(' declaration expression_opt ';' . expression_opt ')' statement

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    $default  reduce using rule 185 (expression_opt)

    expression_opt             go to state 405
    expression                 go to state 305
    assignment_expression      go to state 169
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 399

  175 statement: KW_FOR '(' expression_opt ';' expression_opt . ';' expression_opt ')' statement

    ';'  shift, and go to state 406


state 400

  174 statement: KW_DO statement KW_WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 407


state 401

  177 statement: KW_SWITCH '(' expression ')' statement .

    $default  reduce using rule 177 (statement)


state 402

  135 asm_statement: KW_ASM asm_qualifiers_opt '(' asm_arguments ')' . ';'

    ';'  shift, and go to state 408


state 403

  141 asm_arguments: string_seq ':' . asm_output_operands_opt
  142              | string_seq ':' . asm_output_operands_opt ':' asm_input_operands_opt
  143              | string_seq ':' . asm_output_operands_opt ':' asm_input_operands_opt ':' asm_clobbers_opt
  144              | string_seq ':' . asm_output_operands_opt ':' asm_input_operands_opt ':' asm_clobbers_opt ':' asm_goto_labels_opt

    '['  shift, and go to state 409

    STRING_LITERAL  reduce using rule 159 (asm_symbolic_name_opt)
    $default        reduce using rule 145 (asm_output_operands_opt)

    asm_output_operands_opt  go to state 410
    asm_output_operands      go to state 411
    asm_output_operand       go to state 412
    asm_symbolic_name_opt    go to state 413


state 404

  172 statement: KW_IF '(' expression ')' statement KW_ELSE . statement

    IDENTIFIER        shift, and go to state 208
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_RETURN         shift, and go to state 209
    KW_IF             shift, and go to state 210
    KW_WHILE          shift, and go to state 211
    KW_FOR            shift, and go to state 212
    KW_DO             shift, and go to state 213
    KW_SWITCH         shift, and go to state 214
    KW_CASE           shift, and go to state 215
    KW_DEFAULT        shift, and go to state 216
    KW_BREAK          shift, and go to state 217
    KW_CONTINUE       shift, and go to state 218
    KW_GOTO           shift, and go to state 219
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    KW_ASM            shift, and go to state 221
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107
    ';'               shift, and go to state 222
    '{'               shift, and go to state 137

    compound_statement         go to state 225
    asm_statement              go to state 229
    statement                  go to state 414
    labeled_statement          go to state 231
    expression                 go to state 232
    assignment_expression      go to state 169
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 405

  176 statement: KW_FOR '(' declaration expression_opt ';' expression_opt . ')' statement

    ')'  shift, and go to state 415


state 406

  175 statement: KW_FOR '(' expression_opt ';' expression_opt ';' . expression_opt ')' statement

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    $default  reduce using rule 185 (expression_opt)

    expression_opt             go to state 416
    expression                 go to state 305
    assignment_expression      go to state 169
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 407

  174 statement: KW_DO statement KW_WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 417


state 408

  135 asm_statement: KW_ASM asm_qualifiers_opt '(' asm_arguments ')' ';' .

    $default  reduce using rule 135 (asm_statement)


state 409

  160 asm_symbolic_name_opt: '[' . IDENTIFIER ']'

    IDENTIFIER  shift, and go to state 418


state 410

  141 asm_arguments: string_seq ':' asm_output_operands_opt .
  142              | string_seq ':' asm_output_operands_opt . ':' asm_input_operands_opt
  143              | string_seq ':' asm_output_operands_opt . ':' asm_input_operands_opt ':' asm_clobbers_opt
  144              | string_seq ':' asm_output_operands_opt . ':' asm_input_operands_opt ':' asm_clobbers_opt ':' asm_goto_labels_opt

    ':'  shift, and go to state 419

    $default  reduce using rule 141 (asm_arguments)


state 411

  146 asm_output_operands_opt: asm_output_operands .
  154 asm_output_operands: asm_output_operands . ',' asm_output_operand

    ','  shift, and go to state 420

    $default  reduce using rule 146 (asm_output_operands_opt)


state 412

  153 asm_output_operands: asm_output_operand .

    $default  reduce using rule 153 (asm_output_operands)


state 413

  157 asm_output_operand: asm_symbolic_name_opt . STRING_LITERAL '(' unary_expression ')'

    STRING_LITERAL  shift, and go to state 421


state 414

  172 statement: KW_IF '(' expression ')' statement KW_ELSE statement .

    $default  reduce using rule 172 (statement)


state 415

  176 statement: KW_FOR '(' declaration expression_opt ';' expression_opt ')' . statement

    IDENTIFIER        shift, and go to state 208
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_RETURN         shift, and go to state 209
    KW_IF             shift, and go to state 210
    KW_WHILE          shift, and go to state 211
    KW_FOR            shift, and go to state 212
    KW_DO             shift, and go to state 213
    KW_SWITCH         shift, and go to state 214
    KW_CASE           shift, and go to state 215
    KW_DEFAULT        shift, and go to state 216
    KW_BREAK          shift, and go to state 217
    KW_CONTINUE       shift, and go to state 218
    KW_GOTO           shift, and go to state 219
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    KW_ASM            shift, and go to state 221
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107
    ';'               shift, and go to state 222
    '{'               shift, and go to state 137

    compound_statement         go to state 225
    asm_statement              go to state 229
    statement                  go to state 422
    labeled_statement          go to state 231
    expression                 go to state 232
    assignment_expression      go to state 169
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 416

  175 statement: KW_FOR '(' expression_opt ';' expression_opt ';' expression_opt . ')' statement

    ')'  shift, and go to state 423


state 417

  174 statement: KW_DO statement KW_WHILE '(' expression ')' ';' .

    $default  reduce using rule 174 (statement)


state 418

  160 asm_symbolic_name_opt: '[' IDENTIFIER . ']'

    ']'  shift, and go to state 424


state 419

  142 asm_arguments: string_seq ':' asm_output_operands_opt ':' . asm_input_operands_opt
  143              | string_seq ':' asm_output_operands_opt ':' . asm_input_operands_opt ':' asm_clobbers_opt
  144              | string_seq ':' asm_output_operands_opt ':' . asm_input_operands_opt ':' asm_clobbers_opt ':' asm_goto_labels_opt

    '['  shift, and go to state 409

    STRING_LITERAL  reduce using rule 159 (asm_symbolic_name_opt)
    $default        reduce using rule 147 (asm_input_operands_opt)

    asm_input_operands_opt  go to state 425
    asm_input_operands      go to state 426
    asm_input_operand       go to state 427
    asm_symbolic_name_opt   go to state 428


state 420

  154 asm_output_operands: asm_output_operands ',' . asm_output_operand

    '['  shift, and go to state 409

    $default  reduce using rule 159 (asm_symbolic_name_opt)

    asm_output_operand     go to state 429
    asm_symbolic_name_opt  go to state 413


state 421

  157 asm_output_operand: asm_symbolic_name_opt STRING_LITERAL . '(' unary_expression ')'

    '('  shift, and go to state 430


state 422

  176 statement: KW_FOR '(' declaration expression_opt ';' expression_opt ')' statement .

    $default  reduce using rule 176 (statement)


state 423

  175 statement: KW_FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' . statement

    IDENTIFIER        shift, and go to state 208
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_RETURN         shift, and go to state 209
    KW_IF             shift, and go to state 210
    KW_WHILE          shift, and go to state 211
    KW_FOR            shift, and go to state 212
    KW_DO             shift, and go to state 213
    KW_SWITCH         shift, and go to state 214
    KW_CASE           shift, and go to state 215
    KW_DEFAULT        shift, and go to state 216
    KW_BREAK          shift, and go to state 217
    KW_CONTINUE       shift, and go to state 218
    KW_GOTO           shift, and go to state 219
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    KW_ASM            shift, and go to state 221
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107
    ';'               shift, and go to state 222
    '{'               shift, and go to state 137

    compound_statement         go to state 225
    asm_statement              go to state 229
    statement                  go to state 431
    labeled_statement          go to state 231
    expression                 go to state 232
    assignment_expression      go to state 169
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 424

  160 asm_symbolic_name_opt: '[' IDENTIFIER ']' .

    $default  reduce using rule 160 (asm_symbolic_name_opt)


state 425

  142 asm_arguments: string_seq ':' asm_output_operands_opt ':' asm_input_operands_opt .
  143              | string_seq ':' asm_output_operands_opt ':' asm_input_operands_opt . ':' asm_clobbers_opt
  144              | string_seq ':' asm_output_operands_opt ':' asm_input_operands_opt . ':' asm_clobbers_opt ':' asm_goto_labels_opt

    ':'  shift, and go to state 432

    $default  reduce using rule 142 (asm_arguments)


state 426

  148 asm_input_operands_opt: asm_input_operands .
  156 asm_input_operands: asm_input_operands . ',' asm_input_operand

    ','  shift, and go to state 433

    $default  reduce using rule 148 (asm_input_operands_opt)


state 427

  155 asm_input_operands: asm_input_operand .

    $default  reduce using rule 155 (asm_input_operands)


state 428

  158 asm_input_operand: asm_symbolic_name_opt . STRING_LITERAL '(' assignment_expression ')'

    STRING_LITERAL  shift, and go to state 434


state 429

  154 asm_output_operands: asm_output_operands ',' asm_output_operand .

    $default  reduce using rule 154 (asm_output_operands)


state 430

  157 asm_output_operand: asm_symbolic_name_opt STRING_LITERAL '(' . unary_expression ')'

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    unary_expression    go to state 435
    postfix_expression  go to state 116
    primary_expression  go to state 117
    constant            go to state 118
    string_seq          go to state 119


state 431

  175 statement: KW_FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' statement .

    $default  reduce using rule 175 (statement)


state 432

  143 asm_arguments: string_seq ':' asm_output_operands_opt ':' asm_input_operands_opt ':' . asm_clobbers_opt
  144              | string_seq ':' asm_output_operands_opt ':' asm_input_operands_opt ':' . asm_clobbers_opt ':' asm_goto_labels_opt

    STRING_LITERAL  shift, and go to state 436

    $default  reduce using rule 149 (asm_clobbers_opt)

    asm_clobbers_opt  go to state 437
    asm_clobbers      go to state 438


state 433

  156 asm_input_operands: asm_input_operands ',' . asm_input_operand

    '['  shift, and go to state 409

    $default  reduce using rule 159 (asm_symbolic_name_opt)

    asm_input_operand      go to state 439
    asm_symbolic_name_opt  go to state 428


state 434

  158 asm_input_operand: asm_symbolic_name_opt STRING_LITERAL . '(' assignment_expression ')'

    '('  shift, and go to state 440


state 435

  157 asm_output_operand: asm_symbolic_name_opt STRING_LITERAL '(' unary_expression . ')'

    ')'  shift, and go to state 441


state 436

  161 asm_clobbers: STRING_LITERAL .

    $default  reduce using rule 161 (asm_clobbers)


state 437

  143 asm_arguments: string_seq ':' asm_output_operands_opt ':' asm_input_operands_opt ':' asm_clobbers_opt .
  144              | string_seq ':' asm_output_operands_opt ':' asm_input_operands_opt ':' asm_clobbers_opt . ':' asm_goto_labels_opt

    ':'  shift, and go to state 442

    $default  reduce using rule 143 (asm_arguments)


state 438

  150 asm_clobbers_opt: asm_clobbers .
  162 asm_clobbers: asm_clobbers . ',' STRING_LITERAL

    ','  shift, and go to state 443

    $default  reduce using rule 150 (asm_clobbers_opt)


state 439

  156 asm_input_operands: asm_input_operands ',' asm_input_operand .

    $default  reduce using rule 156 (asm_input_operands)


state 440

  158 asm_input_operand: asm_symbolic_name_opt STRING_LITERAL '(' . assignment_expression ')'

    IDENTIFIER        shift, and go to state 92
    STRING_LITERAL    shift, and go to state 93
    INTEGER_CONSTANT  shift, and go to state 94
    FLOAT_CONSTANT    shift, and go to state 95
    CHAR_CONSTANT     shift, and go to state 96
    KW_SIZEOF         shift, and go to state 97
    KW_GENERIC        shift, and go to state 98
    KW_TYPEOF         shift, and go to state 99
    INC               shift, and go to state 100
    DEC               shift, and go to state 101
    LPAREN_BRACE      shift, and go to state 102
    '&'               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '*'               shift, and go to state 106
    '('               shift, and go to state 107

    assignment_expression      go to state 444
    conditional_expression     go to state 170
    logical_or_expression      go to state 109
    logical_and_expression     go to state 110
    equality_expression        go to state 111
    relational_expression      go to state 112
    additive_expression        go to state 113
    multiplicative_expression  go to state 114
    unary_expression           go to state 171
    postfix_expression         go to state 116
    primary_expression         go to state 117
    constant                   go to state 118
    string_seq                 go to state 119


state 441

  157 asm_output_operand: asm_symbolic_name_opt STRING_LITERAL '(' unary_expression ')' .

    $default  reduce using rule 157 (asm_output_operand)


state 442

  144 asm_arguments: string_seq ':' asm_output_operands_opt ':' asm_input_operands_opt ':' asm_clobbers_opt ':' . asm_goto_labels_opt

    IDENTIFIER  shift, and go to state 445

    $default  reduce using rule 151 (asm_goto_labels_opt)

    asm_goto_labels_opt  go to state 446
    asm_goto_labels      go to state 447


state 443

  162 asm_clobbers: asm_clobbers ',' . STRING_LITERAL

    STRING_LITERAL  shift, and go to state 448


state 444

  158 asm_input_operand: asm_symbolic_name_opt STRING_LITERAL '(' assignment_expression . ')'

    ')'  shift, and go to state 449


state 445

  163 asm_goto_labels: IDENTIFIER .

    $default  reduce using rule 163 (asm_goto_labels)


state 446

  144 asm_arguments: string_seq ':' asm_output_operands_opt ':' asm_input_operands_opt ':' asm_clobbers_opt ':' asm_goto_labels_opt .

    $default  reduce using rule 144 (asm_arguments)


state 447

  152 asm_goto_labels_opt: asm_goto_labels .
  164 asm_goto_labels: asm_goto_labels . ',' IDENTIFIER

    ','  shift, and go to state 450

    $default  reduce using rule 152 (asm_goto_labels_opt)


state 448

  162 asm_clobbers: asm_clobbers ',' STRING_LITERAL .

    $default  reduce using rule 162 (asm_clobbers)


state 449

  158 asm_input_operand: asm_symbolic_name_opt STRING_LITERAL '(' assignment_expression ')' .

    $default  reduce using rule 158 (asm_input_operand)


state 450

  164 asm_goto_labels: asm_goto_labels ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 451


state 451

  164 asm_goto_labels: asm_goto_labels ',' IDENTIFIER .

    $default  reduce using rule 164 (asm_goto_labels)
