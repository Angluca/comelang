Terminals which are not used

   KW_CASE
   KW_DEFAULT


Rules never reduced

  102 parameter_type_list_opt: /* empty */


State 27 conflicts: 1 reduce/reduce
State 32 conflicts: 1 shift/reduce, 2 reduce/reduce
State 54 conflicts: 2 reduce/reduce
State 83 conflicts: 1 shift/reduce
State 125 conflicts: 2 reduce/reduce
State 165 conflicts: 1 reduce/reduce
State 267 conflicts: 1 shift/reduce, 2 reduce/reduce
State 276 conflicts: 1 shift/reduce
State 299 conflicts: 1 shift/reduce
State 351 conflicts: 1 shift/reduce
State 416 conflicts: 1 shift/reduce
State 421 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: /* empty */
    2                 | translation_unit external_declaration

    3 external_declaration: type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';'
    4                     | declaration ';'
    5                     | simple_function_definition
    6                     | function_definition
    7                     | type_specifier sdecl ',' sdecl sdecl_list ';'
    8                     | KW_TYPEDEF type_specifier star_list_opt IDENTIFIER ';'
    9                     | KW_TYPEDEF type_specifier star_list_opt IDENTIFIER array_dims ';'
   10                     | KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   11                     | KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'
   12                     | type_specifier star_list_opt IDENTIFIER ';'
   13                     | type_specifier star_list_opt IDENTIFIER '=' initializer ';'
   14                     | type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';'

   15 simple_function_definition: function_declspec IDENTIFIER '(' simple_param_list_opt ')' compound_statement

   16 function_declspec: type_specifier
   17                  | declaration_specifiers

   18 simple_param_list_opt: /* empty */
   19                      | simple_param_list

   20 simple_param_list: simple_param
   21                  | simple_param_list ',' simple_param

   22 simple_param: type_specifier star_list_opt IDENTIFIER

   23 declaration: declaration_specifiers init_declarator_list_opt

   24 init_declarator_list_opt: /* empty */
   25                         | init_declarator_list

   26 init_declarator_list: init_declarator
   27                     | init_declarator_list ',' init_declarator

   28 init_declarator: declarator
   29                | declarator '=' assignment_expression
   30                | declarator '=' initializer

   31 declaration_specifiers: declaration_specifier
   32                       | declaration_specifiers declaration_specifier

   33 declaration_specifier: storage_class_specifier
   34                      | type_specifier
   35                      | type_qualifier
   36                      | function_specifier

   37 storage_class_specifier: KW_EXTERN
   38                        | KW_STATIC

   39 type_qualifier: KW_CONST
   40               | KW_VOLATILE
   41               | KW_RESTRICT

   42 function_specifier: KW_INLINE

   43 type_specifier: KW_VOID
   44               | KW_CHAR
   45               | KW_SHORT
   46               | KW_INT
   47               | KW_LONG
   48               | KW_SIGNED
   49               | KW_UNSIGNED
   50               | KW_FLOAT
   51               | KW_DOUBLE
   52               | struct_or_union_specifier
   53               | enum_specifier
   54               | TYPE_NAME

   55 star_list_opt: /* empty */
   56              | star_list

   57 star_list: '*'
   58          | star_list '*'

   59 array_dims: '[' INTEGER_CONSTANT ']'
   60           | array_dims '[' INTEGER_CONSTANT ']'

   61 struct_or_union_specifier: KW_STRUCT IDENTIFIER '{' struct_declaration_list_opt '}'
   62                          | KW_UNION IDENTIFIER '{' struct_declaration_list_opt '}'
   63                          | KW_STRUCT '{' struct_declaration_list_opt '}'
   64                          | KW_UNION '{' struct_declaration_list_opt '}'
   65                          | KW_STRUCT IDENTIFIER
   66                          | KW_UNION IDENTIFIER

   67 struct_declaration_list_opt: /* empty */
   68                            | struct_declaration_list

   69 struct_declaration_list: struct_declaration
   70                        | struct_declaration_list struct_declaration

   71 struct_declaration: declaration_specifiers struct_declarator_list ';'

   72 struct_declarator_list: struct_declarator
   73                       | struct_declarator_list ',' struct_declarator

   74 struct_declarator: declarator
   75                  | ':' constant_expression
   76                  | declarator ':' constant_expression

   77 enum_specifier: KW_ENUM IDENTIFIER '{' enumerator_list_opt '}'
   78               | KW_ENUM '{' enumerator_list_opt '}'
   79               | KW_ENUM IDENTIFIER

   80 enumerator_list_opt: /* empty */
   81                    | enumerator_list

   82 enumerator_list: enumerator
   83                | enumerator_list ',' enumerator

   84 enumerator: IDENTIFIER
   85           | IDENTIFIER '=' constant_expression

   86 declarator: pointer_opt direct_declarator

   87 pointer_opt: /* empty */
   88            | pointer

   89 pointer: '*'
   90        | '*' type_qualifier
   91        | '*' pointer
   92        | '*' type_qualifier pointer

   93 direct_declarator: IDENTIFIER
   94                  | '(' declarator ')'
   95                  | direct_declarator '[' assignment_expression_opt ']'
   96                  | direct_declarator '(' parameter_type_list_opt ')'
   97                  | direct_declarator '(' identifier_list_opt ')'

   98 identifier_list_opt: /* empty */
   99                    | identifier_list

  100 identifier_list: IDENTIFIER
  101                | identifier_list ',' IDENTIFIER

  102 parameter_type_list_opt: /* empty */
  103                        | parameter_type_list

  104 fp_param_list_opt: /* empty */
  105                  | fp_param_list

  106 fp_param_list: fp_param
  107              | fp_param_list ',' fp_param

  108 fp_param: type_specifier star_list_opt
  109         | type_specifier star_list_opt IDENTIFIER

  110 parameter_type_list: parameter_list
  111                    | parameter_list ',' ELLIPSIS

  112 parameter_list: parameter_declaration
  113               | parameter_list ',' parameter_declaration

  114 parameter_declaration: declaration_specifiers declarator
  115                      | declaration_specifiers
  116                      | type_specifier star_list_opt

  117 function_definition: declaration_specifiers declarator compound_statement
  118                    | type_specifier declarator compound_statement

  119 statement: compound_statement
  120          | expression_statement
  121          | selection_statement
  122          | iteration_statement
  123          | jump_statement

  124 compound_statement: '{' block_item_list_opt '}'

  125 block_item_list_opt: /* empty */
  126                    | block_item_list

  127 block_item_list: block_item
  128                | block_item_list block_item

  129 block_item: type_specifier star_list_opt IDENTIFIER ';'
  130           | type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';'
  131           | type_specifier star_list_opt IDENTIFIER '=' initializer ';'
  132           | type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';'
  133           | type_specifier sdecl ',' sdecl sdecl_list ';'
  134           | statement
  135           | KW_TYPEDEF type_specifier star_list_opt IDENTIFIER ';'
  136           | KW_TYPEDEF type_specifier type_specifier star_list_opt IDENTIFIER ';'

  137 sdecl_list: /* empty */
  138           | sdecl_list ',' sdecl

  139 sdecl: star_list_opt sdir

  140 sdir: IDENTIFIER
  141     | '(' sdecl ')'
  142     | sdir '[' assignment_expression_opt ']'
  143     | sdir '(' fp_param_list_opt ')'

  144 expression_statement: ';'
  145                     | expression ';'

  146 selection_statement: KW_IF '(' expression ')' statement
  147                    | KW_IF '(' expression ')' statement KW_ELSE statement
  148                    | KW_SWITCH '(' expression ')' statement

  149 iteration_statement: KW_WHILE '(' expression ')' statement
  150                    | KW_DO statement KW_WHILE '(' expression ')' ';'
  151                    | KW_FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' statement

  152 jump_statement: KW_RETURN expression_opt ';'
  153               | KW_BREAK ';'
  154               | KW_CONTINUE ';'
  155               | KW_GOTO IDENTIFIER ';'

  156 expression_opt: /* empty */
  157               | expression

  158 expression: assignment_expression
  159           | expression ',' assignment_expression

  160 assignment_expression_opt: /* empty */
  161                          | assignment_expression

  162 assignment_expression: conditional_expression
  163                      | unary_expression '=' assignment_expression
  164                      | unary_expression ADD_ASSIGN assignment_expression
  165                      | unary_expression SUB_ASSIGN assignment_expression
  166                      | unary_expression MUL_ASSIGN assignment_expression
  167                      | unary_expression DIV_ASSIGN assignment_expression
  168                      | unary_expression MOD_ASSIGN assignment_expression
  169                      | unary_expression AND_ASSIGN assignment_expression
  170                      | unary_expression OR_ASSIGN assignment_expression
  171                      | unary_expression XOR_ASSIGN assignment_expression
  172                      | unary_expression LSHIFT_ASSIGN assignment_expression
  173                      | unary_expression RSHIFT_ASSIGN assignment_expression

  174 conditional_expression: logical_or_expression
  175                       | logical_or_expression '?' expression ':' conditional_expression

  176 logical_or_expression: logical_and_expression
  177                      | logical_or_expression LOGOR logical_and_expression

  178 logical_and_expression: inclusive_or_expression
  179                       | logical_and_expression LOGAND inclusive_or_expression

  180 inclusive_or_expression: exclusive_or_expression
  181                        | inclusive_or_expression '|' exclusive_or_expression

  182 exclusive_or_expression: and_expression
  183                        | exclusive_or_expression '^' and_expression

  184 and_expression: equality_expression
  185               | and_expression '&' equality_expression

  186 equality_expression: relational_expression
  187                    | equality_expression EQ relational_expression
  188                    | equality_expression NE relational_expression

  189 relational_expression: shift_expression
  190                      | relational_expression '<' shift_expression
  191                      | relational_expression '>' shift_expression
  192                      | relational_expression LE shift_expression
  193                      | relational_expression GE shift_expression

  194 shift_expression: additive_expression
  195                 | shift_expression LSHIFT additive_expression
  196                 | shift_expression RSHIFT additive_expression

  197 additive_expression: multiplicative_expression
  198                    | additive_expression '+' multiplicative_expression
  199                    | additive_expression '-' multiplicative_expression

  200 multiplicative_expression: unary_expression
  201                          | multiplicative_expression '*' unary_expression
  202                          | multiplicative_expression '/' unary_expression
  203                          | multiplicative_expression '%' unary_expression

  204 unary_expression: postfix_expression
  205                 | INC unary_expression
  206                 | DEC unary_expression
  207                 | '+' unary_expression
  208                 | '-' unary_expression
  209                 | '!' unary_expression
  210                 | '~' unary_expression
  211                 | KW_SIZEOF unary_expression
  212                 | KW_SIZEOF '(' type_specifier ')'

  213 postfix_expression: primary_expression
  214                   | postfix_expression '(' argument_expression_list_opt ')'
  215                   | postfix_expression '[' expression ']'
  216                   | postfix_expression '.' IDENTIFIER
  217                   | postfix_expression ARROW IDENTIFIER
  218                   | postfix_expression INC
  219                   | postfix_expression DEC

  220 argument_expression_list_opt: /* empty */
  221                             | argument_expression_list

  222 argument_expression_list: assignment_expression
  223                         | argument_expression_list ',' assignment_expression

  224 primary_expression: IDENTIFIER
  225                   | INTEGER_CONSTANT
  226                   | FLOAT_CONSTANT
  227                   | CHAR_CONSTANT
  228                   | STRING_LITERAL
  229                   | '(' expression ')'

  230 initializer: assignment_expression
  231            | '{' initializer_list_opt '}'

  232 initializer_list_opt: /* empty */
  233                     | initializer_list

  234 initializer_list: initializer
  235                 | designated_initializer
  236                 | initializer_list ',' initializer
  237                 | initializer_list ',' designated_initializer

  238 designated_initializer: '.' IDENTIFIER '=' initializer
  239                       | '[' constant_expression ']' '=' initializer
  240                       | designation '=' initializer

  241 designation: designator
  242            | designation designator

  243 designator: '.' IDENTIFIER
  244           | '[' constant_expression ']'
  245           | '[' constant_expression ELLIPSIS constant_expression ']'

  246 constant_expression: conditional_expression


Terminals, with rules where they appear

$end (0) 0
'!' (33) 209
'%' (37) 203
'&' (38) 185
'(' (40) 10 11 15 94 96 97 141 143 146 147 148 149 150 151 212 214
    229
')' (41) 10 11 15 94 96 97 141 143 146 147 148 149 150 151 212 214
    229
'*' (42) 10 11 57 58 89 90 91 92 201
'+' (43) 198 207
',' (44) 7 21 27 73 83 101 107 111 113 133 138 159 223 236 237
'-' (45) 199 208
'.' (46) 216 238 243
'/' (47) 202
':' (58) 75 76 175
';' (59) 3 4 7 8 9 10 11 12 13 14 71 129 130 131 132 133 135 136 144
    145 150 151 152 153 154 155
'<' (60) 190
'=' (61) 3 13 14 29 30 85 130 131 132 163 238 239 240
'>' (62) 191
'?' (63) 175
'[' (91) 59 60 95 142 215 239 244 245
']' (93) 59 60 95 142 215 239 244 245
'^' (94) 183
'{' (123) 61 62 63 64 77 78 124 231
'|' (124) 181
'}' (125) 61 62 63 64 77 78 124 231
'~' (126) 210
error (256)
IDENTIFIER (258) 3 8 9 10 11 12 13 14 15 22 61 62 65 66 77 79 84 85
    93 100 101 109 129 130 131 132 135 136 140 155 216 217 224 238
    243
TYPE_NAME (259) 54
STRING_LITERAL (260) 228
INTEGER_CONSTANT (261) 59 60 225
FLOAT_CONSTANT (262) 226
CHAR_CONSTANT (263) 227
KW_VOID (264) 43
KW_CHAR (265) 44
KW_SHORT (266) 45
KW_INT (267) 46
KW_LONG (268) 47
KW_SIGNED (269) 48
KW_UNSIGNED (270) 49
KW_FLOAT (271) 50
KW_DOUBLE (272) 51
KW_STRUCT (273) 61 63 65
KW_UNION (274) 62 64 66
KW_ENUM (275) 77 78 79
KW_TYPEDEF (276) 8 9 10 11 135 136
KW_RETURN (277) 152
KW_IF (278) 146 147
KW_ELSE (279) 147
KW_WHILE (280) 149 150
KW_FOR (281) 151
KW_DO (282) 150
KW_SWITCH (283) 148
KW_CASE (284)
KW_DEFAULT (285)
KW_BREAK (286) 153
KW_CONTINUE (287) 154
KW_GOTO (288) 155
KW_CONST (289) 39
KW_VOLATILE (290) 40
KW_RESTRICT (291) 41
KW_INLINE (292) 42
KW_EXTERN (293) 37
KW_STATIC (294) 38
KW_SIZEOF (295) 211 212
ELLIPSIS (296) 111 245
ARROW (297) 217
INC (298) 205 218
DEC (299) 206 219
LSHIFT (300) 195
RSHIFT (301) 196
LE (302) 192
GE (303) 193
EQ (304) 187
NE (305) 188
LOGAND (306) 179
LOGOR (307) 177
ADD_ASSIGN (308) 164
SUB_ASSIGN (309) 165
MUL_ASSIGN (310) 166
DIV_ASSIGN (311) 167
MOD_ASSIGN (312) 168
AND_ASSIGN (313) 169
OR_ASSIGN (314) 170
XOR_ASSIGN (315) 171
LSHIFT_ASSIGN (316) 172
RSHIFT_ASSIGN (317) 173


Nonterminals, with rules where they appear

$accept (87)
    on left: 0
translation_unit (88)
    on left: 1 2, on right: 0 2
external_declaration (89)
    on left: 3 4 5 6 7 8 9 10 11 12 13 14, on right: 2
simple_function_definition (90)
    on left: 15, on right: 5
function_declspec (91)
    on left: 16 17, on right: 15
simple_param_list_opt (92)
    on left: 18 19, on right: 15
simple_param_list (93)
    on left: 20 21, on right: 19 21
simple_param (94)
    on left: 22, on right: 20 21
declaration (95)
    on left: 23, on right: 4
init_declarator_list_opt (96)
    on left: 24 25, on right: 23
init_declarator_list (97)
    on left: 26 27, on right: 25 27
init_declarator (98)
    on left: 28 29 30, on right: 26 27
declaration_specifiers (99)
    on left: 31 32, on right: 17 23 32 71 114 115 117
declaration_specifier (100)
    on left: 33 34 35 36, on right: 31 32
storage_class_specifier (101)
    on left: 37 38, on right: 33
type_qualifier (102)
    on left: 39 40 41, on right: 35 90 92
function_specifier (103)
    on left: 42, on right: 36
type_specifier (104)
    on left: 43 44 45 46 47 48 49 50 51 52 53 54, on right: 3 7 8 9
    10 11 12 13 14 16 22 34 108 109 116 118 129 130 131 132 133 135
    136 212
star_list_opt (105)
    on left: 55 56, on right: 3 8 9 10 11 12 13 14 22 108 109 116 129
    130 131 132 135 136 139
star_list (106)
    on left: 57 58, on right: 56 58
array_dims (107)
    on left: 59 60, on right: 9 11 14 60 132
struct_or_union_specifier (108)
    on left: 61 62 63 64 65 66, on right: 52
struct_declaration_list_opt (109)
    on left: 67 68, on right: 61 62 63 64
struct_declaration_list (110)
    on left: 69 70, on right: 68 70
struct_declaration (111)
    on left: 71, on right: 69 70
struct_declarator_list (112)
    on left: 72 73, on right: 71 73
struct_declarator (113)
    on left: 74 75 76, on right: 72 73
enum_specifier (114)
    on left: 77 78 79, on right: 53
enumerator_list_opt (115)
    on left: 80 81, on right: 77 78
enumerator_list (116)
    on left: 82 83, on right: 81 83
enumerator (117)
    on left: 84 85, on right: 82 83
declarator (118)
    on left: 86, on right: 28 29 30 74 76 94 114 117 118
pointer_opt (119)
    on left: 87 88, on right: 86
pointer (120)
    on left: 89 90 91 92, on right: 88 91 92
direct_declarator (121)
    on left: 93 94 95 96 97, on right: 86 95 96 97
identifier_list_opt (122)
    on left: 98 99, on right: 97
identifier_list (123)
    on left: 100 101, on right: 99 101
parameter_type_list_opt (124)
    on left: 102 103, on right: 96
fp_param_list_opt (125)
    on left: 104 105, on right: 10 11 143
fp_param_list (126)
    on left: 106 107, on right: 105 107
fp_param (127)
    on left: 108 109, on right: 106 107
parameter_type_list (128)
    on left: 110 111, on right: 103
parameter_list (129)
    on left: 112 113, on right: 110 111 113
parameter_declaration (130)
    on left: 114 115 116, on right: 112 113
function_definition (131)
    on left: 117 118, on right: 6
statement (132)
    on left: 119 120 121 122 123, on right: 134 146 147 148 149 150
    151
compound_statement (133)
    on left: 124, on right: 15 117 118 119
block_item_list_opt (134)
    on left: 125 126, on right: 124
block_item_list (135)
    on left: 127 128, on right: 126 128
block_item (136)
    on left: 129 130 131 132 133 134 135 136, on right: 127 128
sdecl_list (137)
    on left: 137 138, on right: 7 133 138
sdecl (138)
    on left: 139, on right: 7 133 138 141
sdir (139)
    on left: 140 141 142 143, on right: 139 142 143
expression_statement (140)
    on left: 144 145, on right: 120
selection_statement (141)
    on left: 146 147 148, on right: 121
iteration_statement (142)
    on left: 149 150 151, on right: 122
jump_statement (143)
    on left: 152 153 154 155, on right: 123
expression_opt (144)
    on left: 156 157, on right: 151 152
expression (145)
    on left: 158 159, on right: 145 146 147 148 149 150 157 159 175
    215 229
assignment_expression_opt (146)
    on left: 160 161, on right: 95 142
assignment_expression (147)
    on left: 162 163 164 165 166 167 168 169 170 171 172 173,
    on right: 3 29 130 158 159 161 163 164 165 166 167 168 169 170
    171 172 173 222 223 230
conditional_expression (148)
    on left: 174 175, on right: 162 175 246
logical_or_expression (149)
    on left: 176 177, on right: 174 175 177
logical_and_expression (150)
    on left: 178 179, on right: 176 177 179
inclusive_or_expression (151)
    on left: 180 181, on right: 178 179 181
exclusive_or_expression (152)
    on left: 182 183, on right: 180 181 183
and_expression (153)
    on left: 184 185, on right: 182 183 185
equality_expression (154)
    on left: 186 187 188, on right: 184 185 187 188
relational_expression (155)
    on left: 189 190 191 192 193, on right: 186 187 188 190 191 192
    193
shift_expression (156)
    on left: 194 195 196, on right: 189 190 191 192 193 195 196
additive_expression (157)
    on left: 197 198 199, on right: 194 195 196 198 199
multiplicative_expression (158)
    on left: 200 201 202 203, on right: 197 198 199 201 202 203
unary_expression (159)
    on left: 204 205 206 207 208 209 210 211 212, on right: 163 164
    165 166 167 168 169 170 171 172 173 200 201 202 203 205 206 207
    208 209 210 211
postfix_expression (160)
    on left: 213 214 215 216 217 218 219, on right: 204 214 215 216
    217 218 219
argument_expression_list_opt (161)
    on left: 220 221, on right: 214
argument_expression_list (162)
    on left: 222 223, on right: 221 223
primary_expression (163)
    on left: 224 225 226 227 228 229, on right: 213
initializer (164)
    on left: 230 231, on right: 13 14 30 131 132 234 236 238 239 240
initializer_list_opt (165)
    on left: 232 233, on right: 231
initializer_list (166)
    on left: 234 235 236 237, on right: 233 236 237
designated_initializer (167)
    on left: 238 239 240, on right: 235 237
designation (168)
    on left: 241 242, on right: 240 242
designator (169)
    on left: 243 244 245, on right: 241 242
constant_expression (170)
    on left: 246, on right: 75 76 85 239 244 245


state 0

    0 $accept: . translation_unit $end

    $default  reduce using rule 1 (translation_unit)

    translation_unit  go to state 1


state 1

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . external_declaration

    $end         shift, and go to state 2
    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_TYPEDEF   shift, and go to state 16
    KW_CONST     shift, and go to state 17
    KW_VOLATILE  shift, and go to state 18
    KW_RESTRICT  shift, and go to state 19
    KW_INLINE    shift, and go to state 20
    KW_EXTERN    shift, and go to state 21
    KW_STATIC    shift, and go to state 22

    external_declaration        go to state 23
    simple_function_definition  go to state 24
    function_declspec           go to state 25
    declaration                 go to state 26
    declaration_specifiers      go to state 27
    declaration_specifier       go to state 28
    storage_class_specifier     go to state 29
    type_qualifier              go to state 30
    function_specifier          go to state 31
    type_specifier              go to state 32
    struct_or_union_specifier   go to state 33
    enum_specifier              go to state 34
    function_definition         go to state 35


state 2

    0 $accept: translation_unit $end .

    $default  accept


state 3

   54 type_specifier: TYPE_NAME .

    $default  reduce using rule 54 (type_specifier)


state 4

   43 type_specifier: KW_VOID .

    $default  reduce using rule 43 (type_specifier)


state 5

   44 type_specifier: KW_CHAR .

    $default  reduce using rule 44 (type_specifier)


state 6

   45 type_specifier: KW_SHORT .

    $default  reduce using rule 45 (type_specifier)


state 7

   46 type_specifier: KW_INT .

    $default  reduce using rule 46 (type_specifier)


state 8

   47 type_specifier: KW_LONG .

    $default  reduce using rule 47 (type_specifier)


state 9

   48 type_specifier: KW_SIGNED .

    $default  reduce using rule 48 (type_specifier)


state 10

   49 type_specifier: KW_UNSIGNED .

    $default  reduce using rule 49 (type_specifier)


state 11

   50 type_specifier: KW_FLOAT .

    $default  reduce using rule 50 (type_specifier)


state 12

   51 type_specifier: KW_DOUBLE .

    $default  reduce using rule 51 (type_specifier)


state 13

   61 struct_or_union_specifier: KW_STRUCT . IDENTIFIER '{' struct_declaration_list_opt '}'
   63                          | KW_STRUCT . '{' struct_declaration_list_opt '}'
   65                          | KW_STRUCT . IDENTIFIER

    IDENTIFIER  shift, and go to state 36
    '{'         shift, and go to state 37


state 14

   62 struct_or_union_specifier: KW_UNION . IDENTIFIER '{' struct_declaration_list_opt '}'
   64                          | KW_UNION . '{' struct_declaration_list_opt '}'
   66                          | KW_UNION . IDENTIFIER

    IDENTIFIER  shift, and go to state 38
    '{'         shift, and go to state 39


state 15

   77 enum_specifier: KW_ENUM . IDENTIFIER '{' enumerator_list_opt '}'
   78               | KW_ENUM . '{' enumerator_list_opt '}'
   79               | KW_ENUM . IDENTIFIER

    IDENTIFIER  shift, and go to state 40
    '{'         shift, and go to state 41


state 16

    8 external_declaration: KW_TYPEDEF . type_specifier star_list_opt IDENTIFIER ';'
    9                     | KW_TYPEDEF . type_specifier star_list_opt IDENTIFIER array_dims ';'
   10                     | KW_TYPEDEF . type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   11                     | KW_TYPEDEF . type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15

    type_specifier             go to state 42
    struct_or_union_specifier  go to state 33
    enum_specifier             go to state 34


state 17

   39 type_qualifier: KW_CONST .

    $default  reduce using rule 39 (type_qualifier)


state 18

   40 type_qualifier: KW_VOLATILE .

    $default  reduce using rule 40 (type_qualifier)


state 19

   41 type_qualifier: KW_RESTRICT .

    $default  reduce using rule 41 (type_qualifier)


state 20

   42 function_specifier: KW_INLINE .

    $default  reduce using rule 42 (function_specifier)


state 21

   37 storage_class_specifier: KW_EXTERN .

    $default  reduce using rule 37 (storage_class_specifier)


state 22

   38 storage_class_specifier: KW_STATIC .

    $default  reduce using rule 38 (storage_class_specifier)


state 23

    2 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 2 (translation_unit)


state 24

    5 external_declaration: simple_function_definition .

    $default  reduce using rule 5 (external_declaration)


state 25

   15 simple_function_definition: function_declspec . IDENTIFIER '(' simple_param_list_opt ')' compound_statement

    IDENTIFIER  shift, and go to state 43


state 26

    4 external_declaration: declaration . ';'

    ';'  shift, and go to state 44


state 27

   17 function_declspec: declaration_specifiers .
   23 declaration: declaration_specifiers . init_declarator_list_opt
   32 declaration_specifiers: declaration_specifiers . declaration_specifier
  117 function_definition: declaration_specifiers . declarator compound_statement

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 17
    KW_VOLATILE  shift, and go to state 18
    KW_RESTRICT  shift, and go to state 19
    KW_INLINE    shift, and go to state 20
    KW_EXTERN    shift, and go to state 21
    KW_STATIC    shift, and go to state 22
    '*'          shift, and go to state 45

    IDENTIFIER  reduce using rule 17 (function_declspec)
    IDENTIFIER  [reduce using rule 87 (pointer_opt)]
    '('         reduce using rule 87 (pointer_opt)
    ';'         reduce using rule 24 (init_declarator_list_opt)
    $default    reduce using rule 17 (function_declspec)

    init_declarator_list_opt   go to state 46
    init_declarator_list       go to state 47
    init_declarator            go to state 48
    declaration_specifier      go to state 49
    storage_class_specifier    go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    type_specifier             go to state 50
    struct_or_union_specifier  go to state 33
    enum_specifier             go to state 34
    declarator                 go to state 51
    pointer_opt                go to state 52
    pointer                    go to state 53


state 28

   31 declaration_specifiers: declaration_specifier .

    $default  reduce using rule 31 (declaration_specifiers)


state 29

   33 declaration_specifier: storage_class_specifier .

    $default  reduce using rule 33 (declaration_specifier)


state 30

   35 declaration_specifier: type_qualifier .

    $default  reduce using rule 35 (declaration_specifier)


state 31

   36 declaration_specifier: function_specifier .

    $default  reduce using rule 36 (declaration_specifier)


state 32

    3 external_declaration: type_specifier . star_list_opt IDENTIFIER '=' assignment_expression ';'
    7                     | type_specifier . sdecl ',' sdecl sdecl_list ';'
   12                     | type_specifier . star_list_opt IDENTIFIER ';'
   13                     | type_specifier . star_list_opt IDENTIFIER '=' initializer ';'
   14                     | type_specifier . star_list_opt IDENTIFIER array_dims '=' initializer ';'
   16 function_declspec: type_specifier .
   34 declaration_specifier: type_specifier .
  118 function_definition: type_specifier . declarator compound_statement

    '*'  shift, and go to state 54

    IDENTIFIER  reduce using rule 16 (function_declspec)
    IDENTIFIER  [reduce using rule 34 (declaration_specifier)]
    IDENTIFIER  [reduce using rule 55 (star_list_opt)]
    IDENTIFIER  [reduce using rule 87 (pointer_opt)]
    '*'         [reduce using rule 34 (declaration_specifier)]
    '('         reduce using rule 34 (declaration_specifier)
    '('         [reduce using rule 55 (star_list_opt)]
    '('         [reduce using rule 87 (pointer_opt)]
    $default    reduce using rule 34 (declaration_specifier)

    star_list_opt  go to state 55
    star_list      go to state 56
    declarator     go to state 57
    pointer_opt    go to state 52
    pointer        go to state 53
    sdecl          go to state 58


state 33

   52 type_specifier: struct_or_union_specifier .

    $default  reduce using rule 52 (type_specifier)


state 34

   53 type_specifier: enum_specifier .

    $default  reduce using rule 53 (type_specifier)


state 35

    6 external_declaration: function_definition .

    $default  reduce using rule 6 (external_declaration)


state 36

   61 struct_or_union_specifier: KW_STRUCT IDENTIFIER . '{' struct_declaration_list_opt '}'
   65                          | KW_STRUCT IDENTIFIER .

    '{'  shift, and go to state 59

    $default  reduce using rule 65 (struct_or_union_specifier)


state 37

   63 struct_or_union_specifier: KW_STRUCT '{' . struct_declaration_list_opt '}'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 17
    KW_VOLATILE  shift, and go to state 18
    KW_RESTRICT  shift, and go to state 19
    KW_INLINE    shift, and go to state 20
    KW_EXTERN    shift, and go to state 21
    KW_STATIC    shift, and go to state 22

    $default  reduce using rule 67 (struct_declaration_list_opt)

    declaration_specifiers       go to state 60
    declaration_specifier        go to state 28
    storage_class_specifier      go to state 29
    type_qualifier               go to state 30
    function_specifier           go to state 31
    type_specifier               go to state 50
    struct_or_union_specifier    go to state 33
    struct_declaration_list_opt  go to state 61
    struct_declaration_list      go to state 62
    struct_declaration           go to state 63
    enum_specifier               go to state 34


state 38

   62 struct_or_union_specifier: KW_UNION IDENTIFIER . '{' struct_declaration_list_opt '}'
   66                          | KW_UNION IDENTIFIER .

    '{'  shift, and go to state 64

    $default  reduce using rule 66 (struct_or_union_specifier)


state 39

   64 struct_or_union_specifier: KW_UNION '{' . struct_declaration_list_opt '}'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 17
    KW_VOLATILE  shift, and go to state 18
    KW_RESTRICT  shift, and go to state 19
    KW_INLINE    shift, and go to state 20
    KW_EXTERN    shift, and go to state 21
    KW_STATIC    shift, and go to state 22

    $default  reduce using rule 67 (struct_declaration_list_opt)

    declaration_specifiers       go to state 60
    declaration_specifier        go to state 28
    storage_class_specifier      go to state 29
    type_qualifier               go to state 30
    function_specifier           go to state 31
    type_specifier               go to state 50
    struct_or_union_specifier    go to state 33
    struct_declaration_list_opt  go to state 65
    struct_declaration_list      go to state 62
    struct_declaration           go to state 63
    enum_specifier               go to state 34


state 40

   77 enum_specifier: KW_ENUM IDENTIFIER . '{' enumerator_list_opt '}'
   79               | KW_ENUM IDENTIFIER .

    '{'  shift, and go to state 66

    $default  reduce using rule 79 (enum_specifier)


state 41

   78 enum_specifier: KW_ENUM '{' . enumerator_list_opt '}'

    IDENTIFIER  shift, and go to state 67

    $default  reduce using rule 80 (enumerator_list_opt)

    enumerator_list_opt  go to state 68
    enumerator_list      go to state 69
    enumerator           go to state 70


state 42

    8 external_declaration: KW_TYPEDEF type_specifier . star_list_opt IDENTIFIER ';'
    9                     | KW_TYPEDEF type_specifier . star_list_opt IDENTIFIER array_dims ';'
   10                     | KW_TYPEDEF type_specifier . star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   11                     | KW_TYPEDEF type_specifier . star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'

    '*'  shift, and go to state 71

    $default  reduce using rule 55 (star_list_opt)

    star_list_opt  go to state 72
    star_list      go to state 56


state 43

   15 simple_function_definition: function_declspec IDENTIFIER . '(' simple_param_list_opt ')' compound_statement

    '('  shift, and go to state 73


state 44

    4 external_declaration: declaration ';' .

    $default  reduce using rule 4 (external_declaration)


state 45

   89 pointer: '*' .
   90        | '*' . type_qualifier
   91        | '*' . pointer
   92        | '*' . type_qualifier pointer

    KW_CONST     shift, and go to state 17
    KW_VOLATILE  shift, and go to state 18
    KW_RESTRICT  shift, and go to state 19
    '*'          shift, and go to state 45

    $default  reduce using rule 89 (pointer)

    type_qualifier  go to state 74
    pointer         go to state 75


state 46

   23 declaration: declaration_specifiers init_declarator_list_opt .

    $default  reduce using rule 23 (declaration)


state 47

   25 init_declarator_list_opt: init_declarator_list .
   27 init_declarator_list: init_declarator_list . ',' init_declarator

    ','  shift, and go to state 76

    $default  reduce using rule 25 (init_declarator_list_opt)


state 48

   26 init_declarator_list: init_declarator .

    $default  reduce using rule 26 (init_declarator_list)


state 49

   32 declaration_specifiers: declaration_specifiers declaration_specifier .

    $default  reduce using rule 32 (declaration_specifiers)


state 50

   34 declaration_specifier: type_specifier .

    $default  reduce using rule 34 (declaration_specifier)


state 51

   28 init_declarator: declarator .
   29                | declarator . '=' assignment_expression
   30                | declarator . '=' initializer
  117 function_definition: declaration_specifiers declarator . compound_statement

    '='  shift, and go to state 77
    '{'  shift, and go to state 78

    $default  reduce using rule 28 (init_declarator)

    compound_statement  go to state 79


state 52

   86 declarator: pointer_opt . direct_declarator

    IDENTIFIER  shift, and go to state 80
    '('         shift, and go to state 81

    direct_declarator  go to state 82


state 53

   88 pointer_opt: pointer .

    $default  reduce using rule 88 (pointer_opt)


state 54

   57 star_list: '*' .
   89 pointer: '*' .
   90        | '*' . type_qualifier
   91        | '*' . pointer
   92        | '*' . type_qualifier pointer

    KW_CONST     shift, and go to state 17
    KW_VOLATILE  shift, and go to state 18
    KW_RESTRICT  shift, and go to state 19

    IDENTIFIER  reduce using rule 57 (star_list)
    IDENTIFIER  [reduce using rule 89 (pointer)]
    '('         reduce using rule 57 (star_list)
    '('         [reduce using rule 89 (pointer)]
    $default    reduce using rule 57 (star_list)

    type_qualifier  go to state 74
    pointer         go to state 75


state 55

    3 external_declaration: type_specifier star_list_opt . IDENTIFIER '=' assignment_expression ';'
   12                     | type_specifier star_list_opt . IDENTIFIER ';'
   13                     | type_specifier star_list_opt . IDENTIFIER '=' initializer ';'
   14                     | type_specifier star_list_opt . IDENTIFIER array_dims '=' initializer ';'
  139 sdecl: star_list_opt . sdir

    IDENTIFIER  shift, and go to state 83
    '('         shift, and go to state 84

    sdir  go to state 85


state 56

   56 star_list_opt: star_list .
   58 star_list: star_list . '*'

    '*'  shift, and go to state 86

    $default  reduce using rule 56 (star_list_opt)


state 57

  118 function_definition: type_specifier declarator . compound_statement

    '{'  shift, and go to state 78

    compound_statement  go to state 87


state 58

    7 external_declaration: type_specifier sdecl . ',' sdecl sdecl_list ';'

    ','  shift, and go to state 88


state 59

   61 struct_or_union_specifier: KW_STRUCT IDENTIFIER '{' . struct_declaration_list_opt '}'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 17
    KW_VOLATILE  shift, and go to state 18
    KW_RESTRICT  shift, and go to state 19
    KW_INLINE    shift, and go to state 20
    KW_EXTERN    shift, and go to state 21
    KW_STATIC    shift, and go to state 22

    $default  reduce using rule 67 (struct_declaration_list_opt)

    declaration_specifiers       go to state 60
    declaration_specifier        go to state 28
    storage_class_specifier      go to state 29
    type_qualifier               go to state 30
    function_specifier           go to state 31
    type_specifier               go to state 50
    struct_or_union_specifier    go to state 33
    struct_declaration_list_opt  go to state 89
    struct_declaration_list      go to state 62
    struct_declaration           go to state 63
    enum_specifier               go to state 34


state 60

   32 declaration_specifiers: declaration_specifiers . declaration_specifier
   71 struct_declaration: declaration_specifiers . struct_declarator_list ';'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 17
    KW_VOLATILE  shift, and go to state 18
    KW_RESTRICT  shift, and go to state 19
    KW_INLINE    shift, and go to state 20
    KW_EXTERN    shift, and go to state 21
    KW_STATIC    shift, and go to state 22
    ':'          shift, and go to state 90
    '*'          shift, and go to state 45

    $default  reduce using rule 87 (pointer_opt)

    declaration_specifier      go to state 49
    storage_class_specifier    go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    type_specifier             go to state 50
    struct_or_union_specifier  go to state 33
    struct_declarator_list     go to state 91
    struct_declarator          go to state 92
    enum_specifier             go to state 34
    declarator                 go to state 93
    pointer_opt                go to state 52
    pointer                    go to state 53


state 61

   63 struct_or_union_specifier: KW_STRUCT '{' struct_declaration_list_opt . '}'

    '}'  shift, and go to state 94


state 62

   68 struct_declaration_list_opt: struct_declaration_list .
   70 struct_declaration_list: struct_declaration_list . struct_declaration

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 17
    KW_VOLATILE  shift, and go to state 18
    KW_RESTRICT  shift, and go to state 19
    KW_INLINE    shift, and go to state 20
    KW_EXTERN    shift, and go to state 21
    KW_STATIC    shift, and go to state 22

    $default  reduce using rule 68 (struct_declaration_list_opt)

    declaration_specifiers     go to state 60
    declaration_specifier      go to state 28
    storage_class_specifier    go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    type_specifier             go to state 50
    struct_or_union_specifier  go to state 33
    struct_declaration         go to state 95
    enum_specifier             go to state 34


state 63

   69 struct_declaration_list: struct_declaration .

    $default  reduce using rule 69 (struct_declaration_list)


state 64

   62 struct_or_union_specifier: KW_UNION IDENTIFIER '{' . struct_declaration_list_opt '}'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 17
    KW_VOLATILE  shift, and go to state 18
    KW_RESTRICT  shift, and go to state 19
    KW_INLINE    shift, and go to state 20
    KW_EXTERN    shift, and go to state 21
    KW_STATIC    shift, and go to state 22

    $default  reduce using rule 67 (struct_declaration_list_opt)

    declaration_specifiers       go to state 60
    declaration_specifier        go to state 28
    storage_class_specifier      go to state 29
    type_qualifier               go to state 30
    function_specifier           go to state 31
    type_specifier               go to state 50
    struct_or_union_specifier    go to state 33
    struct_declaration_list_opt  go to state 96
    struct_declaration_list      go to state 62
    struct_declaration           go to state 63
    enum_specifier               go to state 34


state 65

   64 struct_or_union_specifier: KW_UNION '{' struct_declaration_list_opt . '}'

    '}'  shift, and go to state 97


state 66

   77 enum_specifier: KW_ENUM IDENTIFIER '{' . enumerator_list_opt '}'

    IDENTIFIER  shift, and go to state 67

    $default  reduce using rule 80 (enumerator_list_opt)

    enumerator_list_opt  go to state 98
    enumerator_list      go to state 69
    enumerator           go to state 70


state 67

   84 enumerator: IDENTIFIER .
   85           | IDENTIFIER . '=' constant_expression

    '='  shift, and go to state 99

    $default  reduce using rule 84 (enumerator)


state 68

   78 enum_specifier: KW_ENUM '{' enumerator_list_opt . '}'

    '}'  shift, and go to state 100


state 69

   81 enumerator_list_opt: enumerator_list .
   83 enumerator_list: enumerator_list . ',' enumerator

    ','  shift, and go to state 101

    $default  reduce using rule 81 (enumerator_list_opt)


state 70

   82 enumerator_list: enumerator .

    $default  reduce using rule 82 (enumerator_list)


state 71

   57 star_list: '*' .

    $default  reduce using rule 57 (star_list)


state 72

    8 external_declaration: KW_TYPEDEF type_specifier star_list_opt . IDENTIFIER ';'
    9                     | KW_TYPEDEF type_specifier star_list_opt . IDENTIFIER array_dims ';'
   10                     | KW_TYPEDEF type_specifier star_list_opt . '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   11                     | KW_TYPEDEF type_specifier star_list_opt . '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'

    IDENTIFIER  shift, and go to state 102
    '('         shift, and go to state 103


state 73

   15 simple_function_definition: function_declspec IDENTIFIER '(' . simple_param_list_opt ')' compound_statement

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15

    $default  reduce using rule 18 (simple_param_list_opt)

    simple_param_list_opt      go to state 104
    simple_param_list          go to state 105
    simple_param               go to state 106
    type_specifier             go to state 107
    struct_or_union_specifier  go to state 33
    enum_specifier             go to state 34


state 74

   90 pointer: '*' type_qualifier .
   92        | '*' type_qualifier . pointer

    '*'  shift, and go to state 45

    $default  reduce using rule 90 (pointer)

    pointer  go to state 108


state 75

   91 pointer: '*' pointer .

    $default  reduce using rule 91 (pointer)


state 76

   27 init_declarator_list: init_declarator_list ',' . init_declarator

    '*'  shift, and go to state 45

    $default  reduce using rule 87 (pointer_opt)

    init_declarator  go to state 109
    declarator       go to state 110
    pointer_opt      go to state 52
    pointer          go to state 53


state 77

   29 init_declarator: declarator '=' . assignment_expression
   30                | declarator '=' . initializer

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123
    '{'               shift, and go to state 124

    assignment_expression      go to state 125
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139
    initializer                go to state 140


state 78

  124 compound_statement: '{' . block_item_list_opt '}'

    IDENTIFIER        shift, and go to state 111
    TYPE_NAME         shift, and go to state 3
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_VOID           shift, and go to state 4
    KW_CHAR           shift, and go to state 5
    KW_SHORT          shift, and go to state 6
    KW_INT            shift, and go to state 7
    KW_LONG           shift, and go to state 8
    KW_SIGNED         shift, and go to state 9
    KW_UNSIGNED       shift, and go to state 10
    KW_FLOAT          shift, and go to state 11
    KW_DOUBLE         shift, and go to state 12
    KW_STRUCT         shift, and go to state 13
    KW_UNION          shift, and go to state 14
    KW_ENUM           shift, and go to state 15
    KW_TYPEDEF        shift, and go to state 141
    KW_RETURN         shift, and go to state 142
    KW_IF             shift, and go to state 143
    KW_WHILE          shift, and go to state 144
    KW_FOR            shift, and go to state 145
    KW_DO             shift, and go to state 146
    KW_SWITCH         shift, and go to state 147
    KW_BREAK          shift, and go to state 148
    KW_CONTINUE       shift, and go to state 149
    KW_GOTO           shift, and go to state 150
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123
    ';'               shift, and go to state 151
    '{'               shift, and go to state 78

    $default  reduce using rule 125 (block_item_list_opt)

    type_specifier             go to state 152
    struct_or_union_specifier  go to state 33
    enum_specifier             go to state 34
    statement                  go to state 153
    compound_statement         go to state 154
    block_item_list_opt        go to state 155
    block_item_list            go to state 156
    block_item                 go to state 157
    expression_statement       go to state 158
    selection_statement        go to state 159
    iteration_statement        go to state 160
    jump_statement             go to state 161
    expression                 go to state 162
    assignment_expression      go to state 163
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 79

  117 function_definition: declaration_specifiers declarator compound_statement .

    $default  reduce using rule 117 (function_definition)


state 80

   93 direct_declarator: IDENTIFIER .

    $default  reduce using rule 93 (direct_declarator)


state 81

   94 direct_declarator: '(' . declarator ')'

    '*'  shift, and go to state 45

    $default  reduce using rule 87 (pointer_opt)

    declarator   go to state 164
    pointer_opt  go to state 52
    pointer      go to state 53


state 82

   86 declarator: pointer_opt direct_declarator .
   95 direct_declarator: direct_declarator . '[' assignment_expression_opt ']'
   96                  | direct_declarator . '(' parameter_type_list_opt ')'
   97                  | direct_declarator . '(' identifier_list_opt ')'

    '('  shift, and go to state 165
    '['  shift, and go to state 166

    $default  reduce using rule 86 (declarator)


state 83

    3 external_declaration: type_specifier star_list_opt IDENTIFIER . '=' assignment_expression ';'
   12                     | type_specifier star_list_opt IDENTIFIER . ';'
   13                     | type_specifier star_list_opt IDENTIFIER . '=' initializer ';'
   14                     | type_specifier star_list_opt IDENTIFIER . array_dims '=' initializer ';'
  140 sdir: IDENTIFIER .

    '='  shift, and go to state 167
    '['  shift, and go to state 168
    ';'  shift, and go to state 169

    '['       [reduce using rule 140 (sdir)]
    $default  reduce using rule 140 (sdir)

    array_dims  go to state 170


state 84

  141 sdir: '(' . sdecl ')'

    '*'  shift, and go to state 71

    $default  reduce using rule 55 (star_list_opt)

    star_list_opt  go to state 171
    star_list      go to state 56
    sdecl          go to state 172


state 85

  139 sdecl: star_list_opt sdir .
  142 sdir: sdir . '[' assignment_expression_opt ']'
  143     | sdir . '(' fp_param_list_opt ')'

    '('  shift, and go to state 173
    '['  shift, and go to state 174

    $default  reduce using rule 139 (sdecl)


state 86

   58 star_list: star_list '*' .

    $default  reduce using rule 58 (star_list)


state 87

  118 function_definition: type_specifier declarator compound_statement .

    $default  reduce using rule 118 (function_definition)


state 88

    7 external_declaration: type_specifier sdecl ',' . sdecl sdecl_list ';'

    '*'  shift, and go to state 71

    $default  reduce using rule 55 (star_list_opt)

    star_list_opt  go to state 171
    star_list      go to state 56
    sdecl          go to state 175


state 89

   61 struct_or_union_specifier: KW_STRUCT IDENTIFIER '{' struct_declaration_list_opt . '}'

    '}'  shift, and go to state 176


state 90

   75 struct_declarator: ':' . constant_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    conditional_expression     go to state 177
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 178
    postfix_expression         go to state 138
    primary_expression         go to state 139
    constant_expression        go to state 179


state 91

   71 struct_declaration: declaration_specifiers struct_declarator_list . ';'
   73 struct_declarator_list: struct_declarator_list . ',' struct_declarator

    ';'  shift, and go to state 180
    ','  shift, and go to state 181


state 92

   72 struct_declarator_list: struct_declarator .

    $default  reduce using rule 72 (struct_declarator_list)


state 93

   74 struct_declarator: declarator .
   76                  | declarator . ':' constant_expression

    ':'  shift, and go to state 182

    $default  reduce using rule 74 (struct_declarator)


state 94

   63 struct_or_union_specifier: KW_STRUCT '{' struct_declaration_list_opt '}' .

    $default  reduce using rule 63 (struct_or_union_specifier)


state 95

   70 struct_declaration_list: struct_declaration_list struct_declaration .

    $default  reduce using rule 70 (struct_declaration_list)


state 96

   62 struct_or_union_specifier: KW_UNION IDENTIFIER '{' struct_declaration_list_opt . '}'

    '}'  shift, and go to state 183


state 97

   64 struct_or_union_specifier: KW_UNION '{' struct_declaration_list_opt '}' .

    $default  reduce using rule 64 (struct_or_union_specifier)


state 98

   77 enum_specifier: KW_ENUM IDENTIFIER '{' enumerator_list_opt . '}'

    '}'  shift, and go to state 184


state 99

   85 enumerator: IDENTIFIER '=' . constant_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    conditional_expression     go to state 177
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 178
    postfix_expression         go to state 138
    primary_expression         go to state 139
    constant_expression        go to state 185


state 100

   78 enum_specifier: KW_ENUM '{' enumerator_list_opt '}' .

    $default  reduce using rule 78 (enum_specifier)


state 101

   83 enumerator_list: enumerator_list ',' . enumerator

    IDENTIFIER  shift, and go to state 67

    enumerator  go to state 186


state 102

    8 external_declaration: KW_TYPEDEF type_specifier star_list_opt IDENTIFIER . ';'
    9                     | KW_TYPEDEF type_specifier star_list_opt IDENTIFIER . array_dims ';'

    '['  shift, and go to state 168
    ';'  shift, and go to state 187

    array_dims  go to state 188


state 103

   10 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' . '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   11                     | KW_TYPEDEF type_specifier star_list_opt '(' . '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'

    '*'  shift, and go to state 189


state 104

   15 simple_function_definition: function_declspec IDENTIFIER '(' simple_param_list_opt . ')' compound_statement

    ')'  shift, and go to state 190


state 105

   19 simple_param_list_opt: simple_param_list .
   21 simple_param_list: simple_param_list . ',' simple_param

    ','  shift, and go to state 191

    $default  reduce using rule 19 (simple_param_list_opt)


state 106

   20 simple_param_list: simple_param .

    $default  reduce using rule 20 (simple_param_list)


state 107

   22 simple_param: type_specifier . star_list_opt IDENTIFIER

    '*'  shift, and go to state 71

    $default  reduce using rule 55 (star_list_opt)

    star_list_opt  go to state 192
    star_list      go to state 56


state 108

   92 pointer: '*' type_qualifier pointer .

    $default  reduce using rule 92 (pointer)


state 109

   27 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 27 (init_declarator_list)


state 110

   28 init_declarator: declarator .
   29                | declarator . '=' assignment_expression
   30                | declarator . '=' initializer

    '='  shift, and go to state 77

    $default  reduce using rule 28 (init_declarator)


state 111

  224 primary_expression: IDENTIFIER .

    $default  reduce using rule 224 (primary_expression)


state 112

  228 primary_expression: STRING_LITERAL .

    $default  reduce using rule 228 (primary_expression)


state 113

  225 primary_expression: INTEGER_CONSTANT .

    $default  reduce using rule 225 (primary_expression)


state 114

  226 primary_expression: FLOAT_CONSTANT .

    $default  reduce using rule 226 (primary_expression)


state 115

  227 primary_expression: CHAR_CONSTANT .

    $default  reduce using rule 227 (primary_expression)


state 116

  211 unary_expression: KW_SIZEOF . unary_expression
  212                 | KW_SIZEOF . '(' type_specifier ')'

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 193

    unary_expression    go to state 194
    postfix_expression  go to state 138
    primary_expression  go to state 139


state 117

  205 unary_expression: INC . unary_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    unary_expression    go to state 195
    postfix_expression  go to state 138
    primary_expression  go to state 139


state 118

  206 unary_expression: DEC . unary_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    unary_expression    go to state 196
    postfix_expression  go to state 138
    primary_expression  go to state 139


state 119

  207 unary_expression: '+' . unary_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    unary_expression    go to state 197
    postfix_expression  go to state 138
    primary_expression  go to state 139


state 120

  208 unary_expression: '-' . unary_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    unary_expression    go to state 198
    postfix_expression  go to state 138
    primary_expression  go to state 139


state 121

  209 unary_expression: '!' . unary_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    unary_expression    go to state 199
    postfix_expression  go to state 138
    primary_expression  go to state 139


state 122

  210 unary_expression: '~' . unary_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    unary_expression    go to state 200
    postfix_expression  go to state 138
    primary_expression  go to state 139


state 123

  229 primary_expression: '(' . expression ')'

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    expression                 go to state 201
    assignment_expression      go to state 163
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 124

  231 initializer: '{' . initializer_list_opt '}'

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123
    '['               shift, and go to state 202
    '.'               shift, and go to state 203
    '{'               shift, and go to state 124

    $default  reduce using rule 232 (initializer_list_opt)

    assignment_expression      go to state 204
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139
    initializer                go to state 205
    initializer_list_opt       go to state 206
    initializer_list           go to state 207
    designated_initializer     go to state 208
    designation                go to state 209
    designator                 go to state 210


state 125

   29 init_declarator: declarator '=' assignment_expression .
  230 initializer: assignment_expression .

    ';'       reduce using rule 29 (init_declarator)
    ';'       [reduce using rule 230 (initializer)]
    ','       reduce using rule 29 (init_declarator)
    ','       [reduce using rule 230 (initializer)]
    $default  reduce using rule 29 (init_declarator)


state 126

  162 assignment_expression: conditional_expression .

    $default  reduce using rule 162 (assignment_expression)


state 127

  174 conditional_expression: logical_or_expression .
  175                       | logical_or_expression . '?' expression ':' conditional_expression
  177 logical_or_expression: logical_or_expression . LOGOR logical_and_expression

    LOGOR  shift, and go to state 211
    '?'    shift, and go to state 212

    $default  reduce using rule 174 (conditional_expression)


state 128

  176 logical_or_expression: logical_and_expression .
  179 logical_and_expression: logical_and_expression . LOGAND inclusive_or_expression

    LOGAND  shift, and go to state 213

    $default  reduce using rule 176 (logical_or_expression)


state 129

  178 logical_and_expression: inclusive_or_expression .
  181 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression

    '|'  shift, and go to state 214

    $default  reduce using rule 178 (logical_and_expression)


state 130

  180 inclusive_or_expression: exclusive_or_expression .
  183 exclusive_or_expression: exclusive_or_expression . '^' and_expression

    '^'  shift, and go to state 215

    $default  reduce using rule 180 (inclusive_or_expression)


state 131

  182 exclusive_or_expression: and_expression .
  185 and_expression: and_expression . '&' equality_expression

    '&'  shift, and go to state 216

    $default  reduce using rule 182 (exclusive_or_expression)


state 132

  184 and_expression: equality_expression .
  187 equality_expression: equality_expression . EQ relational_expression
  188                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 217
    NE  shift, and go to state 218

    $default  reduce using rule 184 (and_expression)


state 133

  186 equality_expression: relational_expression .
  190 relational_expression: relational_expression . '<' shift_expression
  191                      | relational_expression . '>' shift_expression
  192                      | relational_expression . LE shift_expression
  193                      | relational_expression . GE shift_expression

    LE   shift, and go to state 219
    GE   shift, and go to state 220
    '<'  shift, and go to state 221
    '>'  shift, and go to state 222

    $default  reduce using rule 186 (equality_expression)


state 134

  189 relational_expression: shift_expression .
  195 shift_expression: shift_expression . LSHIFT additive_expression
  196                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 223
    RSHIFT  shift, and go to state 224

    $default  reduce using rule 189 (relational_expression)


state 135

  194 shift_expression: additive_expression .
  198 additive_expression: additive_expression . '+' multiplicative_expression
  199                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 225
    '-'  shift, and go to state 226

    $default  reduce using rule 194 (shift_expression)


state 136

  197 additive_expression: multiplicative_expression .
  201 multiplicative_expression: multiplicative_expression . '*' unary_expression
  202                          | multiplicative_expression . '/' unary_expression
  203                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 227
    '/'  shift, and go to state 228
    '%'  shift, and go to state 229

    $default  reduce using rule 197 (additive_expression)


state 137

  163 assignment_expression: unary_expression . '=' assignment_expression
  164                      | unary_expression . ADD_ASSIGN assignment_expression
  165                      | unary_expression . SUB_ASSIGN assignment_expression
  166                      | unary_expression . MUL_ASSIGN assignment_expression
  167                      | unary_expression . DIV_ASSIGN assignment_expression
  168                      | unary_expression . MOD_ASSIGN assignment_expression
  169                      | unary_expression . AND_ASSIGN assignment_expression
  170                      | unary_expression . OR_ASSIGN assignment_expression
  171                      | unary_expression . XOR_ASSIGN assignment_expression
  172                      | unary_expression . LSHIFT_ASSIGN assignment_expression
  173                      | unary_expression . RSHIFT_ASSIGN assignment_expression
  200 multiplicative_expression: unary_expression .

    ADD_ASSIGN     shift, and go to state 230
    SUB_ASSIGN     shift, and go to state 231
    MUL_ASSIGN     shift, and go to state 232
    DIV_ASSIGN     shift, and go to state 233
    MOD_ASSIGN     shift, and go to state 234
    AND_ASSIGN     shift, and go to state 235
    OR_ASSIGN      shift, and go to state 236
    XOR_ASSIGN     shift, and go to state 237
    LSHIFT_ASSIGN  shift, and go to state 238
    RSHIFT_ASSIGN  shift, and go to state 239
    '='            shift, and go to state 240

    $default  reduce using rule 200 (multiplicative_expression)


state 138

  204 unary_expression: postfix_expression .
  214 postfix_expression: postfix_expression . '(' argument_expression_list_opt ')'
  215                   | postfix_expression . '[' expression ']'
  216                   | postfix_expression . '.' IDENTIFIER
  217                   | postfix_expression . ARROW IDENTIFIER
  218                   | postfix_expression . INC
  219                   | postfix_expression . DEC

    ARROW  shift, and go to state 241
    INC    shift, and go to state 242
    DEC    shift, and go to state 243
    '('    shift, and go to state 244
    '['    shift, and go to state 245
    '.'    shift, and go to state 246

    $default  reduce using rule 204 (unary_expression)


state 139

  213 postfix_expression: primary_expression .

    $default  reduce using rule 213 (postfix_expression)


state 140

   30 init_declarator: declarator '=' initializer .

    $default  reduce using rule 30 (init_declarator)


state 141

  135 block_item: KW_TYPEDEF . type_specifier star_list_opt IDENTIFIER ';'
  136           | KW_TYPEDEF . type_specifier type_specifier star_list_opt IDENTIFIER ';'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15

    type_specifier             go to state 247
    struct_or_union_specifier  go to state 33
    enum_specifier             go to state 34


state 142

  152 jump_statement: KW_RETURN . expression_opt ';'

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    $default  reduce using rule 156 (expression_opt)

    expression_opt             go to state 248
    expression                 go to state 249
    assignment_expression      go to state 163
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 143

  146 selection_statement: KW_IF . '(' expression ')' statement
  147                    | KW_IF . '(' expression ')' statement KW_ELSE statement

    '('  shift, and go to state 250


state 144

  149 iteration_statement: KW_WHILE . '(' expression ')' statement

    '('  shift, and go to state 251


state 145

  151 iteration_statement: KW_FOR . '(' expression_opt ';' expression_opt ';' expression_opt ')' statement

    '('  shift, and go to state 252


state 146

  150 iteration_statement: KW_DO . statement KW_WHILE '(' expression ')' ';'

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_RETURN         shift, and go to state 142
    KW_IF             shift, and go to state 143
    KW_WHILE          shift, and go to state 144
    KW_FOR            shift, and go to state 145
    KW_DO             shift, and go to state 146
    KW_SWITCH         shift, and go to state 147
    KW_BREAK          shift, and go to state 148
    KW_CONTINUE       shift, and go to state 149
    KW_GOTO           shift, and go to state 150
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123
    ';'               shift, and go to state 151
    '{'               shift, and go to state 78

    statement                  go to state 253
    compound_statement         go to state 154
    expression_statement       go to state 158
    selection_statement        go to state 159
    iteration_statement        go to state 160
    jump_statement             go to state 161
    expression                 go to state 162
    assignment_expression      go to state 163
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 147

  148 selection_statement: KW_SWITCH . '(' expression ')' statement

    '('  shift, and go to state 254


state 148

  153 jump_statement: KW_BREAK . ';'

    ';'  shift, and go to state 255


state 149

  154 jump_statement: KW_CONTINUE . ';'

    ';'  shift, and go to state 256


state 150

  155 jump_statement: KW_GOTO . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 257


state 151

  144 expression_statement: ';' .

    $default  reduce using rule 144 (expression_statement)


state 152

  129 block_item: type_specifier . star_list_opt IDENTIFIER ';'
  130           | type_specifier . star_list_opt IDENTIFIER '=' assignment_expression ';'
  131           | type_specifier . star_list_opt IDENTIFIER '=' initializer ';'
  132           | type_specifier . star_list_opt IDENTIFIER array_dims '=' initializer ';'
  133           | type_specifier . sdecl ',' sdecl sdecl_list ';'

    '*'  shift, and go to state 71

    $default  reduce using rule 55 (star_list_opt)

    star_list_opt  go to state 258
    star_list      go to state 56
    sdecl          go to state 259


state 153

  134 block_item: statement .

    $default  reduce using rule 134 (block_item)


state 154

  119 statement: compound_statement .

    $default  reduce using rule 119 (statement)


state 155

  124 compound_statement: '{' block_item_list_opt . '}'

    '}'  shift, and go to state 260


state 156

  126 block_item_list_opt: block_item_list .
  128 block_item_list: block_item_list . block_item

    IDENTIFIER        shift, and go to state 111
    TYPE_NAME         shift, and go to state 3
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_VOID           shift, and go to state 4
    KW_CHAR           shift, and go to state 5
    KW_SHORT          shift, and go to state 6
    KW_INT            shift, and go to state 7
    KW_LONG           shift, and go to state 8
    KW_SIGNED         shift, and go to state 9
    KW_UNSIGNED       shift, and go to state 10
    KW_FLOAT          shift, and go to state 11
    KW_DOUBLE         shift, and go to state 12
    KW_STRUCT         shift, and go to state 13
    KW_UNION          shift, and go to state 14
    KW_ENUM           shift, and go to state 15
    KW_TYPEDEF        shift, and go to state 141
    KW_RETURN         shift, and go to state 142
    KW_IF             shift, and go to state 143
    KW_WHILE          shift, and go to state 144
    KW_FOR            shift, and go to state 145
    KW_DO             shift, and go to state 146
    KW_SWITCH         shift, and go to state 147
    KW_BREAK          shift, and go to state 148
    KW_CONTINUE       shift, and go to state 149
    KW_GOTO           shift, and go to state 150
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123
    ';'               shift, and go to state 151
    '{'               shift, and go to state 78

    $default  reduce using rule 126 (block_item_list_opt)

    type_specifier             go to state 152
    struct_or_union_specifier  go to state 33
    enum_specifier             go to state 34
    statement                  go to state 153
    compound_statement         go to state 154
    block_item                 go to state 261
    expression_statement       go to state 158
    selection_statement        go to state 159
    iteration_statement        go to state 160
    jump_statement             go to state 161
    expression                 go to state 162
    assignment_expression      go to state 163
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 157

  127 block_item_list: block_item .

    $default  reduce using rule 127 (block_item_list)


state 158

  120 statement: expression_statement .

    $default  reduce using rule 120 (statement)


state 159

  121 statement: selection_statement .

    $default  reduce using rule 121 (statement)


state 160

  122 statement: iteration_statement .

    $default  reduce using rule 122 (statement)


state 161

  123 statement: jump_statement .

    $default  reduce using rule 123 (statement)


state 162

  145 expression_statement: expression . ';'
  159 expression: expression . ',' assignment_expression

    ';'  shift, and go to state 262
    ','  shift, and go to state 263


state 163

  158 expression: assignment_expression .

    $default  reduce using rule 158 (expression)


state 164

   94 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 264


state 165

   96 direct_declarator: direct_declarator '(' . parameter_type_list_opt ')'
   97                  | direct_declarator '(' . identifier_list_opt ')'

    IDENTIFIER   shift, and go to state 265
    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 17
    KW_VOLATILE  shift, and go to state 18
    KW_RESTRICT  shift, and go to state 19
    KW_INLINE    shift, and go to state 20
    KW_EXTERN    shift, and go to state 21
    KW_STATIC    shift, and go to state 22

    ')'       reduce using rule 98 (identifier_list_opt)
    ')'       [reduce using rule 102 (parameter_type_list_opt)]
    $default  reduce using rule 98 (identifier_list_opt)

    declaration_specifiers     go to state 266
    declaration_specifier      go to state 28
    storage_class_specifier    go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    type_specifier             go to state 267
    struct_or_union_specifier  go to state 33
    enum_specifier             go to state 34
    identifier_list_opt        go to state 268
    identifier_list            go to state 269
    parameter_type_list_opt    go to state 270
    parameter_type_list        go to state 271
    parameter_list             go to state 272
    parameter_declaration      go to state 273


state 166

   95 direct_declarator: direct_declarator '[' . assignment_expression_opt ']'

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    $default  reduce using rule 160 (assignment_expression_opt)

    assignment_expression_opt  go to state 274
    assignment_expression      go to state 275
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 167

    3 external_declaration: type_specifier star_list_opt IDENTIFIER '=' . assignment_expression ';'
   13                     | type_specifier star_list_opt IDENTIFIER '=' . initializer ';'

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123
    '{'               shift, and go to state 124

    assignment_expression      go to state 276
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139
    initializer                go to state 277


state 168

   59 array_dims: '[' . INTEGER_CONSTANT ']'

    INTEGER_CONSTANT  shift, and go to state 278


state 169

   12 external_declaration: type_specifier star_list_opt IDENTIFIER ';' .

    $default  reduce using rule 12 (external_declaration)


state 170

   14 external_declaration: type_specifier star_list_opt IDENTIFIER array_dims . '=' initializer ';'
   60 array_dims: array_dims . '[' INTEGER_CONSTANT ']'

    '='  shift, and go to state 279
    '['  shift, and go to state 280


state 171

  139 sdecl: star_list_opt . sdir

    IDENTIFIER  shift, and go to state 281
    '('         shift, and go to state 84

    sdir  go to state 85


state 172

  141 sdir: '(' sdecl . ')'

    ')'  shift, and go to state 282


state 173

  143 sdir: sdir '(' . fp_param_list_opt ')'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15

    $default  reduce using rule 104 (fp_param_list_opt)

    type_specifier             go to state 283
    struct_or_union_specifier  go to state 33
    enum_specifier             go to state 34
    fp_param_list_opt          go to state 284
    fp_param_list              go to state 285
    fp_param                   go to state 286


state 174

  142 sdir: sdir '[' . assignment_expression_opt ']'

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    $default  reduce using rule 160 (assignment_expression_opt)

    assignment_expression_opt  go to state 287
    assignment_expression      go to state 275
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 175

    7 external_declaration: type_specifier sdecl ',' sdecl . sdecl_list ';'

    $default  reduce using rule 137 (sdecl_list)

    sdecl_list  go to state 288


state 176

   61 struct_or_union_specifier: KW_STRUCT IDENTIFIER '{' struct_declaration_list_opt '}' .

    $default  reduce using rule 61 (struct_or_union_specifier)


state 177

  246 constant_expression: conditional_expression .

    $default  reduce using rule 246 (constant_expression)


state 178

  200 multiplicative_expression: unary_expression .

    $default  reduce using rule 200 (multiplicative_expression)


state 179

   75 struct_declarator: ':' constant_expression .

    $default  reduce using rule 75 (struct_declarator)


state 180

   71 struct_declaration: declaration_specifiers struct_declarator_list ';' .

    $default  reduce using rule 71 (struct_declaration)


state 181

   73 struct_declarator_list: struct_declarator_list ',' . struct_declarator

    ':'  shift, and go to state 90
    '*'  shift, and go to state 45

    $default  reduce using rule 87 (pointer_opt)

    struct_declarator  go to state 289
    declarator         go to state 93
    pointer_opt        go to state 52
    pointer            go to state 53


state 182

   76 struct_declarator: declarator ':' . constant_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    conditional_expression     go to state 177
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 178
    postfix_expression         go to state 138
    primary_expression         go to state 139
    constant_expression        go to state 290


state 183

   62 struct_or_union_specifier: KW_UNION IDENTIFIER '{' struct_declaration_list_opt '}' .

    $default  reduce using rule 62 (struct_or_union_specifier)


state 184

   77 enum_specifier: KW_ENUM IDENTIFIER '{' enumerator_list_opt '}' .

    $default  reduce using rule 77 (enum_specifier)


state 185

   85 enumerator: IDENTIFIER '=' constant_expression .

    $default  reduce using rule 85 (enumerator)


state 186

   83 enumerator_list: enumerator_list ',' enumerator .

    $default  reduce using rule 83 (enumerator_list)


state 187

    8 external_declaration: KW_TYPEDEF type_specifier star_list_opt IDENTIFIER ';' .

    $default  reduce using rule 8 (external_declaration)


state 188

    9 external_declaration: KW_TYPEDEF type_specifier star_list_opt IDENTIFIER array_dims . ';'
   60 array_dims: array_dims . '[' INTEGER_CONSTANT ']'

    '['  shift, and go to state 280
    ';'  shift, and go to state 291


state 189

   10 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' . IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   11                     | KW_TYPEDEF type_specifier star_list_opt '(' '*' . IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'

    IDENTIFIER  shift, and go to state 292


state 190

   15 simple_function_definition: function_declspec IDENTIFIER '(' simple_param_list_opt ')' . compound_statement

    '{'  shift, and go to state 78

    compound_statement  go to state 293


state 191

   21 simple_param_list: simple_param_list ',' . simple_param

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15

    simple_param               go to state 294
    type_specifier             go to state 107
    struct_or_union_specifier  go to state 33
    enum_specifier             go to state 34


state 192

   22 simple_param: type_specifier star_list_opt . IDENTIFIER

    IDENTIFIER  shift, and go to state 295


state 193

  212 unary_expression: KW_SIZEOF '(' . type_specifier ')'
  229 primary_expression: '(' . expression ')'

    IDENTIFIER        shift, and go to state 111
    TYPE_NAME         shift, and go to state 3
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_VOID           shift, and go to state 4
    KW_CHAR           shift, and go to state 5
    KW_SHORT          shift, and go to state 6
    KW_INT            shift, and go to state 7
    KW_LONG           shift, and go to state 8
    KW_SIGNED         shift, and go to state 9
    KW_UNSIGNED       shift, and go to state 10
    KW_FLOAT          shift, and go to state 11
    KW_DOUBLE         shift, and go to state 12
    KW_STRUCT         shift, and go to state 13
    KW_UNION          shift, and go to state 14
    KW_ENUM           shift, and go to state 15
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    type_specifier             go to state 296
    struct_or_union_specifier  go to state 33
    enum_specifier             go to state 34
    expression                 go to state 201
    assignment_expression      go to state 163
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 194

  211 unary_expression: KW_SIZEOF unary_expression .

    $default  reduce using rule 211 (unary_expression)


state 195

  205 unary_expression: INC unary_expression .

    $default  reduce using rule 205 (unary_expression)


state 196

  206 unary_expression: DEC unary_expression .

    $default  reduce using rule 206 (unary_expression)


state 197

  207 unary_expression: '+' unary_expression .

    $default  reduce using rule 207 (unary_expression)


state 198

  208 unary_expression: '-' unary_expression .

    $default  reduce using rule 208 (unary_expression)


state 199

  209 unary_expression: '!' unary_expression .

    $default  reduce using rule 209 (unary_expression)


state 200

  210 unary_expression: '~' unary_expression .

    $default  reduce using rule 210 (unary_expression)


state 201

  159 expression: expression . ',' assignment_expression
  229 primary_expression: '(' expression . ')'

    ')'  shift, and go to state 297
    ','  shift, and go to state 263


state 202

  239 designated_initializer: '[' . constant_expression ']' '=' initializer
  244 designator: '[' . constant_expression ']'
  245           | '[' . constant_expression ELLIPSIS constant_expression ']'

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    conditional_expression     go to state 177
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 178
    postfix_expression         go to state 138
    primary_expression         go to state 139
    constant_expression        go to state 298


state 203

  238 designated_initializer: '.' . IDENTIFIER '=' initializer
  243 designator: '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 299


state 204

  230 initializer: assignment_expression .

    $default  reduce using rule 230 (initializer)


state 205

  234 initializer_list: initializer .

    $default  reduce using rule 234 (initializer_list)


state 206

  231 initializer: '{' initializer_list_opt . '}'

    '}'  shift, and go to state 300


state 207

  233 initializer_list_opt: initializer_list .
  236 initializer_list: initializer_list . ',' initializer
  237                 | initializer_list . ',' designated_initializer

    ','  shift, and go to state 301

    $default  reduce using rule 233 (initializer_list_opt)


state 208

  235 initializer_list: designated_initializer .

    $default  reduce using rule 235 (initializer_list)


state 209

  240 designated_initializer: designation . '=' initializer
  242 designation: designation . designator

    '='  shift, and go to state 302
    '['  shift, and go to state 303
    '.'  shift, and go to state 304

    designator  go to state 305


state 210

  241 designation: designator .

    $default  reduce using rule 241 (designation)


state 211

  177 logical_or_expression: logical_or_expression LOGOR . logical_and_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    logical_and_expression     go to state 306
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 178
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 212

  175 conditional_expression: logical_or_expression '?' . expression ':' conditional_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    expression                 go to state 307
    assignment_expression      go to state 163
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 213

  179 logical_and_expression: logical_and_expression LOGAND . inclusive_or_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    inclusive_or_expression    go to state 308
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 178
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 214

  181 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    exclusive_or_expression    go to state 309
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 178
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 215

  183 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    and_expression             go to state 310
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 178
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 216

  185 and_expression: and_expression '&' . equality_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    equality_expression        go to state 311
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 178
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 217

  187 equality_expression: equality_expression EQ . relational_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    relational_expression      go to state 312
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 178
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 218

  188 equality_expression: equality_expression NE . relational_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    relational_expression      go to state 313
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 178
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 219

  192 relational_expression: relational_expression LE . shift_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    shift_expression           go to state 314
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 178
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 220

  193 relational_expression: relational_expression GE . shift_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    shift_expression           go to state 315
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 178
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 221

  190 relational_expression: relational_expression '<' . shift_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    shift_expression           go to state 316
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 178
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 222

  191 relational_expression: relational_expression '>' . shift_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    shift_expression           go to state 317
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 178
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 223

  195 shift_expression: shift_expression LSHIFT . additive_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    additive_expression        go to state 318
    multiplicative_expression  go to state 136
    unary_expression           go to state 178
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 224

  196 shift_expression: shift_expression RSHIFT . additive_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    additive_expression        go to state 319
    multiplicative_expression  go to state 136
    unary_expression           go to state 178
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 225

  198 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    multiplicative_expression  go to state 320
    unary_expression           go to state 178
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 226

  199 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    multiplicative_expression  go to state 321
    unary_expression           go to state 178
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 227

  201 multiplicative_expression: multiplicative_expression '*' . unary_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    unary_expression    go to state 322
    postfix_expression  go to state 138
    primary_expression  go to state 139


state 228

  202 multiplicative_expression: multiplicative_expression '/' . unary_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    unary_expression    go to state 323
    postfix_expression  go to state 138
    primary_expression  go to state 139


state 229

  203 multiplicative_expression: multiplicative_expression '%' . unary_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    unary_expression    go to state 324
    postfix_expression  go to state 138
    primary_expression  go to state 139


state 230

  164 assignment_expression: unary_expression ADD_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    assignment_expression      go to state 325
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 231

  165 assignment_expression: unary_expression SUB_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    assignment_expression      go to state 326
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 232

  166 assignment_expression: unary_expression MUL_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    assignment_expression      go to state 327
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 233

  167 assignment_expression: unary_expression DIV_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    assignment_expression      go to state 328
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 234

  168 assignment_expression: unary_expression MOD_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    assignment_expression      go to state 329
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 235

  169 assignment_expression: unary_expression AND_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    assignment_expression      go to state 330
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 236

  170 assignment_expression: unary_expression OR_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    assignment_expression      go to state 331
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 237

  171 assignment_expression: unary_expression XOR_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    assignment_expression      go to state 332
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 238

  172 assignment_expression: unary_expression LSHIFT_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    assignment_expression      go to state 333
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 239

  173 assignment_expression: unary_expression RSHIFT_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    assignment_expression      go to state 334
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 240

  163 assignment_expression: unary_expression '=' . assignment_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    assignment_expression      go to state 335
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 241

  217 postfix_expression: postfix_expression ARROW . IDENTIFIER

    IDENTIFIER  shift, and go to state 336


state 242

  218 postfix_expression: postfix_expression INC .

    $default  reduce using rule 218 (postfix_expression)


state 243

  219 postfix_expression: postfix_expression DEC .

    $default  reduce using rule 219 (postfix_expression)


state 244

  214 postfix_expression: postfix_expression '(' . argument_expression_list_opt ')'

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    $default  reduce using rule 220 (argument_expression_list_opt)

    assignment_expression         go to state 337
    conditional_expression        go to state 126
    logical_or_expression         go to state 127
    logical_and_expression        go to state 128
    inclusive_or_expression       go to state 129
    exclusive_or_expression       go to state 130
    and_expression                go to state 131
    equality_expression           go to state 132
    relational_expression         go to state 133
    shift_expression              go to state 134
    additive_expression           go to state 135
    multiplicative_expression     go to state 136
    unary_expression              go to state 137
    postfix_expression            go to state 138
    argument_expression_list_opt  go to state 338
    argument_expression_list      go to state 339
    primary_expression            go to state 139


state 245

  215 postfix_expression: postfix_expression '[' . expression ']'

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    expression                 go to state 340
    assignment_expression      go to state 163
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 246

  216 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 341


state 247

  135 block_item: KW_TYPEDEF type_specifier . star_list_opt IDENTIFIER ';'
  136           | KW_TYPEDEF type_specifier . type_specifier star_list_opt IDENTIFIER ';'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    '*'          shift, and go to state 71

    $default  reduce using rule 55 (star_list_opt)

    type_specifier             go to state 342
    star_list_opt              go to state 343
    star_list                  go to state 56
    struct_or_union_specifier  go to state 33
    enum_specifier             go to state 34


state 248

  152 jump_statement: KW_RETURN expression_opt . ';'

    ';'  shift, and go to state 344


state 249

  157 expression_opt: expression .
  159 expression: expression . ',' assignment_expression

    ','  shift, and go to state 263

    $default  reduce using rule 157 (expression_opt)


state 250

  146 selection_statement: KW_IF '(' . expression ')' statement
  147                    | KW_IF '(' . expression ')' statement KW_ELSE statement

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    expression                 go to state 345
    assignment_expression      go to state 163
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 251

  149 iteration_statement: KW_WHILE '(' . expression ')' statement

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    expression                 go to state 346
    assignment_expression      go to state 163
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 252

  151 iteration_statement: KW_FOR '(' . expression_opt ';' expression_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    $default  reduce using rule 156 (expression_opt)

    expression_opt             go to state 347
    expression                 go to state 249
    assignment_expression      go to state 163
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 253

  150 iteration_statement: KW_DO statement . KW_WHILE '(' expression ')' ';'

    KW_WHILE  shift, and go to state 348


state 254

  148 selection_statement: KW_SWITCH '(' . expression ')' statement

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    expression                 go to state 349
    assignment_expression      go to state 163
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 255

  153 jump_statement: KW_BREAK ';' .

    $default  reduce using rule 153 (jump_statement)


state 256

  154 jump_statement: KW_CONTINUE ';' .

    $default  reduce using rule 154 (jump_statement)


state 257

  155 jump_statement: KW_GOTO IDENTIFIER . ';'

    ';'  shift, and go to state 350


state 258

  129 block_item: type_specifier star_list_opt . IDENTIFIER ';'
  130           | type_specifier star_list_opt . IDENTIFIER '=' assignment_expression ';'
  131           | type_specifier star_list_opt . IDENTIFIER '=' initializer ';'
  132           | type_specifier star_list_opt . IDENTIFIER array_dims '=' initializer ';'
  139 sdecl: star_list_opt . sdir

    IDENTIFIER  shift, and go to state 351
    '('         shift, and go to state 84

    sdir  go to state 85


state 259

  133 block_item: type_specifier sdecl . ',' sdecl sdecl_list ';'

    ','  shift, and go to state 352


state 260

  124 compound_statement: '{' block_item_list_opt '}' .

    $default  reduce using rule 124 (compound_statement)


state 261

  128 block_item_list: block_item_list block_item .

    $default  reduce using rule 128 (block_item_list)


state 262

  145 expression_statement: expression ';' .

    $default  reduce using rule 145 (expression_statement)


state 263

  159 expression: expression ',' . assignment_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    assignment_expression      go to state 353
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 264

   94 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 94 (direct_declarator)


state 265

  100 identifier_list: IDENTIFIER .

    $default  reduce using rule 100 (identifier_list)


state 266

   32 declaration_specifiers: declaration_specifiers . declaration_specifier
  114 parameter_declaration: declaration_specifiers . declarator
  115                      | declaration_specifiers .

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 17
    KW_VOLATILE  shift, and go to state 18
    KW_RESTRICT  shift, and go to state 19
    KW_INLINE    shift, and go to state 20
    KW_EXTERN    shift, and go to state 21
    KW_STATIC    shift, and go to state 22
    '*'          shift, and go to state 45

    ')'       reduce using rule 115 (parameter_declaration)
    ','       reduce using rule 115 (parameter_declaration)
    $default  reduce using rule 87 (pointer_opt)

    declaration_specifier      go to state 49
    storage_class_specifier    go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    type_specifier             go to state 50
    struct_or_union_specifier  go to state 33
    enum_specifier             go to state 34
    declarator                 go to state 354
    pointer_opt                go to state 52
    pointer                    go to state 53


state 267

   34 declaration_specifier: type_specifier .
  116 parameter_declaration: type_specifier . star_list_opt

    '*'  shift, and go to state 71

    '*'       [reduce using rule 34 (declaration_specifier)]
    ')'       reduce using rule 34 (declaration_specifier)
    ')'       [reduce using rule 55 (star_list_opt)]
    ','       reduce using rule 34 (declaration_specifier)
    ','       [reduce using rule 55 (star_list_opt)]
    $default  reduce using rule 34 (declaration_specifier)

    star_list_opt  go to state 355
    star_list      go to state 56


state 268

   97 direct_declarator: direct_declarator '(' identifier_list_opt . ')'

    ')'  shift, and go to state 356


state 269

   99 identifier_list_opt: identifier_list .
  101 identifier_list: identifier_list . ',' IDENTIFIER

    ','  shift, and go to state 357

    $default  reduce using rule 99 (identifier_list_opt)


state 270

   96 direct_declarator: direct_declarator '(' parameter_type_list_opt . ')'

    ')'  shift, and go to state 358


state 271

  103 parameter_type_list_opt: parameter_type_list .

    $default  reduce using rule 103 (parameter_type_list_opt)


state 272

  110 parameter_type_list: parameter_list .
  111                    | parameter_list . ',' ELLIPSIS
  113 parameter_list: parameter_list . ',' parameter_declaration

    ','  shift, and go to state 359

    $default  reduce using rule 110 (parameter_type_list)


state 273

  112 parameter_list: parameter_declaration .

    $default  reduce using rule 112 (parameter_list)


state 274

   95 direct_declarator: direct_declarator '[' assignment_expression_opt . ']'

    ']'  shift, and go to state 360


state 275

  161 assignment_expression_opt: assignment_expression .

    $default  reduce using rule 161 (assignment_expression_opt)


state 276

    3 external_declaration: type_specifier star_list_opt IDENTIFIER '=' assignment_expression . ';'
  230 initializer: assignment_expression .

    ';'  shift, and go to state 361

    ';'  [reduce using rule 230 (initializer)]


state 277

   13 external_declaration: type_specifier star_list_opt IDENTIFIER '=' initializer . ';'

    ';'  shift, and go to state 362


state 278

   59 array_dims: '[' INTEGER_CONSTANT . ']'

    ']'  shift, and go to state 363


state 279

   14 external_declaration: type_specifier star_list_opt IDENTIFIER array_dims '=' . initializer ';'

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123
    '{'               shift, and go to state 124

    assignment_expression      go to state 204
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139
    initializer                go to state 364


state 280

   60 array_dims: array_dims '[' . INTEGER_CONSTANT ']'

    INTEGER_CONSTANT  shift, and go to state 365


state 281

  140 sdir: IDENTIFIER .

    $default  reduce using rule 140 (sdir)


state 282

  141 sdir: '(' sdecl ')' .

    $default  reduce using rule 141 (sdir)


state 283

  108 fp_param: type_specifier . star_list_opt
  109         | type_specifier . star_list_opt IDENTIFIER

    '*'  shift, and go to state 71

    $default  reduce using rule 55 (star_list_opt)

    star_list_opt  go to state 366
    star_list      go to state 56


state 284

  143 sdir: sdir '(' fp_param_list_opt . ')'

    ')'  shift, and go to state 367


state 285

  105 fp_param_list_opt: fp_param_list .
  107 fp_param_list: fp_param_list . ',' fp_param

    ','  shift, and go to state 368

    $default  reduce using rule 105 (fp_param_list_opt)


state 286

  106 fp_param_list: fp_param .

    $default  reduce using rule 106 (fp_param_list)


state 287

  142 sdir: sdir '[' assignment_expression_opt . ']'

    ']'  shift, and go to state 369


state 288

    7 external_declaration: type_specifier sdecl ',' sdecl sdecl_list . ';'
  138 sdecl_list: sdecl_list . ',' sdecl

    ';'  shift, and go to state 370
    ','  shift, and go to state 371


state 289

   73 struct_declarator_list: struct_declarator_list ',' struct_declarator .

    $default  reduce using rule 73 (struct_declarator_list)


state 290

   76 struct_declarator: declarator ':' constant_expression .

    $default  reduce using rule 76 (struct_declarator)


state 291

    9 external_declaration: KW_TYPEDEF type_specifier star_list_opt IDENTIFIER array_dims ';' .

    $default  reduce using rule 9 (external_declaration)


state 292

   10 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER . ')' '(' fp_param_list_opt ')' ';'
   11                     | KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER . array_dims ')' '(' fp_param_list_opt ')' ';'

    ')'  shift, and go to state 372
    '['  shift, and go to state 168

    array_dims  go to state 373


state 293

   15 simple_function_definition: function_declspec IDENTIFIER '(' simple_param_list_opt ')' compound_statement .

    $default  reduce using rule 15 (simple_function_definition)


state 294

   21 simple_param_list: simple_param_list ',' simple_param .

    $default  reduce using rule 21 (simple_param_list)


state 295

   22 simple_param: type_specifier star_list_opt IDENTIFIER .

    $default  reduce using rule 22 (simple_param)


state 296

  212 unary_expression: KW_SIZEOF '(' type_specifier . ')'

    ')'  shift, and go to state 374


state 297

  229 primary_expression: '(' expression ')' .

    $default  reduce using rule 229 (primary_expression)


state 298

  239 designated_initializer: '[' constant_expression . ']' '=' initializer
  244 designator: '[' constant_expression . ']'
  245           | '[' constant_expression . ELLIPSIS constant_expression ']'

    ELLIPSIS  shift, and go to state 375
    ']'       shift, and go to state 376


state 299

  238 designated_initializer: '.' IDENTIFIER . '=' initializer
  243 designator: '.' IDENTIFIER .

    '='  shift, and go to state 377

    '='       [reduce using rule 243 (designator)]
    $default  reduce using rule 243 (designator)


state 300

  231 initializer: '{' initializer_list_opt '}' .

    $default  reduce using rule 231 (initializer)


state 301

  236 initializer_list: initializer_list ',' . initializer
  237                 | initializer_list ',' . designated_initializer

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123
    '['               shift, and go to state 202
    '.'               shift, and go to state 203
    '{'               shift, and go to state 124

    assignment_expression      go to state 204
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139
    initializer                go to state 378
    designated_initializer     go to state 379
    designation                go to state 209
    designator                 go to state 210


state 302

  240 designated_initializer: designation '=' . initializer

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123
    '{'               shift, and go to state 124

    assignment_expression      go to state 204
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139
    initializer                go to state 380


state 303

  244 designator: '[' . constant_expression ']'
  245           | '[' . constant_expression ELLIPSIS constant_expression ']'

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    conditional_expression     go to state 177
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 178
    postfix_expression         go to state 138
    primary_expression         go to state 139
    constant_expression        go to state 381


state 304

  243 designator: '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 382


state 305

  242 designation: designation designator .

    $default  reduce using rule 242 (designation)


state 306

  177 logical_or_expression: logical_or_expression LOGOR logical_and_expression .
  179 logical_and_expression: logical_and_expression . LOGAND inclusive_or_expression

    LOGAND  shift, and go to state 213

    $default  reduce using rule 177 (logical_or_expression)


state 307

  159 expression: expression . ',' assignment_expression
  175 conditional_expression: logical_or_expression '?' expression . ':' conditional_expression

    ':'  shift, and go to state 383
    ','  shift, and go to state 263


state 308

  179 logical_and_expression: logical_and_expression LOGAND inclusive_or_expression .
  181 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression

    '|'  shift, and go to state 214

    $default  reduce using rule 179 (logical_and_expression)


state 309

  181 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .
  183 exclusive_or_expression: exclusive_or_expression . '^' and_expression

    '^'  shift, and go to state 215

    $default  reduce using rule 181 (inclusive_or_expression)


state 310

  183 exclusive_or_expression: exclusive_or_expression '^' and_expression .
  185 and_expression: and_expression . '&' equality_expression

    '&'  shift, and go to state 216

    $default  reduce using rule 183 (exclusive_or_expression)


state 311

  185 and_expression: and_expression '&' equality_expression .
  187 equality_expression: equality_expression . EQ relational_expression
  188                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 217
    NE  shift, and go to state 218

    $default  reduce using rule 185 (and_expression)


state 312

  187 equality_expression: equality_expression EQ relational_expression .
  190 relational_expression: relational_expression . '<' shift_expression
  191                      | relational_expression . '>' shift_expression
  192                      | relational_expression . LE shift_expression
  193                      | relational_expression . GE shift_expression

    LE   shift, and go to state 219
    GE   shift, and go to state 220
    '<'  shift, and go to state 221
    '>'  shift, and go to state 222

    $default  reduce using rule 187 (equality_expression)


state 313

  188 equality_expression: equality_expression NE relational_expression .
  190 relational_expression: relational_expression . '<' shift_expression
  191                      | relational_expression . '>' shift_expression
  192                      | relational_expression . LE shift_expression
  193                      | relational_expression . GE shift_expression

    LE   shift, and go to state 219
    GE   shift, and go to state 220
    '<'  shift, and go to state 221
    '>'  shift, and go to state 222

    $default  reduce using rule 188 (equality_expression)


state 314

  192 relational_expression: relational_expression LE shift_expression .
  195 shift_expression: shift_expression . LSHIFT additive_expression
  196                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 223
    RSHIFT  shift, and go to state 224

    $default  reduce using rule 192 (relational_expression)


state 315

  193 relational_expression: relational_expression GE shift_expression .
  195 shift_expression: shift_expression . LSHIFT additive_expression
  196                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 223
    RSHIFT  shift, and go to state 224

    $default  reduce using rule 193 (relational_expression)


state 316

  190 relational_expression: relational_expression '<' shift_expression .
  195 shift_expression: shift_expression . LSHIFT additive_expression
  196                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 223
    RSHIFT  shift, and go to state 224

    $default  reduce using rule 190 (relational_expression)


state 317

  191 relational_expression: relational_expression '>' shift_expression .
  195 shift_expression: shift_expression . LSHIFT additive_expression
  196                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 223
    RSHIFT  shift, and go to state 224

    $default  reduce using rule 191 (relational_expression)


state 318

  195 shift_expression: shift_expression LSHIFT additive_expression .
  198 additive_expression: additive_expression . '+' multiplicative_expression
  199                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 225
    '-'  shift, and go to state 226

    $default  reduce using rule 195 (shift_expression)


state 319

  196 shift_expression: shift_expression RSHIFT additive_expression .
  198 additive_expression: additive_expression . '+' multiplicative_expression
  199                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 225
    '-'  shift, and go to state 226

    $default  reduce using rule 196 (shift_expression)


state 320

  198 additive_expression: additive_expression '+' multiplicative_expression .
  201 multiplicative_expression: multiplicative_expression . '*' unary_expression
  202                          | multiplicative_expression . '/' unary_expression
  203                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 227
    '/'  shift, and go to state 228
    '%'  shift, and go to state 229

    $default  reduce using rule 198 (additive_expression)


state 321

  199 additive_expression: additive_expression '-' multiplicative_expression .
  201 multiplicative_expression: multiplicative_expression . '*' unary_expression
  202                          | multiplicative_expression . '/' unary_expression
  203                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 227
    '/'  shift, and go to state 228
    '%'  shift, and go to state 229

    $default  reduce using rule 199 (additive_expression)


state 322

  201 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 201 (multiplicative_expression)


state 323

  202 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 202 (multiplicative_expression)


state 324

  203 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 203 (multiplicative_expression)


state 325

  164 assignment_expression: unary_expression ADD_ASSIGN assignment_expression .

    $default  reduce using rule 164 (assignment_expression)


state 326

  165 assignment_expression: unary_expression SUB_ASSIGN assignment_expression .

    $default  reduce using rule 165 (assignment_expression)


state 327

  166 assignment_expression: unary_expression MUL_ASSIGN assignment_expression .

    $default  reduce using rule 166 (assignment_expression)


state 328

  167 assignment_expression: unary_expression DIV_ASSIGN assignment_expression .

    $default  reduce using rule 167 (assignment_expression)


state 329

  168 assignment_expression: unary_expression MOD_ASSIGN assignment_expression .

    $default  reduce using rule 168 (assignment_expression)


state 330

  169 assignment_expression: unary_expression AND_ASSIGN assignment_expression .

    $default  reduce using rule 169 (assignment_expression)


state 331

  170 assignment_expression: unary_expression OR_ASSIGN assignment_expression .

    $default  reduce using rule 170 (assignment_expression)


state 332

  171 assignment_expression: unary_expression XOR_ASSIGN assignment_expression .

    $default  reduce using rule 171 (assignment_expression)


state 333

  172 assignment_expression: unary_expression LSHIFT_ASSIGN assignment_expression .

    $default  reduce using rule 172 (assignment_expression)


state 334

  173 assignment_expression: unary_expression RSHIFT_ASSIGN assignment_expression .

    $default  reduce using rule 173 (assignment_expression)


state 335

  163 assignment_expression: unary_expression '=' assignment_expression .

    $default  reduce using rule 163 (assignment_expression)


state 336

  217 postfix_expression: postfix_expression ARROW IDENTIFIER .

    $default  reduce using rule 217 (postfix_expression)


state 337

  222 argument_expression_list: assignment_expression .

    $default  reduce using rule 222 (argument_expression_list)


state 338

  214 postfix_expression: postfix_expression '(' argument_expression_list_opt . ')'

    ')'  shift, and go to state 384


state 339

  221 argument_expression_list_opt: argument_expression_list .
  223 argument_expression_list: argument_expression_list . ',' assignment_expression

    ','  shift, and go to state 385

    $default  reduce using rule 221 (argument_expression_list_opt)


state 340

  159 expression: expression . ',' assignment_expression
  215 postfix_expression: postfix_expression '[' expression . ']'

    ']'  shift, and go to state 386
    ','  shift, and go to state 263


state 341

  216 postfix_expression: postfix_expression '.' IDENTIFIER .

    $default  reduce using rule 216 (postfix_expression)


state 342

  136 block_item: KW_TYPEDEF type_specifier type_specifier . star_list_opt IDENTIFIER ';'

    '*'  shift, and go to state 71

    $default  reduce using rule 55 (star_list_opt)

    star_list_opt  go to state 387
    star_list      go to state 56


state 343

  135 block_item: KW_TYPEDEF type_specifier star_list_opt . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 388


state 344

  152 jump_statement: KW_RETURN expression_opt ';' .

    $default  reduce using rule 152 (jump_statement)


state 345

  146 selection_statement: KW_IF '(' expression . ')' statement
  147                    | KW_IF '(' expression . ')' statement KW_ELSE statement
  159 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 389
    ','  shift, and go to state 263


state 346

  149 iteration_statement: KW_WHILE '(' expression . ')' statement
  159 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 390
    ','  shift, and go to state 263


state 347

  151 iteration_statement: KW_FOR '(' expression_opt . ';' expression_opt ';' expression_opt ')' statement

    ';'  shift, and go to state 391


state 348

  150 iteration_statement: KW_DO statement KW_WHILE . '(' expression ')' ';'

    '('  shift, and go to state 392


state 349

  148 selection_statement: KW_SWITCH '(' expression . ')' statement
  159 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 393
    ','  shift, and go to state 263


state 350

  155 jump_statement: KW_GOTO IDENTIFIER ';' .

    $default  reduce using rule 155 (jump_statement)


state 351

  129 block_item: type_specifier star_list_opt IDENTIFIER . ';'
  130           | type_specifier star_list_opt IDENTIFIER . '=' assignment_expression ';'
  131           | type_specifier star_list_opt IDENTIFIER . '=' initializer ';'
  132           | type_specifier star_list_opt IDENTIFIER . array_dims '=' initializer ';'
  140 sdir: IDENTIFIER .

    '='  shift, and go to state 394
    '['  shift, and go to state 168
    ';'  shift, and go to state 395

    '['       [reduce using rule 140 (sdir)]
    $default  reduce using rule 140 (sdir)

    array_dims  go to state 396


state 352

  133 block_item: type_specifier sdecl ',' . sdecl sdecl_list ';'

    '*'  shift, and go to state 71

    $default  reduce using rule 55 (star_list_opt)

    star_list_opt  go to state 171
    star_list      go to state 56
    sdecl          go to state 397


state 353

  159 expression: expression ',' assignment_expression .

    $default  reduce using rule 159 (expression)


state 354

  114 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 114 (parameter_declaration)


state 355

  116 parameter_declaration: type_specifier star_list_opt .

    $default  reduce using rule 116 (parameter_declaration)


state 356

   97 direct_declarator: direct_declarator '(' identifier_list_opt ')' .

    $default  reduce using rule 97 (direct_declarator)


state 357

  101 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 398


state 358

   96 direct_declarator: direct_declarator '(' parameter_type_list_opt ')' .

    $default  reduce using rule 96 (direct_declarator)


state 359

  111 parameter_type_list: parameter_list ',' . ELLIPSIS
  113 parameter_list: parameter_list ',' . parameter_declaration

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 17
    KW_VOLATILE  shift, and go to state 18
    KW_RESTRICT  shift, and go to state 19
    KW_INLINE    shift, and go to state 20
    KW_EXTERN    shift, and go to state 21
    KW_STATIC    shift, and go to state 22
    ELLIPSIS     shift, and go to state 399

    declaration_specifiers     go to state 266
    declaration_specifier      go to state 28
    storage_class_specifier    go to state 29
    type_qualifier             go to state 30
    function_specifier         go to state 31
    type_specifier             go to state 267
    struct_or_union_specifier  go to state 33
    enum_specifier             go to state 34
    parameter_declaration      go to state 400


state 360

   95 direct_declarator: direct_declarator '[' assignment_expression_opt ']' .

    $default  reduce using rule 95 (direct_declarator)


state 361

    3 external_declaration: type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';' .

    $default  reduce using rule 3 (external_declaration)


state 362

   13 external_declaration: type_specifier star_list_opt IDENTIFIER '=' initializer ';' .

    $default  reduce using rule 13 (external_declaration)


state 363

   59 array_dims: '[' INTEGER_CONSTANT ']' .

    $default  reduce using rule 59 (array_dims)


state 364

   14 external_declaration: type_specifier star_list_opt IDENTIFIER array_dims '=' initializer . ';'

    ';'  shift, and go to state 401


state 365

   60 array_dims: array_dims '[' INTEGER_CONSTANT . ']'

    ']'  shift, and go to state 402


state 366

  108 fp_param: type_specifier star_list_opt .
  109         | type_specifier star_list_opt . IDENTIFIER

    IDENTIFIER  shift, and go to state 403

    $default  reduce using rule 108 (fp_param)


state 367

  143 sdir: sdir '(' fp_param_list_opt ')' .

    $default  reduce using rule 143 (sdir)


state 368

  107 fp_param_list: fp_param_list ',' . fp_param

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15

    type_specifier             go to state 283
    struct_or_union_specifier  go to state 33
    enum_specifier             go to state 34
    fp_param                   go to state 404


state 369

  142 sdir: sdir '[' assignment_expression_opt ']' .

    $default  reduce using rule 142 (sdir)


state 370

    7 external_declaration: type_specifier sdecl ',' sdecl sdecl_list ';' .

    $default  reduce using rule 7 (external_declaration)


state 371

  138 sdecl_list: sdecl_list ',' . sdecl

    '*'  shift, and go to state 71

    $default  reduce using rule 55 (star_list_opt)

    star_list_opt  go to state 171
    star_list      go to state 56
    sdecl          go to state 405


state 372

   10 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER ')' . '(' fp_param_list_opt ')' ';'

    '('  shift, and go to state 406


state 373

   11 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER array_dims . ')' '(' fp_param_list_opt ')' ';'
   60 array_dims: array_dims . '[' INTEGER_CONSTANT ']'

    ')'  shift, and go to state 407
    '['  shift, and go to state 280


state 374

  212 unary_expression: KW_SIZEOF '(' type_specifier ')' .

    $default  reduce using rule 212 (unary_expression)


state 375

  245 designator: '[' constant_expression ELLIPSIS . constant_expression ']'

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    conditional_expression     go to state 177
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 178
    postfix_expression         go to state 138
    primary_expression         go to state 139
    constant_expression        go to state 408


state 376

  239 designated_initializer: '[' constant_expression ']' . '=' initializer
  244 designator: '[' constant_expression ']' .

    $default  reduce using rule 244 (designator)


state 377

  238 designated_initializer: '.' IDENTIFIER '=' . initializer

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123
    '{'               shift, and go to state 124

    assignment_expression      go to state 204
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139
    initializer                go to state 410


state 378

  236 initializer_list: initializer_list ',' initializer .

    $default  reduce using rule 236 (initializer_list)


state 379

  237 initializer_list: initializer_list ',' designated_initializer .

    $default  reduce using rule 237 (initializer_list)


state 380

  240 designated_initializer: designation '=' initializer .

    $default  reduce using rule 240 (designated_initializer)


state 381

  244 designator: '[' constant_expression . ']'
  245           | '[' constant_expression . ELLIPSIS constant_expression ']'

    ELLIPSIS  shift, and go to state 375
    ']'       shift, and go to state 411


state 382

  243 designator: '.' IDENTIFIER .

    $default  reduce using rule 243 (designator)


state 383

  175 conditional_expression: logical_or_expression '?' expression ':' . conditional_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    conditional_expression     go to state 412
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 178
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 384

  214 postfix_expression: postfix_expression '(' argument_expression_list_opt ')' .

    $default  reduce using rule 214 (postfix_expression)


state 385

  223 argument_expression_list: argument_expression_list ',' . assignment_expression

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    assignment_expression      go to state 413
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 386

  215 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 215 (postfix_expression)


state 387

  136 block_item: KW_TYPEDEF type_specifier type_specifier star_list_opt . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 414


state 388

  135 block_item: KW_TYPEDEF type_specifier star_list_opt IDENTIFIER . ';'

    ';'  shift, and go to state 415


state 389

  146 selection_statement: KW_IF '(' expression ')' . statement
  147                    | KW_IF '(' expression ')' . statement KW_ELSE statement

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_RETURN         shift, and go to state 142
    KW_IF             shift, and go to state 143
    KW_WHILE          shift, and go to state 144
    KW_FOR            shift, and go to state 145
    KW_DO             shift, and go to state 146
    KW_SWITCH         shift, and go to state 147
    KW_BREAK          shift, and go to state 148
    KW_CONTINUE       shift, and go to state 149
    KW_GOTO           shift, and go to state 150
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123
    ';'               shift, and go to state 151
    '{'               shift, and go to state 78

    statement                  go to state 416
    compound_statement         go to state 154
    expression_statement       go to state 158
    selection_statement        go to state 159
    iteration_statement        go to state 160
    jump_statement             go to state 161
    expression                 go to state 162
    assignment_expression      go to state 163
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 390

  149 iteration_statement: KW_WHILE '(' expression ')' . statement

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_RETURN         shift, and go to state 142
    KW_IF             shift, and go to state 143
    KW_WHILE          shift, and go to state 144
    KW_FOR            shift, and go to state 145
    KW_DO             shift, and go to state 146
    KW_SWITCH         shift, and go to state 147
    KW_BREAK          shift, and go to state 148
    KW_CONTINUE       shift, and go to state 149
    KW_GOTO           shift, and go to state 150
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123
    ';'               shift, and go to state 151
    '{'               shift, and go to state 78

    statement                  go to state 417
    compound_statement         go to state 154
    expression_statement       go to state 158
    selection_statement        go to state 159
    iteration_statement        go to state 160
    jump_statement             go to state 161
    expression                 go to state 162
    assignment_expression      go to state 163
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 391

  151 iteration_statement: KW_FOR '(' expression_opt ';' . expression_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    $default  reduce using rule 156 (expression_opt)

    expression_opt             go to state 418
    expression                 go to state 249
    assignment_expression      go to state 163
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 392

  150 iteration_statement: KW_DO statement KW_WHILE '(' . expression ')' ';'

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    expression                 go to state 419
    assignment_expression      go to state 163
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 393

  148 selection_statement: KW_SWITCH '(' expression ')' . statement

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_RETURN         shift, and go to state 142
    KW_IF             shift, and go to state 143
    KW_WHILE          shift, and go to state 144
    KW_FOR            shift, and go to state 145
    KW_DO             shift, and go to state 146
    KW_SWITCH         shift, and go to state 147
    KW_BREAK          shift, and go to state 148
    KW_CONTINUE       shift, and go to state 149
    KW_GOTO           shift, and go to state 150
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123
    ';'               shift, and go to state 151
    '{'               shift, and go to state 78

    statement                  go to state 420
    compound_statement         go to state 154
    expression_statement       go to state 158
    selection_statement        go to state 159
    iteration_statement        go to state 160
    jump_statement             go to state 161
    expression                 go to state 162
    assignment_expression      go to state 163
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 394

  130 block_item: type_specifier star_list_opt IDENTIFIER '=' . assignment_expression ';'
  131           | type_specifier star_list_opt IDENTIFIER '=' . initializer ';'

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123
    '{'               shift, and go to state 124

    assignment_expression      go to state 421
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139
    initializer                go to state 422


state 395

  129 block_item: type_specifier star_list_opt IDENTIFIER ';' .

    $default  reduce using rule 129 (block_item)


state 396

   60 array_dims: array_dims . '[' INTEGER_CONSTANT ']'
  132 block_item: type_specifier star_list_opt IDENTIFIER array_dims . '=' initializer ';'

    '='  shift, and go to state 423
    '['  shift, and go to state 280


state 397

  133 block_item: type_specifier sdecl ',' sdecl . sdecl_list ';'

    $default  reduce using rule 137 (sdecl_list)

    sdecl_list  go to state 424


state 398

  101 identifier_list: identifier_list ',' IDENTIFIER .

    $default  reduce using rule 101 (identifier_list)


state 399

  111 parameter_type_list: parameter_list ',' ELLIPSIS .

    $default  reduce using rule 111 (parameter_type_list)


state 400

  113 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 113 (parameter_list)


state 401

   14 external_declaration: type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';' .

    $default  reduce using rule 14 (external_declaration)


state 402

   60 array_dims: array_dims '[' INTEGER_CONSTANT ']' .

    $default  reduce using rule 60 (array_dims)


state 403

  109 fp_param: type_specifier star_list_opt IDENTIFIER .

    $default  reduce using rule 109 (fp_param)


state 404

  107 fp_param_list: fp_param_list ',' fp_param .

    $default  reduce using rule 107 (fp_param_list)


state 405

  138 sdecl_list: sdecl_list ',' sdecl .

    $default  reduce using rule 138 (sdecl_list)


state 406

   10 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' . fp_param_list_opt ')' ';'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15

    $default  reduce using rule 104 (fp_param_list_opt)

    type_specifier             go to state 283
    struct_or_union_specifier  go to state 33
    enum_specifier             go to state 34
    fp_param_list_opt          go to state 425
    fp_param_list              go to state 285
    fp_param                   go to state 286


state 407

   11 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' . '(' fp_param_list_opt ')' ';'

    '('  shift, and go to state 426


state 408

  245 designator: '[' constant_expression ELLIPSIS constant_expression . ']'

    ']'  shift, and go to state 427


state 409

  239 designated_initializer: '[' constant_expression ']' '=' . initializer

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123
    '{'               shift, and go to state 124

    assignment_expression      go to state 204
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139
    initializer                go to state 428


state 410

  238 designated_initializer: '.' IDENTIFIER '=' initializer .

    $default  reduce using rule 238 (designated_initializer)


state 411

  244 designator: '[' constant_expression ']' .

    $default  reduce using rule 244 (designator)


state 412

  175 conditional_expression: logical_or_expression '?' expression ':' conditional_expression .

    $default  reduce using rule 175 (conditional_expression)


state 413

  223 argument_expression_list: argument_expression_list ',' assignment_expression .

    $default  reduce using rule 223 (argument_expression_list)


state 414

  136 block_item: KW_TYPEDEF type_specifier type_specifier star_list_opt IDENTIFIER . ';'

    ';'  shift, and go to state 429


state 415

  135 block_item: KW_TYPEDEF type_specifier star_list_opt IDENTIFIER ';' .

    $default  reduce using rule 135 (block_item)


state 416

  146 selection_statement: KW_IF '(' expression ')' statement .
  147                    | KW_IF '(' expression ')' statement . KW_ELSE statement

    KW_ELSE  shift, and go to state 430

    KW_ELSE   [reduce using rule 146 (selection_statement)]
    $default  reduce using rule 146 (selection_statement)


state 417

  149 iteration_statement: KW_WHILE '(' expression ')' statement .

    $default  reduce using rule 149 (iteration_statement)


state 418

  151 iteration_statement: KW_FOR '(' expression_opt ';' expression_opt . ';' expression_opt ')' statement

    ';'  shift, and go to state 431


state 419

  150 iteration_statement: KW_DO statement KW_WHILE '(' expression . ')' ';'
  159 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 432
    ','  shift, and go to state 263


state 420

  148 selection_statement: KW_SWITCH '(' expression ')' statement .

    $default  reduce using rule 148 (selection_statement)


state 421

  130 block_item: type_specifier star_list_opt IDENTIFIER '=' assignment_expression . ';'
  230 initializer: assignment_expression .

    ';'  shift, and go to state 433

    ';'  [reduce using rule 230 (initializer)]


state 422

  131 block_item: type_specifier star_list_opt IDENTIFIER '=' initializer . ';'

    ';'  shift, and go to state 434


state 423

  132 block_item: type_specifier star_list_opt IDENTIFIER array_dims '=' . initializer ';'

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123
    '{'               shift, and go to state 124

    assignment_expression      go to state 204
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139
    initializer                go to state 435


state 424

  133 block_item: type_specifier sdecl ',' sdecl sdecl_list . ';'
  138 sdecl_list: sdecl_list . ',' sdecl

    ';'  shift, and go to state 436
    ','  shift, and go to state 371


state 425

   10 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt . ')' ';'

    ')'  shift, and go to state 437


state 426

   11 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' . fp_param_list_opt ')' ';'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15

    $default  reduce using rule 104 (fp_param_list_opt)

    type_specifier             go to state 283
    struct_or_union_specifier  go to state 33
    enum_specifier             go to state 34
    fp_param_list_opt          go to state 438
    fp_param_list              go to state 285
    fp_param                   go to state 286


state 427

  245 designator: '[' constant_expression ELLIPSIS constant_expression ']' .

    $default  reduce using rule 245 (designator)


state 428

  239 designated_initializer: '[' constant_expression ']' '=' initializer .

    $default  reduce using rule 239 (designated_initializer)


state 429

  136 block_item: KW_TYPEDEF type_specifier type_specifier star_list_opt IDENTIFIER ';' .

    $default  reduce using rule 136 (block_item)


state 430

  147 selection_statement: KW_IF '(' expression ')' statement KW_ELSE . statement

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_RETURN         shift, and go to state 142
    KW_IF             shift, and go to state 143
    KW_WHILE          shift, and go to state 144
    KW_FOR            shift, and go to state 145
    KW_DO             shift, and go to state 146
    KW_SWITCH         shift, and go to state 147
    KW_BREAK          shift, and go to state 148
    KW_CONTINUE       shift, and go to state 149
    KW_GOTO           shift, and go to state 150
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123
    ';'               shift, and go to state 151
    '{'               shift, and go to state 78

    statement                  go to state 439
    compound_statement         go to state 154
    expression_statement       go to state 158
    selection_statement        go to state 159
    iteration_statement        go to state 160
    jump_statement             go to state 161
    expression                 go to state 162
    assignment_expression      go to state 163
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 431

  151 iteration_statement: KW_FOR '(' expression_opt ';' expression_opt ';' . expression_opt ')' statement

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123

    $default  reduce using rule 156 (expression_opt)

    expression_opt             go to state 440
    expression                 go to state 249
    assignment_expression      go to state 163
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 432

  150 iteration_statement: KW_DO statement KW_WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 441


state 433

  130 block_item: type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';' .

    $default  reduce using rule 130 (block_item)


state 434

  131 block_item: type_specifier star_list_opt IDENTIFIER '=' initializer ';' .

    $default  reduce using rule 131 (block_item)


state 435

  132 block_item: type_specifier star_list_opt IDENTIFIER array_dims '=' initializer . ';'

    ';'  shift, and go to state 442


state 436

  133 block_item: type_specifier sdecl ',' sdecl sdecl_list ';' .

    $default  reduce using rule 133 (block_item)


state 437

   10 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' . ';'

    ';'  shift, and go to state 443


state 438

   11 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt . ')' ';'

    ')'  shift, and go to state 444


state 439

  147 selection_statement: KW_IF '(' expression ')' statement KW_ELSE statement .

    $default  reduce using rule 147 (selection_statement)


state 440

  151 iteration_statement: KW_FOR '(' expression_opt ';' expression_opt ';' expression_opt . ')' statement

    ')'  shift, and go to state 445


state 441

  150 iteration_statement: KW_DO statement KW_WHILE '(' expression ')' ';' .

    $default  reduce using rule 150 (iteration_statement)


state 442

  132 block_item: type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';' .

    $default  reduce using rule 132 (block_item)


state 443

   10 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';' .

    $default  reduce using rule 10 (external_declaration)


state 444

   11 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' . ';'

    ';'  shift, and go to state 446


state 445

  151 iteration_statement: KW_FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' . statement

    IDENTIFIER        shift, and go to state 111
    STRING_LITERAL    shift, and go to state 112
    INTEGER_CONSTANT  shift, and go to state 113
    FLOAT_CONSTANT    shift, and go to state 114
    CHAR_CONSTANT     shift, and go to state 115
    KW_RETURN         shift, and go to state 142
    KW_IF             shift, and go to state 143
    KW_WHILE          shift, and go to state 144
    KW_FOR            shift, and go to state 145
    KW_DO             shift, and go to state 146
    KW_SWITCH         shift, and go to state 147
    KW_BREAK          shift, and go to state 148
    KW_CONTINUE       shift, and go to state 149
    KW_GOTO           shift, and go to state 150
    KW_SIZEOF         shift, and go to state 116
    INC               shift, and go to state 117
    DEC               shift, and go to state 118
    '+'               shift, and go to state 119
    '-'               shift, and go to state 120
    '!'               shift, and go to state 121
    '~'               shift, and go to state 122
    '('               shift, and go to state 123
    ';'               shift, and go to state 151
    '{'               shift, and go to state 78

    statement                  go to state 447
    compound_statement         go to state 154
    expression_statement       go to state 158
    selection_statement        go to state 159
    iteration_statement        go to state 160
    jump_statement             go to state 161
    expression                 go to state 162
    assignment_expression      go to state 163
    conditional_expression     go to state 126
    logical_or_expression      go to state 127
    logical_and_expression     go to state 128
    inclusive_or_expression    go to state 129
    exclusive_or_expression    go to state 130
    and_expression             go to state 131
    equality_expression        go to state 132
    relational_expression      go to state 133
    shift_expression           go to state 134
    additive_expression        go to state 135
    multiplicative_expression  go to state 136
    unary_expression           go to state 137
    postfix_expression         go to state 138
    primary_expression         go to state 139


state 446

   11 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';' .

    $default  reduce using rule 11 (external_declaration)


state 447

  151 iteration_statement: KW_FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' statement .

    $default  reduce using rule 151 (iteration_statement)
