Terminals which are not used

   KW_CASE
   KW_DEFAULT


Rules never reduced

   85 parameter_type_list_opt: /* empty */


State 26 conflicts: 1 reduce/reduce
State 31 conflicts: 1 shift/reduce, 2 reduce/reduce
State 148 conflicts: 1 reduce/reduce
State 304 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: /* empty */
    2                 | translation_unit external_declaration

    3 external_declaration: simple_function_definition
    4                     | function_definition
    5                     | declaration ';'

    6 simple_function_definition: function_declspec IDENTIFIER '(' simple_param_list_opt ')' compound_statement

    7 function_declspec: type_specifier
    8                  | declaration_specifiers

    9 simple_param_list_opt: /* empty */
   10                      | simple_param_list

   11 simple_param_list: parameter_declaration
   12                  | simple_param_list ',' parameter_declaration

   13 declaration: declaration_specifiers init_declarator_list_opt

   14 init_declarator_list_opt: /* empty */
   15                         | init_declarator_list

   16 init_declarator_list: init_declarator
   17                     | init_declarator_list ',' init_declarator

   18 init_declarator: declarator
   19                | declarator '=' assignment_expression

   20 declaration_specifiers: declaration_specifier
   21                       | declaration_specifiers declaration_specifier

   22 declaration_specifier: storage_class_specifier
   23                      | type_specifier
   24                      | type_qualifier
   25                      | function_specifier

   26 storage_class_specifier: KW_TYPEDEF
   27                        | KW_EXTERN
   28                        | KW_STATIC

   29 type_qualifier: KW_CONST
   30               | KW_VOLATILE
   31               | KW_RESTRICT

   32 function_specifier: KW_INLINE

   33 type_specifier: KW_VOID
   34               | KW_CHAR
   35               | KW_SHORT
   36               | KW_INT
   37               | KW_LONG
   38               | KW_SIGNED
   39               | KW_UNSIGNED
   40               | KW_FLOAT
   41               | KW_DOUBLE
   42               | struct_or_union_specifier
   43               | enum_specifier

   44 struct_or_union_specifier: KW_STRUCT IDENTIFIER '{' struct_declaration_list_opt '}'
   45                          | KW_UNION IDENTIFIER '{' struct_declaration_list_opt '}'
   46                          | KW_STRUCT '{' struct_declaration_list_opt '}'
   47                          | KW_UNION '{' struct_declaration_list_opt '}'
   48                          | KW_STRUCT IDENTIFIER
   49                          | KW_UNION IDENTIFIER

   50 struct_declaration_list_opt: /* empty */
   51                            | struct_declaration_list

   52 struct_declaration_list: struct_declaration
   53                        | struct_declaration_list struct_declaration

   54 struct_declaration: declaration_specifiers struct_declarator_list ';'

   55 struct_declarator_list: struct_declarator
   56                       | struct_declarator_list ',' struct_declarator

   57 struct_declarator: declarator
   58                  | ':' constant_expression
   59                  | declarator ':' constant_expression

   60 enum_specifier: KW_ENUM IDENTIFIER '{' enumerator_list_opt '}'
   61               | KW_ENUM '{' enumerator_list_opt '}'
   62               | KW_ENUM IDENTIFIER

   63 enumerator_list_opt: /* empty */
   64                    | enumerator_list

   65 enumerator_list: enumerator
   66                | enumerator_list ',' enumerator

   67 enumerator: IDENTIFIER
   68           | IDENTIFIER '=' constant_expression

   69 declarator: pointer_opt direct_declarator

   70 pointer_opt: /* empty */
   71            | pointer

   72 pointer: '*'
   73        | '*' type_qualifier
   74        | '*' pointer
   75        | '*' type_qualifier pointer

   76 direct_declarator: IDENTIFIER
   77                  | '(' declarator ')'
   78                  | direct_declarator '[' assignment_expression_opt ']'
   79                  | direct_declarator '(' parameter_type_list_opt ')'
   80                  | direct_declarator '(' identifier_list_opt ')'

   81 identifier_list_opt: /* empty */
   82                    | identifier_list

   83 identifier_list: IDENTIFIER
   84                | identifier_list ',' IDENTIFIER

   85 parameter_type_list_opt: /* empty */
   86                        | parameter_type_list

   87 parameter_type_list: parameter_list
   88                    | parameter_list ',' ELLIPSIS

   89 parameter_list: parameter_declaration
   90               | parameter_list ',' parameter_declaration

   91 parameter_declaration: declaration_specifiers declarator
   92                      | declaration_specifiers

   93 function_definition: declaration_specifiers declarator compound_statement
   94                    | type_specifier declarator compound_statement

   95 statement: compound_statement
   96          | expression_statement
   97          | selection_statement
   98          | iteration_statement
   99          | jump_statement

  100 compound_statement: '{' block_item_list_opt '}'

  101 block_item_list_opt: /* empty */
  102                    | block_item_list

  103 block_item_list: block_item
  104                | block_item_list block_item

  105 block_item: declaration ';'
  106           | statement

  107 expression_statement: ';'
  108                     | expression ';'

  109 selection_statement: KW_IF '(' expression ')' statement
  110                    | KW_IF '(' expression ')' statement KW_ELSE statement
  111                    | KW_SWITCH '(' expression ')' statement

  112 iteration_statement: KW_WHILE '(' expression ')' statement
  113                    | KW_DO statement KW_WHILE '(' expression ')' ';'
  114                    | KW_FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' statement

  115 jump_statement: KW_RETURN expression_opt ';'
  116               | KW_BREAK ';'
  117               | KW_CONTINUE ';'
  118               | KW_GOTO IDENTIFIER ';'

  119 expression_opt: /* empty */
  120               | expression

  121 expression: assignment_expression
  122           | expression ',' assignment_expression

  123 assignment_expression_opt: /* empty */
  124                          | assignment_expression

  125 assignment_expression: conditional_expression
  126                      | unary_expression '=' assignment_expression
  127                      | unary_expression ADD_ASSIGN assignment_expression
  128                      | unary_expression SUB_ASSIGN assignment_expression
  129                      | unary_expression MUL_ASSIGN assignment_expression
  130                      | unary_expression DIV_ASSIGN assignment_expression
  131                      | unary_expression MOD_ASSIGN assignment_expression
  132                      | unary_expression AND_ASSIGN assignment_expression
  133                      | unary_expression OR_ASSIGN assignment_expression
  134                      | unary_expression XOR_ASSIGN assignment_expression
  135                      | unary_expression LSHIFT_ASSIGN assignment_expression
  136                      | unary_expression RSHIFT_ASSIGN assignment_expression

  137 conditional_expression: logical_or_expression
  138                       | logical_or_expression '?' expression ':' conditional_expression

  139 logical_or_expression: logical_and_expression
  140                      | logical_or_expression LOGOR logical_and_expression

  141 logical_and_expression: inclusive_or_expression
  142                       | logical_and_expression LOGAND inclusive_or_expression

  143 inclusive_or_expression: exclusive_or_expression
  144                        | inclusive_or_expression '|' exclusive_or_expression

  145 exclusive_or_expression: and_expression
  146                        | exclusive_or_expression '^' and_expression

  147 and_expression: equality_expression
  148               | and_expression '&' equality_expression

  149 equality_expression: relational_expression
  150                    | equality_expression EQ relational_expression
  151                    | equality_expression NE relational_expression

  152 relational_expression: shift_expression
  153                      | relational_expression '<' shift_expression
  154                      | relational_expression '>' shift_expression
  155                      | relational_expression LE shift_expression
  156                      | relational_expression GE shift_expression

  157 shift_expression: additive_expression
  158                 | shift_expression LSHIFT additive_expression
  159                 | shift_expression RSHIFT additive_expression

  160 additive_expression: multiplicative_expression
  161                    | additive_expression '+' multiplicative_expression
  162                    | additive_expression '-' multiplicative_expression

  163 multiplicative_expression: unary_expression
  164                          | multiplicative_expression '*' unary_expression
  165                          | multiplicative_expression '/' unary_expression
  166                          | multiplicative_expression '%' unary_expression

  167 unary_expression: postfix_expression
  168                 | INC unary_expression
  169                 | DEC unary_expression
  170                 | '+' unary_expression
  171                 | '-' unary_expression
  172                 | '!' unary_expression
  173                 | '~' unary_expression
  174                 | KW_SIZEOF unary_expression
  175                 | KW_SIZEOF '(' type_specifier ')'

  176 postfix_expression: primary_expression
  177                   | postfix_expression '(' argument_expression_list_opt ')'
  178                   | postfix_expression '[' expression ']'
  179                   | postfix_expression '.' IDENTIFIER
  180                   | postfix_expression ARROW IDENTIFIER
  181                   | postfix_expression INC
  182                   | postfix_expression DEC

  183 argument_expression_list_opt: /* empty */
  184                             | argument_expression_list

  185 argument_expression_list: assignment_expression
  186                         | argument_expression_list ',' assignment_expression

  187 primary_expression: IDENTIFIER
  188                   | INTEGER_CONSTANT
  189                   | FLOAT_CONSTANT
  190                   | CHAR_CONSTANT
  191                   | STRING_LITERAL
  192                   | '(' expression ')'

  193 constant_expression: conditional_expression


Terminals, with rules where they appear

$end (0) 0
'!' (33) 172
'%' (37) 166
'&' (38) 148
'(' (40) 6 77 79 80 109 110 111 112 113 114 175 177 192
')' (41) 6 77 79 80 109 110 111 112 113 114 175 177 192
'*' (42) 72 73 74 75 164
'+' (43) 161 170
',' (44) 12 17 56 66 84 88 90 122 186
'-' (45) 162 171
'.' (46) 179
'/' (47) 165
':' (58) 58 59 138
';' (59) 5 54 105 107 108 113 114 115 116 117 118
'<' (60) 153
'=' (61) 19 68 126
'>' (62) 154
'?' (63) 138
'[' (91) 78 178
']' (93) 78 178
'^' (94) 146
'{' (123) 44 45 46 47 60 61 100
'|' (124) 144
'}' (125) 44 45 46 47 60 61 100
'~' (126) 173
error (256)
IDENTIFIER (258) 6 44 45 48 49 60 62 67 68 76 83 84 118 179 180 187
STRING_LITERAL (259) 191
INTEGER_CONSTANT (260) 188
FLOAT_CONSTANT (261) 189
CHAR_CONSTANT (262) 190
KW_VOID (263) 33
KW_CHAR (264) 34
KW_SHORT (265) 35
KW_INT (266) 36
KW_LONG (267) 37
KW_SIGNED (268) 38
KW_UNSIGNED (269) 39
KW_FLOAT (270) 40
KW_DOUBLE (271) 41
KW_STRUCT (272) 44 46 48
KW_UNION (273) 45 47 49
KW_ENUM (274) 60 61 62
KW_TYPEDEF (275) 26
KW_RETURN (276) 115
KW_IF (277) 109 110
KW_ELSE (278) 110
KW_WHILE (279) 112 113
KW_FOR (280) 114
KW_DO (281) 113
KW_SWITCH (282) 111
KW_CASE (283)
KW_DEFAULT (284)
KW_BREAK (285) 116
KW_CONTINUE (286) 117
KW_GOTO (287) 118
KW_CONST (288) 29
KW_VOLATILE (289) 30
KW_RESTRICT (290) 31
KW_INLINE (291) 32
KW_EXTERN (292) 27
KW_STATIC (293) 28
KW_SIZEOF (294) 174 175
ELLIPSIS (295) 88
ARROW (296) 180
INC (297) 168 181
DEC (298) 169 182
LSHIFT (299) 158
RSHIFT (300) 159
LE (301) 155
GE (302) 156
EQ (303) 150
NE (304) 151
LOGAND (305) 142
LOGOR (306) 140
ADD_ASSIGN (307) 127
SUB_ASSIGN (308) 128
MUL_ASSIGN (309) 129
DIV_ASSIGN (310) 130
MOD_ASSIGN (311) 131
AND_ASSIGN (312) 132
OR_ASSIGN (313) 133
XOR_ASSIGN (314) 134
LSHIFT_ASSIGN (315) 135
RSHIFT_ASSIGN (316) 136


Nonterminals, with rules where they appear

$accept (86)
    on left: 0
translation_unit (87)
    on left: 1 2, on right: 0 2
external_declaration (88)
    on left: 3 4 5, on right: 2
simple_function_definition (89)
    on left: 6, on right: 3
function_declspec (90)
    on left: 7 8, on right: 6
simple_param_list_opt (91)
    on left: 9 10, on right: 6
simple_param_list (92)
    on left: 11 12, on right: 10 12
declaration (93)
    on left: 13, on right: 5 105
init_declarator_list_opt (94)
    on left: 14 15, on right: 13
init_declarator_list (95)
    on left: 16 17, on right: 15 17
init_declarator (96)
    on left: 18 19, on right: 16 17
declaration_specifiers (97)
    on left: 20 21, on right: 8 13 21 54 91 92 93
declaration_specifier (98)
    on left: 22 23 24 25, on right: 20 21
storage_class_specifier (99)
    on left: 26 27 28, on right: 22
type_qualifier (100)
    on left: 29 30 31, on right: 24 73 75
function_specifier (101)
    on left: 32, on right: 25
type_specifier (102)
    on left: 33 34 35 36 37 38 39 40 41 42 43, on right: 7 23 94 175
struct_or_union_specifier (103)
    on left: 44 45 46 47 48 49, on right: 42
struct_declaration_list_opt (104)
    on left: 50 51, on right: 44 45 46 47
struct_declaration_list (105)
    on left: 52 53, on right: 51 53
struct_declaration (106)
    on left: 54, on right: 52 53
struct_declarator_list (107)
    on left: 55 56, on right: 54 56
struct_declarator (108)
    on left: 57 58 59, on right: 55 56
enum_specifier (109)
    on left: 60 61 62, on right: 43
enumerator_list_opt (110)
    on left: 63 64, on right: 60 61
enumerator_list (111)
    on left: 65 66, on right: 64 66
enumerator (112)
    on left: 67 68, on right: 65 66
declarator (113)
    on left: 69, on right: 18 19 57 59 77 91 93 94
pointer_opt (114)
    on left: 70 71, on right: 69
pointer (115)
    on left: 72 73 74 75, on right: 71 74 75
direct_declarator (116)
    on left: 76 77 78 79 80, on right: 69 78 79 80
identifier_list_opt (117)
    on left: 81 82, on right: 80
identifier_list (118)
    on left: 83 84, on right: 82 84
parameter_type_list_opt (119)
    on left: 85 86, on right: 79
parameter_type_list (120)
    on left: 87 88, on right: 86
parameter_list (121)
    on left: 89 90, on right: 87 88 90
parameter_declaration (122)
    on left: 91 92, on right: 11 12 89 90
function_definition (123)
    on left: 93 94, on right: 4
statement (124)
    on left: 95 96 97 98 99, on right: 106 109 110 111 112 113 114
compound_statement (125)
    on left: 100, on right: 6 93 94 95
block_item_list_opt (126)
    on left: 101 102, on right: 100
block_item_list (127)
    on left: 103 104, on right: 102 104
block_item (128)
    on left: 105 106, on right: 103 104
expression_statement (129)
    on left: 107 108, on right: 96
selection_statement (130)
    on left: 109 110 111, on right: 97
iteration_statement (131)
    on left: 112 113 114, on right: 98
jump_statement (132)
    on left: 115 116 117 118, on right: 99
expression_opt (133)
    on left: 119 120, on right: 114 115
expression (134)
    on left: 121 122, on right: 108 109 110 111 112 113 120 122 138
    178 192
assignment_expression_opt (135)
    on left: 123 124, on right: 78
assignment_expression (136)
    on left: 125 126 127 128 129 130 131 132 133 134 135 136,
    on right: 19 121 122 124 126 127 128 129 130 131 132 133 134 135
    136 185 186
conditional_expression (137)
    on left: 137 138, on right: 125 138 193
logical_or_expression (138)
    on left: 139 140, on right: 137 138 140
logical_and_expression (139)
    on left: 141 142, on right: 139 140 142
inclusive_or_expression (140)
    on left: 143 144, on right: 141 142 144
exclusive_or_expression (141)
    on left: 145 146, on right: 143 144 146
and_expression (142)
    on left: 147 148, on right: 145 146 148
equality_expression (143)
    on left: 149 150 151, on right: 147 148 150 151
relational_expression (144)
    on left: 152 153 154 155 156, on right: 149 150 151 153 154 155
    156
shift_expression (145)
    on left: 157 158 159, on right: 152 153 154 155 156 158 159
additive_expression (146)
    on left: 160 161 162, on right: 157 158 159 161 162
multiplicative_expression (147)
    on left: 163 164 165 166, on right: 160 161 162 164 165 166
unary_expression (148)
    on left: 167 168 169 170 171 172 173 174 175, on right: 126 127
    128 129 130 131 132 133 134 135 136 163 164 165 166 168 169 170
    171 172 173 174
postfix_expression (149)
    on left: 176 177 178 179 180 181 182, on right: 167 177 178 179
    180 181 182
argument_expression_list_opt (150)
    on left: 183 184, on right: 177
argument_expression_list (151)
    on left: 185 186, on right: 184 186
primary_expression (152)
    on left: 187 188 189 190 191 192, on right: 176
constant_expression (153)
    on left: 193, on right: 58 59 68


state 0

    0 $accept: . translation_unit $end

    $default  reduce using rule 1 (translation_unit)

    translation_unit  go to state 1


state 1

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . external_declaration

    $end         shift, and go to state 2
    KW_VOID      shift, and go to state 3
    KW_CHAR      shift, and go to state 4
    KW_SHORT     shift, and go to state 5
    KW_INT       shift, and go to state 6
    KW_LONG      shift, and go to state 7
    KW_SIGNED    shift, and go to state 8
    KW_UNSIGNED  shift, and go to state 9
    KW_FLOAT     shift, and go to state 10
    KW_DOUBLE    shift, and go to state 11
    KW_STRUCT    shift, and go to state 12
    KW_UNION     shift, and go to state 13
    KW_ENUM      shift, and go to state 14
    KW_TYPEDEF   shift, and go to state 15
    KW_CONST     shift, and go to state 16
    KW_VOLATILE  shift, and go to state 17
    KW_RESTRICT  shift, and go to state 18
    KW_INLINE    shift, and go to state 19
    KW_EXTERN    shift, and go to state 20
    KW_STATIC    shift, and go to state 21

    external_declaration        go to state 22
    simple_function_definition  go to state 23
    function_declspec           go to state 24
    declaration                 go to state 25
    declaration_specifiers      go to state 26
    declaration_specifier       go to state 27
    storage_class_specifier     go to state 28
    type_qualifier              go to state 29
    function_specifier          go to state 30
    type_specifier              go to state 31
    struct_or_union_specifier   go to state 32
    enum_specifier              go to state 33
    function_definition         go to state 34


state 2

    0 $accept: translation_unit $end .

    $default  accept


state 3

   33 type_specifier: KW_VOID .

    $default  reduce using rule 33 (type_specifier)


state 4

   34 type_specifier: KW_CHAR .

    $default  reduce using rule 34 (type_specifier)


state 5

   35 type_specifier: KW_SHORT .

    $default  reduce using rule 35 (type_specifier)


state 6

   36 type_specifier: KW_INT .

    $default  reduce using rule 36 (type_specifier)


state 7

   37 type_specifier: KW_LONG .

    $default  reduce using rule 37 (type_specifier)


state 8

   38 type_specifier: KW_SIGNED .

    $default  reduce using rule 38 (type_specifier)


state 9

   39 type_specifier: KW_UNSIGNED .

    $default  reduce using rule 39 (type_specifier)


state 10

   40 type_specifier: KW_FLOAT .

    $default  reduce using rule 40 (type_specifier)


state 11

   41 type_specifier: KW_DOUBLE .

    $default  reduce using rule 41 (type_specifier)


state 12

   44 struct_or_union_specifier: KW_STRUCT . IDENTIFIER '{' struct_declaration_list_opt '}'
   46                          | KW_STRUCT . '{' struct_declaration_list_opt '}'
   48                          | KW_STRUCT . IDENTIFIER

    IDENTIFIER  shift, and go to state 35
    '{'         shift, and go to state 36


state 13

   45 struct_or_union_specifier: KW_UNION . IDENTIFIER '{' struct_declaration_list_opt '}'
   47                          | KW_UNION . '{' struct_declaration_list_opt '}'
   49                          | KW_UNION . IDENTIFIER

    IDENTIFIER  shift, and go to state 37
    '{'         shift, and go to state 38


state 14

   60 enum_specifier: KW_ENUM . IDENTIFIER '{' enumerator_list_opt '}'
   61               | KW_ENUM . '{' enumerator_list_opt '}'
   62               | KW_ENUM . IDENTIFIER

    IDENTIFIER  shift, and go to state 39
    '{'         shift, and go to state 40


state 15

   26 storage_class_specifier: KW_TYPEDEF .

    $default  reduce using rule 26 (storage_class_specifier)


state 16

   29 type_qualifier: KW_CONST .

    $default  reduce using rule 29 (type_qualifier)


state 17

   30 type_qualifier: KW_VOLATILE .

    $default  reduce using rule 30 (type_qualifier)


state 18

   31 type_qualifier: KW_RESTRICT .

    $default  reduce using rule 31 (type_qualifier)


state 19

   32 function_specifier: KW_INLINE .

    $default  reduce using rule 32 (function_specifier)


state 20

   27 storage_class_specifier: KW_EXTERN .

    $default  reduce using rule 27 (storage_class_specifier)


state 21

   28 storage_class_specifier: KW_STATIC .

    $default  reduce using rule 28 (storage_class_specifier)


state 22

    2 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 2 (translation_unit)


state 23

    3 external_declaration: simple_function_definition .

    $default  reduce using rule 3 (external_declaration)


state 24

    6 simple_function_definition: function_declspec . IDENTIFIER '(' simple_param_list_opt ')' compound_statement

    IDENTIFIER  shift, and go to state 41


state 25

    5 external_declaration: declaration . ';'

    ';'  shift, and go to state 42


state 26

    8 function_declspec: declaration_specifiers .
   13 declaration: declaration_specifiers . init_declarator_list_opt
   21 declaration_specifiers: declaration_specifiers . declaration_specifier
   93 function_definition: declaration_specifiers . declarator compound_statement

    KW_VOID      shift, and go to state 3
    KW_CHAR      shift, and go to state 4
    KW_SHORT     shift, and go to state 5
    KW_INT       shift, and go to state 6
    KW_LONG      shift, and go to state 7
    KW_SIGNED    shift, and go to state 8
    KW_UNSIGNED  shift, and go to state 9
    KW_FLOAT     shift, and go to state 10
    KW_DOUBLE    shift, and go to state 11
    KW_STRUCT    shift, and go to state 12
    KW_UNION     shift, and go to state 13
    KW_ENUM      shift, and go to state 14
    KW_TYPEDEF   shift, and go to state 15
    KW_CONST     shift, and go to state 16
    KW_VOLATILE  shift, and go to state 17
    KW_RESTRICT  shift, and go to state 18
    KW_INLINE    shift, and go to state 19
    KW_EXTERN    shift, and go to state 20
    KW_STATIC    shift, and go to state 21
    '*'          shift, and go to state 43

    IDENTIFIER  reduce using rule 8 (function_declspec)
    IDENTIFIER  [reduce using rule 70 (pointer_opt)]
    '('         reduce using rule 70 (pointer_opt)
    ';'         reduce using rule 14 (init_declarator_list_opt)
    $default    reduce using rule 8 (function_declspec)

    init_declarator_list_opt   go to state 44
    init_declarator_list       go to state 45
    init_declarator            go to state 46
    declaration_specifier      go to state 47
    storage_class_specifier    go to state 28
    type_qualifier             go to state 29
    function_specifier         go to state 30
    type_specifier             go to state 48
    struct_or_union_specifier  go to state 32
    enum_specifier             go to state 33
    declarator                 go to state 49
    pointer_opt                go to state 50
    pointer                    go to state 51


state 27

   20 declaration_specifiers: declaration_specifier .

    $default  reduce using rule 20 (declaration_specifiers)


state 28

   22 declaration_specifier: storage_class_specifier .

    $default  reduce using rule 22 (declaration_specifier)


state 29

   24 declaration_specifier: type_qualifier .

    $default  reduce using rule 24 (declaration_specifier)


state 30

   25 declaration_specifier: function_specifier .

    $default  reduce using rule 25 (declaration_specifier)


state 31

    7 function_declspec: type_specifier .
   23 declaration_specifier: type_specifier .
   94 function_definition: type_specifier . declarator compound_statement

    '*'  shift, and go to state 43

    IDENTIFIER  reduce using rule 7 (function_declspec)
    IDENTIFIER  [reduce using rule 23 (declaration_specifier)]
    IDENTIFIER  [reduce using rule 70 (pointer_opt)]
    '*'         [reduce using rule 23 (declaration_specifier)]
    '('         reduce using rule 23 (declaration_specifier)
    '('         [reduce using rule 70 (pointer_opt)]
    $default    reduce using rule 23 (declaration_specifier)

    declarator   go to state 52
    pointer_opt  go to state 50
    pointer      go to state 51


state 32

   42 type_specifier: struct_or_union_specifier .

    $default  reduce using rule 42 (type_specifier)


state 33

   43 type_specifier: enum_specifier .

    $default  reduce using rule 43 (type_specifier)


state 34

    4 external_declaration: function_definition .

    $default  reduce using rule 4 (external_declaration)


state 35

   44 struct_or_union_specifier: KW_STRUCT IDENTIFIER . '{' struct_declaration_list_opt '}'
   48                          | KW_STRUCT IDENTIFIER .

    '{'  shift, and go to state 53

    $default  reduce using rule 48 (struct_or_union_specifier)


state 36

   46 struct_or_union_specifier: KW_STRUCT '{' . struct_declaration_list_opt '}'

    KW_VOID      shift, and go to state 3
    KW_CHAR      shift, and go to state 4
    KW_SHORT     shift, and go to state 5
    KW_INT       shift, and go to state 6
    KW_LONG      shift, and go to state 7
    KW_SIGNED    shift, and go to state 8
    KW_UNSIGNED  shift, and go to state 9
    KW_FLOAT     shift, and go to state 10
    KW_DOUBLE    shift, and go to state 11
    KW_STRUCT    shift, and go to state 12
    KW_UNION     shift, and go to state 13
    KW_ENUM      shift, and go to state 14
    KW_TYPEDEF   shift, and go to state 15
    KW_CONST     shift, and go to state 16
    KW_VOLATILE  shift, and go to state 17
    KW_RESTRICT  shift, and go to state 18
    KW_INLINE    shift, and go to state 19
    KW_EXTERN    shift, and go to state 20
    KW_STATIC    shift, and go to state 21

    $default  reduce using rule 50 (struct_declaration_list_opt)

    declaration_specifiers       go to state 54
    declaration_specifier        go to state 27
    storage_class_specifier      go to state 28
    type_qualifier               go to state 29
    function_specifier           go to state 30
    type_specifier               go to state 48
    struct_or_union_specifier    go to state 32
    struct_declaration_list_opt  go to state 55
    struct_declaration_list      go to state 56
    struct_declaration           go to state 57
    enum_specifier               go to state 33


state 37

   45 struct_or_union_specifier: KW_UNION IDENTIFIER . '{' struct_declaration_list_opt '}'
   49                          | KW_UNION IDENTIFIER .

    '{'  shift, and go to state 58

    $default  reduce using rule 49 (struct_or_union_specifier)


state 38

   47 struct_or_union_specifier: KW_UNION '{' . struct_declaration_list_opt '}'

    KW_VOID      shift, and go to state 3
    KW_CHAR      shift, and go to state 4
    KW_SHORT     shift, and go to state 5
    KW_INT       shift, and go to state 6
    KW_LONG      shift, and go to state 7
    KW_SIGNED    shift, and go to state 8
    KW_UNSIGNED  shift, and go to state 9
    KW_FLOAT     shift, and go to state 10
    KW_DOUBLE    shift, and go to state 11
    KW_STRUCT    shift, and go to state 12
    KW_UNION     shift, and go to state 13
    KW_ENUM      shift, and go to state 14
    KW_TYPEDEF   shift, and go to state 15
    KW_CONST     shift, and go to state 16
    KW_VOLATILE  shift, and go to state 17
    KW_RESTRICT  shift, and go to state 18
    KW_INLINE    shift, and go to state 19
    KW_EXTERN    shift, and go to state 20
    KW_STATIC    shift, and go to state 21

    $default  reduce using rule 50 (struct_declaration_list_opt)

    declaration_specifiers       go to state 54
    declaration_specifier        go to state 27
    storage_class_specifier      go to state 28
    type_qualifier               go to state 29
    function_specifier           go to state 30
    type_specifier               go to state 48
    struct_or_union_specifier    go to state 32
    struct_declaration_list_opt  go to state 59
    struct_declaration_list      go to state 56
    struct_declaration           go to state 57
    enum_specifier               go to state 33


state 39

   60 enum_specifier: KW_ENUM IDENTIFIER . '{' enumerator_list_opt '}'
   62               | KW_ENUM IDENTIFIER .

    '{'  shift, and go to state 60

    $default  reduce using rule 62 (enum_specifier)


state 40

   61 enum_specifier: KW_ENUM '{' . enumerator_list_opt '}'

    IDENTIFIER  shift, and go to state 61

    $default  reduce using rule 63 (enumerator_list_opt)

    enumerator_list_opt  go to state 62
    enumerator_list      go to state 63
    enumerator           go to state 64


state 41

    6 simple_function_definition: function_declspec IDENTIFIER . '(' simple_param_list_opt ')' compound_statement

    '('  shift, and go to state 65


state 42

    5 external_declaration: declaration ';' .

    $default  reduce using rule 5 (external_declaration)


state 43

   72 pointer: '*' .
   73        | '*' . type_qualifier
   74        | '*' . pointer
   75        | '*' . type_qualifier pointer

    KW_CONST     shift, and go to state 16
    KW_VOLATILE  shift, and go to state 17
    KW_RESTRICT  shift, and go to state 18
    '*'          shift, and go to state 43

    $default  reduce using rule 72 (pointer)

    type_qualifier  go to state 66
    pointer         go to state 67


state 44

   13 declaration: declaration_specifiers init_declarator_list_opt .

    $default  reduce using rule 13 (declaration)


state 45

   15 init_declarator_list_opt: init_declarator_list .
   17 init_declarator_list: init_declarator_list . ',' init_declarator

    ','  shift, and go to state 68

    $default  reduce using rule 15 (init_declarator_list_opt)


state 46

   16 init_declarator_list: init_declarator .

    $default  reduce using rule 16 (init_declarator_list)


state 47

   21 declaration_specifiers: declaration_specifiers declaration_specifier .

    $default  reduce using rule 21 (declaration_specifiers)


state 48

   23 declaration_specifier: type_specifier .

    $default  reduce using rule 23 (declaration_specifier)


state 49

   18 init_declarator: declarator .
   19                | declarator . '=' assignment_expression
   93 function_definition: declaration_specifiers declarator . compound_statement

    '='  shift, and go to state 69
    '{'  shift, and go to state 70

    $default  reduce using rule 18 (init_declarator)

    compound_statement  go to state 71


state 50

   69 declarator: pointer_opt . direct_declarator

    IDENTIFIER  shift, and go to state 72
    '('         shift, and go to state 73

    direct_declarator  go to state 74


state 51

   71 pointer_opt: pointer .

    $default  reduce using rule 71 (pointer_opt)


state 52

   94 function_definition: type_specifier declarator . compound_statement

    '{'  shift, and go to state 70

    compound_statement  go to state 75


state 53

   44 struct_or_union_specifier: KW_STRUCT IDENTIFIER '{' . struct_declaration_list_opt '}'

    KW_VOID      shift, and go to state 3
    KW_CHAR      shift, and go to state 4
    KW_SHORT     shift, and go to state 5
    KW_INT       shift, and go to state 6
    KW_LONG      shift, and go to state 7
    KW_SIGNED    shift, and go to state 8
    KW_UNSIGNED  shift, and go to state 9
    KW_FLOAT     shift, and go to state 10
    KW_DOUBLE    shift, and go to state 11
    KW_STRUCT    shift, and go to state 12
    KW_UNION     shift, and go to state 13
    KW_ENUM      shift, and go to state 14
    KW_TYPEDEF   shift, and go to state 15
    KW_CONST     shift, and go to state 16
    KW_VOLATILE  shift, and go to state 17
    KW_RESTRICT  shift, and go to state 18
    KW_INLINE    shift, and go to state 19
    KW_EXTERN    shift, and go to state 20
    KW_STATIC    shift, and go to state 21

    $default  reduce using rule 50 (struct_declaration_list_opt)

    declaration_specifiers       go to state 54
    declaration_specifier        go to state 27
    storage_class_specifier      go to state 28
    type_qualifier               go to state 29
    function_specifier           go to state 30
    type_specifier               go to state 48
    struct_or_union_specifier    go to state 32
    struct_declaration_list_opt  go to state 76
    struct_declaration_list      go to state 56
    struct_declaration           go to state 57
    enum_specifier               go to state 33


state 54

   21 declaration_specifiers: declaration_specifiers . declaration_specifier
   54 struct_declaration: declaration_specifiers . struct_declarator_list ';'

    KW_VOID      shift, and go to state 3
    KW_CHAR      shift, and go to state 4
    KW_SHORT     shift, and go to state 5
    KW_INT       shift, and go to state 6
    KW_LONG      shift, and go to state 7
    KW_SIGNED    shift, and go to state 8
    KW_UNSIGNED  shift, and go to state 9
    KW_FLOAT     shift, and go to state 10
    KW_DOUBLE    shift, and go to state 11
    KW_STRUCT    shift, and go to state 12
    KW_UNION     shift, and go to state 13
    KW_ENUM      shift, and go to state 14
    KW_TYPEDEF   shift, and go to state 15
    KW_CONST     shift, and go to state 16
    KW_VOLATILE  shift, and go to state 17
    KW_RESTRICT  shift, and go to state 18
    KW_INLINE    shift, and go to state 19
    KW_EXTERN    shift, and go to state 20
    KW_STATIC    shift, and go to state 21
    ':'          shift, and go to state 77
    '*'          shift, and go to state 43

    $default  reduce using rule 70 (pointer_opt)

    declaration_specifier      go to state 47
    storage_class_specifier    go to state 28
    type_qualifier             go to state 29
    function_specifier         go to state 30
    type_specifier             go to state 48
    struct_or_union_specifier  go to state 32
    struct_declarator_list     go to state 78
    struct_declarator          go to state 79
    enum_specifier             go to state 33
    declarator                 go to state 80
    pointer_opt                go to state 50
    pointer                    go to state 51


state 55

   46 struct_or_union_specifier: KW_STRUCT '{' struct_declaration_list_opt . '}'

    '}'  shift, and go to state 81


state 56

   51 struct_declaration_list_opt: struct_declaration_list .
   53 struct_declaration_list: struct_declaration_list . struct_declaration

    KW_VOID      shift, and go to state 3
    KW_CHAR      shift, and go to state 4
    KW_SHORT     shift, and go to state 5
    KW_INT       shift, and go to state 6
    KW_LONG      shift, and go to state 7
    KW_SIGNED    shift, and go to state 8
    KW_UNSIGNED  shift, and go to state 9
    KW_FLOAT     shift, and go to state 10
    KW_DOUBLE    shift, and go to state 11
    KW_STRUCT    shift, and go to state 12
    KW_UNION     shift, and go to state 13
    KW_ENUM      shift, and go to state 14
    KW_TYPEDEF   shift, and go to state 15
    KW_CONST     shift, and go to state 16
    KW_VOLATILE  shift, and go to state 17
    KW_RESTRICT  shift, and go to state 18
    KW_INLINE    shift, and go to state 19
    KW_EXTERN    shift, and go to state 20
    KW_STATIC    shift, and go to state 21

    $default  reduce using rule 51 (struct_declaration_list_opt)

    declaration_specifiers     go to state 54
    declaration_specifier      go to state 27
    storage_class_specifier    go to state 28
    type_qualifier             go to state 29
    function_specifier         go to state 30
    type_specifier             go to state 48
    struct_or_union_specifier  go to state 32
    struct_declaration         go to state 82
    enum_specifier             go to state 33


state 57

   52 struct_declaration_list: struct_declaration .

    $default  reduce using rule 52 (struct_declaration_list)


state 58

   45 struct_or_union_specifier: KW_UNION IDENTIFIER '{' . struct_declaration_list_opt '}'

    KW_VOID      shift, and go to state 3
    KW_CHAR      shift, and go to state 4
    KW_SHORT     shift, and go to state 5
    KW_INT       shift, and go to state 6
    KW_LONG      shift, and go to state 7
    KW_SIGNED    shift, and go to state 8
    KW_UNSIGNED  shift, and go to state 9
    KW_FLOAT     shift, and go to state 10
    KW_DOUBLE    shift, and go to state 11
    KW_STRUCT    shift, and go to state 12
    KW_UNION     shift, and go to state 13
    KW_ENUM      shift, and go to state 14
    KW_TYPEDEF   shift, and go to state 15
    KW_CONST     shift, and go to state 16
    KW_VOLATILE  shift, and go to state 17
    KW_RESTRICT  shift, and go to state 18
    KW_INLINE    shift, and go to state 19
    KW_EXTERN    shift, and go to state 20
    KW_STATIC    shift, and go to state 21

    $default  reduce using rule 50 (struct_declaration_list_opt)

    declaration_specifiers       go to state 54
    declaration_specifier        go to state 27
    storage_class_specifier      go to state 28
    type_qualifier               go to state 29
    function_specifier           go to state 30
    type_specifier               go to state 48
    struct_or_union_specifier    go to state 32
    struct_declaration_list_opt  go to state 83
    struct_declaration_list      go to state 56
    struct_declaration           go to state 57
    enum_specifier               go to state 33


state 59

   47 struct_or_union_specifier: KW_UNION '{' struct_declaration_list_opt . '}'

    '}'  shift, and go to state 84


state 60

   60 enum_specifier: KW_ENUM IDENTIFIER '{' . enumerator_list_opt '}'

    IDENTIFIER  shift, and go to state 61

    $default  reduce using rule 63 (enumerator_list_opt)

    enumerator_list_opt  go to state 85
    enumerator_list      go to state 63
    enumerator           go to state 64


state 61

   67 enumerator: IDENTIFIER .
   68           | IDENTIFIER . '=' constant_expression

    '='  shift, and go to state 86

    $default  reduce using rule 67 (enumerator)


state 62

   61 enum_specifier: KW_ENUM '{' enumerator_list_opt . '}'

    '}'  shift, and go to state 87


state 63

   64 enumerator_list_opt: enumerator_list .
   66 enumerator_list: enumerator_list . ',' enumerator

    ','  shift, and go to state 88

    $default  reduce using rule 64 (enumerator_list_opt)


state 64

   65 enumerator_list: enumerator .

    $default  reduce using rule 65 (enumerator_list)


state 65

    6 simple_function_definition: function_declspec IDENTIFIER '(' . simple_param_list_opt ')' compound_statement

    KW_VOID      shift, and go to state 3
    KW_CHAR      shift, and go to state 4
    KW_SHORT     shift, and go to state 5
    KW_INT       shift, and go to state 6
    KW_LONG      shift, and go to state 7
    KW_SIGNED    shift, and go to state 8
    KW_UNSIGNED  shift, and go to state 9
    KW_FLOAT     shift, and go to state 10
    KW_DOUBLE    shift, and go to state 11
    KW_STRUCT    shift, and go to state 12
    KW_UNION     shift, and go to state 13
    KW_ENUM      shift, and go to state 14
    KW_TYPEDEF   shift, and go to state 15
    KW_CONST     shift, and go to state 16
    KW_VOLATILE  shift, and go to state 17
    KW_RESTRICT  shift, and go to state 18
    KW_INLINE    shift, and go to state 19
    KW_EXTERN    shift, and go to state 20
    KW_STATIC    shift, and go to state 21

    $default  reduce using rule 9 (simple_param_list_opt)

    simple_param_list_opt      go to state 89
    simple_param_list          go to state 90
    declaration_specifiers     go to state 91
    declaration_specifier      go to state 27
    storage_class_specifier    go to state 28
    type_qualifier             go to state 29
    function_specifier         go to state 30
    type_specifier             go to state 48
    struct_or_union_specifier  go to state 32
    enum_specifier             go to state 33
    parameter_declaration      go to state 92


state 66

   73 pointer: '*' type_qualifier .
   75        | '*' type_qualifier . pointer

    '*'  shift, and go to state 43

    $default  reduce using rule 73 (pointer)

    pointer  go to state 93


state 67

   74 pointer: '*' pointer .

    $default  reduce using rule 74 (pointer)


state 68

   17 init_declarator_list: init_declarator_list ',' . init_declarator

    '*'  shift, and go to state 43

    $default  reduce using rule 70 (pointer_opt)

    init_declarator  go to state 94
    declarator       go to state 95
    pointer_opt      go to state 50
    pointer          go to state 51


state 69

   19 init_declarator: declarator '=' . assignment_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    assignment_expression      go to state 109
    conditional_expression     go to state 110
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 121
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 70

  100 compound_statement: '{' . block_item_list_opt '}'

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_VOID           shift, and go to state 3
    KW_CHAR           shift, and go to state 4
    KW_SHORT          shift, and go to state 5
    KW_INT            shift, and go to state 6
    KW_LONG           shift, and go to state 7
    KW_SIGNED         shift, and go to state 8
    KW_UNSIGNED       shift, and go to state 9
    KW_FLOAT          shift, and go to state 10
    KW_DOUBLE         shift, and go to state 11
    KW_STRUCT         shift, and go to state 12
    KW_UNION          shift, and go to state 13
    KW_ENUM           shift, and go to state 14
    KW_TYPEDEF        shift, and go to state 15
    KW_RETURN         shift, and go to state 124
    KW_IF             shift, and go to state 125
    KW_WHILE          shift, and go to state 126
    KW_FOR            shift, and go to state 127
    KW_DO             shift, and go to state 128
    KW_SWITCH         shift, and go to state 129
    KW_BREAK          shift, and go to state 130
    KW_CONTINUE       shift, and go to state 131
    KW_GOTO           shift, and go to state 132
    KW_CONST          shift, and go to state 16
    KW_VOLATILE       shift, and go to state 17
    KW_RESTRICT       shift, and go to state 18
    KW_INLINE         shift, and go to state 19
    KW_EXTERN         shift, and go to state 20
    KW_STATIC         shift, and go to state 21
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108
    ';'               shift, and go to state 133
    '{'               shift, and go to state 70

    $default  reduce using rule 101 (block_item_list_opt)

    declaration                go to state 134
    declaration_specifiers     go to state 135
    declaration_specifier      go to state 27
    storage_class_specifier    go to state 28
    type_qualifier             go to state 29
    function_specifier         go to state 30
    type_specifier             go to state 48
    struct_or_union_specifier  go to state 32
    enum_specifier             go to state 33
    statement                  go to state 136
    compound_statement         go to state 137
    block_item_list_opt        go to state 138
    block_item_list            go to state 139
    block_item                 go to state 140
    expression_statement       go to state 141
    selection_statement        go to state 142
    iteration_statement        go to state 143
    jump_statement             go to state 144
    expression                 go to state 145
    assignment_expression      go to state 146
    conditional_expression     go to state 110
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 121
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 71

   93 function_definition: declaration_specifiers declarator compound_statement .

    $default  reduce using rule 93 (function_definition)


state 72

   76 direct_declarator: IDENTIFIER .

    $default  reduce using rule 76 (direct_declarator)


state 73

   77 direct_declarator: '(' . declarator ')'

    '*'  shift, and go to state 43

    $default  reduce using rule 70 (pointer_opt)

    declarator   go to state 147
    pointer_opt  go to state 50
    pointer      go to state 51


state 74

   69 declarator: pointer_opt direct_declarator .
   78 direct_declarator: direct_declarator . '[' assignment_expression_opt ']'
   79                  | direct_declarator . '(' parameter_type_list_opt ')'
   80                  | direct_declarator . '(' identifier_list_opt ')'

    '('  shift, and go to state 148
    '['  shift, and go to state 149

    $default  reduce using rule 69 (declarator)


state 75

   94 function_definition: type_specifier declarator compound_statement .

    $default  reduce using rule 94 (function_definition)


state 76

   44 struct_or_union_specifier: KW_STRUCT IDENTIFIER '{' struct_declaration_list_opt . '}'

    '}'  shift, and go to state 150


state 77

   58 struct_declarator: ':' . constant_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    conditional_expression     go to state 151
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 152
    postfix_expression         go to state 122
    primary_expression         go to state 123
    constant_expression        go to state 153


state 78

   54 struct_declaration: declaration_specifiers struct_declarator_list . ';'
   56 struct_declarator_list: struct_declarator_list . ',' struct_declarator

    ';'  shift, and go to state 154
    ','  shift, and go to state 155


state 79

   55 struct_declarator_list: struct_declarator .

    $default  reduce using rule 55 (struct_declarator_list)


state 80

   57 struct_declarator: declarator .
   59                  | declarator . ':' constant_expression

    ':'  shift, and go to state 156

    $default  reduce using rule 57 (struct_declarator)


state 81

   46 struct_or_union_specifier: KW_STRUCT '{' struct_declaration_list_opt '}' .

    $default  reduce using rule 46 (struct_or_union_specifier)


state 82

   53 struct_declaration_list: struct_declaration_list struct_declaration .

    $default  reduce using rule 53 (struct_declaration_list)


state 83

   45 struct_or_union_specifier: KW_UNION IDENTIFIER '{' struct_declaration_list_opt . '}'

    '}'  shift, and go to state 157


state 84

   47 struct_or_union_specifier: KW_UNION '{' struct_declaration_list_opt '}' .

    $default  reduce using rule 47 (struct_or_union_specifier)


state 85

   60 enum_specifier: KW_ENUM IDENTIFIER '{' enumerator_list_opt . '}'

    '}'  shift, and go to state 158


state 86

   68 enumerator: IDENTIFIER '=' . constant_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    conditional_expression     go to state 151
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 152
    postfix_expression         go to state 122
    primary_expression         go to state 123
    constant_expression        go to state 159


state 87

   61 enum_specifier: KW_ENUM '{' enumerator_list_opt '}' .

    $default  reduce using rule 61 (enum_specifier)


state 88

   66 enumerator_list: enumerator_list ',' . enumerator

    IDENTIFIER  shift, and go to state 61

    enumerator  go to state 160


state 89

    6 simple_function_definition: function_declspec IDENTIFIER '(' simple_param_list_opt . ')' compound_statement

    ')'  shift, and go to state 161


state 90

   10 simple_param_list_opt: simple_param_list .
   12 simple_param_list: simple_param_list . ',' parameter_declaration

    ','  shift, and go to state 162

    $default  reduce using rule 10 (simple_param_list_opt)


state 91

   21 declaration_specifiers: declaration_specifiers . declaration_specifier
   91 parameter_declaration: declaration_specifiers . declarator
   92                      | declaration_specifiers .

    KW_VOID      shift, and go to state 3
    KW_CHAR      shift, and go to state 4
    KW_SHORT     shift, and go to state 5
    KW_INT       shift, and go to state 6
    KW_LONG      shift, and go to state 7
    KW_SIGNED    shift, and go to state 8
    KW_UNSIGNED  shift, and go to state 9
    KW_FLOAT     shift, and go to state 10
    KW_DOUBLE    shift, and go to state 11
    KW_STRUCT    shift, and go to state 12
    KW_UNION     shift, and go to state 13
    KW_ENUM      shift, and go to state 14
    KW_TYPEDEF   shift, and go to state 15
    KW_CONST     shift, and go to state 16
    KW_VOLATILE  shift, and go to state 17
    KW_RESTRICT  shift, and go to state 18
    KW_INLINE    shift, and go to state 19
    KW_EXTERN    shift, and go to state 20
    KW_STATIC    shift, and go to state 21
    '*'          shift, and go to state 43

    ')'       reduce using rule 92 (parameter_declaration)
    ','       reduce using rule 92 (parameter_declaration)
    $default  reduce using rule 70 (pointer_opt)

    declaration_specifier      go to state 47
    storage_class_specifier    go to state 28
    type_qualifier             go to state 29
    function_specifier         go to state 30
    type_specifier             go to state 48
    struct_or_union_specifier  go to state 32
    enum_specifier             go to state 33
    declarator                 go to state 163
    pointer_opt                go to state 50
    pointer                    go to state 51


state 92

   11 simple_param_list: parameter_declaration .

    $default  reduce using rule 11 (simple_param_list)


state 93

   75 pointer: '*' type_qualifier pointer .

    $default  reduce using rule 75 (pointer)


state 94

   17 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 17 (init_declarator_list)


state 95

   18 init_declarator: declarator .
   19                | declarator . '=' assignment_expression

    '='  shift, and go to state 69

    $default  reduce using rule 18 (init_declarator)


state 96

  187 primary_expression: IDENTIFIER .

    $default  reduce using rule 187 (primary_expression)


state 97

  191 primary_expression: STRING_LITERAL .

    $default  reduce using rule 191 (primary_expression)


state 98

  188 primary_expression: INTEGER_CONSTANT .

    $default  reduce using rule 188 (primary_expression)


state 99

  189 primary_expression: FLOAT_CONSTANT .

    $default  reduce using rule 189 (primary_expression)


state 100

  190 primary_expression: CHAR_CONSTANT .

    $default  reduce using rule 190 (primary_expression)


state 101

  174 unary_expression: KW_SIZEOF . unary_expression
  175                 | KW_SIZEOF . '(' type_specifier ')'

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 164

    unary_expression    go to state 165
    postfix_expression  go to state 122
    primary_expression  go to state 123


state 102

  168 unary_expression: INC . unary_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    unary_expression    go to state 166
    postfix_expression  go to state 122
    primary_expression  go to state 123


state 103

  169 unary_expression: DEC . unary_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    unary_expression    go to state 167
    postfix_expression  go to state 122
    primary_expression  go to state 123


state 104

  170 unary_expression: '+' . unary_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    unary_expression    go to state 168
    postfix_expression  go to state 122
    primary_expression  go to state 123


state 105

  171 unary_expression: '-' . unary_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    unary_expression    go to state 169
    postfix_expression  go to state 122
    primary_expression  go to state 123


state 106

  172 unary_expression: '!' . unary_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    unary_expression    go to state 170
    postfix_expression  go to state 122
    primary_expression  go to state 123


state 107

  173 unary_expression: '~' . unary_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    unary_expression    go to state 171
    postfix_expression  go to state 122
    primary_expression  go to state 123


state 108

  192 primary_expression: '(' . expression ')'

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    expression                 go to state 172
    assignment_expression      go to state 146
    conditional_expression     go to state 110
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 121
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 109

   19 init_declarator: declarator '=' assignment_expression .

    $default  reduce using rule 19 (init_declarator)


state 110

  125 assignment_expression: conditional_expression .

    $default  reduce using rule 125 (assignment_expression)


state 111

  137 conditional_expression: logical_or_expression .
  138                       | logical_or_expression . '?' expression ':' conditional_expression
  140 logical_or_expression: logical_or_expression . LOGOR logical_and_expression

    LOGOR  shift, and go to state 173
    '?'    shift, and go to state 174

    $default  reduce using rule 137 (conditional_expression)


state 112

  139 logical_or_expression: logical_and_expression .
  142 logical_and_expression: logical_and_expression . LOGAND inclusive_or_expression

    LOGAND  shift, and go to state 175

    $default  reduce using rule 139 (logical_or_expression)


state 113

  141 logical_and_expression: inclusive_or_expression .
  144 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression

    '|'  shift, and go to state 176

    $default  reduce using rule 141 (logical_and_expression)


state 114

  143 inclusive_or_expression: exclusive_or_expression .
  146 exclusive_or_expression: exclusive_or_expression . '^' and_expression

    '^'  shift, and go to state 177

    $default  reduce using rule 143 (inclusive_or_expression)


state 115

  145 exclusive_or_expression: and_expression .
  148 and_expression: and_expression . '&' equality_expression

    '&'  shift, and go to state 178

    $default  reduce using rule 145 (exclusive_or_expression)


state 116

  147 and_expression: equality_expression .
  150 equality_expression: equality_expression . EQ relational_expression
  151                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 179
    NE  shift, and go to state 180

    $default  reduce using rule 147 (and_expression)


state 117

  149 equality_expression: relational_expression .
  153 relational_expression: relational_expression . '<' shift_expression
  154                      | relational_expression . '>' shift_expression
  155                      | relational_expression . LE shift_expression
  156                      | relational_expression . GE shift_expression

    LE   shift, and go to state 181
    GE   shift, and go to state 182
    '<'  shift, and go to state 183
    '>'  shift, and go to state 184

    $default  reduce using rule 149 (equality_expression)


state 118

  152 relational_expression: shift_expression .
  158 shift_expression: shift_expression . LSHIFT additive_expression
  159                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 185
    RSHIFT  shift, and go to state 186

    $default  reduce using rule 152 (relational_expression)


state 119

  157 shift_expression: additive_expression .
  161 additive_expression: additive_expression . '+' multiplicative_expression
  162                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 187
    '-'  shift, and go to state 188

    $default  reduce using rule 157 (shift_expression)


state 120

  160 additive_expression: multiplicative_expression .
  164 multiplicative_expression: multiplicative_expression . '*' unary_expression
  165                          | multiplicative_expression . '/' unary_expression
  166                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 189
    '/'  shift, and go to state 190
    '%'  shift, and go to state 191

    $default  reduce using rule 160 (additive_expression)


state 121

  126 assignment_expression: unary_expression . '=' assignment_expression
  127                      | unary_expression . ADD_ASSIGN assignment_expression
  128                      | unary_expression . SUB_ASSIGN assignment_expression
  129                      | unary_expression . MUL_ASSIGN assignment_expression
  130                      | unary_expression . DIV_ASSIGN assignment_expression
  131                      | unary_expression . MOD_ASSIGN assignment_expression
  132                      | unary_expression . AND_ASSIGN assignment_expression
  133                      | unary_expression . OR_ASSIGN assignment_expression
  134                      | unary_expression . XOR_ASSIGN assignment_expression
  135                      | unary_expression . LSHIFT_ASSIGN assignment_expression
  136                      | unary_expression . RSHIFT_ASSIGN assignment_expression
  163 multiplicative_expression: unary_expression .

    ADD_ASSIGN     shift, and go to state 192
    SUB_ASSIGN     shift, and go to state 193
    MUL_ASSIGN     shift, and go to state 194
    DIV_ASSIGN     shift, and go to state 195
    MOD_ASSIGN     shift, and go to state 196
    AND_ASSIGN     shift, and go to state 197
    OR_ASSIGN      shift, and go to state 198
    XOR_ASSIGN     shift, and go to state 199
    LSHIFT_ASSIGN  shift, and go to state 200
    RSHIFT_ASSIGN  shift, and go to state 201
    '='            shift, and go to state 202

    $default  reduce using rule 163 (multiplicative_expression)


state 122

  167 unary_expression: postfix_expression .
  177 postfix_expression: postfix_expression . '(' argument_expression_list_opt ')'
  178                   | postfix_expression . '[' expression ']'
  179                   | postfix_expression . '.' IDENTIFIER
  180                   | postfix_expression . ARROW IDENTIFIER
  181                   | postfix_expression . INC
  182                   | postfix_expression . DEC

    ARROW  shift, and go to state 203
    INC    shift, and go to state 204
    DEC    shift, and go to state 205
    '('    shift, and go to state 206
    '['    shift, and go to state 207
    '.'    shift, and go to state 208

    $default  reduce using rule 167 (unary_expression)


state 123

  176 postfix_expression: primary_expression .

    $default  reduce using rule 176 (postfix_expression)


state 124

  115 jump_statement: KW_RETURN . expression_opt ';'

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    $default  reduce using rule 119 (expression_opt)

    expression_opt             go to state 209
    expression                 go to state 210
    assignment_expression      go to state 146
    conditional_expression     go to state 110
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 121
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 125

  109 selection_statement: KW_IF . '(' expression ')' statement
  110                    | KW_IF . '(' expression ')' statement KW_ELSE statement

    '('  shift, and go to state 211


state 126

  112 iteration_statement: KW_WHILE . '(' expression ')' statement

    '('  shift, and go to state 212


state 127

  114 iteration_statement: KW_FOR . '(' expression_opt ';' expression_opt ';' expression_opt ')' statement

    '('  shift, and go to state 213


state 128

  113 iteration_statement: KW_DO . statement KW_WHILE '(' expression ')' ';'

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_RETURN         shift, and go to state 124
    KW_IF             shift, and go to state 125
    KW_WHILE          shift, and go to state 126
    KW_FOR            shift, and go to state 127
    KW_DO             shift, and go to state 128
    KW_SWITCH         shift, and go to state 129
    KW_BREAK          shift, and go to state 130
    KW_CONTINUE       shift, and go to state 131
    KW_GOTO           shift, and go to state 132
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108
    ';'               shift, and go to state 133
    '{'               shift, and go to state 70

    statement                  go to state 214
    compound_statement         go to state 137
    expression_statement       go to state 141
    selection_statement        go to state 142
    iteration_statement        go to state 143
    jump_statement             go to state 144
    expression                 go to state 145
    assignment_expression      go to state 146
    conditional_expression     go to state 110
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 121
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 129

  111 selection_statement: KW_SWITCH . '(' expression ')' statement

    '('  shift, and go to state 215


state 130

  116 jump_statement: KW_BREAK . ';'

    ';'  shift, and go to state 216


state 131

  117 jump_statement: KW_CONTINUE . ';'

    ';'  shift, and go to state 217


state 132

  118 jump_statement: KW_GOTO . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 218


state 133

  107 expression_statement: ';' .

    $default  reduce using rule 107 (expression_statement)


state 134

  105 block_item: declaration . ';'

    ';'  shift, and go to state 219


state 135

   13 declaration: declaration_specifiers . init_declarator_list_opt
   21 declaration_specifiers: declaration_specifiers . declaration_specifier

    KW_VOID      shift, and go to state 3
    KW_CHAR      shift, and go to state 4
    KW_SHORT     shift, and go to state 5
    KW_INT       shift, and go to state 6
    KW_LONG      shift, and go to state 7
    KW_SIGNED    shift, and go to state 8
    KW_UNSIGNED  shift, and go to state 9
    KW_FLOAT     shift, and go to state 10
    KW_DOUBLE    shift, and go to state 11
    KW_STRUCT    shift, and go to state 12
    KW_UNION     shift, and go to state 13
    KW_ENUM      shift, and go to state 14
    KW_TYPEDEF   shift, and go to state 15
    KW_CONST     shift, and go to state 16
    KW_VOLATILE  shift, and go to state 17
    KW_RESTRICT  shift, and go to state 18
    KW_INLINE    shift, and go to state 19
    KW_EXTERN    shift, and go to state 20
    KW_STATIC    shift, and go to state 21
    '*'          shift, and go to state 43

    ';'       reduce using rule 14 (init_declarator_list_opt)
    $default  reduce using rule 70 (pointer_opt)

    init_declarator_list_opt   go to state 44
    init_declarator_list       go to state 45
    init_declarator            go to state 46
    declaration_specifier      go to state 47
    storage_class_specifier    go to state 28
    type_qualifier             go to state 29
    function_specifier         go to state 30
    type_specifier             go to state 48
    struct_or_union_specifier  go to state 32
    enum_specifier             go to state 33
    declarator                 go to state 95
    pointer_opt                go to state 50
    pointer                    go to state 51


state 136

  106 block_item: statement .

    $default  reduce using rule 106 (block_item)


state 137

   95 statement: compound_statement .

    $default  reduce using rule 95 (statement)


state 138

  100 compound_statement: '{' block_item_list_opt . '}'

    '}'  shift, and go to state 220


state 139

  102 block_item_list_opt: block_item_list .
  104 block_item_list: block_item_list . block_item

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_VOID           shift, and go to state 3
    KW_CHAR           shift, and go to state 4
    KW_SHORT          shift, and go to state 5
    KW_INT            shift, and go to state 6
    KW_LONG           shift, and go to state 7
    KW_SIGNED         shift, and go to state 8
    KW_UNSIGNED       shift, and go to state 9
    KW_FLOAT          shift, and go to state 10
    KW_DOUBLE         shift, and go to state 11
    KW_STRUCT         shift, and go to state 12
    KW_UNION          shift, and go to state 13
    KW_ENUM           shift, and go to state 14
    KW_TYPEDEF        shift, and go to state 15
    KW_RETURN         shift, and go to state 124
    KW_IF             shift, and go to state 125
    KW_WHILE          shift, and go to state 126
    KW_FOR            shift, and go to state 127
    KW_DO             shift, and go to state 128
    KW_SWITCH         shift, and go to state 129
    KW_BREAK          shift, and go to state 130
    KW_CONTINUE       shift, and go to state 131
    KW_GOTO           shift, and go to state 132
    KW_CONST          shift, and go to state 16
    KW_VOLATILE       shift, and go to state 17
    KW_RESTRICT       shift, and go to state 18
    KW_INLINE         shift, and go to state 19
    KW_EXTERN         shift, and go to state 20
    KW_STATIC         shift, and go to state 21
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108
    ';'               shift, and go to state 133
    '{'               shift, and go to state 70

    $default  reduce using rule 102 (block_item_list_opt)

    declaration                go to state 134
    declaration_specifiers     go to state 135
    declaration_specifier      go to state 27
    storage_class_specifier    go to state 28
    type_qualifier             go to state 29
    function_specifier         go to state 30
    type_specifier             go to state 48
    struct_or_union_specifier  go to state 32
    enum_specifier             go to state 33
    statement                  go to state 136
    compound_statement         go to state 137
    block_item                 go to state 221
    expression_statement       go to state 141
    selection_statement        go to state 142
    iteration_statement        go to state 143
    jump_statement             go to state 144
    expression                 go to state 145
    assignment_expression      go to state 146
    conditional_expression     go to state 110
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 121
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 140

  103 block_item_list: block_item .

    $default  reduce using rule 103 (block_item_list)


state 141

   96 statement: expression_statement .

    $default  reduce using rule 96 (statement)


state 142

   97 statement: selection_statement .

    $default  reduce using rule 97 (statement)


state 143

   98 statement: iteration_statement .

    $default  reduce using rule 98 (statement)


state 144

   99 statement: jump_statement .

    $default  reduce using rule 99 (statement)


state 145

  108 expression_statement: expression . ';'
  122 expression: expression . ',' assignment_expression

    ';'  shift, and go to state 222
    ','  shift, and go to state 223


state 146

  121 expression: assignment_expression .

    $default  reduce using rule 121 (expression)


state 147

   77 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 224


state 148

   79 direct_declarator: direct_declarator '(' . parameter_type_list_opt ')'
   80                  | direct_declarator '(' . identifier_list_opt ')'

    IDENTIFIER   shift, and go to state 225
    KW_VOID      shift, and go to state 3
    KW_CHAR      shift, and go to state 4
    KW_SHORT     shift, and go to state 5
    KW_INT       shift, and go to state 6
    KW_LONG      shift, and go to state 7
    KW_SIGNED    shift, and go to state 8
    KW_UNSIGNED  shift, and go to state 9
    KW_FLOAT     shift, and go to state 10
    KW_DOUBLE    shift, and go to state 11
    KW_STRUCT    shift, and go to state 12
    KW_UNION     shift, and go to state 13
    KW_ENUM      shift, and go to state 14
    KW_TYPEDEF   shift, and go to state 15
    KW_CONST     shift, and go to state 16
    KW_VOLATILE  shift, and go to state 17
    KW_RESTRICT  shift, and go to state 18
    KW_INLINE    shift, and go to state 19
    KW_EXTERN    shift, and go to state 20
    KW_STATIC    shift, and go to state 21

    ')'       reduce using rule 81 (identifier_list_opt)
    ')'       [reduce using rule 85 (parameter_type_list_opt)]
    $default  reduce using rule 81 (identifier_list_opt)

    declaration_specifiers     go to state 91
    declaration_specifier      go to state 27
    storage_class_specifier    go to state 28
    type_qualifier             go to state 29
    function_specifier         go to state 30
    type_specifier             go to state 48
    struct_or_union_specifier  go to state 32
    enum_specifier             go to state 33
    identifier_list_opt        go to state 226
    identifier_list            go to state 227
    parameter_type_list_opt    go to state 228
    parameter_type_list        go to state 229
    parameter_list             go to state 230
    parameter_declaration      go to state 231


state 149

   78 direct_declarator: direct_declarator '[' . assignment_expression_opt ']'

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    $default  reduce using rule 123 (assignment_expression_opt)

    assignment_expression_opt  go to state 232
    assignment_expression      go to state 233
    conditional_expression     go to state 110
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 121
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 150

   44 struct_or_union_specifier: KW_STRUCT IDENTIFIER '{' struct_declaration_list_opt '}' .

    $default  reduce using rule 44 (struct_or_union_specifier)


state 151

  193 constant_expression: conditional_expression .

    $default  reduce using rule 193 (constant_expression)


state 152

  163 multiplicative_expression: unary_expression .

    $default  reduce using rule 163 (multiplicative_expression)


state 153

   58 struct_declarator: ':' constant_expression .

    $default  reduce using rule 58 (struct_declarator)


state 154

   54 struct_declaration: declaration_specifiers struct_declarator_list ';' .

    $default  reduce using rule 54 (struct_declaration)


state 155

   56 struct_declarator_list: struct_declarator_list ',' . struct_declarator

    ':'  shift, and go to state 77
    '*'  shift, and go to state 43

    $default  reduce using rule 70 (pointer_opt)

    struct_declarator  go to state 234
    declarator         go to state 80
    pointer_opt        go to state 50
    pointer            go to state 51


state 156

   59 struct_declarator: declarator ':' . constant_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    conditional_expression     go to state 151
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 152
    postfix_expression         go to state 122
    primary_expression         go to state 123
    constant_expression        go to state 235


state 157

   45 struct_or_union_specifier: KW_UNION IDENTIFIER '{' struct_declaration_list_opt '}' .

    $default  reduce using rule 45 (struct_or_union_specifier)


state 158

   60 enum_specifier: KW_ENUM IDENTIFIER '{' enumerator_list_opt '}' .

    $default  reduce using rule 60 (enum_specifier)


state 159

   68 enumerator: IDENTIFIER '=' constant_expression .

    $default  reduce using rule 68 (enumerator)


state 160

   66 enumerator_list: enumerator_list ',' enumerator .

    $default  reduce using rule 66 (enumerator_list)


state 161

    6 simple_function_definition: function_declspec IDENTIFIER '(' simple_param_list_opt ')' . compound_statement

    '{'  shift, and go to state 70

    compound_statement  go to state 236


state 162

   12 simple_param_list: simple_param_list ',' . parameter_declaration

    KW_VOID      shift, and go to state 3
    KW_CHAR      shift, and go to state 4
    KW_SHORT     shift, and go to state 5
    KW_INT       shift, and go to state 6
    KW_LONG      shift, and go to state 7
    KW_SIGNED    shift, and go to state 8
    KW_UNSIGNED  shift, and go to state 9
    KW_FLOAT     shift, and go to state 10
    KW_DOUBLE    shift, and go to state 11
    KW_STRUCT    shift, and go to state 12
    KW_UNION     shift, and go to state 13
    KW_ENUM      shift, and go to state 14
    KW_TYPEDEF   shift, and go to state 15
    KW_CONST     shift, and go to state 16
    KW_VOLATILE  shift, and go to state 17
    KW_RESTRICT  shift, and go to state 18
    KW_INLINE    shift, and go to state 19
    KW_EXTERN    shift, and go to state 20
    KW_STATIC    shift, and go to state 21

    declaration_specifiers     go to state 91
    declaration_specifier      go to state 27
    storage_class_specifier    go to state 28
    type_qualifier             go to state 29
    function_specifier         go to state 30
    type_specifier             go to state 48
    struct_or_union_specifier  go to state 32
    enum_specifier             go to state 33
    parameter_declaration      go to state 237


state 163

   91 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 91 (parameter_declaration)


state 164

  175 unary_expression: KW_SIZEOF '(' . type_specifier ')'
  192 primary_expression: '(' . expression ')'

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_VOID           shift, and go to state 3
    KW_CHAR           shift, and go to state 4
    KW_SHORT          shift, and go to state 5
    KW_INT            shift, and go to state 6
    KW_LONG           shift, and go to state 7
    KW_SIGNED         shift, and go to state 8
    KW_UNSIGNED       shift, and go to state 9
    KW_FLOAT          shift, and go to state 10
    KW_DOUBLE         shift, and go to state 11
    KW_STRUCT         shift, and go to state 12
    KW_UNION          shift, and go to state 13
    KW_ENUM           shift, and go to state 14
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    type_specifier             go to state 238
    struct_or_union_specifier  go to state 32
    enum_specifier             go to state 33
    expression                 go to state 172
    assignment_expression      go to state 146
    conditional_expression     go to state 110
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 121
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 165

  174 unary_expression: KW_SIZEOF unary_expression .

    $default  reduce using rule 174 (unary_expression)


state 166

  168 unary_expression: INC unary_expression .

    $default  reduce using rule 168 (unary_expression)


state 167

  169 unary_expression: DEC unary_expression .

    $default  reduce using rule 169 (unary_expression)


state 168

  170 unary_expression: '+' unary_expression .

    $default  reduce using rule 170 (unary_expression)


state 169

  171 unary_expression: '-' unary_expression .

    $default  reduce using rule 171 (unary_expression)


state 170

  172 unary_expression: '!' unary_expression .

    $default  reduce using rule 172 (unary_expression)


state 171

  173 unary_expression: '~' unary_expression .

    $default  reduce using rule 173 (unary_expression)


state 172

  122 expression: expression . ',' assignment_expression
  192 primary_expression: '(' expression . ')'

    ')'  shift, and go to state 239
    ','  shift, and go to state 223


state 173

  140 logical_or_expression: logical_or_expression LOGOR . logical_and_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    logical_and_expression     go to state 240
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 152
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 174

  138 conditional_expression: logical_or_expression '?' . expression ':' conditional_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    expression                 go to state 241
    assignment_expression      go to state 146
    conditional_expression     go to state 110
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 121
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 175

  142 logical_and_expression: logical_and_expression LOGAND . inclusive_or_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    inclusive_or_expression    go to state 242
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 152
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 176

  144 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    exclusive_or_expression    go to state 243
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 152
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 177

  146 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    and_expression             go to state 244
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 152
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 178

  148 and_expression: and_expression '&' . equality_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    equality_expression        go to state 245
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 152
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 179

  150 equality_expression: equality_expression EQ . relational_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    relational_expression      go to state 246
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 152
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 180

  151 equality_expression: equality_expression NE . relational_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    relational_expression      go to state 247
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 152
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 181

  155 relational_expression: relational_expression LE . shift_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    shift_expression           go to state 248
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 152
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 182

  156 relational_expression: relational_expression GE . shift_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    shift_expression           go to state 249
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 152
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 183

  153 relational_expression: relational_expression '<' . shift_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    shift_expression           go to state 250
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 152
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 184

  154 relational_expression: relational_expression '>' . shift_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    shift_expression           go to state 251
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 152
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 185

  158 shift_expression: shift_expression LSHIFT . additive_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    additive_expression        go to state 252
    multiplicative_expression  go to state 120
    unary_expression           go to state 152
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 186

  159 shift_expression: shift_expression RSHIFT . additive_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    additive_expression        go to state 253
    multiplicative_expression  go to state 120
    unary_expression           go to state 152
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 187

  161 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    multiplicative_expression  go to state 254
    unary_expression           go to state 152
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 188

  162 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    multiplicative_expression  go to state 255
    unary_expression           go to state 152
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 189

  164 multiplicative_expression: multiplicative_expression '*' . unary_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    unary_expression    go to state 256
    postfix_expression  go to state 122
    primary_expression  go to state 123


state 190

  165 multiplicative_expression: multiplicative_expression '/' . unary_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    unary_expression    go to state 257
    postfix_expression  go to state 122
    primary_expression  go to state 123


state 191

  166 multiplicative_expression: multiplicative_expression '%' . unary_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    unary_expression    go to state 258
    postfix_expression  go to state 122
    primary_expression  go to state 123


state 192

  127 assignment_expression: unary_expression ADD_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    assignment_expression      go to state 259
    conditional_expression     go to state 110
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 121
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 193

  128 assignment_expression: unary_expression SUB_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    assignment_expression      go to state 260
    conditional_expression     go to state 110
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 121
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 194

  129 assignment_expression: unary_expression MUL_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    assignment_expression      go to state 261
    conditional_expression     go to state 110
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 121
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 195

  130 assignment_expression: unary_expression DIV_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    assignment_expression      go to state 262
    conditional_expression     go to state 110
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 121
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 196

  131 assignment_expression: unary_expression MOD_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    assignment_expression      go to state 263
    conditional_expression     go to state 110
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 121
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 197

  132 assignment_expression: unary_expression AND_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    assignment_expression      go to state 264
    conditional_expression     go to state 110
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 121
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 198

  133 assignment_expression: unary_expression OR_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    assignment_expression      go to state 265
    conditional_expression     go to state 110
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 121
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 199

  134 assignment_expression: unary_expression XOR_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    assignment_expression      go to state 266
    conditional_expression     go to state 110
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 121
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 200

  135 assignment_expression: unary_expression LSHIFT_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    assignment_expression      go to state 267
    conditional_expression     go to state 110
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 121
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 201

  136 assignment_expression: unary_expression RSHIFT_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    assignment_expression      go to state 268
    conditional_expression     go to state 110
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 121
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 202

  126 assignment_expression: unary_expression '=' . assignment_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    assignment_expression      go to state 269
    conditional_expression     go to state 110
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 121
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 203

  180 postfix_expression: postfix_expression ARROW . IDENTIFIER

    IDENTIFIER  shift, and go to state 270


state 204

  181 postfix_expression: postfix_expression INC .

    $default  reduce using rule 181 (postfix_expression)


state 205

  182 postfix_expression: postfix_expression DEC .

    $default  reduce using rule 182 (postfix_expression)


state 206

  177 postfix_expression: postfix_expression '(' . argument_expression_list_opt ')'

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    $default  reduce using rule 183 (argument_expression_list_opt)

    assignment_expression         go to state 271
    conditional_expression        go to state 110
    logical_or_expression         go to state 111
    logical_and_expression        go to state 112
    inclusive_or_expression       go to state 113
    exclusive_or_expression       go to state 114
    and_expression                go to state 115
    equality_expression           go to state 116
    relational_expression         go to state 117
    shift_expression              go to state 118
    additive_expression           go to state 119
    multiplicative_expression     go to state 120
    unary_expression              go to state 121
    postfix_expression            go to state 122
    argument_expression_list_opt  go to state 272
    argument_expression_list      go to state 273
    primary_expression            go to state 123


state 207

  178 postfix_expression: postfix_expression '[' . expression ']'

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    expression                 go to state 274
    assignment_expression      go to state 146
    conditional_expression     go to state 110
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 121
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 208

  179 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 275


state 209

  115 jump_statement: KW_RETURN expression_opt . ';'

    ';'  shift, and go to state 276


state 210

  120 expression_opt: expression .
  122 expression: expression . ',' assignment_expression

    ','  shift, and go to state 223

    $default  reduce using rule 120 (expression_opt)


state 211

  109 selection_statement: KW_IF '(' . expression ')' statement
  110                    | KW_IF '(' . expression ')' statement KW_ELSE statement

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    expression                 go to state 277
    assignment_expression      go to state 146
    conditional_expression     go to state 110
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 121
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 212

  112 iteration_statement: KW_WHILE '(' . expression ')' statement

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    expression                 go to state 278
    assignment_expression      go to state 146
    conditional_expression     go to state 110
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 121
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 213

  114 iteration_statement: KW_FOR '(' . expression_opt ';' expression_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    $default  reduce using rule 119 (expression_opt)

    expression_opt             go to state 279
    expression                 go to state 210
    assignment_expression      go to state 146
    conditional_expression     go to state 110
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 121
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 214

  113 iteration_statement: KW_DO statement . KW_WHILE '(' expression ')' ';'

    KW_WHILE  shift, and go to state 280


state 215

  111 selection_statement: KW_SWITCH '(' . expression ')' statement

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    expression                 go to state 281
    assignment_expression      go to state 146
    conditional_expression     go to state 110
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 121
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 216

  116 jump_statement: KW_BREAK ';' .

    $default  reduce using rule 116 (jump_statement)


state 217

  117 jump_statement: KW_CONTINUE ';' .

    $default  reduce using rule 117 (jump_statement)


state 218

  118 jump_statement: KW_GOTO IDENTIFIER . ';'

    ';'  shift, and go to state 282


state 219

  105 block_item: declaration ';' .

    $default  reduce using rule 105 (block_item)


state 220

  100 compound_statement: '{' block_item_list_opt '}' .

    $default  reduce using rule 100 (compound_statement)


state 221

  104 block_item_list: block_item_list block_item .

    $default  reduce using rule 104 (block_item_list)


state 222

  108 expression_statement: expression ';' .

    $default  reduce using rule 108 (expression_statement)


state 223

  122 expression: expression ',' . assignment_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    assignment_expression      go to state 283
    conditional_expression     go to state 110
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 121
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 224

   77 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 77 (direct_declarator)


state 225

   83 identifier_list: IDENTIFIER .

    $default  reduce using rule 83 (identifier_list)


state 226

   80 direct_declarator: direct_declarator '(' identifier_list_opt . ')'

    ')'  shift, and go to state 284


state 227

   82 identifier_list_opt: identifier_list .
   84 identifier_list: identifier_list . ',' IDENTIFIER

    ','  shift, and go to state 285

    $default  reduce using rule 82 (identifier_list_opt)


state 228

   79 direct_declarator: direct_declarator '(' parameter_type_list_opt . ')'

    ')'  shift, and go to state 286


state 229

   86 parameter_type_list_opt: parameter_type_list .

    $default  reduce using rule 86 (parameter_type_list_opt)


state 230

   87 parameter_type_list: parameter_list .
   88                    | parameter_list . ',' ELLIPSIS
   90 parameter_list: parameter_list . ',' parameter_declaration

    ','  shift, and go to state 287

    $default  reduce using rule 87 (parameter_type_list)


state 231

   89 parameter_list: parameter_declaration .

    $default  reduce using rule 89 (parameter_list)


state 232

   78 direct_declarator: direct_declarator '[' assignment_expression_opt . ']'

    ']'  shift, and go to state 288


state 233

  124 assignment_expression_opt: assignment_expression .

    $default  reduce using rule 124 (assignment_expression_opt)


state 234

   56 struct_declarator_list: struct_declarator_list ',' struct_declarator .

    $default  reduce using rule 56 (struct_declarator_list)


state 235

   59 struct_declarator: declarator ':' constant_expression .

    $default  reduce using rule 59 (struct_declarator)


state 236

    6 simple_function_definition: function_declspec IDENTIFIER '(' simple_param_list_opt ')' compound_statement .

    $default  reduce using rule 6 (simple_function_definition)


state 237

   12 simple_param_list: simple_param_list ',' parameter_declaration .

    $default  reduce using rule 12 (simple_param_list)


state 238

  175 unary_expression: KW_SIZEOF '(' type_specifier . ')'

    ')'  shift, and go to state 289


state 239

  192 primary_expression: '(' expression ')' .

    $default  reduce using rule 192 (primary_expression)


state 240

  140 logical_or_expression: logical_or_expression LOGOR logical_and_expression .
  142 logical_and_expression: logical_and_expression . LOGAND inclusive_or_expression

    LOGAND  shift, and go to state 175

    $default  reduce using rule 140 (logical_or_expression)


state 241

  122 expression: expression . ',' assignment_expression
  138 conditional_expression: logical_or_expression '?' expression . ':' conditional_expression

    ':'  shift, and go to state 290
    ','  shift, and go to state 223


state 242

  142 logical_and_expression: logical_and_expression LOGAND inclusive_or_expression .
  144 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression

    '|'  shift, and go to state 176

    $default  reduce using rule 142 (logical_and_expression)


state 243

  144 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .
  146 exclusive_or_expression: exclusive_or_expression . '^' and_expression

    '^'  shift, and go to state 177

    $default  reduce using rule 144 (inclusive_or_expression)


state 244

  146 exclusive_or_expression: exclusive_or_expression '^' and_expression .
  148 and_expression: and_expression . '&' equality_expression

    '&'  shift, and go to state 178

    $default  reduce using rule 146 (exclusive_or_expression)


state 245

  148 and_expression: and_expression '&' equality_expression .
  150 equality_expression: equality_expression . EQ relational_expression
  151                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 179
    NE  shift, and go to state 180

    $default  reduce using rule 148 (and_expression)


state 246

  150 equality_expression: equality_expression EQ relational_expression .
  153 relational_expression: relational_expression . '<' shift_expression
  154                      | relational_expression . '>' shift_expression
  155                      | relational_expression . LE shift_expression
  156                      | relational_expression . GE shift_expression

    LE   shift, and go to state 181
    GE   shift, and go to state 182
    '<'  shift, and go to state 183
    '>'  shift, and go to state 184

    $default  reduce using rule 150 (equality_expression)


state 247

  151 equality_expression: equality_expression NE relational_expression .
  153 relational_expression: relational_expression . '<' shift_expression
  154                      | relational_expression . '>' shift_expression
  155                      | relational_expression . LE shift_expression
  156                      | relational_expression . GE shift_expression

    LE   shift, and go to state 181
    GE   shift, and go to state 182
    '<'  shift, and go to state 183
    '>'  shift, and go to state 184

    $default  reduce using rule 151 (equality_expression)


state 248

  155 relational_expression: relational_expression LE shift_expression .
  158 shift_expression: shift_expression . LSHIFT additive_expression
  159                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 185
    RSHIFT  shift, and go to state 186

    $default  reduce using rule 155 (relational_expression)


state 249

  156 relational_expression: relational_expression GE shift_expression .
  158 shift_expression: shift_expression . LSHIFT additive_expression
  159                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 185
    RSHIFT  shift, and go to state 186

    $default  reduce using rule 156 (relational_expression)


state 250

  153 relational_expression: relational_expression '<' shift_expression .
  158 shift_expression: shift_expression . LSHIFT additive_expression
  159                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 185
    RSHIFT  shift, and go to state 186

    $default  reduce using rule 153 (relational_expression)


state 251

  154 relational_expression: relational_expression '>' shift_expression .
  158 shift_expression: shift_expression . LSHIFT additive_expression
  159                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 185
    RSHIFT  shift, and go to state 186

    $default  reduce using rule 154 (relational_expression)


state 252

  158 shift_expression: shift_expression LSHIFT additive_expression .
  161 additive_expression: additive_expression . '+' multiplicative_expression
  162                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 187
    '-'  shift, and go to state 188

    $default  reduce using rule 158 (shift_expression)


state 253

  159 shift_expression: shift_expression RSHIFT additive_expression .
  161 additive_expression: additive_expression . '+' multiplicative_expression
  162                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 187
    '-'  shift, and go to state 188

    $default  reduce using rule 159 (shift_expression)


state 254

  161 additive_expression: additive_expression '+' multiplicative_expression .
  164 multiplicative_expression: multiplicative_expression . '*' unary_expression
  165                          | multiplicative_expression . '/' unary_expression
  166                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 189
    '/'  shift, and go to state 190
    '%'  shift, and go to state 191

    $default  reduce using rule 161 (additive_expression)


state 255

  162 additive_expression: additive_expression '-' multiplicative_expression .
  164 multiplicative_expression: multiplicative_expression . '*' unary_expression
  165                          | multiplicative_expression . '/' unary_expression
  166                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 189
    '/'  shift, and go to state 190
    '%'  shift, and go to state 191

    $default  reduce using rule 162 (additive_expression)


state 256

  164 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 164 (multiplicative_expression)


state 257

  165 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 165 (multiplicative_expression)


state 258

  166 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 166 (multiplicative_expression)


state 259

  127 assignment_expression: unary_expression ADD_ASSIGN assignment_expression .

    $default  reduce using rule 127 (assignment_expression)


state 260

  128 assignment_expression: unary_expression SUB_ASSIGN assignment_expression .

    $default  reduce using rule 128 (assignment_expression)


state 261

  129 assignment_expression: unary_expression MUL_ASSIGN assignment_expression .

    $default  reduce using rule 129 (assignment_expression)


state 262

  130 assignment_expression: unary_expression DIV_ASSIGN assignment_expression .

    $default  reduce using rule 130 (assignment_expression)


state 263

  131 assignment_expression: unary_expression MOD_ASSIGN assignment_expression .

    $default  reduce using rule 131 (assignment_expression)


state 264

  132 assignment_expression: unary_expression AND_ASSIGN assignment_expression .

    $default  reduce using rule 132 (assignment_expression)


state 265

  133 assignment_expression: unary_expression OR_ASSIGN assignment_expression .

    $default  reduce using rule 133 (assignment_expression)


state 266

  134 assignment_expression: unary_expression XOR_ASSIGN assignment_expression .

    $default  reduce using rule 134 (assignment_expression)


state 267

  135 assignment_expression: unary_expression LSHIFT_ASSIGN assignment_expression .

    $default  reduce using rule 135 (assignment_expression)


state 268

  136 assignment_expression: unary_expression RSHIFT_ASSIGN assignment_expression .

    $default  reduce using rule 136 (assignment_expression)


state 269

  126 assignment_expression: unary_expression '=' assignment_expression .

    $default  reduce using rule 126 (assignment_expression)


state 270

  180 postfix_expression: postfix_expression ARROW IDENTIFIER .

    $default  reduce using rule 180 (postfix_expression)


state 271

  185 argument_expression_list: assignment_expression .

    $default  reduce using rule 185 (argument_expression_list)


state 272

  177 postfix_expression: postfix_expression '(' argument_expression_list_opt . ')'

    ')'  shift, and go to state 291


state 273

  184 argument_expression_list_opt: argument_expression_list .
  186 argument_expression_list: argument_expression_list . ',' assignment_expression

    ','  shift, and go to state 292

    $default  reduce using rule 184 (argument_expression_list_opt)


state 274

  122 expression: expression . ',' assignment_expression
  178 postfix_expression: postfix_expression '[' expression . ']'

    ']'  shift, and go to state 293
    ','  shift, and go to state 223


state 275

  179 postfix_expression: postfix_expression '.' IDENTIFIER .

    $default  reduce using rule 179 (postfix_expression)


state 276

  115 jump_statement: KW_RETURN expression_opt ';' .

    $default  reduce using rule 115 (jump_statement)


state 277

  109 selection_statement: KW_IF '(' expression . ')' statement
  110                    | KW_IF '(' expression . ')' statement KW_ELSE statement
  122 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 294
    ','  shift, and go to state 223


state 278

  112 iteration_statement: KW_WHILE '(' expression . ')' statement
  122 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 295
    ','  shift, and go to state 223


state 279

  114 iteration_statement: KW_FOR '(' expression_opt . ';' expression_opt ';' expression_opt ')' statement

    ';'  shift, and go to state 296


state 280

  113 iteration_statement: KW_DO statement KW_WHILE . '(' expression ')' ';'

    '('  shift, and go to state 297


state 281

  111 selection_statement: KW_SWITCH '(' expression . ')' statement
  122 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 298
    ','  shift, and go to state 223


state 282

  118 jump_statement: KW_GOTO IDENTIFIER ';' .

    $default  reduce using rule 118 (jump_statement)


state 283

  122 expression: expression ',' assignment_expression .

    $default  reduce using rule 122 (expression)


state 284

   80 direct_declarator: direct_declarator '(' identifier_list_opt ')' .

    $default  reduce using rule 80 (direct_declarator)


state 285

   84 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 299


state 286

   79 direct_declarator: direct_declarator '(' parameter_type_list_opt ')' .

    $default  reduce using rule 79 (direct_declarator)


state 287

   88 parameter_type_list: parameter_list ',' . ELLIPSIS
   90 parameter_list: parameter_list ',' . parameter_declaration

    KW_VOID      shift, and go to state 3
    KW_CHAR      shift, and go to state 4
    KW_SHORT     shift, and go to state 5
    KW_INT       shift, and go to state 6
    KW_LONG      shift, and go to state 7
    KW_SIGNED    shift, and go to state 8
    KW_UNSIGNED  shift, and go to state 9
    KW_FLOAT     shift, and go to state 10
    KW_DOUBLE    shift, and go to state 11
    KW_STRUCT    shift, and go to state 12
    KW_UNION     shift, and go to state 13
    KW_ENUM      shift, and go to state 14
    KW_TYPEDEF   shift, and go to state 15
    KW_CONST     shift, and go to state 16
    KW_VOLATILE  shift, and go to state 17
    KW_RESTRICT  shift, and go to state 18
    KW_INLINE    shift, and go to state 19
    KW_EXTERN    shift, and go to state 20
    KW_STATIC    shift, and go to state 21
    ELLIPSIS     shift, and go to state 300

    declaration_specifiers     go to state 91
    declaration_specifier      go to state 27
    storage_class_specifier    go to state 28
    type_qualifier             go to state 29
    function_specifier         go to state 30
    type_specifier             go to state 48
    struct_or_union_specifier  go to state 32
    enum_specifier             go to state 33
    parameter_declaration      go to state 301


state 288

   78 direct_declarator: direct_declarator '[' assignment_expression_opt ']' .

    $default  reduce using rule 78 (direct_declarator)


state 289

  175 unary_expression: KW_SIZEOF '(' type_specifier ')' .

    $default  reduce using rule 175 (unary_expression)


state 290

  138 conditional_expression: logical_or_expression '?' expression ':' . conditional_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    conditional_expression     go to state 302
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 152
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 291

  177 postfix_expression: postfix_expression '(' argument_expression_list_opt ')' .

    $default  reduce using rule 177 (postfix_expression)


state 292

  186 argument_expression_list: argument_expression_list ',' . assignment_expression

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    assignment_expression      go to state 303
    conditional_expression     go to state 110
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 121
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 293

  178 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 178 (postfix_expression)


state 294

  109 selection_statement: KW_IF '(' expression ')' . statement
  110                    | KW_IF '(' expression ')' . statement KW_ELSE statement

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_RETURN         shift, and go to state 124
    KW_IF             shift, and go to state 125
    KW_WHILE          shift, and go to state 126
    KW_FOR            shift, and go to state 127
    KW_DO             shift, and go to state 128
    KW_SWITCH         shift, and go to state 129
    KW_BREAK          shift, and go to state 130
    KW_CONTINUE       shift, and go to state 131
    KW_GOTO           shift, and go to state 132
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108
    ';'               shift, and go to state 133
    '{'               shift, and go to state 70

    statement                  go to state 304
    compound_statement         go to state 137
    expression_statement       go to state 141
    selection_statement        go to state 142
    iteration_statement        go to state 143
    jump_statement             go to state 144
    expression                 go to state 145
    assignment_expression      go to state 146
    conditional_expression     go to state 110
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 121
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 295

  112 iteration_statement: KW_WHILE '(' expression ')' . statement

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_RETURN         shift, and go to state 124
    KW_IF             shift, and go to state 125
    KW_WHILE          shift, and go to state 126
    KW_FOR            shift, and go to state 127
    KW_DO             shift, and go to state 128
    KW_SWITCH         shift, and go to state 129
    KW_BREAK          shift, and go to state 130
    KW_CONTINUE       shift, and go to state 131
    KW_GOTO           shift, and go to state 132
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108
    ';'               shift, and go to state 133
    '{'               shift, and go to state 70

    statement                  go to state 305
    compound_statement         go to state 137
    expression_statement       go to state 141
    selection_statement        go to state 142
    iteration_statement        go to state 143
    jump_statement             go to state 144
    expression                 go to state 145
    assignment_expression      go to state 146
    conditional_expression     go to state 110
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 121
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 296

  114 iteration_statement: KW_FOR '(' expression_opt ';' . expression_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    $default  reduce using rule 119 (expression_opt)

    expression_opt             go to state 306
    expression                 go to state 210
    assignment_expression      go to state 146
    conditional_expression     go to state 110
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 121
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 297

  113 iteration_statement: KW_DO statement KW_WHILE '(' . expression ')' ';'

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    expression                 go to state 307
    assignment_expression      go to state 146
    conditional_expression     go to state 110
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 121
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 298

  111 selection_statement: KW_SWITCH '(' expression ')' . statement

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_RETURN         shift, and go to state 124
    KW_IF             shift, and go to state 125
    KW_WHILE          shift, and go to state 126
    KW_FOR            shift, and go to state 127
    KW_DO             shift, and go to state 128
    KW_SWITCH         shift, and go to state 129
    KW_BREAK          shift, and go to state 130
    KW_CONTINUE       shift, and go to state 131
    KW_GOTO           shift, and go to state 132
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108
    ';'               shift, and go to state 133
    '{'               shift, and go to state 70

    statement                  go to state 308
    compound_statement         go to state 137
    expression_statement       go to state 141
    selection_statement        go to state 142
    iteration_statement        go to state 143
    jump_statement             go to state 144
    expression                 go to state 145
    assignment_expression      go to state 146
    conditional_expression     go to state 110
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 121
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 299

   84 identifier_list: identifier_list ',' IDENTIFIER .

    $default  reduce using rule 84 (identifier_list)


state 300

   88 parameter_type_list: parameter_list ',' ELLIPSIS .

    $default  reduce using rule 88 (parameter_type_list)


state 301

   90 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 90 (parameter_list)


state 302

  138 conditional_expression: logical_or_expression '?' expression ':' conditional_expression .

    $default  reduce using rule 138 (conditional_expression)


state 303

  186 argument_expression_list: argument_expression_list ',' assignment_expression .

    $default  reduce using rule 186 (argument_expression_list)


state 304

  109 selection_statement: KW_IF '(' expression ')' statement .
  110                    | KW_IF '(' expression ')' statement . KW_ELSE statement

    KW_ELSE  shift, and go to state 309

    KW_ELSE   [reduce using rule 109 (selection_statement)]
    $default  reduce using rule 109 (selection_statement)


state 305

  112 iteration_statement: KW_WHILE '(' expression ')' statement .

    $default  reduce using rule 112 (iteration_statement)


state 306

  114 iteration_statement: KW_FOR '(' expression_opt ';' expression_opt . ';' expression_opt ')' statement

    ';'  shift, and go to state 310


state 307

  113 iteration_statement: KW_DO statement KW_WHILE '(' expression . ')' ';'
  122 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 311
    ','  shift, and go to state 223


state 308

  111 selection_statement: KW_SWITCH '(' expression ')' statement .

    $default  reduce using rule 111 (selection_statement)


state 309

  110 selection_statement: KW_IF '(' expression ')' statement KW_ELSE . statement

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_RETURN         shift, and go to state 124
    KW_IF             shift, and go to state 125
    KW_WHILE          shift, and go to state 126
    KW_FOR            shift, and go to state 127
    KW_DO             shift, and go to state 128
    KW_SWITCH         shift, and go to state 129
    KW_BREAK          shift, and go to state 130
    KW_CONTINUE       shift, and go to state 131
    KW_GOTO           shift, and go to state 132
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108
    ';'               shift, and go to state 133
    '{'               shift, and go to state 70

    statement                  go to state 312
    compound_statement         go to state 137
    expression_statement       go to state 141
    selection_statement        go to state 142
    iteration_statement        go to state 143
    jump_statement             go to state 144
    expression                 go to state 145
    assignment_expression      go to state 146
    conditional_expression     go to state 110
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 121
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 310

  114 iteration_statement: KW_FOR '(' expression_opt ';' expression_opt ';' . expression_opt ')' statement

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108

    $default  reduce using rule 119 (expression_opt)

    expression_opt             go to state 313
    expression                 go to state 210
    assignment_expression      go to state 146
    conditional_expression     go to state 110
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 121
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 311

  113 iteration_statement: KW_DO statement KW_WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 314


state 312

  110 selection_statement: KW_IF '(' expression ')' statement KW_ELSE statement .

    $default  reduce using rule 110 (selection_statement)


state 313

  114 iteration_statement: KW_FOR '(' expression_opt ';' expression_opt ';' expression_opt . ')' statement

    ')'  shift, and go to state 315


state 314

  113 iteration_statement: KW_DO statement KW_WHILE '(' expression ')' ';' .

    $default  reduce using rule 113 (iteration_statement)


state 315

  114 iteration_statement: KW_FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' . statement

    IDENTIFIER        shift, and go to state 96
    STRING_LITERAL    shift, and go to state 97
    INTEGER_CONSTANT  shift, and go to state 98
    FLOAT_CONSTANT    shift, and go to state 99
    CHAR_CONSTANT     shift, and go to state 100
    KW_RETURN         shift, and go to state 124
    KW_IF             shift, and go to state 125
    KW_WHILE          shift, and go to state 126
    KW_FOR            shift, and go to state 127
    KW_DO             shift, and go to state 128
    KW_SWITCH         shift, and go to state 129
    KW_BREAK          shift, and go to state 130
    KW_CONTINUE       shift, and go to state 131
    KW_GOTO           shift, and go to state 132
    KW_SIZEOF         shift, and go to state 101
    INC               shift, and go to state 102
    DEC               shift, and go to state 103
    '+'               shift, and go to state 104
    '-'               shift, and go to state 105
    '!'               shift, and go to state 106
    '~'               shift, and go to state 107
    '('               shift, and go to state 108
    ';'               shift, and go to state 133
    '{'               shift, and go to state 70

    statement                  go to state 316
    compound_statement         go to state 137
    expression_statement       go to state 141
    selection_statement        go to state 142
    iteration_statement        go to state 143
    jump_statement             go to state 144
    expression                 go to state 145
    assignment_expression      go to state 146
    conditional_expression     go to state 110
    logical_or_expression      go to state 111
    logical_and_expression     go to state 112
    inclusive_or_expression    go to state 113
    exclusive_or_expression    go to state 114
    and_expression             go to state 115
    equality_expression        go to state 116
    relational_expression      go to state 117
    shift_expression           go to state 118
    additive_expression        go to state 119
    multiplicative_expression  go to state 120
    unary_expression           go to state 121
    postfix_expression         go to state 122
    primary_expression         go to state 123


state 316

  114 iteration_statement: KW_FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' statement .

    $default  reduce using rule 114 (iteration_statement)
