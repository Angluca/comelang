Terminals which are not used

   KW_CASE
   KW_DEFAULT


Rules never reduced

   77 parameter_type_list_opt: /* empty */


State 29 conflicts: 1 shift/reduce, 2 reduce/reduce
State 140 conflicts: 1 reduce/reduce
State 293 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: /* empty */
    2                 | translation_unit external_declaration

    3 external_declaration: function_definition
    4                     | declaration ';'

    5 declaration: declaration_specifiers init_declarator_list_opt

    6 init_declarator_list_opt: /* empty */
    7                         | init_declarator_list

    8 init_declarator_list: init_declarator
    9                     | init_declarator_list ',' init_declarator

   10 init_declarator: declarator
   11                | declarator '=' assignment_expression

   12 declaration_specifiers: declaration_specifier
   13                       | declaration_specifiers declaration_specifier

   14 declaration_specifier: storage_class_specifier
   15                      | type_specifier
   16                      | type_qualifier
   17                      | function_specifier

   18 storage_class_specifier: KW_TYPEDEF
   19                        | KW_EXTERN
   20                        | KW_STATIC

   21 type_qualifier: KW_CONST
   22               | KW_VOLATILE
   23               | KW_RESTRICT

   24 function_specifier: KW_INLINE

   25 type_specifier: KW_VOID
   26               | KW_CHAR
   27               | KW_SHORT
   28               | KW_INT
   29               | KW_LONG
   30               | KW_SIGNED
   31               | KW_UNSIGNED
   32               | KW_FLOAT
   33               | KW_DOUBLE
   34               | struct_or_union_specifier
   35               | enum_specifier

   36 struct_or_union_specifier: KW_STRUCT IDENTIFIER '{' struct_declaration_list_opt '}'
   37                          | KW_UNION IDENTIFIER '{' struct_declaration_list_opt '}'
   38                          | KW_STRUCT '{' struct_declaration_list_opt '}'
   39                          | KW_UNION '{' struct_declaration_list_opt '}'
   40                          | KW_STRUCT IDENTIFIER
   41                          | KW_UNION IDENTIFIER

   42 struct_declaration_list_opt: /* empty */
   43                            | struct_declaration_list

   44 struct_declaration_list: struct_declaration
   45                        | struct_declaration_list struct_declaration

   46 struct_declaration: declaration_specifiers struct_declarator_list ';'

   47 struct_declarator_list: struct_declarator
   48                       | struct_declarator_list ',' struct_declarator

   49 struct_declarator: declarator
   50                  | ':' constant_expression
   51                  | declarator ':' constant_expression

   52 enum_specifier: KW_ENUM IDENTIFIER '{' enumerator_list_opt '}'
   53               | KW_ENUM '{' enumerator_list_opt '}'
   54               | KW_ENUM IDENTIFIER

   55 enumerator_list_opt: /* empty */
   56                    | enumerator_list

   57 enumerator_list: enumerator
   58                | enumerator_list ',' enumerator

   59 enumerator: IDENTIFIER
   60           | IDENTIFIER '=' constant_expression

   61 declarator: pointer_opt direct_declarator

   62 pointer_opt: /* empty */
   63            | pointer

   64 pointer: '*'
   65        | '*' type_qualifier
   66        | '*' pointer
   67        | '*' type_qualifier pointer

   68 direct_declarator: IDENTIFIER
   69                  | '(' declarator ')'
   70                  | direct_declarator '[' assignment_expression_opt ']'
   71                  | direct_declarator '(' parameter_type_list_opt ')'
   72                  | direct_declarator '(' identifier_list_opt ')'

   73 identifier_list_opt: /* empty */
   74                    | identifier_list

   75 identifier_list: IDENTIFIER
   76                | identifier_list ',' IDENTIFIER

   77 parameter_type_list_opt: /* empty */
   78                        | parameter_type_list

   79 parameter_type_list: parameter_list
   80                    | parameter_list ',' ELLIPSIS

   81 parameter_list: parameter_declaration
   82               | parameter_list ',' parameter_declaration

   83 parameter_declaration: declaration_specifiers declarator
   84                      | declaration_specifiers

   85 function_definition: declaration_specifiers declarator compound_statement
   86                    | type_specifier declarator compound_statement

   87 statement: compound_statement
   88          | expression_statement
   89          | selection_statement
   90          | iteration_statement
   91          | jump_statement

   92 compound_statement: '{' block_item_list_opt '}'

   93 block_item_list_opt: /* empty */
   94                    | block_item_list

   95 block_item_list: block_item
   96                | block_item_list block_item

   97 block_item: declaration ';'
   98           | statement

   99 expression_statement: ';'
  100                     | expression ';'

  101 selection_statement: KW_IF '(' expression ')' statement
  102                    | KW_IF '(' expression ')' statement KW_ELSE statement
  103                    | KW_SWITCH '(' expression ')' statement

  104 iteration_statement: KW_WHILE '(' expression ')' statement
  105                    | KW_DO statement KW_WHILE '(' expression ')' ';'
  106                    | KW_FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' statement

  107 jump_statement: KW_RETURN expression_opt ';'
  108               | KW_BREAK ';'
  109               | KW_CONTINUE ';'
  110               | KW_GOTO IDENTIFIER ';'

  111 expression_opt: /* empty */
  112               | expression

  113 expression: assignment_expression
  114           | expression ',' assignment_expression

  115 assignment_expression_opt: /* empty */
  116                          | assignment_expression

  117 assignment_expression: conditional_expression
  118                      | unary_expression '=' assignment_expression
  119                      | unary_expression ADD_ASSIGN assignment_expression
  120                      | unary_expression SUB_ASSIGN assignment_expression
  121                      | unary_expression MUL_ASSIGN assignment_expression
  122                      | unary_expression DIV_ASSIGN assignment_expression
  123                      | unary_expression MOD_ASSIGN assignment_expression
  124                      | unary_expression AND_ASSIGN assignment_expression
  125                      | unary_expression OR_ASSIGN assignment_expression
  126                      | unary_expression XOR_ASSIGN assignment_expression
  127                      | unary_expression LSHIFT_ASSIGN assignment_expression
  128                      | unary_expression RSHIFT_ASSIGN assignment_expression

  129 conditional_expression: logical_or_expression
  130                       | logical_or_expression '?' expression ':' conditional_expression

  131 logical_or_expression: logical_and_expression
  132                      | logical_or_expression LOGOR logical_and_expression

  133 logical_and_expression: inclusive_or_expression
  134                       | logical_and_expression LOGAND inclusive_or_expression

  135 inclusive_or_expression: exclusive_or_expression
  136                        | inclusive_or_expression '|' exclusive_or_expression

  137 exclusive_or_expression: and_expression
  138                        | exclusive_or_expression '^' and_expression

  139 and_expression: equality_expression
  140               | and_expression '&' equality_expression

  141 equality_expression: relational_expression
  142                    | equality_expression EQ relational_expression
  143                    | equality_expression NE relational_expression

  144 relational_expression: shift_expression
  145                      | relational_expression '<' shift_expression
  146                      | relational_expression '>' shift_expression
  147                      | relational_expression LE shift_expression
  148                      | relational_expression GE shift_expression

  149 shift_expression: additive_expression
  150                 | shift_expression LSHIFT additive_expression
  151                 | shift_expression RSHIFT additive_expression

  152 additive_expression: multiplicative_expression
  153                    | additive_expression '+' multiplicative_expression
  154                    | additive_expression '-' multiplicative_expression

  155 multiplicative_expression: unary_expression
  156                          | multiplicative_expression '*' unary_expression
  157                          | multiplicative_expression '/' unary_expression
  158                          | multiplicative_expression '%' unary_expression

  159 unary_expression: postfix_expression
  160                 | INC unary_expression
  161                 | DEC unary_expression
  162                 | '+' unary_expression
  163                 | '-' unary_expression
  164                 | '!' unary_expression
  165                 | '~' unary_expression
  166                 | KW_SIZEOF unary_expression
  167                 | KW_SIZEOF '(' type_specifier ')'

  168 postfix_expression: primary_expression
  169                   | postfix_expression '(' argument_expression_list_opt ')'
  170                   | postfix_expression '[' expression ']'
  171                   | postfix_expression '.' IDENTIFIER
  172                   | postfix_expression ARROW IDENTIFIER
  173                   | postfix_expression INC
  174                   | postfix_expression DEC

  175 argument_expression_list_opt: /* empty */
  176                             | argument_expression_list

  177 argument_expression_list: assignment_expression
  178                         | argument_expression_list ',' assignment_expression

  179 primary_expression: IDENTIFIER
  180                   | INTEGER_CONSTANT
  181                   | FLOAT_CONSTANT
  182                   | CHAR_CONSTANT
  183                   | STRING_LITERAL
  184                   | '(' expression ')'

  185 constant_expression: conditional_expression


Terminals, with rules where they appear

$end (0) 0
'!' (33) 164
'%' (37) 158
'&' (38) 140
'(' (40) 69 71 72 101 102 103 104 105 106 167 169 184
')' (41) 69 71 72 101 102 103 104 105 106 167 169 184
'*' (42) 64 65 66 67 156
'+' (43) 153 162
',' (44) 9 48 58 76 80 82 114 178
'-' (45) 154 163
'.' (46) 171
'/' (47) 157
':' (58) 50 51 130
';' (59) 4 46 97 99 100 105 106 107 108 109 110
'<' (60) 145
'=' (61) 11 60 118
'>' (62) 146
'?' (63) 130
'[' (91) 70 170
']' (93) 70 170
'^' (94) 138
'{' (123) 36 37 38 39 52 53 92
'|' (124) 136
'}' (125) 36 37 38 39 52 53 92
'~' (126) 165
error (256)
IDENTIFIER (258) 36 37 40 41 52 54 59 60 68 75 76 110 171 172 179
STRING_LITERAL (259) 183
INTEGER_CONSTANT (260) 180
FLOAT_CONSTANT (261) 181
CHAR_CONSTANT (262) 182
KW_VOID (263) 25
KW_CHAR (264) 26
KW_SHORT (265) 27
KW_INT (266) 28
KW_LONG (267) 29
KW_SIGNED (268) 30
KW_UNSIGNED (269) 31
KW_FLOAT (270) 32
KW_DOUBLE (271) 33
KW_STRUCT (272) 36 38 40
KW_UNION (273) 37 39 41
KW_ENUM (274) 52 53 54
KW_TYPEDEF (275) 18
KW_RETURN (276) 107
KW_IF (277) 101 102
KW_ELSE (278) 102
KW_WHILE (279) 104 105
KW_FOR (280) 106
KW_DO (281) 105
KW_SWITCH (282) 103
KW_CASE (283)
KW_DEFAULT (284)
KW_BREAK (285) 108
KW_CONTINUE (286) 109
KW_GOTO (287) 110
KW_CONST (288) 21
KW_VOLATILE (289) 22
KW_RESTRICT (290) 23
KW_INLINE (291) 24
KW_EXTERN (292) 19
KW_STATIC (293) 20
KW_SIZEOF (294) 166 167
ELLIPSIS (295) 80
ARROW (296) 172
INC (297) 160 173
DEC (298) 161 174
LSHIFT (299) 150
RSHIFT (300) 151
LE (301) 147
GE (302) 148
EQ (303) 142
NE (304) 143
LOGAND (305) 134
LOGOR (306) 132
ADD_ASSIGN (307) 119
SUB_ASSIGN (308) 120
MUL_ASSIGN (309) 121
DIV_ASSIGN (310) 122
MOD_ASSIGN (311) 123
AND_ASSIGN (312) 124
OR_ASSIGN (313) 125
XOR_ASSIGN (314) 126
LSHIFT_ASSIGN (315) 127
RSHIFT_ASSIGN (316) 128


Nonterminals, with rules where they appear

$accept (86)
    on left: 0
translation_unit (87)
    on left: 1 2, on right: 0 2
external_declaration (88)
    on left: 3 4, on right: 2
declaration (89)
    on left: 5, on right: 4 97
init_declarator_list_opt (90)
    on left: 6 7, on right: 5
init_declarator_list (91)
    on left: 8 9, on right: 7 9
init_declarator (92)
    on left: 10 11, on right: 8 9
declaration_specifiers (93)
    on left: 12 13, on right: 5 13 46 83 84 85
declaration_specifier (94)
    on left: 14 15 16 17, on right: 12 13
storage_class_specifier (95)
    on left: 18 19 20, on right: 14
type_qualifier (96)
    on left: 21 22 23, on right: 16 65 67
function_specifier (97)
    on left: 24, on right: 17
type_specifier (98)
    on left: 25 26 27 28 29 30 31 32 33 34 35, on right: 15 86 167
struct_or_union_specifier (99)
    on left: 36 37 38 39 40 41, on right: 34
struct_declaration_list_opt (100)
    on left: 42 43, on right: 36 37 38 39
struct_declaration_list (101)
    on left: 44 45, on right: 43 45
struct_declaration (102)
    on left: 46, on right: 44 45
struct_declarator_list (103)
    on left: 47 48, on right: 46 48
struct_declarator (104)
    on left: 49 50 51, on right: 47 48
enum_specifier (105)
    on left: 52 53 54, on right: 35
enumerator_list_opt (106)
    on left: 55 56, on right: 52 53
enumerator_list (107)
    on left: 57 58, on right: 56 58
enumerator (108)
    on left: 59 60, on right: 57 58
declarator (109)
    on left: 61, on right: 10 11 49 51 69 83 85 86
pointer_opt (110)
    on left: 62 63, on right: 61
pointer (111)
    on left: 64 65 66 67, on right: 63 66 67
direct_declarator (112)
    on left: 68 69 70 71 72, on right: 61 70 71 72
identifier_list_opt (113)
    on left: 73 74, on right: 72
identifier_list (114)
    on left: 75 76, on right: 74 76
parameter_type_list_opt (115)
    on left: 77 78, on right: 71
parameter_type_list (116)
    on left: 79 80, on right: 78
parameter_list (117)
    on left: 81 82, on right: 79 80 82
parameter_declaration (118)
    on left: 83 84, on right: 81 82
function_definition (119)
    on left: 85 86, on right: 3
statement (120)
    on left: 87 88 89 90 91, on right: 98 101 102 103 104 105 106
compound_statement (121)
    on left: 92, on right: 85 86 87
block_item_list_opt (122)
    on left: 93 94, on right: 92
block_item_list (123)
    on left: 95 96, on right: 94 96
block_item (124)
    on left: 97 98, on right: 95 96
expression_statement (125)
    on left: 99 100, on right: 88
selection_statement (126)
    on left: 101 102 103, on right: 89
iteration_statement (127)
    on left: 104 105 106, on right: 90
jump_statement (128)
    on left: 107 108 109 110, on right: 91
expression_opt (129)
    on left: 111 112, on right: 106 107
expression (130)
    on left: 113 114, on right: 100 101 102 103 104 105 112 114 130
    170 184
assignment_expression_opt (131)
    on left: 115 116, on right: 70
assignment_expression (132)
    on left: 117 118 119 120 121 122 123 124 125 126 127 128,
    on right: 11 113 114 116 118 119 120 121 122 123 124 125 126 127
    128 177 178
conditional_expression (133)
    on left: 129 130, on right: 117 130 185
logical_or_expression (134)
    on left: 131 132, on right: 129 130 132
logical_and_expression (135)
    on left: 133 134, on right: 131 132 134
inclusive_or_expression (136)
    on left: 135 136, on right: 133 134 136
exclusive_or_expression (137)
    on left: 137 138, on right: 135 136 138
and_expression (138)
    on left: 139 140, on right: 137 138 140
equality_expression (139)
    on left: 141 142 143, on right: 139 140 142 143
relational_expression (140)
    on left: 144 145 146 147 148, on right: 141 142 143 145 146 147
    148
shift_expression (141)
    on left: 149 150 151, on right: 144 145 146 147 148 150 151
additive_expression (142)
    on left: 152 153 154, on right: 149 150 151 153 154
multiplicative_expression (143)
    on left: 155 156 157 158, on right: 152 153 154 156 157 158
unary_expression (144)
    on left: 159 160 161 162 163 164 165 166 167, on right: 118 119
    120 121 122 123 124 125 126 127 128 155 156 157 158 160 161 162
    163 164 165 166
postfix_expression (145)
    on left: 168 169 170 171 172 173 174, on right: 159 169 170 171
    172 173 174
argument_expression_list_opt (146)
    on left: 175 176, on right: 169
argument_expression_list (147)
    on left: 177 178, on right: 176 178
primary_expression (148)
    on left: 179 180 181 182 183 184, on right: 168
constant_expression (149)
    on left: 185, on right: 50 51 60


state 0

    0 $accept: . translation_unit $end

    $default  reduce using rule 1 (translation_unit)

    translation_unit  go to state 1


state 1

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . external_declaration

    $end         shift, and go to state 2
    KW_VOID      shift, and go to state 3
    KW_CHAR      shift, and go to state 4
    KW_SHORT     shift, and go to state 5
    KW_INT       shift, and go to state 6
    KW_LONG      shift, and go to state 7
    KW_SIGNED    shift, and go to state 8
    KW_UNSIGNED  shift, and go to state 9
    KW_FLOAT     shift, and go to state 10
    KW_DOUBLE    shift, and go to state 11
    KW_STRUCT    shift, and go to state 12
    KW_UNION     shift, and go to state 13
    KW_ENUM      shift, and go to state 14
    KW_TYPEDEF   shift, and go to state 15
    KW_CONST     shift, and go to state 16
    KW_VOLATILE  shift, and go to state 17
    KW_RESTRICT  shift, and go to state 18
    KW_INLINE    shift, and go to state 19
    KW_EXTERN    shift, and go to state 20
    KW_STATIC    shift, and go to state 21

    external_declaration       go to state 22
    declaration                go to state 23
    declaration_specifiers     go to state 24
    declaration_specifier      go to state 25
    storage_class_specifier    go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    type_specifier             go to state 29
    struct_or_union_specifier  go to state 30
    enum_specifier             go to state 31
    function_definition        go to state 32


state 2

    0 $accept: translation_unit $end .

    $default  accept


state 3

   25 type_specifier: KW_VOID .

    $default  reduce using rule 25 (type_specifier)


state 4

   26 type_specifier: KW_CHAR .

    $default  reduce using rule 26 (type_specifier)


state 5

   27 type_specifier: KW_SHORT .

    $default  reduce using rule 27 (type_specifier)


state 6

   28 type_specifier: KW_INT .

    $default  reduce using rule 28 (type_specifier)


state 7

   29 type_specifier: KW_LONG .

    $default  reduce using rule 29 (type_specifier)


state 8

   30 type_specifier: KW_SIGNED .

    $default  reduce using rule 30 (type_specifier)


state 9

   31 type_specifier: KW_UNSIGNED .

    $default  reduce using rule 31 (type_specifier)


state 10

   32 type_specifier: KW_FLOAT .

    $default  reduce using rule 32 (type_specifier)


state 11

   33 type_specifier: KW_DOUBLE .

    $default  reduce using rule 33 (type_specifier)


state 12

   36 struct_or_union_specifier: KW_STRUCT . IDENTIFIER '{' struct_declaration_list_opt '}'
   38                          | KW_STRUCT . '{' struct_declaration_list_opt '}'
   40                          | KW_STRUCT . IDENTIFIER

    IDENTIFIER  shift, and go to state 33
    '{'         shift, and go to state 34


state 13

   37 struct_or_union_specifier: KW_UNION . IDENTIFIER '{' struct_declaration_list_opt '}'
   39                          | KW_UNION . '{' struct_declaration_list_opt '}'
   41                          | KW_UNION . IDENTIFIER

    IDENTIFIER  shift, and go to state 35
    '{'         shift, and go to state 36


state 14

   52 enum_specifier: KW_ENUM . IDENTIFIER '{' enumerator_list_opt '}'
   53               | KW_ENUM . '{' enumerator_list_opt '}'
   54               | KW_ENUM . IDENTIFIER

    IDENTIFIER  shift, and go to state 37
    '{'         shift, and go to state 38


state 15

   18 storage_class_specifier: KW_TYPEDEF .

    $default  reduce using rule 18 (storage_class_specifier)


state 16

   21 type_qualifier: KW_CONST .

    $default  reduce using rule 21 (type_qualifier)


state 17

   22 type_qualifier: KW_VOLATILE .

    $default  reduce using rule 22 (type_qualifier)


state 18

   23 type_qualifier: KW_RESTRICT .

    $default  reduce using rule 23 (type_qualifier)


state 19

   24 function_specifier: KW_INLINE .

    $default  reduce using rule 24 (function_specifier)


state 20

   19 storage_class_specifier: KW_EXTERN .

    $default  reduce using rule 19 (storage_class_specifier)


state 21

   20 storage_class_specifier: KW_STATIC .

    $default  reduce using rule 20 (storage_class_specifier)


state 22

    2 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 2 (translation_unit)


state 23

    4 external_declaration: declaration . ';'

    ';'  shift, and go to state 39


state 24

    5 declaration: declaration_specifiers . init_declarator_list_opt
   13 declaration_specifiers: declaration_specifiers . declaration_specifier
   85 function_definition: declaration_specifiers . declarator compound_statement

    KW_VOID      shift, and go to state 3
    KW_CHAR      shift, and go to state 4
    KW_SHORT     shift, and go to state 5
    KW_INT       shift, and go to state 6
    KW_LONG      shift, and go to state 7
    KW_SIGNED    shift, and go to state 8
    KW_UNSIGNED  shift, and go to state 9
    KW_FLOAT     shift, and go to state 10
    KW_DOUBLE    shift, and go to state 11
    KW_STRUCT    shift, and go to state 12
    KW_UNION     shift, and go to state 13
    KW_ENUM      shift, and go to state 14
    KW_TYPEDEF   shift, and go to state 15
    KW_CONST     shift, and go to state 16
    KW_VOLATILE  shift, and go to state 17
    KW_RESTRICT  shift, and go to state 18
    KW_INLINE    shift, and go to state 19
    KW_EXTERN    shift, and go to state 20
    KW_STATIC    shift, and go to state 21
    '*'          shift, and go to state 40

    ';'       reduce using rule 6 (init_declarator_list_opt)
    $default  reduce using rule 62 (pointer_opt)

    init_declarator_list_opt   go to state 41
    init_declarator_list       go to state 42
    init_declarator            go to state 43
    declaration_specifier      go to state 44
    storage_class_specifier    go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    type_specifier             go to state 45
    struct_or_union_specifier  go to state 30
    enum_specifier             go to state 31
    declarator                 go to state 46
    pointer_opt                go to state 47
    pointer                    go to state 48


state 25

   12 declaration_specifiers: declaration_specifier .

    $default  reduce using rule 12 (declaration_specifiers)


state 26

   14 declaration_specifier: storage_class_specifier .

    $default  reduce using rule 14 (declaration_specifier)


state 27

   16 declaration_specifier: type_qualifier .

    $default  reduce using rule 16 (declaration_specifier)


state 28

   17 declaration_specifier: function_specifier .

    $default  reduce using rule 17 (declaration_specifier)


state 29

   15 declaration_specifier: type_specifier .
   86 function_definition: type_specifier . declarator compound_statement

    '*'  shift, and go to state 40

    IDENTIFIER  reduce using rule 15 (declaration_specifier)
    IDENTIFIER  [reduce using rule 62 (pointer_opt)]
    '*'         [reduce using rule 15 (declaration_specifier)]
    '('         reduce using rule 15 (declaration_specifier)
    '('         [reduce using rule 62 (pointer_opt)]
    $default    reduce using rule 15 (declaration_specifier)

    declarator   go to state 49
    pointer_opt  go to state 47
    pointer      go to state 48


state 30

   34 type_specifier: struct_or_union_specifier .

    $default  reduce using rule 34 (type_specifier)


state 31

   35 type_specifier: enum_specifier .

    $default  reduce using rule 35 (type_specifier)


state 32

    3 external_declaration: function_definition .

    $default  reduce using rule 3 (external_declaration)


state 33

   36 struct_or_union_specifier: KW_STRUCT IDENTIFIER . '{' struct_declaration_list_opt '}'
   40                          | KW_STRUCT IDENTIFIER .

    '{'  shift, and go to state 50

    $default  reduce using rule 40 (struct_or_union_specifier)


state 34

   38 struct_or_union_specifier: KW_STRUCT '{' . struct_declaration_list_opt '}'

    KW_VOID      shift, and go to state 3
    KW_CHAR      shift, and go to state 4
    KW_SHORT     shift, and go to state 5
    KW_INT       shift, and go to state 6
    KW_LONG      shift, and go to state 7
    KW_SIGNED    shift, and go to state 8
    KW_UNSIGNED  shift, and go to state 9
    KW_FLOAT     shift, and go to state 10
    KW_DOUBLE    shift, and go to state 11
    KW_STRUCT    shift, and go to state 12
    KW_UNION     shift, and go to state 13
    KW_ENUM      shift, and go to state 14
    KW_TYPEDEF   shift, and go to state 15
    KW_CONST     shift, and go to state 16
    KW_VOLATILE  shift, and go to state 17
    KW_RESTRICT  shift, and go to state 18
    KW_INLINE    shift, and go to state 19
    KW_EXTERN    shift, and go to state 20
    KW_STATIC    shift, and go to state 21

    $default  reduce using rule 42 (struct_declaration_list_opt)

    declaration_specifiers       go to state 51
    declaration_specifier        go to state 25
    storage_class_specifier      go to state 26
    type_qualifier               go to state 27
    function_specifier           go to state 28
    type_specifier               go to state 45
    struct_or_union_specifier    go to state 30
    struct_declaration_list_opt  go to state 52
    struct_declaration_list      go to state 53
    struct_declaration           go to state 54
    enum_specifier               go to state 31


state 35

   37 struct_or_union_specifier: KW_UNION IDENTIFIER . '{' struct_declaration_list_opt '}'
   41                          | KW_UNION IDENTIFIER .

    '{'  shift, and go to state 55

    $default  reduce using rule 41 (struct_or_union_specifier)


state 36

   39 struct_or_union_specifier: KW_UNION '{' . struct_declaration_list_opt '}'

    KW_VOID      shift, and go to state 3
    KW_CHAR      shift, and go to state 4
    KW_SHORT     shift, and go to state 5
    KW_INT       shift, and go to state 6
    KW_LONG      shift, and go to state 7
    KW_SIGNED    shift, and go to state 8
    KW_UNSIGNED  shift, and go to state 9
    KW_FLOAT     shift, and go to state 10
    KW_DOUBLE    shift, and go to state 11
    KW_STRUCT    shift, and go to state 12
    KW_UNION     shift, and go to state 13
    KW_ENUM      shift, and go to state 14
    KW_TYPEDEF   shift, and go to state 15
    KW_CONST     shift, and go to state 16
    KW_VOLATILE  shift, and go to state 17
    KW_RESTRICT  shift, and go to state 18
    KW_INLINE    shift, and go to state 19
    KW_EXTERN    shift, and go to state 20
    KW_STATIC    shift, and go to state 21

    $default  reduce using rule 42 (struct_declaration_list_opt)

    declaration_specifiers       go to state 51
    declaration_specifier        go to state 25
    storage_class_specifier      go to state 26
    type_qualifier               go to state 27
    function_specifier           go to state 28
    type_specifier               go to state 45
    struct_or_union_specifier    go to state 30
    struct_declaration_list_opt  go to state 56
    struct_declaration_list      go to state 53
    struct_declaration           go to state 54
    enum_specifier               go to state 31


state 37

   52 enum_specifier: KW_ENUM IDENTIFIER . '{' enumerator_list_opt '}'
   54               | KW_ENUM IDENTIFIER .

    '{'  shift, and go to state 57

    $default  reduce using rule 54 (enum_specifier)


state 38

   53 enum_specifier: KW_ENUM '{' . enumerator_list_opt '}'

    IDENTIFIER  shift, and go to state 58

    $default  reduce using rule 55 (enumerator_list_opt)

    enumerator_list_opt  go to state 59
    enumerator_list      go to state 60
    enumerator           go to state 61


state 39

    4 external_declaration: declaration ';' .

    $default  reduce using rule 4 (external_declaration)


state 40

   64 pointer: '*' .
   65        | '*' . type_qualifier
   66        | '*' . pointer
   67        | '*' . type_qualifier pointer

    KW_CONST     shift, and go to state 16
    KW_VOLATILE  shift, and go to state 17
    KW_RESTRICT  shift, and go to state 18
    '*'          shift, and go to state 40

    $default  reduce using rule 64 (pointer)

    type_qualifier  go to state 62
    pointer         go to state 63


state 41

    5 declaration: declaration_specifiers init_declarator_list_opt .

    $default  reduce using rule 5 (declaration)


state 42

    7 init_declarator_list_opt: init_declarator_list .
    9 init_declarator_list: init_declarator_list . ',' init_declarator

    ','  shift, and go to state 64

    $default  reduce using rule 7 (init_declarator_list_opt)


state 43

    8 init_declarator_list: init_declarator .

    $default  reduce using rule 8 (init_declarator_list)


state 44

   13 declaration_specifiers: declaration_specifiers declaration_specifier .

    $default  reduce using rule 13 (declaration_specifiers)


state 45

   15 declaration_specifier: type_specifier .

    $default  reduce using rule 15 (declaration_specifier)


state 46

   10 init_declarator: declarator .
   11                | declarator . '=' assignment_expression
   85 function_definition: declaration_specifiers declarator . compound_statement

    '='  shift, and go to state 65
    '{'  shift, and go to state 66

    $default  reduce using rule 10 (init_declarator)

    compound_statement  go to state 67


state 47

   61 declarator: pointer_opt . direct_declarator

    IDENTIFIER  shift, and go to state 68
    '('         shift, and go to state 69

    direct_declarator  go to state 70


state 48

   63 pointer_opt: pointer .

    $default  reduce using rule 63 (pointer_opt)


state 49

   86 function_definition: type_specifier declarator . compound_statement

    '{'  shift, and go to state 66

    compound_statement  go to state 71


state 50

   36 struct_or_union_specifier: KW_STRUCT IDENTIFIER '{' . struct_declaration_list_opt '}'

    KW_VOID      shift, and go to state 3
    KW_CHAR      shift, and go to state 4
    KW_SHORT     shift, and go to state 5
    KW_INT       shift, and go to state 6
    KW_LONG      shift, and go to state 7
    KW_SIGNED    shift, and go to state 8
    KW_UNSIGNED  shift, and go to state 9
    KW_FLOAT     shift, and go to state 10
    KW_DOUBLE    shift, and go to state 11
    KW_STRUCT    shift, and go to state 12
    KW_UNION     shift, and go to state 13
    KW_ENUM      shift, and go to state 14
    KW_TYPEDEF   shift, and go to state 15
    KW_CONST     shift, and go to state 16
    KW_VOLATILE  shift, and go to state 17
    KW_RESTRICT  shift, and go to state 18
    KW_INLINE    shift, and go to state 19
    KW_EXTERN    shift, and go to state 20
    KW_STATIC    shift, and go to state 21

    $default  reduce using rule 42 (struct_declaration_list_opt)

    declaration_specifiers       go to state 51
    declaration_specifier        go to state 25
    storage_class_specifier      go to state 26
    type_qualifier               go to state 27
    function_specifier           go to state 28
    type_specifier               go to state 45
    struct_or_union_specifier    go to state 30
    struct_declaration_list_opt  go to state 72
    struct_declaration_list      go to state 53
    struct_declaration           go to state 54
    enum_specifier               go to state 31


state 51

   13 declaration_specifiers: declaration_specifiers . declaration_specifier
   46 struct_declaration: declaration_specifiers . struct_declarator_list ';'

    KW_VOID      shift, and go to state 3
    KW_CHAR      shift, and go to state 4
    KW_SHORT     shift, and go to state 5
    KW_INT       shift, and go to state 6
    KW_LONG      shift, and go to state 7
    KW_SIGNED    shift, and go to state 8
    KW_UNSIGNED  shift, and go to state 9
    KW_FLOAT     shift, and go to state 10
    KW_DOUBLE    shift, and go to state 11
    KW_STRUCT    shift, and go to state 12
    KW_UNION     shift, and go to state 13
    KW_ENUM      shift, and go to state 14
    KW_TYPEDEF   shift, and go to state 15
    KW_CONST     shift, and go to state 16
    KW_VOLATILE  shift, and go to state 17
    KW_RESTRICT  shift, and go to state 18
    KW_INLINE    shift, and go to state 19
    KW_EXTERN    shift, and go to state 20
    KW_STATIC    shift, and go to state 21
    ':'          shift, and go to state 73
    '*'          shift, and go to state 40

    $default  reduce using rule 62 (pointer_opt)

    declaration_specifier      go to state 44
    storage_class_specifier    go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    type_specifier             go to state 45
    struct_or_union_specifier  go to state 30
    struct_declarator_list     go to state 74
    struct_declarator          go to state 75
    enum_specifier             go to state 31
    declarator                 go to state 76
    pointer_opt                go to state 47
    pointer                    go to state 48


state 52

   38 struct_or_union_specifier: KW_STRUCT '{' struct_declaration_list_opt . '}'

    '}'  shift, and go to state 77


state 53

   43 struct_declaration_list_opt: struct_declaration_list .
   45 struct_declaration_list: struct_declaration_list . struct_declaration

    KW_VOID      shift, and go to state 3
    KW_CHAR      shift, and go to state 4
    KW_SHORT     shift, and go to state 5
    KW_INT       shift, and go to state 6
    KW_LONG      shift, and go to state 7
    KW_SIGNED    shift, and go to state 8
    KW_UNSIGNED  shift, and go to state 9
    KW_FLOAT     shift, and go to state 10
    KW_DOUBLE    shift, and go to state 11
    KW_STRUCT    shift, and go to state 12
    KW_UNION     shift, and go to state 13
    KW_ENUM      shift, and go to state 14
    KW_TYPEDEF   shift, and go to state 15
    KW_CONST     shift, and go to state 16
    KW_VOLATILE  shift, and go to state 17
    KW_RESTRICT  shift, and go to state 18
    KW_INLINE    shift, and go to state 19
    KW_EXTERN    shift, and go to state 20
    KW_STATIC    shift, and go to state 21

    $default  reduce using rule 43 (struct_declaration_list_opt)

    declaration_specifiers     go to state 51
    declaration_specifier      go to state 25
    storage_class_specifier    go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    type_specifier             go to state 45
    struct_or_union_specifier  go to state 30
    struct_declaration         go to state 78
    enum_specifier             go to state 31


state 54

   44 struct_declaration_list: struct_declaration .

    $default  reduce using rule 44 (struct_declaration_list)


state 55

   37 struct_or_union_specifier: KW_UNION IDENTIFIER '{' . struct_declaration_list_opt '}'

    KW_VOID      shift, and go to state 3
    KW_CHAR      shift, and go to state 4
    KW_SHORT     shift, and go to state 5
    KW_INT       shift, and go to state 6
    KW_LONG      shift, and go to state 7
    KW_SIGNED    shift, and go to state 8
    KW_UNSIGNED  shift, and go to state 9
    KW_FLOAT     shift, and go to state 10
    KW_DOUBLE    shift, and go to state 11
    KW_STRUCT    shift, and go to state 12
    KW_UNION     shift, and go to state 13
    KW_ENUM      shift, and go to state 14
    KW_TYPEDEF   shift, and go to state 15
    KW_CONST     shift, and go to state 16
    KW_VOLATILE  shift, and go to state 17
    KW_RESTRICT  shift, and go to state 18
    KW_INLINE    shift, and go to state 19
    KW_EXTERN    shift, and go to state 20
    KW_STATIC    shift, and go to state 21

    $default  reduce using rule 42 (struct_declaration_list_opt)

    declaration_specifiers       go to state 51
    declaration_specifier        go to state 25
    storage_class_specifier      go to state 26
    type_qualifier               go to state 27
    function_specifier           go to state 28
    type_specifier               go to state 45
    struct_or_union_specifier    go to state 30
    struct_declaration_list_opt  go to state 79
    struct_declaration_list      go to state 53
    struct_declaration           go to state 54
    enum_specifier               go to state 31


state 56

   39 struct_or_union_specifier: KW_UNION '{' struct_declaration_list_opt . '}'

    '}'  shift, and go to state 80


state 57

   52 enum_specifier: KW_ENUM IDENTIFIER '{' . enumerator_list_opt '}'

    IDENTIFIER  shift, and go to state 58

    $default  reduce using rule 55 (enumerator_list_opt)

    enumerator_list_opt  go to state 81
    enumerator_list      go to state 60
    enumerator           go to state 61


state 58

   59 enumerator: IDENTIFIER .
   60           | IDENTIFIER . '=' constant_expression

    '='  shift, and go to state 82

    $default  reduce using rule 59 (enumerator)


state 59

   53 enum_specifier: KW_ENUM '{' enumerator_list_opt . '}'

    '}'  shift, and go to state 83


state 60

   56 enumerator_list_opt: enumerator_list .
   58 enumerator_list: enumerator_list . ',' enumerator

    ','  shift, and go to state 84

    $default  reduce using rule 56 (enumerator_list_opt)


state 61

   57 enumerator_list: enumerator .

    $default  reduce using rule 57 (enumerator_list)


state 62

   65 pointer: '*' type_qualifier .
   67        | '*' type_qualifier . pointer

    '*'  shift, and go to state 40

    $default  reduce using rule 65 (pointer)

    pointer  go to state 85


state 63

   66 pointer: '*' pointer .

    $default  reduce using rule 66 (pointer)


state 64

    9 init_declarator_list: init_declarator_list ',' . init_declarator

    '*'  shift, and go to state 40

    $default  reduce using rule 62 (pointer_opt)

    init_declarator  go to state 86
    declarator       go to state 87
    pointer_opt      go to state 47
    pointer          go to state 48


state 65

   11 init_declarator: declarator '=' . assignment_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    assignment_expression      go to state 101
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 113
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 66

   92 compound_statement: '{' . block_item_list_opt '}'

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_VOID           shift, and go to state 3
    KW_CHAR           shift, and go to state 4
    KW_SHORT          shift, and go to state 5
    KW_INT            shift, and go to state 6
    KW_LONG           shift, and go to state 7
    KW_SIGNED         shift, and go to state 8
    KW_UNSIGNED       shift, and go to state 9
    KW_FLOAT          shift, and go to state 10
    KW_DOUBLE         shift, and go to state 11
    KW_STRUCT         shift, and go to state 12
    KW_UNION          shift, and go to state 13
    KW_ENUM           shift, and go to state 14
    KW_TYPEDEF        shift, and go to state 15
    KW_RETURN         shift, and go to state 116
    KW_IF             shift, and go to state 117
    KW_WHILE          shift, and go to state 118
    KW_FOR            shift, and go to state 119
    KW_DO             shift, and go to state 120
    KW_SWITCH         shift, and go to state 121
    KW_BREAK          shift, and go to state 122
    KW_CONTINUE       shift, and go to state 123
    KW_GOTO           shift, and go to state 124
    KW_CONST          shift, and go to state 16
    KW_VOLATILE       shift, and go to state 17
    KW_RESTRICT       shift, and go to state 18
    KW_INLINE         shift, and go to state 19
    KW_EXTERN         shift, and go to state 20
    KW_STATIC         shift, and go to state 21
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100
    ';'               shift, and go to state 125
    '{'               shift, and go to state 66

    $default  reduce using rule 93 (block_item_list_opt)

    declaration                go to state 126
    declaration_specifiers     go to state 127
    declaration_specifier      go to state 25
    storage_class_specifier    go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    type_specifier             go to state 45
    struct_or_union_specifier  go to state 30
    enum_specifier             go to state 31
    statement                  go to state 128
    compound_statement         go to state 129
    block_item_list_opt        go to state 130
    block_item_list            go to state 131
    block_item                 go to state 132
    expression_statement       go to state 133
    selection_statement        go to state 134
    iteration_statement        go to state 135
    jump_statement             go to state 136
    expression                 go to state 137
    assignment_expression      go to state 138
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 113
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 67

   85 function_definition: declaration_specifiers declarator compound_statement .

    $default  reduce using rule 85 (function_definition)


state 68

   68 direct_declarator: IDENTIFIER .

    $default  reduce using rule 68 (direct_declarator)


state 69

   69 direct_declarator: '(' . declarator ')'

    '*'  shift, and go to state 40

    $default  reduce using rule 62 (pointer_opt)

    declarator   go to state 139
    pointer_opt  go to state 47
    pointer      go to state 48


state 70

   61 declarator: pointer_opt direct_declarator .
   70 direct_declarator: direct_declarator . '[' assignment_expression_opt ']'
   71                  | direct_declarator . '(' parameter_type_list_opt ')'
   72                  | direct_declarator . '(' identifier_list_opt ')'

    '('  shift, and go to state 140
    '['  shift, and go to state 141

    $default  reduce using rule 61 (declarator)


state 71

   86 function_definition: type_specifier declarator compound_statement .

    $default  reduce using rule 86 (function_definition)


state 72

   36 struct_or_union_specifier: KW_STRUCT IDENTIFIER '{' struct_declaration_list_opt . '}'

    '}'  shift, and go to state 142


state 73

   50 struct_declarator: ':' . constant_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    conditional_expression     go to state 143
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 144
    postfix_expression         go to state 114
    primary_expression         go to state 115
    constant_expression        go to state 145


state 74

   46 struct_declaration: declaration_specifiers struct_declarator_list . ';'
   48 struct_declarator_list: struct_declarator_list . ',' struct_declarator

    ';'  shift, and go to state 146
    ','  shift, and go to state 147


state 75

   47 struct_declarator_list: struct_declarator .

    $default  reduce using rule 47 (struct_declarator_list)


state 76

   49 struct_declarator: declarator .
   51                  | declarator . ':' constant_expression

    ':'  shift, and go to state 148

    $default  reduce using rule 49 (struct_declarator)


state 77

   38 struct_or_union_specifier: KW_STRUCT '{' struct_declaration_list_opt '}' .

    $default  reduce using rule 38 (struct_or_union_specifier)


state 78

   45 struct_declaration_list: struct_declaration_list struct_declaration .

    $default  reduce using rule 45 (struct_declaration_list)


state 79

   37 struct_or_union_specifier: KW_UNION IDENTIFIER '{' struct_declaration_list_opt . '}'

    '}'  shift, and go to state 149


state 80

   39 struct_or_union_specifier: KW_UNION '{' struct_declaration_list_opt '}' .

    $default  reduce using rule 39 (struct_or_union_specifier)


state 81

   52 enum_specifier: KW_ENUM IDENTIFIER '{' enumerator_list_opt . '}'

    '}'  shift, and go to state 150


state 82

   60 enumerator: IDENTIFIER '=' . constant_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    conditional_expression     go to state 143
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 144
    postfix_expression         go to state 114
    primary_expression         go to state 115
    constant_expression        go to state 151


state 83

   53 enum_specifier: KW_ENUM '{' enumerator_list_opt '}' .

    $default  reduce using rule 53 (enum_specifier)


state 84

   58 enumerator_list: enumerator_list ',' . enumerator

    IDENTIFIER  shift, and go to state 58

    enumerator  go to state 152


state 85

   67 pointer: '*' type_qualifier pointer .

    $default  reduce using rule 67 (pointer)


state 86

    9 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 9 (init_declarator_list)


state 87

   10 init_declarator: declarator .
   11                | declarator . '=' assignment_expression

    '='  shift, and go to state 65

    $default  reduce using rule 10 (init_declarator)


state 88

  179 primary_expression: IDENTIFIER .

    $default  reduce using rule 179 (primary_expression)


state 89

  183 primary_expression: STRING_LITERAL .

    $default  reduce using rule 183 (primary_expression)


state 90

  180 primary_expression: INTEGER_CONSTANT .

    $default  reduce using rule 180 (primary_expression)


state 91

  181 primary_expression: FLOAT_CONSTANT .

    $default  reduce using rule 181 (primary_expression)


state 92

  182 primary_expression: CHAR_CONSTANT .

    $default  reduce using rule 182 (primary_expression)


state 93

  166 unary_expression: KW_SIZEOF . unary_expression
  167                 | KW_SIZEOF . '(' type_specifier ')'

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 153

    unary_expression    go to state 154
    postfix_expression  go to state 114
    primary_expression  go to state 115


state 94

  160 unary_expression: INC . unary_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    unary_expression    go to state 155
    postfix_expression  go to state 114
    primary_expression  go to state 115


state 95

  161 unary_expression: DEC . unary_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    unary_expression    go to state 156
    postfix_expression  go to state 114
    primary_expression  go to state 115


state 96

  162 unary_expression: '+' . unary_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    unary_expression    go to state 157
    postfix_expression  go to state 114
    primary_expression  go to state 115


state 97

  163 unary_expression: '-' . unary_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    unary_expression    go to state 158
    postfix_expression  go to state 114
    primary_expression  go to state 115


state 98

  164 unary_expression: '!' . unary_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    unary_expression    go to state 159
    postfix_expression  go to state 114
    primary_expression  go to state 115


state 99

  165 unary_expression: '~' . unary_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    unary_expression    go to state 160
    postfix_expression  go to state 114
    primary_expression  go to state 115


state 100

  184 primary_expression: '(' . expression ')'

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    expression                 go to state 161
    assignment_expression      go to state 138
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 113
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 101

   11 init_declarator: declarator '=' assignment_expression .

    $default  reduce using rule 11 (init_declarator)


state 102

  117 assignment_expression: conditional_expression .

    $default  reduce using rule 117 (assignment_expression)


state 103

  129 conditional_expression: logical_or_expression .
  130                       | logical_or_expression . '?' expression ':' conditional_expression
  132 logical_or_expression: logical_or_expression . LOGOR logical_and_expression

    LOGOR  shift, and go to state 162
    '?'    shift, and go to state 163

    $default  reduce using rule 129 (conditional_expression)


state 104

  131 logical_or_expression: logical_and_expression .
  134 logical_and_expression: logical_and_expression . LOGAND inclusive_or_expression

    LOGAND  shift, and go to state 164

    $default  reduce using rule 131 (logical_or_expression)


state 105

  133 logical_and_expression: inclusive_or_expression .
  136 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression

    '|'  shift, and go to state 165

    $default  reduce using rule 133 (logical_and_expression)


state 106

  135 inclusive_or_expression: exclusive_or_expression .
  138 exclusive_or_expression: exclusive_or_expression . '^' and_expression

    '^'  shift, and go to state 166

    $default  reduce using rule 135 (inclusive_or_expression)


state 107

  137 exclusive_or_expression: and_expression .
  140 and_expression: and_expression . '&' equality_expression

    '&'  shift, and go to state 167

    $default  reduce using rule 137 (exclusive_or_expression)


state 108

  139 and_expression: equality_expression .
  142 equality_expression: equality_expression . EQ relational_expression
  143                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 168
    NE  shift, and go to state 169

    $default  reduce using rule 139 (and_expression)


state 109

  141 equality_expression: relational_expression .
  145 relational_expression: relational_expression . '<' shift_expression
  146                      | relational_expression . '>' shift_expression
  147                      | relational_expression . LE shift_expression
  148                      | relational_expression . GE shift_expression

    LE   shift, and go to state 170
    GE   shift, and go to state 171
    '<'  shift, and go to state 172
    '>'  shift, and go to state 173

    $default  reduce using rule 141 (equality_expression)


state 110

  144 relational_expression: shift_expression .
  150 shift_expression: shift_expression . LSHIFT additive_expression
  151                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 174
    RSHIFT  shift, and go to state 175

    $default  reduce using rule 144 (relational_expression)


state 111

  149 shift_expression: additive_expression .
  153 additive_expression: additive_expression . '+' multiplicative_expression
  154                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 176
    '-'  shift, and go to state 177

    $default  reduce using rule 149 (shift_expression)


state 112

  152 additive_expression: multiplicative_expression .
  156 multiplicative_expression: multiplicative_expression . '*' unary_expression
  157                          | multiplicative_expression . '/' unary_expression
  158                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 178
    '/'  shift, and go to state 179
    '%'  shift, and go to state 180

    $default  reduce using rule 152 (additive_expression)


state 113

  118 assignment_expression: unary_expression . '=' assignment_expression
  119                      | unary_expression . ADD_ASSIGN assignment_expression
  120                      | unary_expression . SUB_ASSIGN assignment_expression
  121                      | unary_expression . MUL_ASSIGN assignment_expression
  122                      | unary_expression . DIV_ASSIGN assignment_expression
  123                      | unary_expression . MOD_ASSIGN assignment_expression
  124                      | unary_expression . AND_ASSIGN assignment_expression
  125                      | unary_expression . OR_ASSIGN assignment_expression
  126                      | unary_expression . XOR_ASSIGN assignment_expression
  127                      | unary_expression . LSHIFT_ASSIGN assignment_expression
  128                      | unary_expression . RSHIFT_ASSIGN assignment_expression
  155 multiplicative_expression: unary_expression .

    ADD_ASSIGN     shift, and go to state 181
    SUB_ASSIGN     shift, and go to state 182
    MUL_ASSIGN     shift, and go to state 183
    DIV_ASSIGN     shift, and go to state 184
    MOD_ASSIGN     shift, and go to state 185
    AND_ASSIGN     shift, and go to state 186
    OR_ASSIGN      shift, and go to state 187
    XOR_ASSIGN     shift, and go to state 188
    LSHIFT_ASSIGN  shift, and go to state 189
    RSHIFT_ASSIGN  shift, and go to state 190
    '='            shift, and go to state 191

    $default  reduce using rule 155 (multiplicative_expression)


state 114

  159 unary_expression: postfix_expression .
  169 postfix_expression: postfix_expression . '(' argument_expression_list_opt ')'
  170                   | postfix_expression . '[' expression ']'
  171                   | postfix_expression . '.' IDENTIFIER
  172                   | postfix_expression . ARROW IDENTIFIER
  173                   | postfix_expression . INC
  174                   | postfix_expression . DEC

    ARROW  shift, and go to state 192
    INC    shift, and go to state 193
    DEC    shift, and go to state 194
    '('    shift, and go to state 195
    '['    shift, and go to state 196
    '.'    shift, and go to state 197

    $default  reduce using rule 159 (unary_expression)


state 115

  168 postfix_expression: primary_expression .

    $default  reduce using rule 168 (postfix_expression)


state 116

  107 jump_statement: KW_RETURN . expression_opt ';'

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    $default  reduce using rule 111 (expression_opt)

    expression_opt             go to state 198
    expression                 go to state 199
    assignment_expression      go to state 138
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 113
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 117

  101 selection_statement: KW_IF . '(' expression ')' statement
  102                    | KW_IF . '(' expression ')' statement KW_ELSE statement

    '('  shift, and go to state 200


state 118

  104 iteration_statement: KW_WHILE . '(' expression ')' statement

    '('  shift, and go to state 201


state 119

  106 iteration_statement: KW_FOR . '(' expression_opt ';' expression_opt ';' expression_opt ')' statement

    '('  shift, and go to state 202


state 120

  105 iteration_statement: KW_DO . statement KW_WHILE '(' expression ')' ';'

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_RETURN         shift, and go to state 116
    KW_IF             shift, and go to state 117
    KW_WHILE          shift, and go to state 118
    KW_FOR            shift, and go to state 119
    KW_DO             shift, and go to state 120
    KW_SWITCH         shift, and go to state 121
    KW_BREAK          shift, and go to state 122
    KW_CONTINUE       shift, and go to state 123
    KW_GOTO           shift, and go to state 124
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100
    ';'               shift, and go to state 125
    '{'               shift, and go to state 66

    statement                  go to state 203
    compound_statement         go to state 129
    expression_statement       go to state 133
    selection_statement        go to state 134
    iteration_statement        go to state 135
    jump_statement             go to state 136
    expression                 go to state 137
    assignment_expression      go to state 138
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 113
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 121

  103 selection_statement: KW_SWITCH . '(' expression ')' statement

    '('  shift, and go to state 204


state 122

  108 jump_statement: KW_BREAK . ';'

    ';'  shift, and go to state 205


state 123

  109 jump_statement: KW_CONTINUE . ';'

    ';'  shift, and go to state 206


state 124

  110 jump_statement: KW_GOTO . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 207


state 125

   99 expression_statement: ';' .

    $default  reduce using rule 99 (expression_statement)


state 126

   97 block_item: declaration . ';'

    ';'  shift, and go to state 208


state 127

    5 declaration: declaration_specifiers . init_declarator_list_opt
   13 declaration_specifiers: declaration_specifiers . declaration_specifier

    KW_VOID      shift, and go to state 3
    KW_CHAR      shift, and go to state 4
    KW_SHORT     shift, and go to state 5
    KW_INT       shift, and go to state 6
    KW_LONG      shift, and go to state 7
    KW_SIGNED    shift, and go to state 8
    KW_UNSIGNED  shift, and go to state 9
    KW_FLOAT     shift, and go to state 10
    KW_DOUBLE    shift, and go to state 11
    KW_STRUCT    shift, and go to state 12
    KW_UNION     shift, and go to state 13
    KW_ENUM      shift, and go to state 14
    KW_TYPEDEF   shift, and go to state 15
    KW_CONST     shift, and go to state 16
    KW_VOLATILE  shift, and go to state 17
    KW_RESTRICT  shift, and go to state 18
    KW_INLINE    shift, and go to state 19
    KW_EXTERN    shift, and go to state 20
    KW_STATIC    shift, and go to state 21
    '*'          shift, and go to state 40

    ';'       reduce using rule 6 (init_declarator_list_opt)
    $default  reduce using rule 62 (pointer_opt)

    init_declarator_list_opt   go to state 41
    init_declarator_list       go to state 42
    init_declarator            go to state 43
    declaration_specifier      go to state 44
    storage_class_specifier    go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    type_specifier             go to state 45
    struct_or_union_specifier  go to state 30
    enum_specifier             go to state 31
    declarator                 go to state 87
    pointer_opt                go to state 47
    pointer                    go to state 48


state 128

   98 block_item: statement .

    $default  reduce using rule 98 (block_item)


state 129

   87 statement: compound_statement .

    $default  reduce using rule 87 (statement)


state 130

   92 compound_statement: '{' block_item_list_opt . '}'

    '}'  shift, and go to state 209


state 131

   94 block_item_list_opt: block_item_list .
   96 block_item_list: block_item_list . block_item

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_VOID           shift, and go to state 3
    KW_CHAR           shift, and go to state 4
    KW_SHORT          shift, and go to state 5
    KW_INT            shift, and go to state 6
    KW_LONG           shift, and go to state 7
    KW_SIGNED         shift, and go to state 8
    KW_UNSIGNED       shift, and go to state 9
    KW_FLOAT          shift, and go to state 10
    KW_DOUBLE         shift, and go to state 11
    KW_STRUCT         shift, and go to state 12
    KW_UNION          shift, and go to state 13
    KW_ENUM           shift, and go to state 14
    KW_TYPEDEF        shift, and go to state 15
    KW_RETURN         shift, and go to state 116
    KW_IF             shift, and go to state 117
    KW_WHILE          shift, and go to state 118
    KW_FOR            shift, and go to state 119
    KW_DO             shift, and go to state 120
    KW_SWITCH         shift, and go to state 121
    KW_BREAK          shift, and go to state 122
    KW_CONTINUE       shift, and go to state 123
    KW_GOTO           shift, and go to state 124
    KW_CONST          shift, and go to state 16
    KW_VOLATILE       shift, and go to state 17
    KW_RESTRICT       shift, and go to state 18
    KW_INLINE         shift, and go to state 19
    KW_EXTERN         shift, and go to state 20
    KW_STATIC         shift, and go to state 21
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100
    ';'               shift, and go to state 125
    '{'               shift, and go to state 66

    $default  reduce using rule 94 (block_item_list_opt)

    declaration                go to state 126
    declaration_specifiers     go to state 127
    declaration_specifier      go to state 25
    storage_class_specifier    go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    type_specifier             go to state 45
    struct_or_union_specifier  go to state 30
    enum_specifier             go to state 31
    statement                  go to state 128
    compound_statement         go to state 129
    block_item                 go to state 210
    expression_statement       go to state 133
    selection_statement        go to state 134
    iteration_statement        go to state 135
    jump_statement             go to state 136
    expression                 go to state 137
    assignment_expression      go to state 138
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 113
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 132

   95 block_item_list: block_item .

    $default  reduce using rule 95 (block_item_list)


state 133

   88 statement: expression_statement .

    $default  reduce using rule 88 (statement)


state 134

   89 statement: selection_statement .

    $default  reduce using rule 89 (statement)


state 135

   90 statement: iteration_statement .

    $default  reduce using rule 90 (statement)


state 136

   91 statement: jump_statement .

    $default  reduce using rule 91 (statement)


state 137

  100 expression_statement: expression . ';'
  114 expression: expression . ',' assignment_expression

    ';'  shift, and go to state 211
    ','  shift, and go to state 212


state 138

  113 expression: assignment_expression .

    $default  reduce using rule 113 (expression)


state 139

   69 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 213


state 140

   71 direct_declarator: direct_declarator '(' . parameter_type_list_opt ')'
   72                  | direct_declarator '(' . identifier_list_opt ')'

    IDENTIFIER   shift, and go to state 214
    KW_VOID      shift, and go to state 3
    KW_CHAR      shift, and go to state 4
    KW_SHORT     shift, and go to state 5
    KW_INT       shift, and go to state 6
    KW_LONG      shift, and go to state 7
    KW_SIGNED    shift, and go to state 8
    KW_UNSIGNED  shift, and go to state 9
    KW_FLOAT     shift, and go to state 10
    KW_DOUBLE    shift, and go to state 11
    KW_STRUCT    shift, and go to state 12
    KW_UNION     shift, and go to state 13
    KW_ENUM      shift, and go to state 14
    KW_TYPEDEF   shift, and go to state 15
    KW_CONST     shift, and go to state 16
    KW_VOLATILE  shift, and go to state 17
    KW_RESTRICT  shift, and go to state 18
    KW_INLINE    shift, and go to state 19
    KW_EXTERN    shift, and go to state 20
    KW_STATIC    shift, and go to state 21

    ')'       reduce using rule 73 (identifier_list_opt)
    ')'       [reduce using rule 77 (parameter_type_list_opt)]
    $default  reduce using rule 73 (identifier_list_opt)

    declaration_specifiers     go to state 215
    declaration_specifier      go to state 25
    storage_class_specifier    go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    type_specifier             go to state 45
    struct_or_union_specifier  go to state 30
    enum_specifier             go to state 31
    identifier_list_opt        go to state 216
    identifier_list            go to state 217
    parameter_type_list_opt    go to state 218
    parameter_type_list        go to state 219
    parameter_list             go to state 220
    parameter_declaration      go to state 221


state 141

   70 direct_declarator: direct_declarator '[' . assignment_expression_opt ']'

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    $default  reduce using rule 115 (assignment_expression_opt)

    assignment_expression_opt  go to state 222
    assignment_expression      go to state 223
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 113
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 142

   36 struct_or_union_specifier: KW_STRUCT IDENTIFIER '{' struct_declaration_list_opt '}' .

    $default  reduce using rule 36 (struct_or_union_specifier)


state 143

  185 constant_expression: conditional_expression .

    $default  reduce using rule 185 (constant_expression)


state 144

  155 multiplicative_expression: unary_expression .

    $default  reduce using rule 155 (multiplicative_expression)


state 145

   50 struct_declarator: ':' constant_expression .

    $default  reduce using rule 50 (struct_declarator)


state 146

   46 struct_declaration: declaration_specifiers struct_declarator_list ';' .

    $default  reduce using rule 46 (struct_declaration)


state 147

   48 struct_declarator_list: struct_declarator_list ',' . struct_declarator

    ':'  shift, and go to state 73
    '*'  shift, and go to state 40

    $default  reduce using rule 62 (pointer_opt)

    struct_declarator  go to state 224
    declarator         go to state 76
    pointer_opt        go to state 47
    pointer            go to state 48


state 148

   51 struct_declarator: declarator ':' . constant_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    conditional_expression     go to state 143
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 144
    postfix_expression         go to state 114
    primary_expression         go to state 115
    constant_expression        go to state 225


state 149

   37 struct_or_union_specifier: KW_UNION IDENTIFIER '{' struct_declaration_list_opt '}' .

    $default  reduce using rule 37 (struct_or_union_specifier)


state 150

   52 enum_specifier: KW_ENUM IDENTIFIER '{' enumerator_list_opt '}' .

    $default  reduce using rule 52 (enum_specifier)


state 151

   60 enumerator: IDENTIFIER '=' constant_expression .

    $default  reduce using rule 60 (enumerator)


state 152

   58 enumerator_list: enumerator_list ',' enumerator .

    $default  reduce using rule 58 (enumerator_list)


state 153

  167 unary_expression: KW_SIZEOF '(' . type_specifier ')'
  184 primary_expression: '(' . expression ')'

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_VOID           shift, and go to state 3
    KW_CHAR           shift, and go to state 4
    KW_SHORT          shift, and go to state 5
    KW_INT            shift, and go to state 6
    KW_LONG           shift, and go to state 7
    KW_SIGNED         shift, and go to state 8
    KW_UNSIGNED       shift, and go to state 9
    KW_FLOAT          shift, and go to state 10
    KW_DOUBLE         shift, and go to state 11
    KW_STRUCT         shift, and go to state 12
    KW_UNION          shift, and go to state 13
    KW_ENUM           shift, and go to state 14
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    type_specifier             go to state 226
    struct_or_union_specifier  go to state 30
    enum_specifier             go to state 31
    expression                 go to state 161
    assignment_expression      go to state 138
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 113
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 154

  166 unary_expression: KW_SIZEOF unary_expression .

    $default  reduce using rule 166 (unary_expression)


state 155

  160 unary_expression: INC unary_expression .

    $default  reduce using rule 160 (unary_expression)


state 156

  161 unary_expression: DEC unary_expression .

    $default  reduce using rule 161 (unary_expression)


state 157

  162 unary_expression: '+' unary_expression .

    $default  reduce using rule 162 (unary_expression)


state 158

  163 unary_expression: '-' unary_expression .

    $default  reduce using rule 163 (unary_expression)


state 159

  164 unary_expression: '!' unary_expression .

    $default  reduce using rule 164 (unary_expression)


state 160

  165 unary_expression: '~' unary_expression .

    $default  reduce using rule 165 (unary_expression)


state 161

  114 expression: expression . ',' assignment_expression
  184 primary_expression: '(' expression . ')'

    ')'  shift, and go to state 227
    ','  shift, and go to state 212


state 162

  132 logical_or_expression: logical_or_expression LOGOR . logical_and_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    logical_and_expression     go to state 228
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 144
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 163

  130 conditional_expression: logical_or_expression '?' . expression ':' conditional_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    expression                 go to state 229
    assignment_expression      go to state 138
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 113
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 164

  134 logical_and_expression: logical_and_expression LOGAND . inclusive_or_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    inclusive_or_expression    go to state 230
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 144
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 165

  136 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    exclusive_or_expression    go to state 231
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 144
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 166

  138 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    and_expression             go to state 232
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 144
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 167

  140 and_expression: and_expression '&' . equality_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    equality_expression        go to state 233
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 144
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 168

  142 equality_expression: equality_expression EQ . relational_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    relational_expression      go to state 234
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 144
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 169

  143 equality_expression: equality_expression NE . relational_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    relational_expression      go to state 235
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 144
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 170

  147 relational_expression: relational_expression LE . shift_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    shift_expression           go to state 236
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 144
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 171

  148 relational_expression: relational_expression GE . shift_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    shift_expression           go to state 237
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 144
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 172

  145 relational_expression: relational_expression '<' . shift_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    shift_expression           go to state 238
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 144
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 173

  146 relational_expression: relational_expression '>' . shift_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    shift_expression           go to state 239
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 144
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 174

  150 shift_expression: shift_expression LSHIFT . additive_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    additive_expression        go to state 240
    multiplicative_expression  go to state 112
    unary_expression           go to state 144
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 175

  151 shift_expression: shift_expression RSHIFT . additive_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    additive_expression        go to state 241
    multiplicative_expression  go to state 112
    unary_expression           go to state 144
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 176

  153 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    multiplicative_expression  go to state 242
    unary_expression           go to state 144
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 177

  154 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    multiplicative_expression  go to state 243
    unary_expression           go to state 144
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 178

  156 multiplicative_expression: multiplicative_expression '*' . unary_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    unary_expression    go to state 244
    postfix_expression  go to state 114
    primary_expression  go to state 115


state 179

  157 multiplicative_expression: multiplicative_expression '/' . unary_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    unary_expression    go to state 245
    postfix_expression  go to state 114
    primary_expression  go to state 115


state 180

  158 multiplicative_expression: multiplicative_expression '%' . unary_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    unary_expression    go to state 246
    postfix_expression  go to state 114
    primary_expression  go to state 115


state 181

  119 assignment_expression: unary_expression ADD_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    assignment_expression      go to state 247
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 113
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 182

  120 assignment_expression: unary_expression SUB_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    assignment_expression      go to state 248
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 113
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 183

  121 assignment_expression: unary_expression MUL_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    assignment_expression      go to state 249
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 113
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 184

  122 assignment_expression: unary_expression DIV_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    assignment_expression      go to state 250
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 113
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 185

  123 assignment_expression: unary_expression MOD_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    assignment_expression      go to state 251
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 113
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 186

  124 assignment_expression: unary_expression AND_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    assignment_expression      go to state 252
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 113
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 187

  125 assignment_expression: unary_expression OR_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    assignment_expression      go to state 253
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 113
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 188

  126 assignment_expression: unary_expression XOR_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    assignment_expression      go to state 254
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 113
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 189

  127 assignment_expression: unary_expression LSHIFT_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    assignment_expression      go to state 255
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 113
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 190

  128 assignment_expression: unary_expression RSHIFT_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    assignment_expression      go to state 256
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 113
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 191

  118 assignment_expression: unary_expression '=' . assignment_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    assignment_expression      go to state 257
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 113
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 192

  172 postfix_expression: postfix_expression ARROW . IDENTIFIER

    IDENTIFIER  shift, and go to state 258


state 193

  173 postfix_expression: postfix_expression INC .

    $default  reduce using rule 173 (postfix_expression)


state 194

  174 postfix_expression: postfix_expression DEC .

    $default  reduce using rule 174 (postfix_expression)


state 195

  169 postfix_expression: postfix_expression '(' . argument_expression_list_opt ')'

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    $default  reduce using rule 175 (argument_expression_list_opt)

    assignment_expression         go to state 259
    conditional_expression        go to state 102
    logical_or_expression         go to state 103
    logical_and_expression        go to state 104
    inclusive_or_expression       go to state 105
    exclusive_or_expression       go to state 106
    and_expression                go to state 107
    equality_expression           go to state 108
    relational_expression         go to state 109
    shift_expression              go to state 110
    additive_expression           go to state 111
    multiplicative_expression     go to state 112
    unary_expression              go to state 113
    postfix_expression            go to state 114
    argument_expression_list_opt  go to state 260
    argument_expression_list      go to state 261
    primary_expression            go to state 115


state 196

  170 postfix_expression: postfix_expression '[' . expression ']'

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    expression                 go to state 262
    assignment_expression      go to state 138
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 113
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 197

  171 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 263


state 198

  107 jump_statement: KW_RETURN expression_opt . ';'

    ';'  shift, and go to state 264


state 199

  112 expression_opt: expression .
  114 expression: expression . ',' assignment_expression

    ','  shift, and go to state 212

    $default  reduce using rule 112 (expression_opt)


state 200

  101 selection_statement: KW_IF '(' . expression ')' statement
  102                    | KW_IF '(' . expression ')' statement KW_ELSE statement

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    expression                 go to state 265
    assignment_expression      go to state 138
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 113
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 201

  104 iteration_statement: KW_WHILE '(' . expression ')' statement

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    expression                 go to state 266
    assignment_expression      go to state 138
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 113
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 202

  106 iteration_statement: KW_FOR '(' . expression_opt ';' expression_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    $default  reduce using rule 111 (expression_opt)

    expression_opt             go to state 267
    expression                 go to state 199
    assignment_expression      go to state 138
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 113
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 203

  105 iteration_statement: KW_DO statement . KW_WHILE '(' expression ')' ';'

    KW_WHILE  shift, and go to state 268


state 204

  103 selection_statement: KW_SWITCH '(' . expression ')' statement

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    expression                 go to state 269
    assignment_expression      go to state 138
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 113
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 205

  108 jump_statement: KW_BREAK ';' .

    $default  reduce using rule 108 (jump_statement)


state 206

  109 jump_statement: KW_CONTINUE ';' .

    $default  reduce using rule 109 (jump_statement)


state 207

  110 jump_statement: KW_GOTO IDENTIFIER . ';'

    ';'  shift, and go to state 270


state 208

   97 block_item: declaration ';' .

    $default  reduce using rule 97 (block_item)


state 209

   92 compound_statement: '{' block_item_list_opt '}' .

    $default  reduce using rule 92 (compound_statement)


state 210

   96 block_item_list: block_item_list block_item .

    $default  reduce using rule 96 (block_item_list)


state 211

  100 expression_statement: expression ';' .

    $default  reduce using rule 100 (expression_statement)


state 212

  114 expression: expression ',' . assignment_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    assignment_expression      go to state 271
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 113
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 213

   69 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 69 (direct_declarator)


state 214

   75 identifier_list: IDENTIFIER .

    $default  reduce using rule 75 (identifier_list)


state 215

   13 declaration_specifiers: declaration_specifiers . declaration_specifier
   83 parameter_declaration: declaration_specifiers . declarator
   84                      | declaration_specifiers .

    KW_VOID      shift, and go to state 3
    KW_CHAR      shift, and go to state 4
    KW_SHORT     shift, and go to state 5
    KW_INT       shift, and go to state 6
    KW_LONG      shift, and go to state 7
    KW_SIGNED    shift, and go to state 8
    KW_UNSIGNED  shift, and go to state 9
    KW_FLOAT     shift, and go to state 10
    KW_DOUBLE    shift, and go to state 11
    KW_STRUCT    shift, and go to state 12
    KW_UNION     shift, and go to state 13
    KW_ENUM      shift, and go to state 14
    KW_TYPEDEF   shift, and go to state 15
    KW_CONST     shift, and go to state 16
    KW_VOLATILE  shift, and go to state 17
    KW_RESTRICT  shift, and go to state 18
    KW_INLINE    shift, and go to state 19
    KW_EXTERN    shift, and go to state 20
    KW_STATIC    shift, and go to state 21
    '*'          shift, and go to state 40

    ')'       reduce using rule 84 (parameter_declaration)
    ','       reduce using rule 84 (parameter_declaration)
    $default  reduce using rule 62 (pointer_opt)

    declaration_specifier      go to state 44
    storage_class_specifier    go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    type_specifier             go to state 45
    struct_or_union_specifier  go to state 30
    enum_specifier             go to state 31
    declarator                 go to state 272
    pointer_opt                go to state 47
    pointer                    go to state 48


state 216

   72 direct_declarator: direct_declarator '(' identifier_list_opt . ')'

    ')'  shift, and go to state 273


state 217

   74 identifier_list_opt: identifier_list .
   76 identifier_list: identifier_list . ',' IDENTIFIER

    ','  shift, and go to state 274

    $default  reduce using rule 74 (identifier_list_opt)


state 218

   71 direct_declarator: direct_declarator '(' parameter_type_list_opt . ')'

    ')'  shift, and go to state 275


state 219

   78 parameter_type_list_opt: parameter_type_list .

    $default  reduce using rule 78 (parameter_type_list_opt)


state 220

   79 parameter_type_list: parameter_list .
   80                    | parameter_list . ',' ELLIPSIS
   82 parameter_list: parameter_list . ',' parameter_declaration

    ','  shift, and go to state 276

    $default  reduce using rule 79 (parameter_type_list)


state 221

   81 parameter_list: parameter_declaration .

    $default  reduce using rule 81 (parameter_list)


state 222

   70 direct_declarator: direct_declarator '[' assignment_expression_opt . ']'

    ']'  shift, and go to state 277


state 223

  116 assignment_expression_opt: assignment_expression .

    $default  reduce using rule 116 (assignment_expression_opt)


state 224

   48 struct_declarator_list: struct_declarator_list ',' struct_declarator .

    $default  reduce using rule 48 (struct_declarator_list)


state 225

   51 struct_declarator: declarator ':' constant_expression .

    $default  reduce using rule 51 (struct_declarator)


state 226

  167 unary_expression: KW_SIZEOF '(' type_specifier . ')'

    ')'  shift, and go to state 278


state 227

  184 primary_expression: '(' expression ')' .

    $default  reduce using rule 184 (primary_expression)


state 228

  132 logical_or_expression: logical_or_expression LOGOR logical_and_expression .
  134 logical_and_expression: logical_and_expression . LOGAND inclusive_or_expression

    LOGAND  shift, and go to state 164

    $default  reduce using rule 132 (logical_or_expression)


state 229

  114 expression: expression . ',' assignment_expression
  130 conditional_expression: logical_or_expression '?' expression . ':' conditional_expression

    ':'  shift, and go to state 279
    ','  shift, and go to state 212


state 230

  134 logical_and_expression: logical_and_expression LOGAND inclusive_or_expression .
  136 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression

    '|'  shift, and go to state 165

    $default  reduce using rule 134 (logical_and_expression)


state 231

  136 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .
  138 exclusive_or_expression: exclusive_or_expression . '^' and_expression

    '^'  shift, and go to state 166

    $default  reduce using rule 136 (inclusive_or_expression)


state 232

  138 exclusive_or_expression: exclusive_or_expression '^' and_expression .
  140 and_expression: and_expression . '&' equality_expression

    '&'  shift, and go to state 167

    $default  reduce using rule 138 (exclusive_or_expression)


state 233

  140 and_expression: and_expression '&' equality_expression .
  142 equality_expression: equality_expression . EQ relational_expression
  143                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 168
    NE  shift, and go to state 169

    $default  reduce using rule 140 (and_expression)


state 234

  142 equality_expression: equality_expression EQ relational_expression .
  145 relational_expression: relational_expression . '<' shift_expression
  146                      | relational_expression . '>' shift_expression
  147                      | relational_expression . LE shift_expression
  148                      | relational_expression . GE shift_expression

    LE   shift, and go to state 170
    GE   shift, and go to state 171
    '<'  shift, and go to state 172
    '>'  shift, and go to state 173

    $default  reduce using rule 142 (equality_expression)


state 235

  143 equality_expression: equality_expression NE relational_expression .
  145 relational_expression: relational_expression . '<' shift_expression
  146                      | relational_expression . '>' shift_expression
  147                      | relational_expression . LE shift_expression
  148                      | relational_expression . GE shift_expression

    LE   shift, and go to state 170
    GE   shift, and go to state 171
    '<'  shift, and go to state 172
    '>'  shift, and go to state 173

    $default  reduce using rule 143 (equality_expression)


state 236

  147 relational_expression: relational_expression LE shift_expression .
  150 shift_expression: shift_expression . LSHIFT additive_expression
  151                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 174
    RSHIFT  shift, and go to state 175

    $default  reduce using rule 147 (relational_expression)


state 237

  148 relational_expression: relational_expression GE shift_expression .
  150 shift_expression: shift_expression . LSHIFT additive_expression
  151                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 174
    RSHIFT  shift, and go to state 175

    $default  reduce using rule 148 (relational_expression)


state 238

  145 relational_expression: relational_expression '<' shift_expression .
  150 shift_expression: shift_expression . LSHIFT additive_expression
  151                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 174
    RSHIFT  shift, and go to state 175

    $default  reduce using rule 145 (relational_expression)


state 239

  146 relational_expression: relational_expression '>' shift_expression .
  150 shift_expression: shift_expression . LSHIFT additive_expression
  151                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 174
    RSHIFT  shift, and go to state 175

    $default  reduce using rule 146 (relational_expression)


state 240

  150 shift_expression: shift_expression LSHIFT additive_expression .
  153 additive_expression: additive_expression . '+' multiplicative_expression
  154                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 176
    '-'  shift, and go to state 177

    $default  reduce using rule 150 (shift_expression)


state 241

  151 shift_expression: shift_expression RSHIFT additive_expression .
  153 additive_expression: additive_expression . '+' multiplicative_expression
  154                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 176
    '-'  shift, and go to state 177

    $default  reduce using rule 151 (shift_expression)


state 242

  153 additive_expression: additive_expression '+' multiplicative_expression .
  156 multiplicative_expression: multiplicative_expression . '*' unary_expression
  157                          | multiplicative_expression . '/' unary_expression
  158                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 178
    '/'  shift, and go to state 179
    '%'  shift, and go to state 180

    $default  reduce using rule 153 (additive_expression)


state 243

  154 additive_expression: additive_expression '-' multiplicative_expression .
  156 multiplicative_expression: multiplicative_expression . '*' unary_expression
  157                          | multiplicative_expression . '/' unary_expression
  158                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 178
    '/'  shift, and go to state 179
    '%'  shift, and go to state 180

    $default  reduce using rule 154 (additive_expression)


state 244

  156 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 156 (multiplicative_expression)


state 245

  157 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 157 (multiplicative_expression)


state 246

  158 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 158 (multiplicative_expression)


state 247

  119 assignment_expression: unary_expression ADD_ASSIGN assignment_expression .

    $default  reduce using rule 119 (assignment_expression)


state 248

  120 assignment_expression: unary_expression SUB_ASSIGN assignment_expression .

    $default  reduce using rule 120 (assignment_expression)


state 249

  121 assignment_expression: unary_expression MUL_ASSIGN assignment_expression .

    $default  reduce using rule 121 (assignment_expression)


state 250

  122 assignment_expression: unary_expression DIV_ASSIGN assignment_expression .

    $default  reduce using rule 122 (assignment_expression)


state 251

  123 assignment_expression: unary_expression MOD_ASSIGN assignment_expression .

    $default  reduce using rule 123 (assignment_expression)


state 252

  124 assignment_expression: unary_expression AND_ASSIGN assignment_expression .

    $default  reduce using rule 124 (assignment_expression)


state 253

  125 assignment_expression: unary_expression OR_ASSIGN assignment_expression .

    $default  reduce using rule 125 (assignment_expression)


state 254

  126 assignment_expression: unary_expression XOR_ASSIGN assignment_expression .

    $default  reduce using rule 126 (assignment_expression)


state 255

  127 assignment_expression: unary_expression LSHIFT_ASSIGN assignment_expression .

    $default  reduce using rule 127 (assignment_expression)


state 256

  128 assignment_expression: unary_expression RSHIFT_ASSIGN assignment_expression .

    $default  reduce using rule 128 (assignment_expression)


state 257

  118 assignment_expression: unary_expression '=' assignment_expression .

    $default  reduce using rule 118 (assignment_expression)


state 258

  172 postfix_expression: postfix_expression ARROW IDENTIFIER .

    $default  reduce using rule 172 (postfix_expression)


state 259

  177 argument_expression_list: assignment_expression .

    $default  reduce using rule 177 (argument_expression_list)


state 260

  169 postfix_expression: postfix_expression '(' argument_expression_list_opt . ')'

    ')'  shift, and go to state 280


state 261

  176 argument_expression_list_opt: argument_expression_list .
  178 argument_expression_list: argument_expression_list . ',' assignment_expression

    ','  shift, and go to state 281

    $default  reduce using rule 176 (argument_expression_list_opt)


state 262

  114 expression: expression . ',' assignment_expression
  170 postfix_expression: postfix_expression '[' expression . ']'

    ']'  shift, and go to state 282
    ','  shift, and go to state 212


state 263

  171 postfix_expression: postfix_expression '.' IDENTIFIER .

    $default  reduce using rule 171 (postfix_expression)


state 264

  107 jump_statement: KW_RETURN expression_opt ';' .

    $default  reduce using rule 107 (jump_statement)


state 265

  101 selection_statement: KW_IF '(' expression . ')' statement
  102                    | KW_IF '(' expression . ')' statement KW_ELSE statement
  114 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 283
    ','  shift, and go to state 212


state 266

  104 iteration_statement: KW_WHILE '(' expression . ')' statement
  114 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 284
    ','  shift, and go to state 212


state 267

  106 iteration_statement: KW_FOR '(' expression_opt . ';' expression_opt ';' expression_opt ')' statement

    ';'  shift, and go to state 285


state 268

  105 iteration_statement: KW_DO statement KW_WHILE . '(' expression ')' ';'

    '('  shift, and go to state 286


state 269

  103 selection_statement: KW_SWITCH '(' expression . ')' statement
  114 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 287
    ','  shift, and go to state 212


state 270

  110 jump_statement: KW_GOTO IDENTIFIER ';' .

    $default  reduce using rule 110 (jump_statement)


state 271

  114 expression: expression ',' assignment_expression .

    $default  reduce using rule 114 (expression)


state 272

   83 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 83 (parameter_declaration)


state 273

   72 direct_declarator: direct_declarator '(' identifier_list_opt ')' .

    $default  reduce using rule 72 (direct_declarator)


state 274

   76 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 288


state 275

   71 direct_declarator: direct_declarator '(' parameter_type_list_opt ')' .

    $default  reduce using rule 71 (direct_declarator)


state 276

   80 parameter_type_list: parameter_list ',' . ELLIPSIS
   82 parameter_list: parameter_list ',' . parameter_declaration

    KW_VOID      shift, and go to state 3
    KW_CHAR      shift, and go to state 4
    KW_SHORT     shift, and go to state 5
    KW_INT       shift, and go to state 6
    KW_LONG      shift, and go to state 7
    KW_SIGNED    shift, and go to state 8
    KW_UNSIGNED  shift, and go to state 9
    KW_FLOAT     shift, and go to state 10
    KW_DOUBLE    shift, and go to state 11
    KW_STRUCT    shift, and go to state 12
    KW_UNION     shift, and go to state 13
    KW_ENUM      shift, and go to state 14
    KW_TYPEDEF   shift, and go to state 15
    KW_CONST     shift, and go to state 16
    KW_VOLATILE  shift, and go to state 17
    KW_RESTRICT  shift, and go to state 18
    KW_INLINE    shift, and go to state 19
    KW_EXTERN    shift, and go to state 20
    KW_STATIC    shift, and go to state 21
    ELLIPSIS     shift, and go to state 289

    declaration_specifiers     go to state 215
    declaration_specifier      go to state 25
    storage_class_specifier    go to state 26
    type_qualifier             go to state 27
    function_specifier         go to state 28
    type_specifier             go to state 45
    struct_or_union_specifier  go to state 30
    enum_specifier             go to state 31
    parameter_declaration      go to state 290


state 277

   70 direct_declarator: direct_declarator '[' assignment_expression_opt ']' .

    $default  reduce using rule 70 (direct_declarator)


state 278

  167 unary_expression: KW_SIZEOF '(' type_specifier ')' .

    $default  reduce using rule 167 (unary_expression)


state 279

  130 conditional_expression: logical_or_expression '?' expression ':' . conditional_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    conditional_expression     go to state 291
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 144
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 280

  169 postfix_expression: postfix_expression '(' argument_expression_list_opt ')' .

    $default  reduce using rule 169 (postfix_expression)


state 281

  178 argument_expression_list: argument_expression_list ',' . assignment_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    assignment_expression      go to state 292
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 113
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 282

  170 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 170 (postfix_expression)


state 283

  101 selection_statement: KW_IF '(' expression ')' . statement
  102                    | KW_IF '(' expression ')' . statement KW_ELSE statement

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_RETURN         shift, and go to state 116
    KW_IF             shift, and go to state 117
    KW_WHILE          shift, and go to state 118
    KW_FOR            shift, and go to state 119
    KW_DO             shift, and go to state 120
    KW_SWITCH         shift, and go to state 121
    KW_BREAK          shift, and go to state 122
    KW_CONTINUE       shift, and go to state 123
    KW_GOTO           shift, and go to state 124
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100
    ';'               shift, and go to state 125
    '{'               shift, and go to state 66

    statement                  go to state 293
    compound_statement         go to state 129
    expression_statement       go to state 133
    selection_statement        go to state 134
    iteration_statement        go to state 135
    jump_statement             go to state 136
    expression                 go to state 137
    assignment_expression      go to state 138
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 113
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 284

  104 iteration_statement: KW_WHILE '(' expression ')' . statement

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_RETURN         shift, and go to state 116
    KW_IF             shift, and go to state 117
    KW_WHILE          shift, and go to state 118
    KW_FOR            shift, and go to state 119
    KW_DO             shift, and go to state 120
    KW_SWITCH         shift, and go to state 121
    KW_BREAK          shift, and go to state 122
    KW_CONTINUE       shift, and go to state 123
    KW_GOTO           shift, and go to state 124
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100
    ';'               shift, and go to state 125
    '{'               shift, and go to state 66

    statement                  go to state 294
    compound_statement         go to state 129
    expression_statement       go to state 133
    selection_statement        go to state 134
    iteration_statement        go to state 135
    jump_statement             go to state 136
    expression                 go to state 137
    assignment_expression      go to state 138
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 113
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 285

  106 iteration_statement: KW_FOR '(' expression_opt ';' . expression_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    $default  reduce using rule 111 (expression_opt)

    expression_opt             go to state 295
    expression                 go to state 199
    assignment_expression      go to state 138
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 113
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 286

  105 iteration_statement: KW_DO statement KW_WHILE '(' . expression ')' ';'

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    expression                 go to state 296
    assignment_expression      go to state 138
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 113
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 287

  103 selection_statement: KW_SWITCH '(' expression ')' . statement

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_RETURN         shift, and go to state 116
    KW_IF             shift, and go to state 117
    KW_WHILE          shift, and go to state 118
    KW_FOR            shift, and go to state 119
    KW_DO             shift, and go to state 120
    KW_SWITCH         shift, and go to state 121
    KW_BREAK          shift, and go to state 122
    KW_CONTINUE       shift, and go to state 123
    KW_GOTO           shift, and go to state 124
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100
    ';'               shift, and go to state 125
    '{'               shift, and go to state 66

    statement                  go to state 297
    compound_statement         go to state 129
    expression_statement       go to state 133
    selection_statement        go to state 134
    iteration_statement        go to state 135
    jump_statement             go to state 136
    expression                 go to state 137
    assignment_expression      go to state 138
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 113
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 288

   76 identifier_list: identifier_list ',' IDENTIFIER .

    $default  reduce using rule 76 (identifier_list)


state 289

   80 parameter_type_list: parameter_list ',' ELLIPSIS .

    $default  reduce using rule 80 (parameter_type_list)


state 290

   82 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 82 (parameter_list)


state 291

  130 conditional_expression: logical_or_expression '?' expression ':' conditional_expression .

    $default  reduce using rule 130 (conditional_expression)


state 292

  178 argument_expression_list: argument_expression_list ',' assignment_expression .

    $default  reduce using rule 178 (argument_expression_list)


state 293

  101 selection_statement: KW_IF '(' expression ')' statement .
  102                    | KW_IF '(' expression ')' statement . KW_ELSE statement

    KW_ELSE  shift, and go to state 298

    KW_ELSE   [reduce using rule 101 (selection_statement)]
    $default  reduce using rule 101 (selection_statement)


state 294

  104 iteration_statement: KW_WHILE '(' expression ')' statement .

    $default  reduce using rule 104 (iteration_statement)


state 295

  106 iteration_statement: KW_FOR '(' expression_opt ';' expression_opt . ';' expression_opt ')' statement

    ';'  shift, and go to state 299


state 296

  105 iteration_statement: KW_DO statement KW_WHILE '(' expression . ')' ';'
  114 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 300
    ','  shift, and go to state 212


state 297

  103 selection_statement: KW_SWITCH '(' expression ')' statement .

    $default  reduce using rule 103 (selection_statement)


state 298

  102 selection_statement: KW_IF '(' expression ')' statement KW_ELSE . statement

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_RETURN         shift, and go to state 116
    KW_IF             shift, and go to state 117
    KW_WHILE          shift, and go to state 118
    KW_FOR            shift, and go to state 119
    KW_DO             shift, and go to state 120
    KW_SWITCH         shift, and go to state 121
    KW_BREAK          shift, and go to state 122
    KW_CONTINUE       shift, and go to state 123
    KW_GOTO           shift, and go to state 124
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100
    ';'               shift, and go to state 125
    '{'               shift, and go to state 66

    statement                  go to state 301
    compound_statement         go to state 129
    expression_statement       go to state 133
    selection_statement        go to state 134
    iteration_statement        go to state 135
    jump_statement             go to state 136
    expression                 go to state 137
    assignment_expression      go to state 138
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 113
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 299

  106 iteration_statement: KW_FOR '(' expression_opt ';' expression_opt ';' . expression_opt ')' statement

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100

    $default  reduce using rule 111 (expression_opt)

    expression_opt             go to state 302
    expression                 go to state 199
    assignment_expression      go to state 138
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 113
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 300

  105 iteration_statement: KW_DO statement KW_WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 303


state 301

  102 selection_statement: KW_IF '(' expression ')' statement KW_ELSE statement .

    $default  reduce using rule 102 (selection_statement)


state 302

  106 iteration_statement: KW_FOR '(' expression_opt ';' expression_opt ';' expression_opt . ')' statement

    ')'  shift, and go to state 304


state 303

  105 iteration_statement: KW_DO statement KW_WHILE '(' expression ')' ';' .

    $default  reduce using rule 105 (iteration_statement)


state 304

  106 iteration_statement: KW_FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' . statement

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_RETURN         shift, and go to state 116
    KW_IF             shift, and go to state 117
    KW_WHILE          shift, and go to state 118
    KW_FOR            shift, and go to state 119
    KW_DO             shift, and go to state 120
    KW_SWITCH         shift, and go to state 121
    KW_BREAK          shift, and go to state 122
    KW_CONTINUE       shift, and go to state 123
    KW_GOTO           shift, and go to state 124
    KW_SIZEOF         shift, and go to state 93
    INC               shift, and go to state 94
    DEC               shift, and go to state 95
    '+'               shift, and go to state 96
    '-'               shift, and go to state 97
    '!'               shift, and go to state 98
    '~'               shift, and go to state 99
    '('               shift, and go to state 100
    ';'               shift, and go to state 125
    '{'               shift, and go to state 66

    statement                  go to state 305
    compound_statement         go to state 129
    expression_statement       go to state 133
    selection_statement        go to state 134
    iteration_statement        go to state 135
    jump_statement             go to state 136
    expression                 go to state 137
    assignment_expression      go to state 138
    conditional_expression     go to state 102
    logical_or_expression      go to state 103
    logical_and_expression     go to state 104
    inclusive_or_expression    go to state 105
    exclusive_or_expression    go to state 106
    and_expression             go to state 107
    equality_expression        go to state 108
    relational_expression      go to state 109
    shift_expression           go to state 110
    additive_expression        go to state 111
    multiplicative_expression  go to state 112
    unary_expression           go to state 113
    postfix_expression         go to state 114
    primary_expression         go to state 115


state 305

  106 iteration_statement: KW_FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' statement .

    $default  reduce using rule 106 (iteration_statement)
