Useless nonterminals

   declaration
   init_declarator_list_opt
   init_declarator_list
   init_declarator


Terminals which are not used

   KW_CASE
   KW_DEFAULT


Useless rules

  240 declaration: declaration_specifiers init_declarator_list_opt

  241 init_declarator_list_opt: /* empty */
  242                         | init_declarator_list

  243 init_declarator_list: init_declarator
  244                     | init_declarator_list ',' init_declarator

  245 init_declarator: declarator
  246                | declarator '=' assignment_expression
  247                | declarator '=' initializer


Rules never reduced

    8 external_declaration: /* empty */

  100 identifier_list_opt: /* empty */


State 1 conflicts: 21 shift/reduce
State 17 conflicts: 19 shift/reduce
State 18 conflicts: 19 shift/reduce
State 19 conflicts: 19 shift/reduce
State 20 conflicts: 19 shift/reduce
State 21 conflicts: 19 shift/reduce
State 22 conflicts: 19 shift/reduce
State 30 conflicts: 1 shift/reduce, 2 reduce/reduce
State 67 conflicts: 2 reduce/reduce
State 68 conflicts: 1 shift/reduce
State 173 conflicts: 1 reduce/reduce
State 271 conflicts: 1 shift/reduce
State 402 conflicts: 1 shift/reduce
State 407 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: /* empty */
    2                 | translation_unit external_declaration

    3 star_list_opt: /* empty */
    4              | star_list

    5 star_list: '*'
    6          | star_list '*'

    7 external_declaration: type_specifier sdecl ',' sdecl sdecl_list ';'
    8                     | /* empty */
    9                     | type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' compound_statement
   10                     | type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' ';'
   11                     | func_decl_specs IDENTIFIER '(' parameter_type_list_opt ')' compound_statement
   12                     | func_decl_specs IDENTIFIER '(' parameter_type_list_opt ')' ';'
   13                     | KW_TYPEDEF type_specifier star_list_opt IDENTIFIER ';'
   14                     | KW_TYPEDEF type_specifier star_list_opt IDENTIFIER array_dims ';'
   15                     | type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';'
   16                     | KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   17                     | KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'
   18                     | type_specifier star_list_opt IDENTIFIER ';'
   19                     | type_specifier star_list_opt IDENTIFIER '=' initializer ';'
   20                     | type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';'
   21                     | function_definition

   22 func_decl_specs: type_specifier star_list_opt
   23                | KW_EXTERN func_decl_specs
   24                | KW_STATIC func_decl_specs
   25                | KW_CONST func_decl_specs
   26                | KW_VOLATILE func_decl_specs
   27                | KW_RESTRICT func_decl_specs
   28                | KW_INLINE func_decl_specs

   29 parameter_type_list_opt: /* empty */
   30                        | parameter_type_list

   31 parameter_type_list: parameter_list
   32                    | parameter_list ',' ELLIPSIS

   33 parameter_list: parameter_declaration
   34               | parameter_list ',' parameter_declaration

   35 parameter_declaration: type_specifier sdecl
   36                      | type_specifier

   37 declaration_specifiers: declaration_specifier
   38                       | declaration_specifiers declaration_specifier

   39 declaration_specifier: storage_class_specifier
   40                      | type_specifier
   41                      | type_qualifier
   42                      | function_specifier

   43 storage_class_specifier: KW_EXTERN
   44                        | KW_STATIC

   45 type_qualifier: KW_CONST
   46               | KW_VOLATILE
   47               | KW_RESTRICT

   48 function_specifier: KW_INLINE

   49 type_specifier: KW_VOID
   50               | KW_CHAR
   51               | KW_SHORT
   52               | KW_INT
   53               | KW_LONG
   54               | KW_SIGNED
   55               | KW_UNSIGNED
   56               | KW_FLOAT
   57               | KW_DOUBLE
   58               | struct_or_union_specifier
   59               | enum_specifier
   60               | TYPE_NAME

   61 array_dims: '[' INTEGER_CONSTANT ']'
   62           | array_dims '[' INTEGER_CONSTANT ']'

   63 struct_or_union_specifier: KW_STRUCT IDENTIFIER '{' struct_declaration_list_opt '}'
   64                          | KW_UNION IDENTIFIER '{' struct_declaration_list_opt '}'
   65                          | KW_STRUCT '{' struct_declaration_list_opt '}'
   66                          | KW_UNION '{' struct_declaration_list_opt '}'
   67                          | KW_STRUCT IDENTIFIER
   68                          | KW_UNION IDENTIFIER

   69 struct_declaration_list_opt: /* empty */
   70                            | struct_declaration_list

   71 struct_declaration_list: struct_declaration
   72                        | struct_declaration_list struct_declaration

   73 struct_declaration: declaration_specifiers struct_declarator_list ';'

   74 struct_declarator_list: struct_declarator
   75                       | struct_declarator_list ',' struct_declarator

   76 struct_declarator: declarator
   77                  | ':' constant_expression
   78                  | declarator ':' constant_expression

   79 enum_specifier: KW_ENUM IDENTIFIER '{' enumerator_list_opt '}'
   80               | KW_ENUM '{' enumerator_list_opt '}'
   81               | KW_ENUM IDENTIFIER

   82 enumerator_list_opt: /* empty */
   83                    | enumerator_list

   84 enumerator_list: enumerator
   85                | enumerator_list ',' enumerator

   86 enumerator: IDENTIFIER
   87           | IDENTIFIER '=' constant_expression

   88 declarator: pointer_opt direct_declarator

   89 pointer_opt: /* empty */
   90            | pointer

   91 pointer: '*'
   92        | '*' type_qualifier
   93        | '*' pointer
   94        | '*' type_qualifier pointer

   95 direct_declarator: IDENTIFIER
   96                  | '(' declarator ')'
   97                  | direct_declarator '[' assignment_expression_opt ']'
   98                  | direct_declarator '(' parameter_type_list_opt ')'
   99                  | direct_declarator '(' identifier_list_opt ')'

  100 identifier_list_opt: /* empty */
  101                    | identifier_list

  102 identifier_list: IDENTIFIER
  103                | identifier_list ',' IDENTIFIER

  104 fp_param_list_opt: /* empty */
  105                  | fp_param_list

  106 fp_param_list: fp_param
  107              | fp_param_list ',' fp_param

  108 fp_param: type_specifier star_list_opt
  109         | type_specifier star_list_opt IDENTIFIER

  110 function_definition: declaration_specifiers declarator compound_statement
  111                    | type_specifier declarator compound_statement

  112 statement: compound_statement
  113          | expression_statement
  114          | selection_statement
  115          | iteration_statement
  116          | jump_statement

  117 compound_statement: '{' block_item_list_opt '}'

  118 block_item_list_opt: /* empty */
  119                    | block_item_list

  120 block_item_list: block_item
  121                | block_item_list block_item

  122 block_item: type_specifier star_list_opt IDENTIFIER ';'
  123           | type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';'
  124           | type_specifier star_list_opt IDENTIFIER '=' initializer ';'
  125           | type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';'
  126           | type_specifier sdecl ',' sdecl sdecl_list ';'
  127           | statement
  128           | KW_TYPEDEF type_specifier star_list_opt IDENTIFIER ';'
  129           | KW_TYPEDEF type_specifier type_specifier star_list_opt IDENTIFIER ';'

  130 sdecl_list: /* empty */
  131           | sdecl_list ',' sdecl

  132 sdecl: star_list_opt sdir

  133 sdir: IDENTIFIER
  134     | '(' sdecl ')'
  135     | '(' sdecl ')' '(' fp_param_list_opt ')'
  136     | sdir '[' assignment_expression_opt ']'

  137 expression_statement: ';'
  138                     | expression ';'

  139 selection_statement: KW_IF '(' expression ')' statement
  140                    | KW_IF '(' expression ')' statement KW_ELSE statement
  141                    | KW_SWITCH '(' expression ')' statement

  142 iteration_statement: KW_WHILE '(' expression ')' statement
  143                    | KW_DO statement KW_WHILE '(' expression ')' ';'
  144                    | KW_FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' statement

  145 jump_statement: KW_RETURN expression_opt ';'
  146               | KW_BREAK ';'
  147               | KW_CONTINUE ';'
  148               | KW_GOTO IDENTIFIER ';'

  149 expression_opt: /* empty */
  150               | expression

  151 expression: assignment_expression
  152           | expression ',' assignment_expression

  153 assignment_expression_opt: /* empty */
  154                          | assignment_expression

  155 assignment_expression: conditional_expression
  156                      | unary_expression '=' assignment_expression
  157                      | unary_expression ADD_ASSIGN assignment_expression
  158                      | unary_expression SUB_ASSIGN assignment_expression
  159                      | unary_expression MUL_ASSIGN assignment_expression
  160                      | unary_expression DIV_ASSIGN assignment_expression
  161                      | unary_expression MOD_ASSIGN assignment_expression
  162                      | unary_expression AND_ASSIGN assignment_expression
  163                      | unary_expression OR_ASSIGN assignment_expression
  164                      | unary_expression XOR_ASSIGN assignment_expression
  165                      | unary_expression LSHIFT_ASSIGN assignment_expression
  166                      | unary_expression RSHIFT_ASSIGN assignment_expression

  167 conditional_expression: logical_or_expression
  168                       | logical_or_expression '?' expression ':' conditional_expression

  169 logical_or_expression: logical_and_expression
  170                      | logical_or_expression LOGOR logical_and_expression

  171 logical_and_expression: inclusive_or_expression
  172                       | logical_and_expression LOGAND inclusive_or_expression

  173 inclusive_or_expression: exclusive_or_expression
  174                        | inclusive_or_expression '|' exclusive_or_expression

  175 exclusive_or_expression: and_expression
  176                        | exclusive_or_expression '^' and_expression

  177 and_expression: equality_expression
  178               | and_expression '&' equality_expression

  179 equality_expression: relational_expression
  180                    | equality_expression EQ relational_expression
  181                    | equality_expression NE relational_expression

  182 relational_expression: shift_expression
  183                      | relational_expression '<' shift_expression
  184                      | relational_expression '>' shift_expression
  185                      | relational_expression LE shift_expression
  186                      | relational_expression GE shift_expression

  187 shift_expression: additive_expression
  188                 | shift_expression LSHIFT additive_expression
  189                 | shift_expression RSHIFT additive_expression

  190 additive_expression: multiplicative_expression
  191                    | additive_expression '+' multiplicative_expression
  192                    | additive_expression '-' multiplicative_expression

  193 multiplicative_expression: unary_expression
  194                          | multiplicative_expression '*' unary_expression
  195                          | multiplicative_expression '/' unary_expression
  196                          | multiplicative_expression '%' unary_expression

  197 unary_expression: postfix_expression
  198                 | INC unary_expression
  199                 | DEC unary_expression
  200                 | '+' unary_expression
  201                 | '-' unary_expression
  202                 | '!' unary_expression
  203                 | '~' unary_expression
  204                 | KW_SIZEOF unary_expression
  205                 | KW_SIZEOF '(' type_specifier ')'

  206 postfix_expression: primary_expression
  207                   | postfix_expression '(' argument_expression_list_opt ')'
  208                   | postfix_expression '[' expression ']'
  209                   | postfix_expression '.' IDENTIFIER
  210                   | postfix_expression ARROW IDENTIFIER
  211                   | postfix_expression INC
  212                   | postfix_expression DEC

  213 argument_expression_list_opt: /* empty */
  214                             | argument_expression_list

  215 argument_expression_list: assignment_expression
  216                         | argument_expression_list ',' assignment_expression

  217 primary_expression: IDENTIFIER
  218                   | INTEGER_CONSTANT
  219                   | FLOAT_CONSTANT
  220                   | CHAR_CONSTANT
  221                   | STRING_LITERAL
  222                   | '(' expression ')'

  223 initializer: assignment_expression
  224            | '{' initializer_list_opt '}'

  225 initializer_list_opt: /* empty */
  226                     | initializer_list

  227 initializer_list: initializer
  228                 | designated_initializer
  229                 | initializer_list ',' initializer
  230                 | initializer_list ',' designated_initializer

  231 designated_initializer: '.' IDENTIFIER '=' initializer
  232                       | '[' constant_expression ']' '=' initializer
  233                       | designation '=' initializer

  234 designation: designator
  235            | designation designator

  236 designator: '.' IDENTIFIER
  237           | '[' constant_expression ']'
  238           | '[' constant_expression ELLIPSIS constant_expression ']'

  239 constant_expression: conditional_expression


Terminals, with rules where they appear

$end (0) 0
'!' (33) 202
'%' (37) 196
'&' (38) 178
'(' (40) 9 10 11 12 16 17 96 98 99 134 135 139 140 141 142 143 144
    205 207 222
')' (41) 9 10 11 12 16 17 96 98 99 134 135 139 140 141 142 143 144
    205 207 222
'*' (42) 5 6 16 17 91 92 93 94 194
'+' (43) 191 200
',' (44) 7 32 34 75 85 103 107 126 131 152 216 229 230
'-' (45) 192 201
'.' (46) 209 231 236
'/' (47) 195
':' (58) 77 78 168
';' (59) 7 10 12 13 14 15 16 17 18 19 20 73 122 123 124 125 126 128
    129 137 138 143 144 145 146 147 148
'<' (60) 183
'=' (61) 15 19 20 87 123 124 125 156 231 232 233
'>' (62) 184
'?' (63) 168
'[' (91) 61 62 97 136 208 232 237 238
']' (93) 61 62 97 136 208 232 237 238
'^' (94) 176
'{' (123) 63 64 65 66 79 80 117 224
'|' (124) 174
'}' (125) 63 64 65 66 79 80 117 224
'~' (126) 203
error (256)
IDENTIFIER (258) 9 10 11 12 13 14 15 16 17 18 19 20 63 64 67 68 79
    81 86 87 95 102 103 109 122 123 124 125 128 129 133 148 209 210
    217 231 236
TYPE_NAME (259) 60
STRING_LITERAL (260) 221
INTEGER_CONSTANT (261) 61 62 218
FLOAT_CONSTANT (262) 219
CHAR_CONSTANT (263) 220
KW_VOID (264) 49
KW_CHAR (265) 50
KW_SHORT (266) 51
KW_INT (267) 52
KW_LONG (268) 53
KW_SIGNED (269) 54
KW_UNSIGNED (270) 55
KW_FLOAT (271) 56
KW_DOUBLE (272) 57
KW_STRUCT (273) 63 65 67
KW_UNION (274) 64 66 68
KW_ENUM (275) 79 80 81
KW_TYPEDEF (276) 13 14 16 17 128 129
KW_RETURN (277) 145
KW_IF (278) 139 140
KW_ELSE (279) 140
KW_WHILE (280) 142 143
KW_FOR (281) 144
KW_DO (282) 143
KW_SWITCH (283) 141
KW_CASE (284)
KW_DEFAULT (285)
KW_BREAK (286) 146
KW_CONTINUE (287) 147
KW_GOTO (288) 148
KW_CONST (289) 25 45
KW_VOLATILE (290) 26 46
KW_RESTRICT (291) 27 47
KW_INLINE (292) 28 48
KW_EXTERN (293) 23 43
KW_STATIC (294) 24 44
KW_SIZEOF (295) 204 205
ELLIPSIS (296) 32 238
ARROW (297) 210
INC (298) 198 211
DEC (299) 199 212
LSHIFT (300) 188
RSHIFT (301) 189
LE (302) 185
GE (303) 186
EQ (304) 180
NE (305) 181
LOGAND (306) 172
LOGOR (307) 170
ADD_ASSIGN (308) 157
SUB_ASSIGN (309) 158
MUL_ASSIGN (310) 159
DIV_ASSIGN (311) 160
MOD_ASSIGN (312) 161
AND_ASSIGN (313) 162
OR_ASSIGN (314) 163
XOR_ASSIGN (315) 164
LSHIFT_ASSIGN (316) 165
RSHIFT_ASSIGN (317) 166
PREFER_EMPTY (318)


Nonterminals, with rules where they appear

$accept (88)
    on left: 0
translation_unit (89)
    on left: 1 2, on right: 0 2
star_list_opt (90)
    on left: 3 4, on right: 9 10 13 14 15 16 17 18 19 20 22 108 109
    122 123 124 125 128 129 132
star_list (91)
    on left: 5 6, on right: 4 6
external_declaration (92)
    on left: 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21,
    on right: 2
func_decl_specs (93)
    on left: 22 23 24 25 26 27 28, on right: 11 12 23 24 25 26 27 28
parameter_type_list_opt (94)
    on left: 29 30, on right: 9 10 11 12 98
parameter_type_list (95)
    on left: 31 32, on right: 30
parameter_list (96)
    on left: 33 34, on right: 31 32 34
parameter_declaration (97)
    on left: 35 36, on right: 33 34
declaration_specifiers (98)
    on left: 37 38, on right: 38 73 110
declaration_specifier (99)
    on left: 39 40 41 42, on right: 37 38
storage_class_specifier (100)
    on left: 43 44, on right: 39
type_qualifier (101)
    on left: 45 46 47, on right: 41 92 94
function_specifier (102)
    on left: 48, on right: 42
type_specifier (103)
    on left: 49 50 51 52 53 54 55 56 57 58 59 60, on right: 7 9 10
    13 14 15 16 17 18 19 20 22 35 36 40 108 109 111 122 123 124 125
    126 128 129 205
array_dims (104)
    on left: 61 62, on right: 14 17 20 62 125
struct_or_union_specifier (105)
    on left: 63 64 65 66 67 68, on right: 58
struct_declaration_list_opt (106)
    on left: 69 70, on right: 63 64 65 66
struct_declaration_list (107)
    on left: 71 72, on right: 70 72
struct_declaration (108)
    on left: 73, on right: 71 72
struct_declarator_list (109)
    on left: 74 75, on right: 73 75
struct_declarator (110)
    on left: 76 77 78, on right: 74 75
enum_specifier (111)
    on left: 79 80 81, on right: 59
enumerator_list_opt (112)
    on left: 82 83, on right: 79 80
enumerator_list (113)
    on left: 84 85, on right: 83 85
enumerator (114)
    on left: 86 87, on right: 84 85
declarator (115)
    on left: 88, on right: 76 78 96 110 111
pointer_opt (116)
    on left: 89 90, on right: 88
pointer (117)
    on left: 91 92 93 94, on right: 90 93 94
direct_declarator (118)
    on left: 95 96 97 98 99, on right: 88 97 98 99
identifier_list_opt (119)
    on left: 100 101, on right: 99
identifier_list (120)
    on left: 102 103, on right: 101 103
fp_param_list_opt (121)
    on left: 104 105, on right: 16 17 135
fp_param_list (122)
    on left: 106 107, on right: 105 107
fp_param (123)
    on left: 108 109, on right: 106 107
function_definition (124)
    on left: 110 111, on right: 21
statement (125)
    on left: 112 113 114 115 116, on right: 127 139 140 141 142 143
    144
compound_statement (126)
    on left: 117, on right: 9 11 110 111 112
block_item_list_opt (127)
    on left: 118 119, on right: 117
block_item_list (128)
    on left: 120 121, on right: 119 121
block_item (129)
    on left: 122 123 124 125 126 127 128 129, on right: 120 121
sdecl_list (130)
    on left: 130 131, on right: 7 126 131
sdecl (131)
    on left: 132, on right: 7 35 126 131 134 135
sdir (132)
    on left: 133 134 135 136, on right: 132 136
expression_statement (133)
    on left: 137 138, on right: 113
selection_statement (134)
    on left: 139 140 141, on right: 114
iteration_statement (135)
    on left: 142 143 144, on right: 115
jump_statement (136)
    on left: 145 146 147 148, on right: 116
expression_opt (137)
    on left: 149 150, on right: 144 145
expression (138)
    on left: 151 152, on right: 138 139 140 141 142 143 150 152 168
    208 222
assignment_expression_opt (139)
    on left: 153 154, on right: 97 136
assignment_expression (140)
    on left: 155 156 157 158 159 160 161 162 163 164 165 166,
    on right: 15 123 151 152 154 156 157 158 159 160 161 162 163 164
    165 166 215 216 223
conditional_expression (141)
    on left: 167 168, on right: 155 168 239
logical_or_expression (142)
    on left: 169 170, on right: 167 168 170
logical_and_expression (143)
    on left: 171 172, on right: 169 170 172
inclusive_or_expression (144)
    on left: 173 174, on right: 171 172 174
exclusive_or_expression (145)
    on left: 175 176, on right: 173 174 176
and_expression (146)
    on left: 177 178, on right: 175 176 178
equality_expression (147)
    on left: 179 180 181, on right: 177 178 180 181
relational_expression (148)
    on left: 182 183 184 185 186, on right: 179 180 181 183 184 185
    186
shift_expression (149)
    on left: 187 188 189, on right: 182 183 184 185 186 188 189
additive_expression (150)
    on left: 190 191 192, on right: 187 188 189 191 192
multiplicative_expression (151)
    on left: 193 194 195 196, on right: 190 191 192 194 195 196
unary_expression (152)
    on left: 197 198 199 200 201 202 203 204 205, on right: 156 157
    158 159 160 161 162 163 164 165 166 193 194 195 196 198 199 200
    201 202 203 204
postfix_expression (153)
    on left: 206 207 208 209 210 211 212, on right: 197 207 208 209
    210 211 212
argument_expression_list_opt (154)
    on left: 213 214, on right: 207
argument_expression_list (155)
    on left: 215 216, on right: 214 216
primary_expression (156)
    on left: 217 218 219 220 221 222, on right: 206
initializer (157)
    on left: 223 224, on right: 19 20 124 125 227 229 231 232 233
initializer_list_opt (158)
    on left: 225 226, on right: 224
initializer_list (159)
    on left: 227 228 229 230, on right: 226 229 230
designated_initializer (160)
    on left: 231 232 233, on right: 228 230
designation (161)
    on left: 234 235, on right: 233 235
designator (162)
    on left: 236 237 238, on right: 234 235
constant_expression (163)
    on left: 239, on right: 77 78 87 232 237 238


state 0

    0 $accept: . translation_unit $end

    $default  reduce using rule 1 (translation_unit)

    translation_unit  go to state 1


state 1

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . external_declaration

    $end         shift, and go to state 2
    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_TYPEDEF   shift, and go to state 16
    KW_CONST     shift, and go to state 17
    KW_VOLATILE  shift, and go to state 18
    KW_RESTRICT  shift, and go to state 19
    KW_INLINE    shift, and go to state 20
    KW_EXTERN    shift, and go to state 21
    KW_STATIC    shift, and go to state 22

    $end         [reduce using rule 8 (external_declaration)]
    TYPE_NAME    [reduce using rule 8 (external_declaration)]
    KW_VOID      [reduce using rule 8 (external_declaration)]
    KW_CHAR      [reduce using rule 8 (external_declaration)]
    KW_SHORT     [reduce using rule 8 (external_declaration)]
    KW_INT       [reduce using rule 8 (external_declaration)]
    KW_LONG      [reduce using rule 8 (external_declaration)]
    KW_SIGNED    [reduce using rule 8 (external_declaration)]
    KW_UNSIGNED  [reduce using rule 8 (external_declaration)]
    KW_FLOAT     [reduce using rule 8 (external_declaration)]
    KW_DOUBLE    [reduce using rule 8 (external_declaration)]
    KW_STRUCT    [reduce using rule 8 (external_declaration)]
    KW_UNION     [reduce using rule 8 (external_declaration)]
    KW_ENUM      [reduce using rule 8 (external_declaration)]
    KW_TYPEDEF   [reduce using rule 8 (external_declaration)]
    KW_CONST     [reduce using rule 8 (external_declaration)]
    KW_VOLATILE  [reduce using rule 8 (external_declaration)]
    KW_RESTRICT  [reduce using rule 8 (external_declaration)]
    KW_INLINE    [reduce using rule 8 (external_declaration)]
    KW_EXTERN    [reduce using rule 8 (external_declaration)]
    KW_STATIC    [reduce using rule 8 (external_declaration)]

    external_declaration       go to state 23
    func_decl_specs            go to state 24
    declaration_specifiers     go to state 25
    declaration_specifier      go to state 26
    storage_class_specifier    go to state 27
    type_qualifier             go to state 28
    function_specifier         go to state 29
    type_specifier             go to state 30
    struct_or_union_specifier  go to state 31
    enum_specifier             go to state 32
    function_definition        go to state 33


state 2

    0 $accept: translation_unit $end .

    $default  accept


state 3

   60 type_specifier: TYPE_NAME .

    $default  reduce using rule 60 (type_specifier)


state 4

   49 type_specifier: KW_VOID .

    $default  reduce using rule 49 (type_specifier)


state 5

   50 type_specifier: KW_CHAR .

    $default  reduce using rule 50 (type_specifier)


state 6

   51 type_specifier: KW_SHORT .

    $default  reduce using rule 51 (type_specifier)


state 7

   52 type_specifier: KW_INT .

    $default  reduce using rule 52 (type_specifier)


state 8

   53 type_specifier: KW_LONG .

    $default  reduce using rule 53 (type_specifier)


state 9

   54 type_specifier: KW_SIGNED .

    $default  reduce using rule 54 (type_specifier)


state 10

   55 type_specifier: KW_UNSIGNED .

    $default  reduce using rule 55 (type_specifier)


state 11

   56 type_specifier: KW_FLOAT .

    $default  reduce using rule 56 (type_specifier)


state 12

   57 type_specifier: KW_DOUBLE .

    $default  reduce using rule 57 (type_specifier)


state 13

   63 struct_or_union_specifier: KW_STRUCT . IDENTIFIER '{' struct_declaration_list_opt '}'
   65                          | KW_STRUCT . '{' struct_declaration_list_opt '}'
   67                          | KW_STRUCT . IDENTIFIER

    IDENTIFIER  shift, and go to state 34
    '{'         shift, and go to state 35


state 14

   64 struct_or_union_specifier: KW_UNION . IDENTIFIER '{' struct_declaration_list_opt '}'
   66                          | KW_UNION . '{' struct_declaration_list_opt '}'
   68                          | KW_UNION . IDENTIFIER

    IDENTIFIER  shift, and go to state 36
    '{'         shift, and go to state 37


state 15

   79 enum_specifier: KW_ENUM . IDENTIFIER '{' enumerator_list_opt '}'
   80               | KW_ENUM . '{' enumerator_list_opt '}'
   81               | KW_ENUM . IDENTIFIER

    IDENTIFIER  shift, and go to state 38
    '{'         shift, and go to state 39


state 16

   13 external_declaration: KW_TYPEDEF . type_specifier star_list_opt IDENTIFIER ';'
   14                     | KW_TYPEDEF . type_specifier star_list_opt IDENTIFIER array_dims ';'
   16                     | KW_TYPEDEF . type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   17                     | KW_TYPEDEF . type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15

    type_specifier             go to state 40
    struct_or_union_specifier  go to state 31
    enum_specifier             go to state 32


state 17

   25 func_decl_specs: KW_CONST . func_decl_specs
   45 type_qualifier: KW_CONST .

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 41
    KW_VOLATILE  shift, and go to state 42
    KW_RESTRICT  shift, and go to state 43
    KW_INLINE    shift, and go to state 44
    KW_EXTERN    shift, and go to state 45
    KW_STATIC    shift, and go to state 46

    TYPE_NAME    [reduce using rule 45 (type_qualifier)]
    KW_VOID      [reduce using rule 45 (type_qualifier)]
    KW_CHAR      [reduce using rule 45 (type_qualifier)]
    KW_SHORT     [reduce using rule 45 (type_qualifier)]
    KW_INT       [reduce using rule 45 (type_qualifier)]
    KW_LONG      [reduce using rule 45 (type_qualifier)]
    KW_SIGNED    [reduce using rule 45 (type_qualifier)]
    KW_UNSIGNED  [reduce using rule 45 (type_qualifier)]
    KW_FLOAT     [reduce using rule 45 (type_qualifier)]
    KW_DOUBLE    [reduce using rule 45 (type_qualifier)]
    KW_STRUCT    [reduce using rule 45 (type_qualifier)]
    KW_UNION     [reduce using rule 45 (type_qualifier)]
    KW_ENUM      [reduce using rule 45 (type_qualifier)]
    KW_CONST     [reduce using rule 45 (type_qualifier)]
    KW_VOLATILE  [reduce using rule 45 (type_qualifier)]
    KW_RESTRICT  [reduce using rule 45 (type_qualifier)]
    KW_INLINE    [reduce using rule 45 (type_qualifier)]
    KW_EXTERN    [reduce using rule 45 (type_qualifier)]
    KW_STATIC    [reduce using rule 45 (type_qualifier)]
    $default     reduce using rule 45 (type_qualifier)

    func_decl_specs            go to state 47
    type_specifier             go to state 48
    struct_or_union_specifier  go to state 31
    enum_specifier             go to state 32


state 18

   26 func_decl_specs: KW_VOLATILE . func_decl_specs
   46 type_qualifier: KW_VOLATILE .

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 41
    KW_VOLATILE  shift, and go to state 42
    KW_RESTRICT  shift, and go to state 43
    KW_INLINE    shift, and go to state 44
    KW_EXTERN    shift, and go to state 45
    KW_STATIC    shift, and go to state 46

    TYPE_NAME    [reduce using rule 46 (type_qualifier)]
    KW_VOID      [reduce using rule 46 (type_qualifier)]
    KW_CHAR      [reduce using rule 46 (type_qualifier)]
    KW_SHORT     [reduce using rule 46 (type_qualifier)]
    KW_INT       [reduce using rule 46 (type_qualifier)]
    KW_LONG      [reduce using rule 46 (type_qualifier)]
    KW_SIGNED    [reduce using rule 46 (type_qualifier)]
    KW_UNSIGNED  [reduce using rule 46 (type_qualifier)]
    KW_FLOAT     [reduce using rule 46 (type_qualifier)]
    KW_DOUBLE    [reduce using rule 46 (type_qualifier)]
    KW_STRUCT    [reduce using rule 46 (type_qualifier)]
    KW_UNION     [reduce using rule 46 (type_qualifier)]
    KW_ENUM      [reduce using rule 46 (type_qualifier)]
    KW_CONST     [reduce using rule 46 (type_qualifier)]
    KW_VOLATILE  [reduce using rule 46 (type_qualifier)]
    KW_RESTRICT  [reduce using rule 46 (type_qualifier)]
    KW_INLINE    [reduce using rule 46 (type_qualifier)]
    KW_EXTERN    [reduce using rule 46 (type_qualifier)]
    KW_STATIC    [reduce using rule 46 (type_qualifier)]
    $default     reduce using rule 46 (type_qualifier)

    func_decl_specs            go to state 49
    type_specifier             go to state 48
    struct_or_union_specifier  go to state 31
    enum_specifier             go to state 32


state 19

   27 func_decl_specs: KW_RESTRICT . func_decl_specs
   47 type_qualifier: KW_RESTRICT .

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 41
    KW_VOLATILE  shift, and go to state 42
    KW_RESTRICT  shift, and go to state 43
    KW_INLINE    shift, and go to state 44
    KW_EXTERN    shift, and go to state 45
    KW_STATIC    shift, and go to state 46

    TYPE_NAME    [reduce using rule 47 (type_qualifier)]
    KW_VOID      [reduce using rule 47 (type_qualifier)]
    KW_CHAR      [reduce using rule 47 (type_qualifier)]
    KW_SHORT     [reduce using rule 47 (type_qualifier)]
    KW_INT       [reduce using rule 47 (type_qualifier)]
    KW_LONG      [reduce using rule 47 (type_qualifier)]
    KW_SIGNED    [reduce using rule 47 (type_qualifier)]
    KW_UNSIGNED  [reduce using rule 47 (type_qualifier)]
    KW_FLOAT     [reduce using rule 47 (type_qualifier)]
    KW_DOUBLE    [reduce using rule 47 (type_qualifier)]
    KW_STRUCT    [reduce using rule 47 (type_qualifier)]
    KW_UNION     [reduce using rule 47 (type_qualifier)]
    KW_ENUM      [reduce using rule 47 (type_qualifier)]
    KW_CONST     [reduce using rule 47 (type_qualifier)]
    KW_VOLATILE  [reduce using rule 47 (type_qualifier)]
    KW_RESTRICT  [reduce using rule 47 (type_qualifier)]
    KW_INLINE    [reduce using rule 47 (type_qualifier)]
    KW_EXTERN    [reduce using rule 47 (type_qualifier)]
    KW_STATIC    [reduce using rule 47 (type_qualifier)]
    $default     reduce using rule 47 (type_qualifier)

    func_decl_specs            go to state 50
    type_specifier             go to state 48
    struct_or_union_specifier  go to state 31
    enum_specifier             go to state 32


state 20

   28 func_decl_specs: KW_INLINE . func_decl_specs
   48 function_specifier: KW_INLINE .

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 41
    KW_VOLATILE  shift, and go to state 42
    KW_RESTRICT  shift, and go to state 43
    KW_INLINE    shift, and go to state 44
    KW_EXTERN    shift, and go to state 45
    KW_STATIC    shift, and go to state 46

    TYPE_NAME    [reduce using rule 48 (function_specifier)]
    KW_VOID      [reduce using rule 48 (function_specifier)]
    KW_CHAR      [reduce using rule 48 (function_specifier)]
    KW_SHORT     [reduce using rule 48 (function_specifier)]
    KW_INT       [reduce using rule 48 (function_specifier)]
    KW_LONG      [reduce using rule 48 (function_specifier)]
    KW_SIGNED    [reduce using rule 48 (function_specifier)]
    KW_UNSIGNED  [reduce using rule 48 (function_specifier)]
    KW_FLOAT     [reduce using rule 48 (function_specifier)]
    KW_DOUBLE    [reduce using rule 48 (function_specifier)]
    KW_STRUCT    [reduce using rule 48 (function_specifier)]
    KW_UNION     [reduce using rule 48 (function_specifier)]
    KW_ENUM      [reduce using rule 48 (function_specifier)]
    KW_CONST     [reduce using rule 48 (function_specifier)]
    KW_VOLATILE  [reduce using rule 48 (function_specifier)]
    KW_RESTRICT  [reduce using rule 48 (function_specifier)]
    KW_INLINE    [reduce using rule 48 (function_specifier)]
    KW_EXTERN    [reduce using rule 48 (function_specifier)]
    KW_STATIC    [reduce using rule 48 (function_specifier)]
    $default     reduce using rule 48 (function_specifier)

    func_decl_specs            go to state 51
    type_specifier             go to state 48
    struct_or_union_specifier  go to state 31
    enum_specifier             go to state 32


state 21

   23 func_decl_specs: KW_EXTERN . func_decl_specs
   43 storage_class_specifier: KW_EXTERN .

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 41
    KW_VOLATILE  shift, and go to state 42
    KW_RESTRICT  shift, and go to state 43
    KW_INLINE    shift, and go to state 44
    KW_EXTERN    shift, and go to state 45
    KW_STATIC    shift, and go to state 46

    TYPE_NAME    [reduce using rule 43 (storage_class_specifier)]
    KW_VOID      [reduce using rule 43 (storage_class_specifier)]
    KW_CHAR      [reduce using rule 43 (storage_class_specifier)]
    KW_SHORT     [reduce using rule 43 (storage_class_specifier)]
    KW_INT       [reduce using rule 43 (storage_class_specifier)]
    KW_LONG      [reduce using rule 43 (storage_class_specifier)]
    KW_SIGNED    [reduce using rule 43 (storage_class_specifier)]
    KW_UNSIGNED  [reduce using rule 43 (storage_class_specifier)]
    KW_FLOAT     [reduce using rule 43 (storage_class_specifier)]
    KW_DOUBLE    [reduce using rule 43 (storage_class_specifier)]
    KW_STRUCT    [reduce using rule 43 (storage_class_specifier)]
    KW_UNION     [reduce using rule 43 (storage_class_specifier)]
    KW_ENUM      [reduce using rule 43 (storage_class_specifier)]
    KW_CONST     [reduce using rule 43 (storage_class_specifier)]
    KW_VOLATILE  [reduce using rule 43 (storage_class_specifier)]
    KW_RESTRICT  [reduce using rule 43 (storage_class_specifier)]
    KW_INLINE    [reduce using rule 43 (storage_class_specifier)]
    KW_EXTERN    [reduce using rule 43 (storage_class_specifier)]
    KW_STATIC    [reduce using rule 43 (storage_class_specifier)]
    $default     reduce using rule 43 (storage_class_specifier)

    func_decl_specs            go to state 52
    type_specifier             go to state 48
    struct_or_union_specifier  go to state 31
    enum_specifier             go to state 32


state 22

   24 func_decl_specs: KW_STATIC . func_decl_specs
   44 storage_class_specifier: KW_STATIC .

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 41
    KW_VOLATILE  shift, and go to state 42
    KW_RESTRICT  shift, and go to state 43
    KW_INLINE    shift, and go to state 44
    KW_EXTERN    shift, and go to state 45
    KW_STATIC    shift, and go to state 46

    TYPE_NAME    [reduce using rule 44 (storage_class_specifier)]
    KW_VOID      [reduce using rule 44 (storage_class_specifier)]
    KW_CHAR      [reduce using rule 44 (storage_class_specifier)]
    KW_SHORT     [reduce using rule 44 (storage_class_specifier)]
    KW_INT       [reduce using rule 44 (storage_class_specifier)]
    KW_LONG      [reduce using rule 44 (storage_class_specifier)]
    KW_SIGNED    [reduce using rule 44 (storage_class_specifier)]
    KW_UNSIGNED  [reduce using rule 44 (storage_class_specifier)]
    KW_FLOAT     [reduce using rule 44 (storage_class_specifier)]
    KW_DOUBLE    [reduce using rule 44 (storage_class_specifier)]
    KW_STRUCT    [reduce using rule 44 (storage_class_specifier)]
    KW_UNION     [reduce using rule 44 (storage_class_specifier)]
    KW_ENUM      [reduce using rule 44 (storage_class_specifier)]
    KW_CONST     [reduce using rule 44 (storage_class_specifier)]
    KW_VOLATILE  [reduce using rule 44 (storage_class_specifier)]
    KW_RESTRICT  [reduce using rule 44 (storage_class_specifier)]
    KW_INLINE    [reduce using rule 44 (storage_class_specifier)]
    KW_EXTERN    [reduce using rule 44 (storage_class_specifier)]
    KW_STATIC    [reduce using rule 44 (storage_class_specifier)]
    $default     reduce using rule 44 (storage_class_specifier)

    func_decl_specs            go to state 53
    type_specifier             go to state 48
    struct_or_union_specifier  go to state 31
    enum_specifier             go to state 32


state 23

    2 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 2 (translation_unit)


state 24

   11 external_declaration: func_decl_specs . IDENTIFIER '(' parameter_type_list_opt ')' compound_statement
   12                     | func_decl_specs . IDENTIFIER '(' parameter_type_list_opt ')' ';'

    IDENTIFIER  shift, and go to state 54


state 25

   38 declaration_specifiers: declaration_specifiers . declaration_specifier
  110 function_definition: declaration_specifiers . declarator compound_statement

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 55
    KW_VOLATILE  shift, and go to state 56
    KW_RESTRICT  shift, and go to state 57
    KW_INLINE    shift, and go to state 58
    KW_EXTERN    shift, and go to state 59
    KW_STATIC    shift, and go to state 60
    '*'          shift, and go to state 61

    $default  reduce using rule 89 (pointer_opt)

    declaration_specifier      go to state 62
    storage_class_specifier    go to state 27
    type_qualifier             go to state 28
    function_specifier         go to state 29
    type_specifier             go to state 63
    struct_or_union_specifier  go to state 31
    enum_specifier             go to state 32
    declarator                 go to state 64
    pointer_opt                go to state 65
    pointer                    go to state 66


state 26

   37 declaration_specifiers: declaration_specifier .

    $default  reduce using rule 37 (declaration_specifiers)


state 27

   39 declaration_specifier: storage_class_specifier .

    $default  reduce using rule 39 (declaration_specifier)


state 28

   41 declaration_specifier: type_qualifier .

    $default  reduce using rule 41 (declaration_specifier)


state 29

   42 declaration_specifier: function_specifier .

    $default  reduce using rule 42 (declaration_specifier)


state 30

    7 external_declaration: type_specifier . sdecl ',' sdecl sdecl_list ';'
    9                     | type_specifier . star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' compound_statement
   10                     | type_specifier . star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' ';'
   15                     | type_specifier . star_list_opt IDENTIFIER '=' assignment_expression ';'
   18                     | type_specifier . star_list_opt IDENTIFIER ';'
   19                     | type_specifier . star_list_opt IDENTIFIER '=' initializer ';'
   20                     | type_specifier . star_list_opt IDENTIFIER array_dims '=' initializer ';'
   22 func_decl_specs: type_specifier . star_list_opt
   40 declaration_specifier: type_specifier .
  111 function_definition: type_specifier . declarator compound_statement

    '*'  shift, and go to state 67

    IDENTIFIER  reduce using rule 3 (star_list_opt)
    IDENTIFIER  [reduce using rule 40 (declaration_specifier)]
    IDENTIFIER  [reduce using rule 89 (pointer_opt)]
    '*'         [reduce using rule 40 (declaration_specifier)]
    '('         reduce using rule 3 (star_list_opt)
    '('         [reduce using rule 40 (declaration_specifier)]
    '('         [reduce using rule 89 (pointer_opt)]
    $default    reduce using rule 40 (declaration_specifier)

    star_list_opt  go to state 68
    star_list      go to state 69
    declarator     go to state 70
    pointer_opt    go to state 65
    pointer        go to state 66
    sdecl          go to state 71


state 31

   58 type_specifier: struct_or_union_specifier .

    $default  reduce using rule 58 (type_specifier)


state 32

   59 type_specifier: enum_specifier .

    $default  reduce using rule 59 (type_specifier)


state 33

   21 external_declaration: function_definition .

    $default  reduce using rule 21 (external_declaration)


state 34

   63 struct_or_union_specifier: KW_STRUCT IDENTIFIER . '{' struct_declaration_list_opt '}'
   67                          | KW_STRUCT IDENTIFIER .

    '{'  shift, and go to state 72

    $default  reduce using rule 67 (struct_or_union_specifier)


state 35

   65 struct_or_union_specifier: KW_STRUCT '{' . struct_declaration_list_opt '}'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 55
    KW_VOLATILE  shift, and go to state 56
    KW_RESTRICT  shift, and go to state 57
    KW_INLINE    shift, and go to state 58
    KW_EXTERN    shift, and go to state 59
    KW_STATIC    shift, and go to state 60

    $default  reduce using rule 69 (struct_declaration_list_opt)

    declaration_specifiers       go to state 73
    declaration_specifier        go to state 26
    storage_class_specifier      go to state 27
    type_qualifier               go to state 28
    function_specifier           go to state 29
    type_specifier               go to state 63
    struct_or_union_specifier    go to state 31
    struct_declaration_list_opt  go to state 74
    struct_declaration_list      go to state 75
    struct_declaration           go to state 76
    enum_specifier               go to state 32


state 36

   64 struct_or_union_specifier: KW_UNION IDENTIFIER . '{' struct_declaration_list_opt '}'
   68                          | KW_UNION IDENTIFIER .

    '{'  shift, and go to state 77

    $default  reduce using rule 68 (struct_or_union_specifier)


state 37

   66 struct_or_union_specifier: KW_UNION '{' . struct_declaration_list_opt '}'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 55
    KW_VOLATILE  shift, and go to state 56
    KW_RESTRICT  shift, and go to state 57
    KW_INLINE    shift, and go to state 58
    KW_EXTERN    shift, and go to state 59
    KW_STATIC    shift, and go to state 60

    $default  reduce using rule 69 (struct_declaration_list_opt)

    declaration_specifiers       go to state 73
    declaration_specifier        go to state 26
    storage_class_specifier      go to state 27
    type_qualifier               go to state 28
    function_specifier           go to state 29
    type_specifier               go to state 63
    struct_or_union_specifier    go to state 31
    struct_declaration_list_opt  go to state 78
    struct_declaration_list      go to state 75
    struct_declaration           go to state 76
    enum_specifier               go to state 32


state 38

   79 enum_specifier: KW_ENUM IDENTIFIER . '{' enumerator_list_opt '}'
   81               | KW_ENUM IDENTIFIER .

    '{'  shift, and go to state 79

    $default  reduce using rule 81 (enum_specifier)


state 39

   80 enum_specifier: KW_ENUM '{' . enumerator_list_opt '}'

    IDENTIFIER  shift, and go to state 80

    $default  reduce using rule 82 (enumerator_list_opt)

    enumerator_list_opt  go to state 81
    enumerator_list      go to state 82
    enumerator           go to state 83


state 40

   13 external_declaration: KW_TYPEDEF type_specifier . star_list_opt IDENTIFIER ';'
   14                     | KW_TYPEDEF type_specifier . star_list_opt IDENTIFIER array_dims ';'
   16                     | KW_TYPEDEF type_specifier . star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   17                     | KW_TYPEDEF type_specifier . star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'

    '*'  shift, and go to state 84

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt  go to state 85
    star_list      go to state 69


state 41

   25 func_decl_specs: KW_CONST . func_decl_specs

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 41
    KW_VOLATILE  shift, and go to state 42
    KW_RESTRICT  shift, and go to state 43
    KW_INLINE    shift, and go to state 44
    KW_EXTERN    shift, and go to state 45
    KW_STATIC    shift, and go to state 46

    func_decl_specs            go to state 47
    type_specifier             go to state 48
    struct_or_union_specifier  go to state 31
    enum_specifier             go to state 32


state 42

   26 func_decl_specs: KW_VOLATILE . func_decl_specs

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 41
    KW_VOLATILE  shift, and go to state 42
    KW_RESTRICT  shift, and go to state 43
    KW_INLINE    shift, and go to state 44
    KW_EXTERN    shift, and go to state 45
    KW_STATIC    shift, and go to state 46

    func_decl_specs            go to state 49
    type_specifier             go to state 48
    struct_or_union_specifier  go to state 31
    enum_specifier             go to state 32


state 43

   27 func_decl_specs: KW_RESTRICT . func_decl_specs

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 41
    KW_VOLATILE  shift, and go to state 42
    KW_RESTRICT  shift, and go to state 43
    KW_INLINE    shift, and go to state 44
    KW_EXTERN    shift, and go to state 45
    KW_STATIC    shift, and go to state 46

    func_decl_specs            go to state 50
    type_specifier             go to state 48
    struct_or_union_specifier  go to state 31
    enum_specifier             go to state 32


state 44

   28 func_decl_specs: KW_INLINE . func_decl_specs

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 41
    KW_VOLATILE  shift, and go to state 42
    KW_RESTRICT  shift, and go to state 43
    KW_INLINE    shift, and go to state 44
    KW_EXTERN    shift, and go to state 45
    KW_STATIC    shift, and go to state 46

    func_decl_specs            go to state 51
    type_specifier             go to state 48
    struct_or_union_specifier  go to state 31
    enum_specifier             go to state 32


state 45

   23 func_decl_specs: KW_EXTERN . func_decl_specs

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 41
    KW_VOLATILE  shift, and go to state 42
    KW_RESTRICT  shift, and go to state 43
    KW_INLINE    shift, and go to state 44
    KW_EXTERN    shift, and go to state 45
    KW_STATIC    shift, and go to state 46

    func_decl_specs            go to state 52
    type_specifier             go to state 48
    struct_or_union_specifier  go to state 31
    enum_specifier             go to state 32


state 46

   24 func_decl_specs: KW_STATIC . func_decl_specs

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 41
    KW_VOLATILE  shift, and go to state 42
    KW_RESTRICT  shift, and go to state 43
    KW_INLINE    shift, and go to state 44
    KW_EXTERN    shift, and go to state 45
    KW_STATIC    shift, and go to state 46

    func_decl_specs            go to state 53
    type_specifier             go to state 48
    struct_or_union_specifier  go to state 31
    enum_specifier             go to state 32


state 47

   25 func_decl_specs: KW_CONST func_decl_specs .

    $default  reduce using rule 25 (func_decl_specs)


state 48

   22 func_decl_specs: type_specifier . star_list_opt

    '*'  shift, and go to state 84

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt  go to state 86
    star_list      go to state 69


state 49

   26 func_decl_specs: KW_VOLATILE func_decl_specs .

    $default  reduce using rule 26 (func_decl_specs)


state 50

   27 func_decl_specs: KW_RESTRICT func_decl_specs .

    $default  reduce using rule 27 (func_decl_specs)


state 51

   28 func_decl_specs: KW_INLINE func_decl_specs .

    $default  reduce using rule 28 (func_decl_specs)


state 52

   23 func_decl_specs: KW_EXTERN func_decl_specs .

    $default  reduce using rule 23 (func_decl_specs)


state 53

   24 func_decl_specs: KW_STATIC func_decl_specs .

    $default  reduce using rule 24 (func_decl_specs)


state 54

   11 external_declaration: func_decl_specs IDENTIFIER . '(' parameter_type_list_opt ')' compound_statement
   12                     | func_decl_specs IDENTIFIER . '(' parameter_type_list_opt ')' ';'

    '('  shift, and go to state 87


state 55

   45 type_qualifier: KW_CONST .

    $default  reduce using rule 45 (type_qualifier)


state 56

   46 type_qualifier: KW_VOLATILE .

    $default  reduce using rule 46 (type_qualifier)


state 57

   47 type_qualifier: KW_RESTRICT .

    $default  reduce using rule 47 (type_qualifier)


state 58

   48 function_specifier: KW_INLINE .

    $default  reduce using rule 48 (function_specifier)


state 59

   43 storage_class_specifier: KW_EXTERN .

    $default  reduce using rule 43 (storage_class_specifier)


state 60

   44 storage_class_specifier: KW_STATIC .

    $default  reduce using rule 44 (storage_class_specifier)


state 61

   91 pointer: '*' .
   92        | '*' . type_qualifier
   93        | '*' . pointer
   94        | '*' . type_qualifier pointer

    KW_CONST     shift, and go to state 55
    KW_VOLATILE  shift, and go to state 56
    KW_RESTRICT  shift, and go to state 57
    '*'          shift, and go to state 61

    $default  reduce using rule 91 (pointer)

    type_qualifier  go to state 88
    pointer         go to state 89


state 62

   38 declaration_specifiers: declaration_specifiers declaration_specifier .

    $default  reduce using rule 38 (declaration_specifiers)


state 63

   40 declaration_specifier: type_specifier .

    $default  reduce using rule 40 (declaration_specifier)


state 64

  110 function_definition: declaration_specifiers declarator . compound_statement

    '{'  shift, and go to state 90

    compound_statement  go to state 91


state 65

   88 declarator: pointer_opt . direct_declarator

    IDENTIFIER  shift, and go to state 92
    '('         shift, and go to state 93

    direct_declarator  go to state 94


state 66

   90 pointer_opt: pointer .

    $default  reduce using rule 90 (pointer_opt)


state 67

    5 star_list: '*' .
   91 pointer: '*' .
   92        | '*' . type_qualifier
   93        | '*' . pointer
   94        | '*' . type_qualifier pointer

    KW_CONST     shift, and go to state 55
    KW_VOLATILE  shift, and go to state 56
    KW_RESTRICT  shift, and go to state 57

    IDENTIFIER  reduce using rule 5 (star_list)
    IDENTIFIER  [reduce using rule 91 (pointer)]
    '('         reduce using rule 5 (star_list)
    '('         [reduce using rule 91 (pointer)]
    $default    reduce using rule 5 (star_list)

    type_qualifier  go to state 88
    pointer         go to state 89


state 68

    9 external_declaration: type_specifier star_list_opt . IDENTIFIER '(' parameter_type_list_opt ')' compound_statement
   10                     | type_specifier star_list_opt . IDENTIFIER '(' parameter_type_list_opt ')' ';'
   15                     | type_specifier star_list_opt . IDENTIFIER '=' assignment_expression ';'
   18                     | type_specifier star_list_opt . IDENTIFIER ';'
   19                     | type_specifier star_list_opt . IDENTIFIER '=' initializer ';'
   20                     | type_specifier star_list_opt . IDENTIFIER array_dims '=' initializer ';'
   22 func_decl_specs: type_specifier star_list_opt .
  132 sdecl: star_list_opt . sdir

    IDENTIFIER  shift, and go to state 95
    '('         shift, and go to state 96

    IDENTIFIER  [reduce using rule 22 (func_decl_specs)]

    sdir  go to state 97


state 69

    4 star_list_opt: star_list .
    6 star_list: star_list . '*'

    '*'  shift, and go to state 98

    $default  reduce using rule 4 (star_list_opt)


state 70

  111 function_definition: type_specifier declarator . compound_statement

    '{'  shift, and go to state 90

    compound_statement  go to state 99


state 71

    7 external_declaration: type_specifier sdecl . ',' sdecl sdecl_list ';'

    ','  shift, and go to state 100


state 72

   63 struct_or_union_specifier: KW_STRUCT IDENTIFIER '{' . struct_declaration_list_opt '}'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 55
    KW_VOLATILE  shift, and go to state 56
    KW_RESTRICT  shift, and go to state 57
    KW_INLINE    shift, and go to state 58
    KW_EXTERN    shift, and go to state 59
    KW_STATIC    shift, and go to state 60

    $default  reduce using rule 69 (struct_declaration_list_opt)

    declaration_specifiers       go to state 73
    declaration_specifier        go to state 26
    storage_class_specifier      go to state 27
    type_qualifier               go to state 28
    function_specifier           go to state 29
    type_specifier               go to state 63
    struct_or_union_specifier    go to state 31
    struct_declaration_list_opt  go to state 101
    struct_declaration_list      go to state 75
    struct_declaration           go to state 76
    enum_specifier               go to state 32


state 73

   38 declaration_specifiers: declaration_specifiers . declaration_specifier
   73 struct_declaration: declaration_specifiers . struct_declarator_list ';'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 55
    KW_VOLATILE  shift, and go to state 56
    KW_RESTRICT  shift, and go to state 57
    KW_INLINE    shift, and go to state 58
    KW_EXTERN    shift, and go to state 59
    KW_STATIC    shift, and go to state 60
    ':'          shift, and go to state 102
    '*'          shift, and go to state 61

    $default  reduce using rule 89 (pointer_opt)

    declaration_specifier      go to state 62
    storage_class_specifier    go to state 27
    type_qualifier             go to state 28
    function_specifier         go to state 29
    type_specifier             go to state 63
    struct_or_union_specifier  go to state 31
    struct_declarator_list     go to state 103
    struct_declarator          go to state 104
    enum_specifier             go to state 32
    declarator                 go to state 105
    pointer_opt                go to state 65
    pointer                    go to state 66


state 74

   65 struct_or_union_specifier: KW_STRUCT '{' struct_declaration_list_opt . '}'

    '}'  shift, and go to state 106


state 75

   70 struct_declaration_list_opt: struct_declaration_list .
   72 struct_declaration_list: struct_declaration_list . struct_declaration

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 55
    KW_VOLATILE  shift, and go to state 56
    KW_RESTRICT  shift, and go to state 57
    KW_INLINE    shift, and go to state 58
    KW_EXTERN    shift, and go to state 59
    KW_STATIC    shift, and go to state 60

    $default  reduce using rule 70 (struct_declaration_list_opt)

    declaration_specifiers     go to state 73
    declaration_specifier      go to state 26
    storage_class_specifier    go to state 27
    type_qualifier             go to state 28
    function_specifier         go to state 29
    type_specifier             go to state 63
    struct_or_union_specifier  go to state 31
    struct_declaration         go to state 107
    enum_specifier             go to state 32


state 76

   71 struct_declaration_list: struct_declaration .

    $default  reduce using rule 71 (struct_declaration_list)


state 77

   64 struct_or_union_specifier: KW_UNION IDENTIFIER '{' . struct_declaration_list_opt '}'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 55
    KW_VOLATILE  shift, and go to state 56
    KW_RESTRICT  shift, and go to state 57
    KW_INLINE    shift, and go to state 58
    KW_EXTERN    shift, and go to state 59
    KW_STATIC    shift, and go to state 60

    $default  reduce using rule 69 (struct_declaration_list_opt)

    declaration_specifiers       go to state 73
    declaration_specifier        go to state 26
    storage_class_specifier      go to state 27
    type_qualifier               go to state 28
    function_specifier           go to state 29
    type_specifier               go to state 63
    struct_or_union_specifier    go to state 31
    struct_declaration_list_opt  go to state 108
    struct_declaration_list      go to state 75
    struct_declaration           go to state 76
    enum_specifier               go to state 32


state 78

   66 struct_or_union_specifier: KW_UNION '{' struct_declaration_list_opt . '}'

    '}'  shift, and go to state 109


state 79

   79 enum_specifier: KW_ENUM IDENTIFIER '{' . enumerator_list_opt '}'

    IDENTIFIER  shift, and go to state 80

    $default  reduce using rule 82 (enumerator_list_opt)

    enumerator_list_opt  go to state 110
    enumerator_list      go to state 82
    enumerator           go to state 83


state 80

   86 enumerator: IDENTIFIER .
   87           | IDENTIFIER . '=' constant_expression

    '='  shift, and go to state 111

    $default  reduce using rule 86 (enumerator)


state 81

   80 enum_specifier: KW_ENUM '{' enumerator_list_opt . '}'

    '}'  shift, and go to state 112


state 82

   83 enumerator_list_opt: enumerator_list .
   85 enumerator_list: enumerator_list . ',' enumerator

    ','  shift, and go to state 113

    $default  reduce using rule 83 (enumerator_list_opt)


state 83

   84 enumerator_list: enumerator .

    $default  reduce using rule 84 (enumerator_list)


state 84

    5 star_list: '*' .

    $default  reduce using rule 5 (star_list)


state 85

   13 external_declaration: KW_TYPEDEF type_specifier star_list_opt . IDENTIFIER ';'
   14                     | KW_TYPEDEF type_specifier star_list_opt . IDENTIFIER array_dims ';'
   16                     | KW_TYPEDEF type_specifier star_list_opt . '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   17                     | KW_TYPEDEF type_specifier star_list_opt . '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'

    IDENTIFIER  shift, and go to state 114
    '('         shift, and go to state 115


state 86

   22 func_decl_specs: type_specifier star_list_opt .

    $default  reduce using rule 22 (func_decl_specs)


state 87

   11 external_declaration: func_decl_specs IDENTIFIER '(' . parameter_type_list_opt ')' compound_statement
   12                     | func_decl_specs IDENTIFIER '(' . parameter_type_list_opt ')' ';'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15

    $default  reduce using rule 29 (parameter_type_list_opt)

    parameter_type_list_opt    go to state 116
    parameter_type_list        go to state 117
    parameter_list             go to state 118
    parameter_declaration      go to state 119
    type_specifier             go to state 120
    struct_or_union_specifier  go to state 31
    enum_specifier             go to state 32


state 88

   92 pointer: '*' type_qualifier .
   94        | '*' type_qualifier . pointer

    '*'  shift, and go to state 61

    $default  reduce using rule 92 (pointer)

    pointer  go to state 121


state 89

   93 pointer: '*' pointer .

    $default  reduce using rule 93 (pointer)


state 90

  117 compound_statement: '{' . block_item_list_opt '}'

    IDENTIFIER        shift, and go to state 122
    TYPE_NAME         shift, and go to state 3
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_VOID           shift, and go to state 4
    KW_CHAR           shift, and go to state 5
    KW_SHORT          shift, and go to state 6
    KW_INT            shift, and go to state 7
    KW_LONG           shift, and go to state 8
    KW_SIGNED         shift, and go to state 9
    KW_UNSIGNED       shift, and go to state 10
    KW_FLOAT          shift, and go to state 11
    KW_DOUBLE         shift, and go to state 12
    KW_STRUCT         shift, and go to state 13
    KW_UNION          shift, and go to state 14
    KW_ENUM           shift, and go to state 15
    KW_TYPEDEF        shift, and go to state 127
    KW_RETURN         shift, and go to state 128
    KW_IF             shift, and go to state 129
    KW_WHILE          shift, and go to state 130
    KW_FOR            shift, and go to state 131
    KW_DO             shift, and go to state 132
    KW_SWITCH         shift, and go to state 133
    KW_BREAK          shift, and go to state 134
    KW_CONTINUE       shift, and go to state 135
    KW_GOTO           shift, and go to state 136
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144
    ';'               shift, and go to state 145
    '{'               shift, and go to state 90

    $default  reduce using rule 118 (block_item_list_opt)

    type_specifier             go to state 146
    struct_or_union_specifier  go to state 31
    enum_specifier             go to state 32
    statement                  go to state 147
    compound_statement         go to state 148
    block_item_list_opt        go to state 149
    block_item_list            go to state 150
    block_item                 go to state 151
    expression_statement       go to state 152
    selection_statement        go to state 153
    iteration_statement        go to state 154
    jump_statement             go to state 155
    expression                 go to state 156
    assignment_expression      go to state 157
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 91

  110 function_definition: declaration_specifiers declarator compound_statement .

    $default  reduce using rule 110 (function_definition)


state 92

   95 direct_declarator: IDENTIFIER .

    $default  reduce using rule 95 (direct_declarator)


state 93

   96 direct_declarator: '(' . declarator ')'

    '*'  shift, and go to state 61

    $default  reduce using rule 89 (pointer_opt)

    declarator   go to state 172
    pointer_opt  go to state 65
    pointer      go to state 66


state 94

   88 declarator: pointer_opt direct_declarator .
   97 direct_declarator: direct_declarator . '[' assignment_expression_opt ']'
   98                  | direct_declarator . '(' parameter_type_list_opt ')'
   99                  | direct_declarator . '(' identifier_list_opt ')'

    '('  shift, and go to state 173
    '['  shift, and go to state 174

    $default  reduce using rule 88 (declarator)


state 95

    9 external_declaration: type_specifier star_list_opt IDENTIFIER . '(' parameter_type_list_opt ')' compound_statement
   10                     | type_specifier star_list_opt IDENTIFIER . '(' parameter_type_list_opt ')' ';'
   15                     | type_specifier star_list_opt IDENTIFIER . '=' assignment_expression ';'
   18                     | type_specifier star_list_opt IDENTIFIER . ';'
   19                     | type_specifier star_list_opt IDENTIFIER . '=' initializer ';'
   20                     | type_specifier star_list_opt IDENTIFIER . array_dims '=' initializer ';'
  133 sdir: IDENTIFIER .

    '='  shift, and go to state 175
    '('  shift, and go to state 176
    ';'  shift, and go to state 178

    $default  reduce using rule 133 (sdir)

    array_dims  go to state 179


state 96

  134 sdir: '(' . sdecl ')'
  135     | '(' . sdecl ')' '(' fp_param_list_opt ')'

    '*'  shift, and go to state 84

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt  go to state 180
    star_list      go to state 69
    sdecl          go to state 181


state 97

  132 sdecl: star_list_opt sdir .
  136 sdir: sdir . '[' assignment_expression_opt ']'

    '['  shift, and go to state 182

    $default  reduce using rule 132 (sdecl)


state 98

    6 star_list: star_list '*' .

    $default  reduce using rule 6 (star_list)


state 99

  111 function_definition: type_specifier declarator compound_statement .

    $default  reduce using rule 111 (function_definition)


state 100

    7 external_declaration: type_specifier sdecl ',' . sdecl sdecl_list ';'

    '*'  shift, and go to state 84

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt  go to state 180
    star_list      go to state 69
    sdecl          go to state 183


state 101

   63 struct_or_union_specifier: KW_STRUCT IDENTIFIER '{' struct_declaration_list_opt . '}'

    '}'  shift, and go to state 184


state 102

   77 struct_declarator: ':' . constant_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    conditional_expression     go to state 185
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 186
    postfix_expression         go to state 170
    primary_expression         go to state 171
    constant_expression        go to state 187


state 103

   73 struct_declaration: declaration_specifiers struct_declarator_list . ';'
   75 struct_declarator_list: struct_declarator_list . ',' struct_declarator

    ','  shift, and go to state 188
    ';'  shift, and go to state 189


state 104

   74 struct_declarator_list: struct_declarator .

    $default  reduce using rule 74 (struct_declarator_list)


state 105

   76 struct_declarator: declarator .
   78                  | declarator . ':' constant_expression

    ':'  shift, and go to state 190

    $default  reduce using rule 76 (struct_declarator)


state 106

   65 struct_or_union_specifier: KW_STRUCT '{' struct_declaration_list_opt '}' .

    $default  reduce using rule 65 (struct_or_union_specifier)


state 107

   72 struct_declaration_list: struct_declaration_list struct_declaration .

    $default  reduce using rule 72 (struct_declaration_list)


state 108

   64 struct_or_union_specifier: KW_UNION IDENTIFIER '{' struct_declaration_list_opt . '}'

    '}'  shift, and go to state 191


state 109

   66 struct_or_union_specifier: KW_UNION '{' struct_declaration_list_opt '}' .

    $default  reduce using rule 66 (struct_or_union_specifier)


state 110

   79 enum_specifier: KW_ENUM IDENTIFIER '{' enumerator_list_opt . '}'

    '}'  shift, and go to state 192


state 111

   87 enumerator: IDENTIFIER '=' . constant_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    conditional_expression     go to state 185
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 186
    postfix_expression         go to state 170
    primary_expression         go to state 171
    constant_expression        go to state 193


state 112

   80 enum_specifier: KW_ENUM '{' enumerator_list_opt '}' .

    $default  reduce using rule 80 (enum_specifier)


state 113

   85 enumerator_list: enumerator_list ',' . enumerator

    IDENTIFIER  shift, and go to state 80

    enumerator  go to state 194


state 114

   13 external_declaration: KW_TYPEDEF type_specifier star_list_opt IDENTIFIER . ';'
   14                     | KW_TYPEDEF type_specifier star_list_opt IDENTIFIER . array_dims ';'

    '['  shift, and go to state 177
    ';'  shift, and go to state 195

    array_dims  go to state 196


state 115

   16 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' . '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   17                     | KW_TYPEDEF type_specifier star_list_opt '(' . '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'

    '*'  shift, and go to state 197


state 116

   11 external_declaration: func_decl_specs IDENTIFIER '(' parameter_type_list_opt . ')' compound_statement
   12                     | func_decl_specs IDENTIFIER '(' parameter_type_list_opt . ')' ';'

    ')'  shift, and go to state 198


state 117

   30 parameter_type_list_opt: parameter_type_list .

    $default  reduce using rule 30 (parameter_type_list_opt)


state 118

   31 parameter_type_list: parameter_list .
   32                    | parameter_list . ',' ELLIPSIS
   34 parameter_list: parameter_list . ',' parameter_declaration

    ','  shift, and go to state 199

    $default  reduce using rule 31 (parameter_type_list)


state 119

   33 parameter_list: parameter_declaration .

    $default  reduce using rule 33 (parameter_list)


state 120

   35 parameter_declaration: type_specifier . sdecl
   36                      | type_specifier .

    '*'  shift, and go to state 84

    ')'       reduce using rule 36 (parameter_declaration)
    ','       reduce using rule 36 (parameter_declaration)
    $default  reduce using rule 3 (star_list_opt)

    star_list_opt  go to state 180
    star_list      go to state 69
    sdecl          go to state 200


state 121

   94 pointer: '*' type_qualifier pointer .

    $default  reduce using rule 94 (pointer)


state 122

  217 primary_expression: IDENTIFIER .

    $default  reduce using rule 217 (primary_expression)


state 123

  221 primary_expression: STRING_LITERAL .

    $default  reduce using rule 221 (primary_expression)


state 124

  218 primary_expression: INTEGER_CONSTANT .

    $default  reduce using rule 218 (primary_expression)


state 125

  219 primary_expression: FLOAT_CONSTANT .

    $default  reduce using rule 219 (primary_expression)


state 126

  220 primary_expression: CHAR_CONSTANT .

    $default  reduce using rule 220 (primary_expression)


state 127

  128 block_item: KW_TYPEDEF . type_specifier star_list_opt IDENTIFIER ';'
  129           | KW_TYPEDEF . type_specifier type_specifier star_list_opt IDENTIFIER ';'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15

    type_specifier             go to state 201
    struct_or_union_specifier  go to state 31
    enum_specifier             go to state 32


state 128

  145 jump_statement: KW_RETURN . expression_opt ';'

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    $default  reduce using rule 149 (expression_opt)

    expression_opt             go to state 202
    expression                 go to state 203
    assignment_expression      go to state 157
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 129

  139 selection_statement: KW_IF . '(' expression ')' statement
  140                    | KW_IF . '(' expression ')' statement KW_ELSE statement

    '('  shift, and go to state 204


state 130

  142 iteration_statement: KW_WHILE . '(' expression ')' statement

    '('  shift, and go to state 205


state 131

  144 iteration_statement: KW_FOR . '(' expression_opt ';' expression_opt ';' expression_opt ')' statement

    '('  shift, and go to state 206


state 132

  143 iteration_statement: KW_DO . statement KW_WHILE '(' expression ')' ';'

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_RETURN         shift, and go to state 128
    KW_IF             shift, and go to state 129
    KW_WHILE          shift, and go to state 130
    KW_FOR            shift, and go to state 131
    KW_DO             shift, and go to state 132
    KW_SWITCH         shift, and go to state 133
    KW_BREAK          shift, and go to state 134
    KW_CONTINUE       shift, and go to state 135
    KW_GOTO           shift, and go to state 136
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144
    ';'               shift, and go to state 145
    '{'               shift, and go to state 90

    statement                  go to state 207
    compound_statement         go to state 148
    expression_statement       go to state 152
    selection_statement        go to state 153
    iteration_statement        go to state 154
    jump_statement             go to state 155
    expression                 go to state 156
    assignment_expression      go to state 157
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 133

  141 selection_statement: KW_SWITCH . '(' expression ')' statement

    '('  shift, and go to state 208


state 134

  146 jump_statement: KW_BREAK . ';'

    ';'  shift, and go to state 209


state 135

  147 jump_statement: KW_CONTINUE . ';'

    ';'  shift, and go to state 210


state 136

  148 jump_statement: KW_GOTO . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 211


state 137

  204 unary_expression: KW_SIZEOF . unary_expression
  205                 | KW_SIZEOF . '(' type_specifier ')'

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 212

    unary_expression    go to state 213
    postfix_expression  go to state 170
    primary_expression  go to state 171


state 138

  198 unary_expression: INC . unary_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    unary_expression    go to state 214
    postfix_expression  go to state 170
    primary_expression  go to state 171


state 139

  199 unary_expression: DEC . unary_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    unary_expression    go to state 215
    postfix_expression  go to state 170
    primary_expression  go to state 171


state 140

  200 unary_expression: '+' . unary_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    unary_expression    go to state 216
    postfix_expression  go to state 170
    primary_expression  go to state 171


state 141

  201 unary_expression: '-' . unary_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    unary_expression    go to state 217
    postfix_expression  go to state 170
    primary_expression  go to state 171


state 142

  202 unary_expression: '!' . unary_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    unary_expression    go to state 218
    postfix_expression  go to state 170
    primary_expression  go to state 171


state 143

  203 unary_expression: '~' . unary_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    unary_expression    go to state 219
    postfix_expression  go to state 170
    primary_expression  go to state 171


state 144

  222 primary_expression: '(' . expression ')'

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    expression                 go to state 220
    assignment_expression      go to state 157
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 145

  137 expression_statement: ';' .

    $default  reduce using rule 137 (expression_statement)


state 146

  122 block_item: type_specifier . star_list_opt IDENTIFIER ';'
  123           | type_specifier . star_list_opt IDENTIFIER '=' assignment_expression ';'
  124           | type_specifier . star_list_opt IDENTIFIER '=' initializer ';'
  125           | type_specifier . star_list_opt IDENTIFIER array_dims '=' initializer ';'
  126           | type_specifier . sdecl ',' sdecl sdecl_list ';'

    '*'  shift, and go to state 84

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt  go to state 221
    star_list      go to state 69
    sdecl          go to state 222


state 147

  127 block_item: statement .

    $default  reduce using rule 127 (block_item)


state 148

  112 statement: compound_statement .

    $default  reduce using rule 112 (statement)


state 149

  117 compound_statement: '{' block_item_list_opt . '}'

    '}'  shift, and go to state 223


state 150

  119 block_item_list_opt: block_item_list .
  121 block_item_list: block_item_list . block_item

    IDENTIFIER        shift, and go to state 122
    TYPE_NAME         shift, and go to state 3
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_VOID           shift, and go to state 4
    KW_CHAR           shift, and go to state 5
    KW_SHORT          shift, and go to state 6
    KW_INT            shift, and go to state 7
    KW_LONG           shift, and go to state 8
    KW_SIGNED         shift, and go to state 9
    KW_UNSIGNED       shift, and go to state 10
    KW_FLOAT          shift, and go to state 11
    KW_DOUBLE         shift, and go to state 12
    KW_STRUCT         shift, and go to state 13
    KW_UNION          shift, and go to state 14
    KW_ENUM           shift, and go to state 15
    KW_TYPEDEF        shift, and go to state 127
    KW_RETURN         shift, and go to state 128
    KW_IF             shift, and go to state 129
    KW_WHILE          shift, and go to state 130
    KW_FOR            shift, and go to state 131
    KW_DO             shift, and go to state 132
    KW_SWITCH         shift, and go to state 133
    KW_BREAK          shift, and go to state 134
    KW_CONTINUE       shift, and go to state 135
    KW_GOTO           shift, and go to state 136
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144
    ';'               shift, and go to state 145
    '{'               shift, and go to state 90

    $default  reduce using rule 119 (block_item_list_opt)

    type_specifier             go to state 146
    struct_or_union_specifier  go to state 31
    enum_specifier             go to state 32
    statement                  go to state 147
    compound_statement         go to state 148
    block_item                 go to state 224
    expression_statement       go to state 152
    selection_statement        go to state 153
    iteration_statement        go to state 154
    jump_statement             go to state 155
    expression                 go to state 156
    assignment_expression      go to state 157
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 151

  120 block_item_list: block_item .

    $default  reduce using rule 120 (block_item_list)


state 152

  113 statement: expression_statement .

    $default  reduce using rule 113 (statement)


state 153

  114 statement: selection_statement .

    $default  reduce using rule 114 (statement)


state 154

  115 statement: iteration_statement .

    $default  reduce using rule 115 (statement)


state 155

  116 statement: jump_statement .

    $default  reduce using rule 116 (statement)


state 156

  138 expression_statement: expression . ';'
  152 expression: expression . ',' assignment_expression

    ','  shift, and go to state 225
    ';'  shift, and go to state 226


state 157

  151 expression: assignment_expression .

    $default  reduce using rule 151 (expression)


state 158

  155 assignment_expression: conditional_expression .

    $default  reduce using rule 155 (assignment_expression)


state 159

  167 conditional_expression: logical_or_expression .
  168                       | logical_or_expression . '?' expression ':' conditional_expression
  170 logical_or_expression: logical_or_expression . LOGOR logical_and_expression

    LOGOR  shift, and go to state 227
    '?'    shift, and go to state 228

    $default  reduce using rule 167 (conditional_expression)


state 160

  169 logical_or_expression: logical_and_expression .
  172 logical_and_expression: logical_and_expression . LOGAND inclusive_or_expression

    LOGAND  shift, and go to state 229

    $default  reduce using rule 169 (logical_or_expression)


state 161

  171 logical_and_expression: inclusive_or_expression .
  174 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression

    '|'  shift, and go to state 230

    $default  reduce using rule 171 (logical_and_expression)


state 162

  173 inclusive_or_expression: exclusive_or_expression .
  176 exclusive_or_expression: exclusive_or_expression . '^' and_expression

    '^'  shift, and go to state 231

    $default  reduce using rule 173 (inclusive_or_expression)


state 163

  175 exclusive_or_expression: and_expression .
  178 and_expression: and_expression . '&' equality_expression

    '&'  shift, and go to state 232

    $default  reduce using rule 175 (exclusive_or_expression)


state 164

  177 and_expression: equality_expression .
  180 equality_expression: equality_expression . EQ relational_expression
  181                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 233
    NE  shift, and go to state 234

    $default  reduce using rule 177 (and_expression)


state 165

  179 equality_expression: relational_expression .
  183 relational_expression: relational_expression . '<' shift_expression
  184                      | relational_expression . '>' shift_expression
  185                      | relational_expression . LE shift_expression
  186                      | relational_expression . GE shift_expression

    LE   shift, and go to state 235
    GE   shift, and go to state 236
    '<'  shift, and go to state 237
    '>'  shift, and go to state 238

    $default  reduce using rule 179 (equality_expression)


state 166

  182 relational_expression: shift_expression .
  188 shift_expression: shift_expression . LSHIFT additive_expression
  189                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 239
    RSHIFT  shift, and go to state 240

    $default  reduce using rule 182 (relational_expression)


state 167

  187 shift_expression: additive_expression .
  191 additive_expression: additive_expression . '+' multiplicative_expression
  192                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 241
    '-'  shift, and go to state 242

    $default  reduce using rule 187 (shift_expression)


state 168

  190 additive_expression: multiplicative_expression .
  194 multiplicative_expression: multiplicative_expression . '*' unary_expression
  195                          | multiplicative_expression . '/' unary_expression
  196                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 243
    '/'  shift, and go to state 244
    '%'  shift, and go to state 245

    $default  reduce using rule 190 (additive_expression)


state 169

  156 assignment_expression: unary_expression . '=' assignment_expression
  157                      | unary_expression . ADD_ASSIGN assignment_expression
  158                      | unary_expression . SUB_ASSIGN assignment_expression
  159                      | unary_expression . MUL_ASSIGN assignment_expression
  160                      | unary_expression . DIV_ASSIGN assignment_expression
  161                      | unary_expression . MOD_ASSIGN assignment_expression
  162                      | unary_expression . AND_ASSIGN assignment_expression
  163                      | unary_expression . OR_ASSIGN assignment_expression
  164                      | unary_expression . XOR_ASSIGN assignment_expression
  165                      | unary_expression . LSHIFT_ASSIGN assignment_expression
  166                      | unary_expression . RSHIFT_ASSIGN assignment_expression
  193 multiplicative_expression: unary_expression .

    ADD_ASSIGN     shift, and go to state 246
    SUB_ASSIGN     shift, and go to state 247
    MUL_ASSIGN     shift, and go to state 248
    DIV_ASSIGN     shift, and go to state 249
    MOD_ASSIGN     shift, and go to state 250
    AND_ASSIGN     shift, and go to state 251
    OR_ASSIGN      shift, and go to state 252
    XOR_ASSIGN     shift, and go to state 253
    LSHIFT_ASSIGN  shift, and go to state 254
    RSHIFT_ASSIGN  shift, and go to state 255
    '='            shift, and go to state 256

    $default  reduce using rule 193 (multiplicative_expression)


state 170

  197 unary_expression: postfix_expression .
  207 postfix_expression: postfix_expression . '(' argument_expression_list_opt ')'
  208                   | postfix_expression . '[' expression ']'
  209                   | postfix_expression . '.' IDENTIFIER
  210                   | postfix_expression . ARROW IDENTIFIER
  211                   | postfix_expression . INC
  212                   | postfix_expression . DEC

    ARROW  shift, and go to state 257
    INC    shift, and go to state 258
    DEC    shift, and go to state 259
    '('    shift, and go to state 260
    '['    shift, and go to state 261
    '.'    shift, and go to state 262

    $default  reduce using rule 197 (unary_expression)


state 171

  206 postfix_expression: primary_expression .

    $default  reduce using rule 206 (postfix_expression)


state 172

   96 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 263


state 173

   98 direct_declarator: direct_declarator '(' . parameter_type_list_opt ')'
   99                  | direct_declarator '(' . identifier_list_opt ')'

    IDENTIFIER   shift, and go to state 264
    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15

    ')'       reduce using rule 29 (parameter_type_list_opt)
    ')'       [reduce using rule 100 (identifier_list_opt)]
    $default  reduce using rule 29 (parameter_type_list_opt)

    parameter_type_list_opt    go to state 265
    parameter_type_list        go to state 117
    parameter_list             go to state 118
    parameter_declaration      go to state 119
    type_specifier             go to state 120
    struct_or_union_specifier  go to state 31
    enum_specifier             go to state 32
    identifier_list_opt        go to state 266
    identifier_list            go to state 267


state 174

   97 direct_declarator: direct_declarator '[' . assignment_expression_opt ']'

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    $default  reduce using rule 153 (assignment_expression_opt)

    assignment_expression_opt  go to state 268
    assignment_expression      go to state 269
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 175

   15 external_declaration: type_specifier star_list_opt IDENTIFIER '=' . assignment_expression ';'
   19                     | type_specifier star_list_opt IDENTIFIER '=' . initializer ';'

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144
    '{'               shift, and go to state 270

    assignment_expression      go to state 271
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171
    initializer                go to state 272


state 176

    9 external_declaration: type_specifier star_list_opt IDENTIFIER '(' . parameter_type_list_opt ')' compound_statement
   10                     | type_specifier star_list_opt IDENTIFIER '(' . parameter_type_list_opt ')' ';'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15

    $default  reduce using rule 29 (parameter_type_list_opt)

    parameter_type_list_opt    go to state 273
    parameter_type_list        go to state 117
    parameter_list             go to state 118
    parameter_declaration      go to state 119
    type_specifier             go to state 120
    struct_or_union_specifier  go to state 31
    enum_specifier             go to state 32


state 177

   61 array_dims: '[' . INTEGER_CONSTANT ']'

    INTEGER_CONSTANT  shift, and go to state 274


state 178

   18 external_declaration: type_specifier star_list_opt IDENTIFIER ';' .

    $default  reduce using rule 18 (external_declaration)


state 179

   20 external_declaration: type_specifier star_list_opt IDENTIFIER array_dims . '=' initializer ';'
   62 array_dims: array_dims . '[' INTEGER_CONSTANT ']'

    '='  shift, and go to state 275
    '['  shift, and go to state 276


state 180

  132 sdecl: star_list_opt . sdir

    IDENTIFIER  shift, and go to state 277
    '('         shift, and go to state 96

    sdir  go to state 97


state 181

  134 sdir: '(' sdecl . ')'
  135     | '(' sdecl . ')' '(' fp_param_list_opt ')'

    ')'  shift, and go to state 278


state 182

  136 sdir: sdir '[' . assignment_expression_opt ']'

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    $default  reduce using rule 153 (assignment_expression_opt)

    assignment_expression_opt  go to state 279
    assignment_expression      go to state 269
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 183

    7 external_declaration: type_specifier sdecl ',' sdecl . sdecl_list ';'

    $default  reduce using rule 130 (sdecl_list)

    sdecl_list  go to state 280


state 184

   63 struct_or_union_specifier: KW_STRUCT IDENTIFIER '{' struct_declaration_list_opt '}' .

    $default  reduce using rule 63 (struct_or_union_specifier)


state 185

  239 constant_expression: conditional_expression .

    $default  reduce using rule 239 (constant_expression)


state 186

  193 multiplicative_expression: unary_expression .

    $default  reduce using rule 193 (multiplicative_expression)


state 187

   77 struct_declarator: ':' constant_expression .

    $default  reduce using rule 77 (struct_declarator)


state 188

   75 struct_declarator_list: struct_declarator_list ',' . struct_declarator

    ':'  shift, and go to state 102
    '*'  shift, and go to state 61

    $default  reduce using rule 89 (pointer_opt)

    struct_declarator  go to state 281
    declarator         go to state 105
    pointer_opt        go to state 65
    pointer            go to state 66


state 189

   73 struct_declaration: declaration_specifiers struct_declarator_list ';' .

    $default  reduce using rule 73 (struct_declaration)


state 190

   78 struct_declarator: declarator ':' . constant_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    conditional_expression     go to state 185
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 186
    postfix_expression         go to state 170
    primary_expression         go to state 171
    constant_expression        go to state 282


state 191

   64 struct_or_union_specifier: KW_UNION IDENTIFIER '{' struct_declaration_list_opt '}' .

    $default  reduce using rule 64 (struct_or_union_specifier)


state 192

   79 enum_specifier: KW_ENUM IDENTIFIER '{' enumerator_list_opt '}' .

    $default  reduce using rule 79 (enum_specifier)


state 193

   87 enumerator: IDENTIFIER '=' constant_expression .

    $default  reduce using rule 87 (enumerator)


state 194

   85 enumerator_list: enumerator_list ',' enumerator .

    $default  reduce using rule 85 (enumerator_list)


state 195

   13 external_declaration: KW_TYPEDEF type_specifier star_list_opt IDENTIFIER ';' .

    $default  reduce using rule 13 (external_declaration)


state 196

   14 external_declaration: KW_TYPEDEF type_specifier star_list_opt IDENTIFIER array_dims . ';'
   62 array_dims: array_dims . '[' INTEGER_CONSTANT ']'

    '['  shift, and go to state 276
    ';'  shift, and go to state 283


state 197

   16 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' . IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   17                     | KW_TYPEDEF type_specifier star_list_opt '(' '*' . IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'

    IDENTIFIER  shift, and go to state 284


state 198

   11 external_declaration: func_decl_specs IDENTIFIER '(' parameter_type_list_opt ')' . compound_statement
   12                     | func_decl_specs IDENTIFIER '(' parameter_type_list_opt ')' . ';'

    ';'  shift, and go to state 285
    '{'  shift, and go to state 90

    compound_statement  go to state 286


state 199

   32 parameter_type_list: parameter_list ',' . ELLIPSIS
   34 parameter_list: parameter_list ',' . parameter_declaration

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    ELLIPSIS     shift, and go to state 287

    parameter_declaration      go to state 288
    type_specifier             go to state 120
    struct_or_union_specifier  go to state 31
    enum_specifier             go to state 32


state 200

   35 parameter_declaration: type_specifier sdecl .

    $default  reduce using rule 35 (parameter_declaration)


state 201

  128 block_item: KW_TYPEDEF type_specifier . star_list_opt IDENTIFIER ';'
  129           | KW_TYPEDEF type_specifier . type_specifier star_list_opt IDENTIFIER ';'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    '*'          shift, and go to state 84

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt              go to state 289
    star_list                  go to state 69
    type_specifier             go to state 290
    struct_or_union_specifier  go to state 31
    enum_specifier             go to state 32


state 202

  145 jump_statement: KW_RETURN expression_opt . ';'

    ';'  shift, and go to state 291


state 203

  150 expression_opt: expression .
  152 expression: expression . ',' assignment_expression

    ','  shift, and go to state 225

    $default  reduce using rule 150 (expression_opt)


state 204

  139 selection_statement: KW_IF '(' . expression ')' statement
  140                    | KW_IF '(' . expression ')' statement KW_ELSE statement

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    expression                 go to state 292
    assignment_expression      go to state 157
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 205

  142 iteration_statement: KW_WHILE '(' . expression ')' statement

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    expression                 go to state 293
    assignment_expression      go to state 157
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 206

  144 iteration_statement: KW_FOR '(' . expression_opt ';' expression_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    $default  reduce using rule 149 (expression_opt)

    expression_opt             go to state 294
    expression                 go to state 203
    assignment_expression      go to state 157
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 207

  143 iteration_statement: KW_DO statement . KW_WHILE '(' expression ')' ';'

    KW_WHILE  shift, and go to state 295


state 208

  141 selection_statement: KW_SWITCH '(' . expression ')' statement

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    expression                 go to state 296
    assignment_expression      go to state 157
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 209

  146 jump_statement: KW_BREAK ';' .

    $default  reduce using rule 146 (jump_statement)


state 210

  147 jump_statement: KW_CONTINUE ';' .

    $default  reduce using rule 147 (jump_statement)


state 211

  148 jump_statement: KW_GOTO IDENTIFIER . ';'

    ';'  shift, and go to state 297


state 212

  205 unary_expression: KW_SIZEOF '(' . type_specifier ')'
  222 primary_expression: '(' . expression ')'

    IDENTIFIER        shift, and go to state 122
    TYPE_NAME         shift, and go to state 3
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_VOID           shift, and go to state 4
    KW_CHAR           shift, and go to state 5
    KW_SHORT          shift, and go to state 6
    KW_INT            shift, and go to state 7
    KW_LONG           shift, and go to state 8
    KW_SIGNED         shift, and go to state 9
    KW_UNSIGNED       shift, and go to state 10
    KW_FLOAT          shift, and go to state 11
    KW_DOUBLE         shift, and go to state 12
    KW_STRUCT         shift, and go to state 13
    KW_UNION          shift, and go to state 14
    KW_ENUM           shift, and go to state 15
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    type_specifier             go to state 298
    struct_or_union_specifier  go to state 31
    enum_specifier             go to state 32
    expression                 go to state 220
    assignment_expression      go to state 157
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 213

  204 unary_expression: KW_SIZEOF unary_expression .

    $default  reduce using rule 204 (unary_expression)


state 214

  198 unary_expression: INC unary_expression .

    $default  reduce using rule 198 (unary_expression)


state 215

  199 unary_expression: DEC unary_expression .

    $default  reduce using rule 199 (unary_expression)


state 216

  200 unary_expression: '+' unary_expression .

    $default  reduce using rule 200 (unary_expression)


state 217

  201 unary_expression: '-' unary_expression .

    $default  reduce using rule 201 (unary_expression)


state 218

  202 unary_expression: '!' unary_expression .

    $default  reduce using rule 202 (unary_expression)


state 219

  203 unary_expression: '~' unary_expression .

    $default  reduce using rule 203 (unary_expression)


state 220

  152 expression: expression . ',' assignment_expression
  222 primary_expression: '(' expression . ')'

    ')'  shift, and go to state 299
    ','  shift, and go to state 225


state 221

  122 block_item: type_specifier star_list_opt . IDENTIFIER ';'
  123           | type_specifier star_list_opt . IDENTIFIER '=' assignment_expression ';'
  124           | type_specifier star_list_opt . IDENTIFIER '=' initializer ';'
  125           | type_specifier star_list_opt . IDENTIFIER array_dims '=' initializer ';'
  132 sdecl: star_list_opt . sdir

    IDENTIFIER  shift, and go to state 300
    '('         shift, and go to state 96

    sdir  go to state 97


state 222

  126 block_item: type_specifier sdecl . ',' sdecl sdecl_list ';'

    ','  shift, and go to state 301


state 223

  117 compound_statement: '{' block_item_list_opt '}' .

    $default  reduce using rule 117 (compound_statement)


state 224

  121 block_item_list: block_item_list block_item .

    $default  reduce using rule 121 (block_item_list)


state 225

  152 expression: expression ',' . assignment_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    assignment_expression      go to state 302
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 226

  138 expression_statement: expression ';' .

    $default  reduce using rule 138 (expression_statement)


state 227

  170 logical_or_expression: logical_or_expression LOGOR . logical_and_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    logical_and_expression     go to state 303
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 186
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 228

  168 conditional_expression: logical_or_expression '?' . expression ':' conditional_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    expression                 go to state 304
    assignment_expression      go to state 157
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 229

  172 logical_and_expression: logical_and_expression LOGAND . inclusive_or_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    inclusive_or_expression    go to state 305
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 186
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 230

  174 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    exclusive_or_expression    go to state 306
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 186
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 231

  176 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    and_expression             go to state 307
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 186
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 232

  178 and_expression: and_expression '&' . equality_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    equality_expression        go to state 308
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 186
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 233

  180 equality_expression: equality_expression EQ . relational_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    relational_expression      go to state 309
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 186
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 234

  181 equality_expression: equality_expression NE . relational_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    relational_expression      go to state 310
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 186
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 235

  185 relational_expression: relational_expression LE . shift_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    shift_expression           go to state 311
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 186
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 236

  186 relational_expression: relational_expression GE . shift_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    shift_expression           go to state 312
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 186
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 237

  183 relational_expression: relational_expression '<' . shift_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    shift_expression           go to state 313
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 186
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 238

  184 relational_expression: relational_expression '>' . shift_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    shift_expression           go to state 314
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 186
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 239

  188 shift_expression: shift_expression LSHIFT . additive_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    additive_expression        go to state 315
    multiplicative_expression  go to state 168
    unary_expression           go to state 186
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 240

  189 shift_expression: shift_expression RSHIFT . additive_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    additive_expression        go to state 316
    multiplicative_expression  go to state 168
    unary_expression           go to state 186
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 241

  191 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    multiplicative_expression  go to state 317
    unary_expression           go to state 186
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 242

  192 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    multiplicative_expression  go to state 318
    unary_expression           go to state 186
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 243

  194 multiplicative_expression: multiplicative_expression '*' . unary_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    unary_expression    go to state 319
    postfix_expression  go to state 170
    primary_expression  go to state 171


state 244

  195 multiplicative_expression: multiplicative_expression '/' . unary_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    unary_expression    go to state 320
    postfix_expression  go to state 170
    primary_expression  go to state 171


state 245

  196 multiplicative_expression: multiplicative_expression '%' . unary_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    unary_expression    go to state 321
    postfix_expression  go to state 170
    primary_expression  go to state 171


state 246

  157 assignment_expression: unary_expression ADD_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    assignment_expression      go to state 322
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 247

  158 assignment_expression: unary_expression SUB_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    assignment_expression      go to state 323
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 248

  159 assignment_expression: unary_expression MUL_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    assignment_expression      go to state 324
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 249

  160 assignment_expression: unary_expression DIV_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    assignment_expression      go to state 325
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 250

  161 assignment_expression: unary_expression MOD_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    assignment_expression      go to state 326
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 251

  162 assignment_expression: unary_expression AND_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    assignment_expression      go to state 327
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 252

  163 assignment_expression: unary_expression OR_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    assignment_expression      go to state 328
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 253

  164 assignment_expression: unary_expression XOR_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    assignment_expression      go to state 329
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 254

  165 assignment_expression: unary_expression LSHIFT_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    assignment_expression      go to state 330
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 255

  166 assignment_expression: unary_expression RSHIFT_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    assignment_expression      go to state 331
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 256

  156 assignment_expression: unary_expression '=' . assignment_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    assignment_expression      go to state 332
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 257

  210 postfix_expression: postfix_expression ARROW . IDENTIFIER

    IDENTIFIER  shift, and go to state 333


state 258

  211 postfix_expression: postfix_expression INC .

    $default  reduce using rule 211 (postfix_expression)


state 259

  212 postfix_expression: postfix_expression DEC .

    $default  reduce using rule 212 (postfix_expression)


state 260

  207 postfix_expression: postfix_expression '(' . argument_expression_list_opt ')'

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    $default  reduce using rule 213 (argument_expression_list_opt)

    assignment_expression         go to state 334
    conditional_expression        go to state 158
    logical_or_expression         go to state 159
    logical_and_expression        go to state 160
    inclusive_or_expression       go to state 161
    exclusive_or_expression       go to state 162
    and_expression                go to state 163
    equality_expression           go to state 164
    relational_expression         go to state 165
    shift_expression              go to state 166
    additive_expression           go to state 167
    multiplicative_expression     go to state 168
    unary_expression              go to state 169
    postfix_expression            go to state 170
    argument_expression_list_opt  go to state 335
    argument_expression_list      go to state 336
    primary_expression            go to state 171


state 261

  208 postfix_expression: postfix_expression '[' . expression ']'

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    expression                 go to state 337
    assignment_expression      go to state 157
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 262

  209 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 338


state 263

   96 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 96 (direct_declarator)


state 264

  102 identifier_list: IDENTIFIER .

    $default  reduce using rule 102 (identifier_list)


state 265

   98 direct_declarator: direct_declarator '(' parameter_type_list_opt . ')'

    ')'  shift, and go to state 339


state 266

   99 direct_declarator: direct_declarator '(' identifier_list_opt . ')'

    ')'  shift, and go to state 340


state 267

  101 identifier_list_opt: identifier_list .
  103 identifier_list: identifier_list . ',' IDENTIFIER

    ','  shift, and go to state 341

    $default  reduce using rule 101 (identifier_list_opt)


state 268

   97 direct_declarator: direct_declarator '[' assignment_expression_opt . ']'

    ']'  shift, and go to state 342


state 269

  154 assignment_expression_opt: assignment_expression .

    $default  reduce using rule 154 (assignment_expression_opt)


state 270

  224 initializer: '{' . initializer_list_opt '}'

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144
    '['               shift, and go to state 343
    '.'               shift, and go to state 344
    '{'               shift, and go to state 270

    $default  reduce using rule 225 (initializer_list_opt)

    assignment_expression      go to state 345
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171
    initializer                go to state 346
    initializer_list_opt       go to state 347
    initializer_list           go to state 348
    designated_initializer     go to state 349
    designation                go to state 350
    designator                 go to state 351


state 271

   15 external_declaration: type_specifier star_list_opt IDENTIFIER '=' assignment_expression . ';'
  223 initializer: assignment_expression .

    ';'  shift, and go to state 352

    ';'  [reduce using rule 223 (initializer)]


state 272

   19 external_declaration: type_specifier star_list_opt IDENTIFIER '=' initializer . ';'

    ';'  shift, and go to state 353


state 273

    9 external_declaration: type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt . ')' compound_statement
   10                     | type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt . ')' ';'

    ')'  shift, and go to state 354


state 274

   61 array_dims: '[' INTEGER_CONSTANT . ']'

    ']'  shift, and go to state 355


state 275

   20 external_declaration: type_specifier star_list_opt IDENTIFIER array_dims '=' . initializer ';'

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144
    '{'               shift, and go to state 270

    assignment_expression      go to state 345
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171
    initializer                go to state 356


state 276

   62 array_dims: array_dims '[' . INTEGER_CONSTANT ']'

    INTEGER_CONSTANT  shift, and go to state 357


state 277

  133 sdir: IDENTIFIER .

    $default  reduce using rule 133 (sdir)


state 278

  134 sdir: '(' sdecl ')' .
  135     | '(' sdecl ')' . '(' fp_param_list_opt ')'

    '('  shift, and go to state 358

    $default  reduce using rule 134 (sdir)


state 279

  136 sdir: sdir '[' assignment_expression_opt . ']'

    ']'  shift, and go to state 359


state 280

    7 external_declaration: type_specifier sdecl ',' sdecl sdecl_list . ';'
  131 sdecl_list: sdecl_list . ',' sdecl

    ','  shift, and go to state 360
    ';'  shift, and go to state 361


state 281

   75 struct_declarator_list: struct_declarator_list ',' struct_declarator .

    $default  reduce using rule 75 (struct_declarator_list)


state 282

   78 struct_declarator: declarator ':' constant_expression .

    $default  reduce using rule 78 (struct_declarator)


state 283

   14 external_declaration: KW_TYPEDEF type_specifier star_list_opt IDENTIFIER array_dims ';' .

    $default  reduce using rule 14 (external_declaration)


state 284

   16 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER . ')' '(' fp_param_list_opt ')' ';'
   17                     | KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER . array_dims ')' '(' fp_param_list_opt ')' ';'

    ')'  shift, and go to state 362
    '['  shift, and go to state 177

    array_dims  go to state 363


state 285

   12 external_declaration: func_decl_specs IDENTIFIER '(' parameter_type_list_opt ')' ';' .

    $default  reduce using rule 12 (external_declaration)


state 286

   11 external_declaration: func_decl_specs IDENTIFIER '(' parameter_type_list_opt ')' compound_statement .

    $default  reduce using rule 11 (external_declaration)


state 287

   32 parameter_type_list: parameter_list ',' ELLIPSIS .

    $default  reduce using rule 32 (parameter_type_list)


state 288

   34 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 34 (parameter_list)


state 289

  128 block_item: KW_TYPEDEF type_specifier star_list_opt . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 364


state 290

  129 block_item: KW_TYPEDEF type_specifier type_specifier . star_list_opt IDENTIFIER ';'

    '*'  shift, and go to state 84

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt  go to state 365
    star_list      go to state 69


state 291

  145 jump_statement: KW_RETURN expression_opt ';' .

    $default  reduce using rule 145 (jump_statement)


state 292

  139 selection_statement: KW_IF '(' expression . ')' statement
  140                    | KW_IF '(' expression . ')' statement KW_ELSE statement
  152 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 366
    ','  shift, and go to state 225


state 293

  142 iteration_statement: KW_WHILE '(' expression . ')' statement
  152 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 367
    ','  shift, and go to state 225


state 294

  144 iteration_statement: KW_FOR '(' expression_opt . ';' expression_opt ';' expression_opt ')' statement

    ';'  shift, and go to state 368


state 295

  143 iteration_statement: KW_DO statement KW_WHILE . '(' expression ')' ';'

    '('  shift, and go to state 369


state 296

  141 selection_statement: KW_SWITCH '(' expression . ')' statement
  152 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 370
    ','  shift, and go to state 225


state 297

  148 jump_statement: KW_GOTO IDENTIFIER ';' .

    $default  reduce using rule 148 (jump_statement)


state 298

  205 unary_expression: KW_SIZEOF '(' type_specifier . ')'

    ')'  shift, and go to state 371


state 299

  222 primary_expression: '(' expression ')' .

    $default  reduce using rule 222 (primary_expression)


state 300

  122 block_item: type_specifier star_list_opt IDENTIFIER . ';'
  123           | type_specifier star_list_opt IDENTIFIER . '=' assignment_expression ';'
  124           | type_specifier star_list_opt IDENTIFIER . '=' initializer ';'
  125           | type_specifier star_list_opt IDENTIFIER . array_dims '=' initializer ';'
  133 sdir: IDENTIFIER .

    '='  shift, and go to state 372
    ';'  shift, and go to state 373

    $default  reduce using rule 133 (sdir)

    array_dims  go to state 374


state 301

  126 block_item: type_specifier sdecl ',' . sdecl sdecl_list ';'

    '*'  shift, and go to state 84

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt  go to state 180
    star_list      go to state 69
    sdecl          go to state 375


state 302

  152 expression: expression ',' assignment_expression .

    $default  reduce using rule 152 (expression)


state 303

  170 logical_or_expression: logical_or_expression LOGOR logical_and_expression .
  172 logical_and_expression: logical_and_expression . LOGAND inclusive_or_expression

    LOGAND  shift, and go to state 229

    $default  reduce using rule 170 (logical_or_expression)


state 304

  152 expression: expression . ',' assignment_expression
  168 conditional_expression: logical_or_expression '?' expression . ':' conditional_expression

    ':'  shift, and go to state 376
    ','  shift, and go to state 225


state 305

  172 logical_and_expression: logical_and_expression LOGAND inclusive_or_expression .
  174 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression

    '|'  shift, and go to state 230

    $default  reduce using rule 172 (logical_and_expression)


state 306

  174 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .
  176 exclusive_or_expression: exclusive_or_expression . '^' and_expression

    '^'  shift, and go to state 231

    $default  reduce using rule 174 (inclusive_or_expression)


state 307

  176 exclusive_or_expression: exclusive_or_expression '^' and_expression .
  178 and_expression: and_expression . '&' equality_expression

    '&'  shift, and go to state 232

    $default  reduce using rule 176 (exclusive_or_expression)


state 308

  178 and_expression: and_expression '&' equality_expression .
  180 equality_expression: equality_expression . EQ relational_expression
  181                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 233
    NE  shift, and go to state 234

    $default  reduce using rule 178 (and_expression)


state 309

  180 equality_expression: equality_expression EQ relational_expression .
  183 relational_expression: relational_expression . '<' shift_expression
  184                      | relational_expression . '>' shift_expression
  185                      | relational_expression . LE shift_expression
  186                      | relational_expression . GE shift_expression

    LE   shift, and go to state 235
    GE   shift, and go to state 236
    '<'  shift, and go to state 237
    '>'  shift, and go to state 238

    $default  reduce using rule 180 (equality_expression)


state 310

  181 equality_expression: equality_expression NE relational_expression .
  183 relational_expression: relational_expression . '<' shift_expression
  184                      | relational_expression . '>' shift_expression
  185                      | relational_expression . LE shift_expression
  186                      | relational_expression . GE shift_expression

    LE   shift, and go to state 235
    GE   shift, and go to state 236
    '<'  shift, and go to state 237
    '>'  shift, and go to state 238

    $default  reduce using rule 181 (equality_expression)


state 311

  185 relational_expression: relational_expression LE shift_expression .
  188 shift_expression: shift_expression . LSHIFT additive_expression
  189                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 239
    RSHIFT  shift, and go to state 240

    $default  reduce using rule 185 (relational_expression)


state 312

  186 relational_expression: relational_expression GE shift_expression .
  188 shift_expression: shift_expression . LSHIFT additive_expression
  189                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 239
    RSHIFT  shift, and go to state 240

    $default  reduce using rule 186 (relational_expression)


state 313

  183 relational_expression: relational_expression '<' shift_expression .
  188 shift_expression: shift_expression . LSHIFT additive_expression
  189                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 239
    RSHIFT  shift, and go to state 240

    $default  reduce using rule 183 (relational_expression)


state 314

  184 relational_expression: relational_expression '>' shift_expression .
  188 shift_expression: shift_expression . LSHIFT additive_expression
  189                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 239
    RSHIFT  shift, and go to state 240

    $default  reduce using rule 184 (relational_expression)


state 315

  188 shift_expression: shift_expression LSHIFT additive_expression .
  191 additive_expression: additive_expression . '+' multiplicative_expression
  192                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 241
    '-'  shift, and go to state 242

    $default  reduce using rule 188 (shift_expression)


state 316

  189 shift_expression: shift_expression RSHIFT additive_expression .
  191 additive_expression: additive_expression . '+' multiplicative_expression
  192                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 241
    '-'  shift, and go to state 242

    $default  reduce using rule 189 (shift_expression)


state 317

  191 additive_expression: additive_expression '+' multiplicative_expression .
  194 multiplicative_expression: multiplicative_expression . '*' unary_expression
  195                          | multiplicative_expression . '/' unary_expression
  196                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 243
    '/'  shift, and go to state 244
    '%'  shift, and go to state 245

    $default  reduce using rule 191 (additive_expression)


state 318

  192 additive_expression: additive_expression '-' multiplicative_expression .
  194 multiplicative_expression: multiplicative_expression . '*' unary_expression
  195                          | multiplicative_expression . '/' unary_expression
  196                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 243
    '/'  shift, and go to state 244
    '%'  shift, and go to state 245

    $default  reduce using rule 192 (additive_expression)


state 319

  194 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 194 (multiplicative_expression)


state 320

  195 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 195 (multiplicative_expression)


state 321

  196 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 196 (multiplicative_expression)


state 322

  157 assignment_expression: unary_expression ADD_ASSIGN assignment_expression .

    $default  reduce using rule 157 (assignment_expression)


state 323

  158 assignment_expression: unary_expression SUB_ASSIGN assignment_expression .

    $default  reduce using rule 158 (assignment_expression)


state 324

  159 assignment_expression: unary_expression MUL_ASSIGN assignment_expression .

    $default  reduce using rule 159 (assignment_expression)


state 325

  160 assignment_expression: unary_expression DIV_ASSIGN assignment_expression .

    $default  reduce using rule 160 (assignment_expression)


state 326

  161 assignment_expression: unary_expression MOD_ASSIGN assignment_expression .

    $default  reduce using rule 161 (assignment_expression)


state 327

  162 assignment_expression: unary_expression AND_ASSIGN assignment_expression .

    $default  reduce using rule 162 (assignment_expression)


state 328

  163 assignment_expression: unary_expression OR_ASSIGN assignment_expression .

    $default  reduce using rule 163 (assignment_expression)


state 329

  164 assignment_expression: unary_expression XOR_ASSIGN assignment_expression .

    $default  reduce using rule 164 (assignment_expression)


state 330

  165 assignment_expression: unary_expression LSHIFT_ASSIGN assignment_expression .

    $default  reduce using rule 165 (assignment_expression)


state 331

  166 assignment_expression: unary_expression RSHIFT_ASSIGN assignment_expression .

    $default  reduce using rule 166 (assignment_expression)


state 332

  156 assignment_expression: unary_expression '=' assignment_expression .

    $default  reduce using rule 156 (assignment_expression)


state 333

  210 postfix_expression: postfix_expression ARROW IDENTIFIER .

    $default  reduce using rule 210 (postfix_expression)


state 334

  215 argument_expression_list: assignment_expression .

    $default  reduce using rule 215 (argument_expression_list)


state 335

  207 postfix_expression: postfix_expression '(' argument_expression_list_opt . ')'

    ')'  shift, and go to state 377


state 336

  214 argument_expression_list_opt: argument_expression_list .
  216 argument_expression_list: argument_expression_list . ',' assignment_expression

    ','  shift, and go to state 378

    $default  reduce using rule 214 (argument_expression_list_opt)


state 337

  152 expression: expression . ',' assignment_expression
  208 postfix_expression: postfix_expression '[' expression . ']'

    ']'  shift, and go to state 379
    ','  shift, and go to state 225


state 338

  209 postfix_expression: postfix_expression '.' IDENTIFIER .

    $default  reduce using rule 209 (postfix_expression)


state 339

   98 direct_declarator: direct_declarator '(' parameter_type_list_opt ')' .

    $default  reduce using rule 98 (direct_declarator)


state 340

   99 direct_declarator: direct_declarator '(' identifier_list_opt ')' .

    $default  reduce using rule 99 (direct_declarator)


state 341

  103 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 380


state 342

   97 direct_declarator: direct_declarator '[' assignment_expression_opt ']' .

    $default  reduce using rule 97 (direct_declarator)


state 343

  232 designated_initializer: '[' . constant_expression ']' '=' initializer
  237 designator: '[' . constant_expression ']'
  238           | '[' . constant_expression ELLIPSIS constant_expression ']'

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    conditional_expression     go to state 185
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 186
    postfix_expression         go to state 170
    primary_expression         go to state 171
    constant_expression        go to state 381


state 344

  231 designated_initializer: '.' . IDENTIFIER '=' initializer
  236 designator: '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 382


state 345

  223 initializer: assignment_expression .

    $default  reduce using rule 223 (initializer)


state 346

  227 initializer_list: initializer .

    $default  reduce using rule 227 (initializer_list)


state 347

  224 initializer: '{' initializer_list_opt . '}'

    '}'  shift, and go to state 383


state 348

  226 initializer_list_opt: initializer_list .
  229 initializer_list: initializer_list . ',' initializer
  230                 | initializer_list . ',' designated_initializer

    ','  shift, and go to state 384

    $default  reduce using rule 226 (initializer_list_opt)


state 349

  228 initializer_list: designated_initializer .

    $default  reduce using rule 228 (initializer_list)


state 350

  233 designated_initializer: designation . '=' initializer
  235 designation: designation . designator

    '='  shift, and go to state 385
    '['  shift, and go to state 386
    '.'  shift, and go to state 387

    designator  go to state 388


state 351

  234 designation: designator .

    $default  reduce using rule 234 (designation)


state 352

   15 external_declaration: type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';' .

    $default  reduce using rule 15 (external_declaration)


state 353

   19 external_declaration: type_specifier star_list_opt IDENTIFIER '=' initializer ';' .

    $default  reduce using rule 19 (external_declaration)


state 354

    9 external_declaration: type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' . compound_statement
   10                     | type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' . ';'

    ';'  shift, and go to state 389
    '{'  shift, and go to state 90

    compound_statement  go to state 390


state 355

   61 array_dims: '[' INTEGER_CONSTANT ']' .

    $default  reduce using rule 61 (array_dims)


state 356

   20 external_declaration: type_specifier star_list_opt IDENTIFIER array_dims '=' initializer . ';'

    ';'  shift, and go to state 391


state 357

   62 array_dims: array_dims '[' INTEGER_CONSTANT . ']'

    ']'  shift, and go to state 392


state 358

  135 sdir: '(' sdecl ')' '(' . fp_param_list_opt ')'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15

    $default  reduce using rule 104 (fp_param_list_opt)

    type_specifier             go to state 393
    struct_or_union_specifier  go to state 31
    enum_specifier             go to state 32
    fp_param_list_opt          go to state 394
    fp_param_list              go to state 395
    fp_param                   go to state 396


state 359

  136 sdir: sdir '[' assignment_expression_opt ']' .

    $default  reduce using rule 136 (sdir)


state 360

  131 sdecl_list: sdecl_list ',' . sdecl

    '*'  shift, and go to state 84

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt  go to state 180
    star_list      go to state 69
    sdecl          go to state 397


state 361

    7 external_declaration: type_specifier sdecl ',' sdecl sdecl_list ';' .

    $default  reduce using rule 7 (external_declaration)


state 362

   16 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER ')' . '(' fp_param_list_opt ')' ';'

    '('  shift, and go to state 398


state 363

   17 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER array_dims . ')' '(' fp_param_list_opt ')' ';'
   62 array_dims: array_dims . '[' INTEGER_CONSTANT ']'

    ')'  shift, and go to state 399
    '['  shift, and go to state 276


state 364

  128 block_item: KW_TYPEDEF type_specifier star_list_opt IDENTIFIER . ';'

    ';'  shift, and go to state 400


state 365

  129 block_item: KW_TYPEDEF type_specifier type_specifier star_list_opt . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 401


state 366

  139 selection_statement: KW_IF '(' expression ')' . statement
  140                    | KW_IF '(' expression ')' . statement KW_ELSE statement

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_RETURN         shift, and go to state 128
    KW_IF             shift, and go to state 129
    KW_WHILE          shift, and go to state 130
    KW_FOR            shift, and go to state 131
    KW_DO             shift, and go to state 132
    KW_SWITCH         shift, and go to state 133
    KW_BREAK          shift, and go to state 134
    KW_CONTINUE       shift, and go to state 135
    KW_GOTO           shift, and go to state 136
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144
    ';'               shift, and go to state 145
    '{'               shift, and go to state 90

    statement                  go to state 402
    compound_statement         go to state 148
    expression_statement       go to state 152
    selection_statement        go to state 153
    iteration_statement        go to state 154
    jump_statement             go to state 155
    expression                 go to state 156
    assignment_expression      go to state 157
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 367

  142 iteration_statement: KW_WHILE '(' expression ')' . statement

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_RETURN         shift, and go to state 128
    KW_IF             shift, and go to state 129
    KW_WHILE          shift, and go to state 130
    KW_FOR            shift, and go to state 131
    KW_DO             shift, and go to state 132
    KW_SWITCH         shift, and go to state 133
    KW_BREAK          shift, and go to state 134
    KW_CONTINUE       shift, and go to state 135
    KW_GOTO           shift, and go to state 136
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144
    ';'               shift, and go to state 145
    '{'               shift, and go to state 90

    statement                  go to state 403
    compound_statement         go to state 148
    expression_statement       go to state 152
    selection_statement        go to state 153
    iteration_statement        go to state 154
    jump_statement             go to state 155
    expression                 go to state 156
    assignment_expression      go to state 157
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 368

  144 iteration_statement: KW_FOR '(' expression_opt ';' . expression_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    $default  reduce using rule 149 (expression_opt)

    expression_opt             go to state 404
    expression                 go to state 203
    assignment_expression      go to state 157
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 369

  143 iteration_statement: KW_DO statement KW_WHILE '(' . expression ')' ';'

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    expression                 go to state 405
    assignment_expression      go to state 157
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 370

  141 selection_statement: KW_SWITCH '(' expression ')' . statement

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_RETURN         shift, and go to state 128
    KW_IF             shift, and go to state 129
    KW_WHILE          shift, and go to state 130
    KW_FOR            shift, and go to state 131
    KW_DO             shift, and go to state 132
    KW_SWITCH         shift, and go to state 133
    KW_BREAK          shift, and go to state 134
    KW_CONTINUE       shift, and go to state 135
    KW_GOTO           shift, and go to state 136
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144
    ';'               shift, and go to state 145
    '{'               shift, and go to state 90

    statement                  go to state 406
    compound_statement         go to state 148
    expression_statement       go to state 152
    selection_statement        go to state 153
    iteration_statement        go to state 154
    jump_statement             go to state 155
    expression                 go to state 156
    assignment_expression      go to state 157
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 371

  205 unary_expression: KW_SIZEOF '(' type_specifier ')' .

    $default  reduce using rule 205 (unary_expression)


state 372

  123 block_item: type_specifier star_list_opt IDENTIFIER '=' . assignment_expression ';'
  124           | type_specifier star_list_opt IDENTIFIER '=' . initializer ';'

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144
    '{'               shift, and go to state 270

    assignment_expression      go to state 407
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171
    initializer                go to state 408


state 373

  122 block_item: type_specifier star_list_opt IDENTIFIER ';' .

    $default  reduce using rule 122 (block_item)


state 374

   62 array_dims: array_dims . '[' INTEGER_CONSTANT ']'
  125 block_item: type_specifier star_list_opt IDENTIFIER array_dims . '=' initializer ';'

    '='  shift, and go to state 409
    '['  shift, and go to state 276


state 375

  126 block_item: type_specifier sdecl ',' sdecl . sdecl_list ';'

    $default  reduce using rule 130 (sdecl_list)

    sdecl_list  go to state 410


state 376

  168 conditional_expression: logical_or_expression '?' expression ':' . conditional_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    conditional_expression     go to state 411
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 186
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 377

  207 postfix_expression: postfix_expression '(' argument_expression_list_opt ')' .

    $default  reduce using rule 207 (postfix_expression)


state 378

  216 argument_expression_list: argument_expression_list ',' . assignment_expression

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    assignment_expression      go to state 412
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 379

  208 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 208 (postfix_expression)


state 380

  103 identifier_list: identifier_list ',' IDENTIFIER .

    $default  reduce using rule 103 (identifier_list)


state 381

  232 designated_initializer: '[' constant_expression . ']' '=' initializer
  237 designator: '[' constant_expression . ']'
  238           | '[' constant_expression . ELLIPSIS constant_expression ']'

    ELLIPSIS  shift, and go to state 413
    ']'       shift, and go to state 414


state 382

  231 designated_initializer: '.' IDENTIFIER . '=' initializer
  236 designator: '.' IDENTIFIER .

    $default  reduce using rule 236 (designator)


state 383

  224 initializer: '{' initializer_list_opt '}' .

    $default  reduce using rule 224 (initializer)


state 384

  229 initializer_list: initializer_list ',' . initializer
  230                 | initializer_list ',' . designated_initializer

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144
    '['               shift, and go to state 343
    '.'               shift, and go to state 344
    '{'               shift, and go to state 270

    assignment_expression      go to state 345
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171
    initializer                go to state 416
    designated_initializer     go to state 417
    designation                go to state 350
    designator                 go to state 351


state 385

  233 designated_initializer: designation '=' . initializer

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144
    '{'               shift, and go to state 270

    assignment_expression      go to state 345
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171
    initializer                go to state 418


state 386

  237 designator: '[' . constant_expression ']'
  238           | '[' . constant_expression ELLIPSIS constant_expression ']'

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    conditional_expression     go to state 185
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 186
    postfix_expression         go to state 170
    primary_expression         go to state 171
    constant_expression        go to state 419


state 387

  236 designator: '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 420


state 388

  235 designation: designation designator .

    $default  reduce using rule 235 (designation)


state 389

   10 external_declaration: type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' ';' .

    $default  reduce using rule 10 (external_declaration)


state 390

    9 external_declaration: type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' compound_statement .

    $default  reduce using rule 9 (external_declaration)


state 391

   20 external_declaration: type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';' .

    $default  reduce using rule 20 (external_declaration)


state 392

   62 array_dims: array_dims '[' INTEGER_CONSTANT ']' .

    $default  reduce using rule 62 (array_dims)


state 393

  108 fp_param: type_specifier . star_list_opt
  109         | type_specifier . star_list_opt IDENTIFIER

    '*'  shift, and go to state 84

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt  go to state 421
    star_list      go to state 69


state 394

  135 sdir: '(' sdecl ')' '(' fp_param_list_opt . ')'

    ')'  shift, and go to state 422


state 395

  105 fp_param_list_opt: fp_param_list .
  107 fp_param_list: fp_param_list . ',' fp_param

    ','  shift, and go to state 423

    $default  reduce using rule 105 (fp_param_list_opt)


state 396

  106 fp_param_list: fp_param .

    $default  reduce using rule 106 (fp_param_list)


state 397

  131 sdecl_list: sdecl_list ',' sdecl .

    $default  reduce using rule 131 (sdecl_list)


state 398

   16 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' . fp_param_list_opt ')' ';'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15

    $default  reduce using rule 104 (fp_param_list_opt)

    type_specifier             go to state 393
    struct_or_union_specifier  go to state 31
    enum_specifier             go to state 32
    fp_param_list_opt          go to state 424
    fp_param_list              go to state 395
    fp_param                   go to state 396


state 399

   17 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' . '(' fp_param_list_opt ')' ';'

    '('  shift, and go to state 425


state 400

  128 block_item: KW_TYPEDEF type_specifier star_list_opt IDENTIFIER ';' .

    $default  reduce using rule 128 (block_item)


state 401

  129 block_item: KW_TYPEDEF type_specifier type_specifier star_list_opt IDENTIFIER . ';'

    ';'  shift, and go to state 426


state 402

  139 selection_statement: KW_IF '(' expression ')' statement .
  140                    | KW_IF '(' expression ')' statement . KW_ELSE statement

    KW_ELSE  shift, and go to state 427

    KW_ELSE   [reduce using rule 139 (selection_statement)]
    $default  reduce using rule 139 (selection_statement)


state 403

  142 iteration_statement: KW_WHILE '(' expression ')' statement .

    $default  reduce using rule 142 (iteration_statement)


state 404

  144 iteration_statement: KW_FOR '(' expression_opt ';' expression_opt . ';' expression_opt ')' statement

    ';'  shift, and go to state 428


state 405

  143 iteration_statement: KW_DO statement KW_WHILE '(' expression . ')' ';'
  152 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 429
    ','  shift, and go to state 225


state 406

  141 selection_statement: KW_SWITCH '(' expression ')' statement .

    $default  reduce using rule 141 (selection_statement)


state 407

  123 block_item: type_specifier star_list_opt IDENTIFIER '=' assignment_expression . ';'
  223 initializer: assignment_expression .

    ';'  shift, and go to state 430

    ';'  [reduce using rule 223 (initializer)]


state 408

  124 block_item: type_specifier star_list_opt IDENTIFIER '=' initializer . ';'

    ';'  shift, and go to state 431


state 409

  125 block_item: type_specifier star_list_opt IDENTIFIER array_dims '=' . initializer ';'

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144
    '{'               shift, and go to state 270

    assignment_expression      go to state 345
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171
    initializer                go to state 432


state 410

  126 block_item: type_specifier sdecl ',' sdecl sdecl_list . ';'
  131 sdecl_list: sdecl_list . ',' sdecl

    ','  shift, and go to state 360
    ';'  shift, and go to state 433


state 411

  168 conditional_expression: logical_or_expression '?' expression ':' conditional_expression .

    $default  reduce using rule 168 (conditional_expression)


state 412

  216 argument_expression_list: argument_expression_list ',' assignment_expression .

    $default  reduce using rule 216 (argument_expression_list)


state 413

  238 designator: '[' constant_expression ELLIPSIS . constant_expression ']'

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    conditional_expression     go to state 185
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 186
    postfix_expression         go to state 170
    primary_expression         go to state 171
    constant_expression        go to state 434


state 414

  232 designated_initializer: '[' constant_expression ']' . '=' initializer
  237 designator: '[' constant_expression ']' .

    $default  reduce using rule 237 (designator)


state 415

  231 designated_initializer: '.' IDENTIFIER '=' . initializer

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144
    '{'               shift, and go to state 270

    assignment_expression      go to state 345
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171
    initializer                go to state 436


state 416

  229 initializer_list: initializer_list ',' initializer .

    $default  reduce using rule 229 (initializer_list)


state 417

  230 initializer_list: initializer_list ',' designated_initializer .

    $default  reduce using rule 230 (initializer_list)


state 418

  233 designated_initializer: designation '=' initializer .

    $default  reduce using rule 233 (designated_initializer)


state 419

  237 designator: '[' constant_expression . ']'
  238           | '[' constant_expression . ELLIPSIS constant_expression ']'

    ELLIPSIS  shift, and go to state 413
    ']'       shift, and go to state 437


state 420

  236 designator: '.' IDENTIFIER .

    $default  reduce using rule 236 (designator)


state 421

  108 fp_param: type_specifier star_list_opt .
  109         | type_specifier star_list_opt . IDENTIFIER

    IDENTIFIER  shift, and go to state 438

    $default  reduce using rule 108 (fp_param)


state 422

  135 sdir: '(' sdecl ')' '(' fp_param_list_opt ')' .

    $default  reduce using rule 135 (sdir)


state 423

  107 fp_param_list: fp_param_list ',' . fp_param

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15

    type_specifier             go to state 393
    struct_or_union_specifier  go to state 31
    enum_specifier             go to state 32
    fp_param                   go to state 439


state 424

   16 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt . ')' ';'

    ')'  shift, and go to state 440


state 425

   17 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' . fp_param_list_opt ')' ';'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15

    $default  reduce using rule 104 (fp_param_list_opt)

    type_specifier             go to state 393
    struct_or_union_specifier  go to state 31
    enum_specifier             go to state 32
    fp_param_list_opt          go to state 441
    fp_param_list              go to state 395
    fp_param                   go to state 396


state 426

  129 block_item: KW_TYPEDEF type_specifier type_specifier star_list_opt IDENTIFIER ';' .

    $default  reduce using rule 129 (block_item)


state 427

  140 selection_statement: KW_IF '(' expression ')' statement KW_ELSE . statement

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_RETURN         shift, and go to state 128
    KW_IF             shift, and go to state 129
    KW_WHILE          shift, and go to state 130
    KW_FOR            shift, and go to state 131
    KW_DO             shift, and go to state 132
    KW_SWITCH         shift, and go to state 133
    KW_BREAK          shift, and go to state 134
    KW_CONTINUE       shift, and go to state 135
    KW_GOTO           shift, and go to state 136
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144
    ';'               shift, and go to state 145
    '{'               shift, and go to state 90

    statement                  go to state 442
    compound_statement         go to state 148
    expression_statement       go to state 152
    selection_statement        go to state 153
    iteration_statement        go to state 154
    jump_statement             go to state 155
    expression                 go to state 156
    assignment_expression      go to state 157
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 428

  144 iteration_statement: KW_FOR '(' expression_opt ';' expression_opt ';' . expression_opt ')' statement

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144

    $default  reduce using rule 149 (expression_opt)

    expression_opt             go to state 443
    expression                 go to state 203
    assignment_expression      go to state 157
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 429

  143 iteration_statement: KW_DO statement KW_WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 444


state 430

  123 block_item: type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';' .

    $default  reduce using rule 123 (block_item)


state 431

  124 block_item: type_specifier star_list_opt IDENTIFIER '=' initializer ';' .

    $default  reduce using rule 124 (block_item)


state 432

  125 block_item: type_specifier star_list_opt IDENTIFIER array_dims '=' initializer . ';'

    ';'  shift, and go to state 445


state 433

  126 block_item: type_specifier sdecl ',' sdecl sdecl_list ';' .

    $default  reduce using rule 126 (block_item)


state 434

  238 designator: '[' constant_expression ELLIPSIS constant_expression . ']'

    ']'  shift, and go to state 446


state 435

  232 designated_initializer: '[' constant_expression ']' '=' . initializer

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144
    '{'               shift, and go to state 270

    assignment_expression      go to state 345
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171
    initializer                go to state 447


state 436

  231 designated_initializer: '.' IDENTIFIER '=' initializer .

    $default  reduce using rule 231 (designated_initializer)


state 437

  237 designator: '[' constant_expression ']' .

    $default  reduce using rule 237 (designator)


state 438

  109 fp_param: type_specifier star_list_opt IDENTIFIER .

    $default  reduce using rule 109 (fp_param)


state 439

  107 fp_param_list: fp_param_list ',' fp_param .

    $default  reduce using rule 107 (fp_param_list)


state 440

   16 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' . ';'

    ';'  shift, and go to state 448


state 441

   17 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt . ')' ';'

    ')'  shift, and go to state 449


state 442

  140 selection_statement: KW_IF '(' expression ')' statement KW_ELSE statement .

    $default  reduce using rule 140 (selection_statement)


state 443

  144 iteration_statement: KW_FOR '(' expression_opt ';' expression_opt ';' expression_opt . ')' statement

    ')'  shift, and go to state 450


state 444

  143 iteration_statement: KW_DO statement KW_WHILE '(' expression ')' ';' .

    $default  reduce using rule 143 (iteration_statement)


state 445

  125 block_item: type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';' .

    $default  reduce using rule 125 (block_item)


state 446

  238 designator: '[' constant_expression ELLIPSIS constant_expression ']' .

    $default  reduce using rule 238 (designator)


state 447

  232 designated_initializer: '[' constant_expression ']' '=' initializer .

    $default  reduce using rule 232 (designated_initializer)


state 448

   16 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';' .

    $default  reduce using rule 16 (external_declaration)


state 449

   17 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' . ';'

    ';'  shift, and go to state 451


state 450

  144 iteration_statement: KW_FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' . statement

    IDENTIFIER        shift, and go to state 122
    STRING_LITERAL    shift, and go to state 123
    INTEGER_CONSTANT  shift, and go to state 124
    FLOAT_CONSTANT    shift, and go to state 125
    CHAR_CONSTANT     shift, and go to state 126
    KW_RETURN         shift, and go to state 128
    KW_IF             shift, and go to state 129
    KW_WHILE          shift, and go to state 130
    KW_FOR            shift, and go to state 131
    KW_DO             shift, and go to state 132
    KW_SWITCH         shift, and go to state 133
    KW_BREAK          shift, and go to state 134
    KW_CONTINUE       shift, and go to state 135
    KW_GOTO           shift, and go to state 136
    KW_SIZEOF         shift, and go to state 137
    INC               shift, and go to state 138
    DEC               shift, and go to state 139
    '+'               shift, and go to state 140
    '-'               shift, and go to state 141
    '!'               shift, and go to state 142
    '~'               shift, and go to state 143
    '('               shift, and go to state 144
    ';'               shift, and go to state 145
    '{'               shift, and go to state 90

    statement                  go to state 452
    compound_statement         go to state 148
    expression_statement       go to state 152
    selection_statement        go to state 153
    iteration_statement        go to state 154
    jump_statement             go to state 155
    expression                 go to state 156
    assignment_expression      go to state 157
    conditional_expression     go to state 158
    logical_or_expression      go to state 159
    logical_and_expression     go to state 160
    inclusive_or_expression    go to state 161
    exclusive_or_expression    go to state 162
    and_expression             go to state 163
    equality_expression        go to state 164
    relational_expression      go to state 165
    shift_expression           go to state 166
    additive_expression        go to state 167
    multiplicative_expression  go to state 168
    unary_expression           go to state 169
    postfix_expression         go to state 170
    primary_expression         go to state 171


state 451

   17 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';' .

    $default  reduce using rule 17 (external_declaration)


state 452

  144 iteration_statement: KW_FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' statement .

    $default  reduce using rule 144 (iteration_statement)
