Useless nonterminals

   declaration
   init_declarator_list_opt
   init_declarator_list
   init_declarator


Terminals which are not used

   KW_CASE
   KW_DEFAULT


Useless rules

  269 declaration: declaration_specifiers init_declarator_list_opt

  270 init_declarator_list_opt: /* empty */
  271                         | init_declarator_list

  272 init_declarator_list: init_declarator
  273                     | init_declarator_list ',' init_declarator

  274 init_declarator: declarator
  275                | declarator '=' assignment_expression
  276                | declarator '=' initializer


Rules never reduced

   11 external_declaration: /* empty */

  122 identifier_list_opt: /* empty */


State 1 conflicts: 21 shift/reduce, 16 reduce/reduce
State 16 conflicts: 13 shift/reduce
State 17 conflicts: 19 shift/reduce
State 18 conflicts: 19 shift/reduce
State 19 conflicts: 19 shift/reduce
State 20 conflicts: 19 shift/reduce
State 21 conflicts: 19 shift/reduce
State 22 conflicts: 19 shift/reduce
State 31 conflicts: 14 shift/reduce, 2 reduce/reduce
State 36 conflicts: 25 reduce/reduce
State 38 conflicts: 25 reduce/reduce
State 68 conflicts: 13 shift/reduce
State 72 conflicts: 2 reduce/reduce
State 73 conflicts: 1 shift/reduce
State 104 conflicts: 13 shift/reduce
State 124 conflicts: 25 reduce/reduce
State 128 conflicts: 25 reduce/reduce
State 170 conflicts: 13 shift/reduce
State 194 conflicts: 1 reduce/reduce
State 241 conflicts: 13 shift/reduce
State 300 conflicts: 1 shift/reduce
State 407 conflicts: 1 shift/reduce
State 460 conflicts: 1 shift/reduce
State 466 conflicts: 1 shift/reduce
State 494 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: /* empty */
    2                 | translation_unit external_declaration

    3 star_list_opt: /* empty */
    4              | star_list

    5 star_list: '*'
    6          | star_list '*'

    7 external_declaration: type_qualifier_seq_opt type_specifier sdecl ',' sdecl sdecl_list ';'
    8                     | type_specifier sdecl ',' sdecl sdecl_list ';'
    9                     | type_qualifier_seq_opt type_specifier sdecl '=' initializer ';'
   10                     | type_specifier sdecl '=' initializer ';'
   11                     | /* empty */
   12                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' compound_statement
   13                     | type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' compound_statement
   14                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' ';'
   15                     | type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' ';'
   16                     | func_decl_specs IDENTIFIER '(' parameter_type_list_opt ')' compound_statement
   17                     | func_decl_specs IDENTIFIER '(' parameter_type_list_opt ')' ';'
   18                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER ';'
   19                     | KW_TYPEDEF type_specifier star_list_opt IDENTIFIER ';'
   20                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims ';'
   21                     | KW_TYPEDEF type_specifier star_list_opt IDENTIFIER array_dims ';'
   22                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';'
   23                     | type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';'
   24                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   25                     | KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   26                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'
   27                     | KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'
   28                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER ';'
   29                     | type_specifier star_list_opt IDENTIFIER ';'
   30                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' initializer ';'
   31                     | type_specifier star_list_opt IDENTIFIER '=' initializer ';'
   32                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';'
   33                     | type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';'
   34                     | function_definition
   35                     | struct_or_union_specifier ';'
   36                     | enum_specifier ';'

   37 func_decl_specs: type_specifier star_list_opt
   38                | KW_EXTERN func_decl_specs
   39                | KW_STATIC func_decl_specs
   40                | KW_CONST func_decl_specs
   41                | KW_VOLATILE func_decl_specs
   42                | KW_RESTRICT func_decl_specs
   43                | KW_INLINE func_decl_specs

   44 parameter_type_list_opt: /* empty */
   45                        | parameter_type_list

   46 parameter_type_list: parameter_list
   47                    | parameter_list ',' ELLIPSIS

   48 parameter_list: parameter_declaration
   49               | parameter_list ',' parameter_declaration

   50 parameter_declaration: type_qualifier_seq_opt type_specifier sdecl
   51                      | type_qualifier_seq_opt type_specifier

   52 declaration_specifiers: declaration_specifier
   53                       | declaration_specifiers declaration_specifier

   54 declaration_specifier: storage_class_specifier
   55                      | type_specifier
   56                      | type_qualifier
   57                      | function_specifier

   58 storage_class_specifier: KW_EXTERN
   59                        | KW_STATIC

   60 type_qualifier: KW_CONST
   61               | KW_VOLATILE
   62               | KW_RESTRICT

   63 function_specifier: KW_INLINE

   64 type_unit: KW_VOID
   65          | KW_CHAR
   66          | KW_SHORT
   67          | KW_INT
   68          | KW_LONG
   69          | KW_SIGNED
   70          | KW_UNSIGNED
   71          | KW_FLOAT
   72          | KW_DOUBLE
   73          | struct_or_union_specifier
   74          | KW_STRUCT '{' struct_declaration_list_opt '}'
   75          | KW_UNION '{' struct_declaration_list_opt '}'
   76          | KW_STRUCT IDENTIFIER
   77          | KW_UNION IDENTIFIER
   78          | enum_specifier
   79          | TYPE_NAME

   80 type_specifier: type_unit
   81               | type_specifier type_unit

   82 specifier_qualifier_list: type_qualifier_seq_opt type_specifier

   83 array_dims: '[' INTEGER_CONSTANT ']'
   84           | array_dims '[' INTEGER_CONSTANT ']'

   85 struct_or_union_specifier: KW_STRUCT IDENTIFIER '{' struct_declaration_list_opt '}'
   86                          | KW_UNION IDENTIFIER '{' struct_declaration_list_opt '}'
   87                          | KW_STRUCT '{' struct_declaration_list_opt '}'
   88                          | KW_UNION '{' struct_declaration_list_opt '}'
   89                          | KW_STRUCT IDENTIFIER
   90                          | KW_UNION IDENTIFIER

   91 struct_declaration_list_opt: /* empty */
   92                            | struct_declaration_list

   93 struct_declaration_list: struct_declaration
   94                        | struct_declaration_list struct_declaration

   95 struct_declaration: specifier_qualifier_list struct_declarator_list ';'

   96 struct_declarator_list: struct_declarator
   97                       | struct_declarator_list ',' struct_declarator

   98 struct_declarator: sdecl
   99                  | ':' constant_expression
  100                  | sdecl ':' constant_expression

  101 enum_specifier: KW_ENUM IDENTIFIER '{' enumerator_list_opt '}'
  102               | KW_ENUM '{' enumerator_list_opt '}'
  103               | KW_ENUM IDENTIFIER

  104 enumerator_list_opt: /* empty */
  105                    | enumerator_list

  106 enumerator_list: enumerator
  107                | enumerator_list ',' enumerator

  108 enumerator: IDENTIFIER
  109           | IDENTIFIER '=' constant_expression

  110 declarator: pointer_opt direct_declarator

  111 pointer_opt: /* empty */
  112            | pointer

  113 pointer: '*'
  114        | '*' type_qualifier
  115        | '*' pointer
  116        | '*' type_qualifier pointer

  117 direct_declarator: IDENTIFIER
  118                  | '(' declarator ')'
  119                  | direct_declarator '[' assignment_expression_opt ']'
  120                  | direct_declarator '(' parameter_type_list_opt ')'
  121                  | direct_declarator '(' identifier_list_opt ')'

  122 identifier_list_opt: /* empty */
  123                    | identifier_list

  124 identifier_list: IDENTIFIER
  125                | identifier_list ',' IDENTIFIER

  126 fp_param_list_opt: /* empty */
  127                  | fp_param_list

  128 fp_param_list: fp_param
  129              | fp_param_list ',' fp_param

  130 fp_param: type_qualifier_seq_opt type_specifier star_list_opt
  131         | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER

  132 function_definition: declaration_specifiers declarator compound_statement
  133                    | type_specifier declarator compound_statement

  134 statement: compound_statement
  135          | expression_statement
  136          | selection_statement
  137          | iteration_statement
  138          | jump_statement

  139 compound_statement: '{' block_item_list_opt '}'

  140 block_item_list_opt: /* empty */
  141                    | block_item_list

  142 block_item_list: block_item
  143                | block_item_list block_item

  144 block_item: type_specifier star_list_opt IDENTIFIER ';'
  145           | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER ';'
  146           | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';'
  147           | type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';'
  148           | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' initializer ';'
  149           | type_specifier star_list_opt IDENTIFIER '=' initializer ';'
  150           | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';'
  151           | type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';'
  152           | type_qualifier_seq_opt type_specifier sdecl ',' sdecl sdecl_list ';'
  153           | type_qualifier_seq_opt type_specifier sdecl '=' initializer ';'
  154           | statement
  155           | KW_TYPEDEF type_specifier star_list_opt IDENTIFIER ';'

  156 sdecl_list: /* empty */
  157           | sdecl_list ',' sdecl

  158 sdecl: star_list_opt sdir

  159 sdir: IDENTIFIER
  160     | '(' sdecl ')'
  161     | '(' sdecl ')' '(' fp_param_list_opt ')'
  162     | sdir '[' assignment_expression_opt ']'

  163 expression_statement: ';'
  164                     | expression ';'

  165 selection_statement: KW_IF '(' expression ')' statement
  166                    | KW_IF '(' expression ')' statement KW_ELSE statement
  167                    | KW_SWITCH '(' expression ')' statement

  168 iteration_statement: KW_WHILE '(' expression ')' statement
  169                    | KW_DO statement KW_WHILE '(' expression ')' ';'
  170                    | KW_FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' statement

  171 jump_statement: KW_RETURN expression_opt ';'
  172               | KW_BREAK ';'
  173               | KW_CONTINUE ';'
  174               | KW_GOTO IDENTIFIER ';'

  175 expression_opt: /* empty */
  176               | expression

  177 expression: assignment_expression
  178           | expression ',' assignment_expression

  179 assignment_expression_opt: /* empty */
  180                          | assignment_expression

  181 assignment_expression: conditional_expression
  182                      | unary_expression '=' assignment_expression
  183                      | unary_expression ADD_ASSIGN assignment_expression
  184                      | unary_expression SUB_ASSIGN assignment_expression
  185                      | unary_expression MUL_ASSIGN assignment_expression
  186                      | unary_expression DIV_ASSIGN assignment_expression
  187                      | unary_expression MOD_ASSIGN assignment_expression
  188                      | unary_expression AND_ASSIGN assignment_expression
  189                      | unary_expression OR_ASSIGN assignment_expression
  190                      | unary_expression XOR_ASSIGN assignment_expression
  191                      | unary_expression LSHIFT_ASSIGN assignment_expression
  192                      | unary_expression RSHIFT_ASSIGN assignment_expression

  193 conditional_expression: logical_or_expression
  194                       | logical_or_expression '?' expression ':' conditional_expression

  195 logical_or_expression: logical_and_expression
  196                      | logical_or_expression LOGOR logical_and_expression

  197 logical_and_expression: inclusive_or_expression
  198                       | logical_and_expression LOGAND inclusive_or_expression

  199 inclusive_or_expression: exclusive_or_expression
  200                        | inclusive_or_expression '|' exclusive_or_expression

  201 exclusive_or_expression: and_expression
  202                        | exclusive_or_expression '^' and_expression

  203 and_expression: equality_expression
  204               | and_expression '&' equality_expression

  205 equality_expression: relational_expression
  206                    | equality_expression EQ relational_expression
  207                    | equality_expression NE relational_expression

  208 relational_expression: shift_expression
  209                      | relational_expression '<' shift_expression
  210                      | relational_expression '>' shift_expression
  211                      | relational_expression LE shift_expression
  212                      | relational_expression GE shift_expression

  213 shift_expression: additive_expression
  214                 | shift_expression LSHIFT additive_expression
  215                 | shift_expression RSHIFT additive_expression

  216 additive_expression: multiplicative_expression
  217                    | additive_expression '+' multiplicative_expression
  218                    | additive_expression '-' multiplicative_expression

  219 multiplicative_expression: unary_expression
  220                          | multiplicative_expression '*' unary_expression
  221                          | multiplicative_expression '/' unary_expression
  222                          | multiplicative_expression '%' unary_expression

  223 unary_expression: postfix_expression
  224                 | INC unary_expression
  225                 | DEC unary_expression
  226                 | '+' unary_expression
  227                 | '-' unary_expression
  228                 | '!' unary_expression
  229                 | '~' unary_expression
  230                 | KW_SIZEOF unary_expression
  231                 | KW_SIZEOF '(' type_specifier ')'
  232                 | '(' type_qualifier_seq_opt type_specifier star_list_opt ')' unary_expression

  233 type_qualifier_seq_opt: /* empty */
  234                       | type_qualifier_seq_opt KW_CONST
  235                       | type_qualifier_seq_opt KW_VOLATILE
  236                       | type_qualifier_seq_opt KW_RESTRICT

  237 postfix_expression: primary_expression
  238                   | postfix_expression '(' argument_expression_list_opt ')'
  239                   | postfix_expression '[' expression ']'
  240                   | postfix_expression '.' IDENTIFIER
  241                   | postfix_expression ARROW IDENTIFIER
  242                   | postfix_expression INC
  243                   | postfix_expression DEC

  244 argument_expression_list_opt: /* empty */
  245                             | argument_expression_list

  246 argument_expression_list: assignment_expression
  247                         | argument_expression_list ',' assignment_expression

  248 primary_expression: IDENTIFIER
  249                   | INTEGER_CONSTANT
  250                   | FLOAT_CONSTANT
  251                   | CHAR_CONSTANT
  252                   | STRING_LITERAL
  253                   | '(' expression ')'

  254 initializer: assignment_expression
  255            | '{' initializer_list_opt '}'

  256 initializer_list_opt: /* empty */
  257                     | initializer_list

  258 initializer_list: initializer
  259                 | designated_initializer
  260                 | initializer_list ',' initializer
  261                 | initializer_list ',' designated_initializer

  262 designated_initializer: designation '=' initializer

  263 designation: designator
  264            | designation designator

  265 designator: '.' IDENTIFIER
  266           | '[' constant_expression ']'
  267           | '[' constant_expression ELLIPSIS constant_expression ']'

  268 constant_expression: conditional_expression


Terminals, with rules where they appear

$end (0) 0
'!' (33) 228
'%' (37) 222
'&' (38) 204
'(' (40) 12 13 14 15 16 17 24 25 26 27 118 120 121 160 161 165 166
    167 168 169 170 231 232 238 253
')' (41) 12 13 14 15 16 17 24 25 26 27 118 120 121 160 161 165 166
    167 168 169 170 231 232 238 253
'*' (42) 5 6 24 25 26 27 113 114 115 116 220
'+' (43) 217 226
',' (44) 7 8 47 49 97 107 125 129 152 157 178 247 260 261
'-' (45) 218 227
'.' (46) 240 265
'/' (47) 221
':' (58) 99 100 194
';' (59) 7 8 9 10 14 15 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
    32 33 35 36 95 144 145 146 147 148 149 150 151 152 153 155 163
    164 169 170 171 172 173 174
'<' (60) 209
'=' (61) 9 10 22 23 30 31 32 33 109 146 147 148 149 150 151 153 182
    262
'>' (62) 210
'?' (63) 194
'[' (91) 83 84 119 162 239 266 267
']' (93) 83 84 119 162 239 266 267
'^' (94) 202
'{' (123) 74 75 85 86 87 88 101 102 139 255
'|' (124) 200
'}' (125) 74 75 85 86 87 88 101 102 139 255
'~' (126) 229
error (256)
IDENTIFIER (258) 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28
    29 30 31 32 33 76 77 85 86 89 90 101 103 108 109 117 124 125 131
    144 145 146 147 148 149 150 151 155 159 174 240 241 248 265
TYPE_NAME (259) 79
STRING_LITERAL (260) 252
INTEGER_CONSTANT (261) 83 84 249
FLOAT_CONSTANT (262) 250
CHAR_CONSTANT (263) 251
KW_VOID (264) 64
KW_CHAR (265) 65
KW_SHORT (266) 66
KW_INT (267) 67
KW_LONG (268) 68
KW_SIGNED (269) 69
KW_UNSIGNED (270) 70
KW_FLOAT (271) 71
KW_DOUBLE (272) 72
KW_STRUCT (273) 74 76 85 87 89
KW_UNION (274) 75 77 86 88 90
KW_ENUM (275) 101 102 103
KW_TYPEDEF (276) 18 19 20 21 24 25 26 27 155
KW_RETURN (277) 171
KW_IF (278) 165 166
KW_ELSE (279) 166
KW_WHILE (280) 168 169
KW_FOR (281) 170
KW_DO (282) 169
KW_SWITCH (283) 167
KW_CASE (284)
KW_DEFAULT (285)
KW_BREAK (286) 172
KW_CONTINUE (287) 173
KW_GOTO (288) 174
KW_CONST (289) 40 60 234
KW_VOLATILE (290) 41 61 235
KW_RESTRICT (291) 42 62 236
KW_INLINE (292) 43 63
KW_EXTERN (293) 38 58
KW_STATIC (294) 39 59
KW_SIZEOF (295) 230 231
ELLIPSIS (296) 47 267
ARROW (297) 241
INC (298) 224 242
DEC (299) 225 243
LSHIFT (300) 214
RSHIFT (301) 215
LE (302) 211
GE (303) 212
EQ (304) 206
NE (305) 207
LOGAND (306) 198
LOGOR (307) 196
ADD_ASSIGN (308) 183
SUB_ASSIGN (309) 184
MUL_ASSIGN (310) 185
DIV_ASSIGN (311) 186
MOD_ASSIGN (312) 187
AND_ASSIGN (313) 188
OR_ASSIGN (314) 189
XOR_ASSIGN (315) 190
LSHIFT_ASSIGN (316) 191
RSHIFT_ASSIGN (317) 192
PREFER_EMPTY (318)


Nonterminals, with rules where they appear

$accept (88)
    on left: 0
translation_unit (89)
    on left: 1 2, on right: 0 2
star_list_opt (90)
    on left: 3 4, on right: 12 13 14 15 18 19 20 21 22 23 24 25 26
    27 28 29 30 31 32 33 37 130 131 144 145 146 147 148 149 150 151
    155 158 232
star_list (91)
    on left: 5 6, on right: 4 6
external_declaration (92)
    on left: 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
    26 27 28 29 30 31 32 33 34 35 36, on right: 2
func_decl_specs (93)
    on left: 37 38 39 40 41 42 43, on right: 16 17 38 39 40 41 42 43
parameter_type_list_opt (94)
    on left: 44 45, on right: 12 13 14 15 16 17 120
parameter_type_list (95)
    on left: 46 47, on right: 45
parameter_list (96)
    on left: 48 49, on right: 46 47 49
parameter_declaration (97)
    on left: 50 51, on right: 48 49
declaration_specifiers (98)
    on left: 52 53, on right: 53 132
declaration_specifier (99)
    on left: 54 55 56 57, on right: 52 53
storage_class_specifier (100)
    on left: 58 59, on right: 54
type_qualifier (101)
    on left: 60 61 62, on right: 56 114 116
function_specifier (102)
    on left: 63, on right: 57
type_unit (103)
    on left: 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79,
    on right: 80 81
type_specifier (104)
    on left: 80 81, on right: 7 8 9 10 12 13 14 15 18 19 20 21 22 23
    24 25 26 27 28 29 30 31 32 33 37 50 51 55 81 82 130 131 133 144
    145 146 147 148 149 150 151 152 153 155 231 232
specifier_qualifier_list (105)
    on left: 82, on right: 95
array_dims (106)
    on left: 83 84, on right: 20 21 26 27 32 33 84 150 151
struct_or_union_specifier (107)
    on left: 85 86 87 88 89 90, on right: 35 73
struct_declaration_list_opt (108)
    on left: 91 92, on right: 74 75 85 86 87 88
struct_declaration_list (109)
    on left: 93 94, on right: 92 94
struct_declaration (110)
    on left: 95, on right: 93 94
struct_declarator_list (111)
    on left: 96 97, on right: 95 97
struct_declarator (112)
    on left: 98 99 100, on right: 96 97
enum_specifier (113)
    on left: 101 102 103, on right: 36 78
enumerator_list_opt (114)
    on left: 104 105, on right: 101 102
enumerator_list (115)
    on left: 106 107, on right: 105 107
enumerator (116)
    on left: 108 109, on right: 106 107
declarator (117)
    on left: 110, on right: 118 132 133
pointer_opt (118)
    on left: 111 112, on right: 110
pointer (119)
    on left: 113 114 115 116, on right: 112 115 116
direct_declarator (120)
    on left: 117 118 119 120 121, on right: 110 119 120 121
identifier_list_opt (121)
    on left: 122 123, on right: 121
identifier_list (122)
    on left: 124 125, on right: 123 125
fp_param_list_opt (123)
    on left: 126 127, on right: 24 25 26 27 161
fp_param_list (124)
    on left: 128 129, on right: 127 129
fp_param (125)
    on left: 130 131, on right: 128 129
function_definition (126)
    on left: 132 133, on right: 34
statement (127)
    on left: 134 135 136 137 138, on right: 154 165 166 167 168 169
    170
compound_statement (128)
    on left: 139, on right: 12 13 16 132 133 134
block_item_list_opt (129)
    on left: 140 141, on right: 139
block_item_list (130)
    on left: 142 143, on right: 141 143
block_item (131)
    on left: 144 145 146 147 148 149 150 151 152 153 154 155,
    on right: 142 143
sdecl_list (132)
    on left: 156 157, on right: 7 8 152 157
sdecl (133)
    on left: 158, on right: 7 8 9 10 50 98 100 152 153 157 160 161
sdir (134)
    on left: 159 160 161 162, on right: 158 162
expression_statement (135)
    on left: 163 164, on right: 135
selection_statement (136)
    on left: 165 166 167, on right: 136
iteration_statement (137)
    on left: 168 169 170, on right: 137
jump_statement (138)
    on left: 171 172 173 174, on right: 138
expression_opt (139)
    on left: 175 176, on right: 170 171
expression (140)
    on left: 177 178, on right: 164 165 166 167 168 169 176 178 194
    239 253
assignment_expression_opt (141)
    on left: 179 180, on right: 119 162
assignment_expression (142)
    on left: 181 182 183 184 185 186 187 188 189 190 191 192,
    on right: 22 23 146 147 177 178 180 182 183 184 185 186 187 188
    189 190 191 192 246 247 254
conditional_expression (143)
    on left: 193 194, on right: 181 194 268
logical_or_expression (144)
    on left: 195 196, on right: 193 194 196
logical_and_expression (145)
    on left: 197 198, on right: 195 196 198
inclusive_or_expression (146)
    on left: 199 200, on right: 197 198 200
exclusive_or_expression (147)
    on left: 201 202, on right: 199 200 202
and_expression (148)
    on left: 203 204, on right: 201 202 204
equality_expression (149)
    on left: 205 206 207, on right: 203 204 206 207
relational_expression (150)
    on left: 208 209 210 211 212, on right: 205 206 207 209 210 211
    212
shift_expression (151)
    on left: 213 214 215, on right: 208 209 210 211 212 214 215
additive_expression (152)
    on left: 216 217 218, on right: 213 214 215 217 218
multiplicative_expression (153)
    on left: 219 220 221 222, on right: 216 217 218 220 221 222
unary_expression (154)
    on left: 223 224 225 226 227 228 229 230 231 232,
    on right: 182 183 184 185 186 187 188 189 190 191 192 219 220 221
    222 224 225 226 227 228 229 230 232
type_qualifier_seq_opt (155)
    on left: 233 234 235 236, on right: 7 9 12 14 18 20 22 24 26 28
    30 32 50 51 82 130 131 145 146 148 150 152 153 232 234 235 236
postfix_expression (156)
    on left: 237 238 239 240 241 242 243, on right: 223 238 239 240
    241 242 243
argument_expression_list_opt (157)
    on left: 244 245, on right: 238
argument_expression_list (158)
    on left: 246 247, on right: 245 247
primary_expression (159)
    on left: 248 249 250 251 252 253, on right: 237
initializer (160)
    on left: 254 255, on right: 9 10 30 31 32 33 148 149 150 151 153
    258 260 262
initializer_list_opt (161)
    on left: 256 257, on right: 255
initializer_list (162)
    on left: 258 259 260 261, on right: 257 260 261
designated_initializer (163)
    on left: 262, on right: 259 261
designation (164)
    on left: 263 264, on right: 262 264
designator (165)
    on left: 265 266 267, on right: 263 264
constant_expression (166)
    on left: 268, on right: 99 100 109 266 267


state 0

    0 $accept: . translation_unit $end

    $default  reduce using rule 1 (translation_unit)

    translation_unit  go to state 1


state 1

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . external_declaration

    $end         shift, and go to state 2
    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_TYPEDEF   shift, and go to state 16
    KW_CONST     shift, and go to state 17
    KW_VOLATILE  shift, and go to state 18
    KW_RESTRICT  shift, and go to state 19
    KW_INLINE    shift, and go to state 20
    KW_EXTERN    shift, and go to state 21
    KW_STATIC    shift, and go to state 22

    $end         [reduce using rule 11 (external_declaration)]
    TYPE_NAME    [reduce using rule 11 (external_declaration)]
    TYPE_NAME    [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_VOID      [reduce using rule 11 (external_declaration)]
    KW_VOID      [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_CHAR      [reduce using rule 11 (external_declaration)]
    KW_CHAR      [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_SHORT     [reduce using rule 11 (external_declaration)]
    KW_SHORT     [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_INT       [reduce using rule 11 (external_declaration)]
    KW_INT       [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_LONG      [reduce using rule 11 (external_declaration)]
    KW_LONG      [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_SIGNED    [reduce using rule 11 (external_declaration)]
    KW_SIGNED    [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_UNSIGNED  [reduce using rule 11 (external_declaration)]
    KW_UNSIGNED  [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_FLOAT     [reduce using rule 11 (external_declaration)]
    KW_FLOAT     [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_DOUBLE    [reduce using rule 11 (external_declaration)]
    KW_DOUBLE    [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_STRUCT    [reduce using rule 11 (external_declaration)]
    KW_STRUCT    [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_UNION     [reduce using rule 11 (external_declaration)]
    KW_UNION     [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_ENUM      [reduce using rule 11 (external_declaration)]
    KW_ENUM      [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_TYPEDEF   [reduce using rule 11 (external_declaration)]
    KW_CONST     [reduce using rule 11 (external_declaration)]
    KW_CONST     [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_VOLATILE  [reduce using rule 11 (external_declaration)]
    KW_VOLATILE  [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_RESTRICT  [reduce using rule 11 (external_declaration)]
    KW_RESTRICT  [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_INLINE    [reduce using rule 11 (external_declaration)]
    KW_EXTERN    [reduce using rule 11 (external_declaration)]
    KW_STATIC    [reduce using rule 11 (external_declaration)]

    external_declaration       go to state 23
    func_decl_specs            go to state 24
    declaration_specifiers     go to state 25
    declaration_specifier      go to state 26
    storage_class_specifier    go to state 27
    type_qualifier             go to state 28
    function_specifier         go to state 29
    type_unit                  go to state 30
    type_specifier             go to state 31
    struct_or_union_specifier  go to state 32
    enum_specifier             go to state 33
    function_definition        go to state 34
    type_qualifier_seq_opt     go to state 35


state 2

    0 $accept: translation_unit $end .

    $default  accept


state 3

   79 type_unit: TYPE_NAME .

    $default  reduce using rule 79 (type_unit)


state 4

   64 type_unit: KW_VOID .

    $default  reduce using rule 64 (type_unit)


state 5

   65 type_unit: KW_CHAR .

    $default  reduce using rule 65 (type_unit)


state 6

   66 type_unit: KW_SHORT .

    $default  reduce using rule 66 (type_unit)


state 7

   67 type_unit: KW_INT .

    $default  reduce using rule 67 (type_unit)


state 8

   68 type_unit: KW_LONG .

    $default  reduce using rule 68 (type_unit)


state 9

   69 type_unit: KW_SIGNED .

    $default  reduce using rule 69 (type_unit)


state 10

   70 type_unit: KW_UNSIGNED .

    $default  reduce using rule 70 (type_unit)


state 11

   71 type_unit: KW_FLOAT .

    $default  reduce using rule 71 (type_unit)


state 12

   72 type_unit: KW_DOUBLE .

    $default  reduce using rule 72 (type_unit)


state 13

   74 type_unit: KW_STRUCT . '{' struct_declaration_list_opt '}'
   76          | KW_STRUCT . IDENTIFIER
   85 struct_or_union_specifier: KW_STRUCT . IDENTIFIER '{' struct_declaration_list_opt '}'
   87                          | KW_STRUCT . '{' struct_declaration_list_opt '}'
   89                          | KW_STRUCT . IDENTIFIER

    IDENTIFIER  shift, and go to state 36
    '{'         shift, and go to state 37


state 14

   75 type_unit: KW_UNION . '{' struct_declaration_list_opt '}'
   77          | KW_UNION . IDENTIFIER
   86 struct_or_union_specifier: KW_UNION . IDENTIFIER '{' struct_declaration_list_opt '}'
   88                          | KW_UNION . '{' struct_declaration_list_opt '}'
   90                          | KW_UNION . IDENTIFIER

    IDENTIFIER  shift, and go to state 38
    '{'         shift, and go to state 39


state 15

  101 enum_specifier: KW_ENUM . IDENTIFIER '{' enumerator_list_opt '}'
  102               | KW_ENUM . '{' enumerator_list_opt '}'
  103               | KW_ENUM . IDENTIFIER

    IDENTIFIER  shift, and go to state 40
    '{'         shift, and go to state 41


state 16

   18 external_declaration: KW_TYPEDEF . type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER ';'
   19                     | KW_TYPEDEF . type_specifier star_list_opt IDENTIFIER ';'
   20                     | KW_TYPEDEF . type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims ';'
   21                     | KW_TYPEDEF . type_specifier star_list_opt IDENTIFIER array_dims ';'
   24                     | KW_TYPEDEF . type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   25                     | KW_TYPEDEF . type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   26                     | KW_TYPEDEF . type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'
   27                     | KW_TYPEDEF . type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15

    TYPE_NAME    [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_VOID      [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_CHAR      [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_SHORT     [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_INT       [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_LONG      [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_SIGNED    [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_UNSIGNED  [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_FLOAT     [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_DOUBLE    [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_STRUCT    [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_UNION     [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_ENUM      [reduce using rule 233 (type_qualifier_seq_opt)]
    $default     reduce using rule 233 (type_qualifier_seq_opt)

    type_unit                  go to state 30
    type_specifier             go to state 42
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44
    type_qualifier_seq_opt     go to state 45


state 17

   40 func_decl_specs: KW_CONST . func_decl_specs
   60 type_qualifier: KW_CONST .

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 46
    KW_VOLATILE  shift, and go to state 47
    KW_RESTRICT  shift, and go to state 48
    KW_INLINE    shift, and go to state 49
    KW_EXTERN    shift, and go to state 50
    KW_STATIC    shift, and go to state 51

    TYPE_NAME    [reduce using rule 60 (type_qualifier)]
    KW_VOID      [reduce using rule 60 (type_qualifier)]
    KW_CHAR      [reduce using rule 60 (type_qualifier)]
    KW_SHORT     [reduce using rule 60 (type_qualifier)]
    KW_INT       [reduce using rule 60 (type_qualifier)]
    KW_LONG      [reduce using rule 60 (type_qualifier)]
    KW_SIGNED    [reduce using rule 60 (type_qualifier)]
    KW_UNSIGNED  [reduce using rule 60 (type_qualifier)]
    KW_FLOAT     [reduce using rule 60 (type_qualifier)]
    KW_DOUBLE    [reduce using rule 60 (type_qualifier)]
    KW_STRUCT    [reduce using rule 60 (type_qualifier)]
    KW_UNION     [reduce using rule 60 (type_qualifier)]
    KW_ENUM      [reduce using rule 60 (type_qualifier)]
    KW_CONST     [reduce using rule 60 (type_qualifier)]
    KW_VOLATILE  [reduce using rule 60 (type_qualifier)]
    KW_RESTRICT  [reduce using rule 60 (type_qualifier)]
    KW_INLINE    [reduce using rule 60 (type_qualifier)]
    KW_EXTERN    [reduce using rule 60 (type_qualifier)]
    KW_STATIC    [reduce using rule 60 (type_qualifier)]
    $default     reduce using rule 60 (type_qualifier)

    func_decl_specs            go to state 52
    type_unit                  go to state 30
    type_specifier             go to state 53
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 18

   41 func_decl_specs: KW_VOLATILE . func_decl_specs
   61 type_qualifier: KW_VOLATILE .

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 46
    KW_VOLATILE  shift, and go to state 47
    KW_RESTRICT  shift, and go to state 48
    KW_INLINE    shift, and go to state 49
    KW_EXTERN    shift, and go to state 50
    KW_STATIC    shift, and go to state 51

    TYPE_NAME    [reduce using rule 61 (type_qualifier)]
    KW_VOID      [reduce using rule 61 (type_qualifier)]
    KW_CHAR      [reduce using rule 61 (type_qualifier)]
    KW_SHORT     [reduce using rule 61 (type_qualifier)]
    KW_INT       [reduce using rule 61 (type_qualifier)]
    KW_LONG      [reduce using rule 61 (type_qualifier)]
    KW_SIGNED    [reduce using rule 61 (type_qualifier)]
    KW_UNSIGNED  [reduce using rule 61 (type_qualifier)]
    KW_FLOAT     [reduce using rule 61 (type_qualifier)]
    KW_DOUBLE    [reduce using rule 61 (type_qualifier)]
    KW_STRUCT    [reduce using rule 61 (type_qualifier)]
    KW_UNION     [reduce using rule 61 (type_qualifier)]
    KW_ENUM      [reduce using rule 61 (type_qualifier)]
    KW_CONST     [reduce using rule 61 (type_qualifier)]
    KW_VOLATILE  [reduce using rule 61 (type_qualifier)]
    KW_RESTRICT  [reduce using rule 61 (type_qualifier)]
    KW_INLINE    [reduce using rule 61 (type_qualifier)]
    KW_EXTERN    [reduce using rule 61 (type_qualifier)]
    KW_STATIC    [reduce using rule 61 (type_qualifier)]
    $default     reduce using rule 61 (type_qualifier)

    func_decl_specs            go to state 54
    type_unit                  go to state 30
    type_specifier             go to state 53
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 19

   42 func_decl_specs: KW_RESTRICT . func_decl_specs
   62 type_qualifier: KW_RESTRICT .

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 46
    KW_VOLATILE  shift, and go to state 47
    KW_RESTRICT  shift, and go to state 48
    KW_INLINE    shift, and go to state 49
    KW_EXTERN    shift, and go to state 50
    KW_STATIC    shift, and go to state 51

    TYPE_NAME    [reduce using rule 62 (type_qualifier)]
    KW_VOID      [reduce using rule 62 (type_qualifier)]
    KW_CHAR      [reduce using rule 62 (type_qualifier)]
    KW_SHORT     [reduce using rule 62 (type_qualifier)]
    KW_INT       [reduce using rule 62 (type_qualifier)]
    KW_LONG      [reduce using rule 62 (type_qualifier)]
    KW_SIGNED    [reduce using rule 62 (type_qualifier)]
    KW_UNSIGNED  [reduce using rule 62 (type_qualifier)]
    KW_FLOAT     [reduce using rule 62 (type_qualifier)]
    KW_DOUBLE    [reduce using rule 62 (type_qualifier)]
    KW_STRUCT    [reduce using rule 62 (type_qualifier)]
    KW_UNION     [reduce using rule 62 (type_qualifier)]
    KW_ENUM      [reduce using rule 62 (type_qualifier)]
    KW_CONST     [reduce using rule 62 (type_qualifier)]
    KW_VOLATILE  [reduce using rule 62 (type_qualifier)]
    KW_RESTRICT  [reduce using rule 62 (type_qualifier)]
    KW_INLINE    [reduce using rule 62 (type_qualifier)]
    KW_EXTERN    [reduce using rule 62 (type_qualifier)]
    KW_STATIC    [reduce using rule 62 (type_qualifier)]
    $default     reduce using rule 62 (type_qualifier)

    func_decl_specs            go to state 55
    type_unit                  go to state 30
    type_specifier             go to state 53
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 20

   43 func_decl_specs: KW_INLINE . func_decl_specs
   63 function_specifier: KW_INLINE .

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 46
    KW_VOLATILE  shift, and go to state 47
    KW_RESTRICT  shift, and go to state 48
    KW_INLINE    shift, and go to state 49
    KW_EXTERN    shift, and go to state 50
    KW_STATIC    shift, and go to state 51

    TYPE_NAME    [reduce using rule 63 (function_specifier)]
    KW_VOID      [reduce using rule 63 (function_specifier)]
    KW_CHAR      [reduce using rule 63 (function_specifier)]
    KW_SHORT     [reduce using rule 63 (function_specifier)]
    KW_INT       [reduce using rule 63 (function_specifier)]
    KW_LONG      [reduce using rule 63 (function_specifier)]
    KW_SIGNED    [reduce using rule 63 (function_specifier)]
    KW_UNSIGNED  [reduce using rule 63 (function_specifier)]
    KW_FLOAT     [reduce using rule 63 (function_specifier)]
    KW_DOUBLE    [reduce using rule 63 (function_specifier)]
    KW_STRUCT    [reduce using rule 63 (function_specifier)]
    KW_UNION     [reduce using rule 63 (function_specifier)]
    KW_ENUM      [reduce using rule 63 (function_specifier)]
    KW_CONST     [reduce using rule 63 (function_specifier)]
    KW_VOLATILE  [reduce using rule 63 (function_specifier)]
    KW_RESTRICT  [reduce using rule 63 (function_specifier)]
    KW_INLINE    [reduce using rule 63 (function_specifier)]
    KW_EXTERN    [reduce using rule 63 (function_specifier)]
    KW_STATIC    [reduce using rule 63 (function_specifier)]
    $default     reduce using rule 63 (function_specifier)

    func_decl_specs            go to state 56
    type_unit                  go to state 30
    type_specifier             go to state 53
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 21

   38 func_decl_specs: KW_EXTERN . func_decl_specs
   58 storage_class_specifier: KW_EXTERN .

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 46
    KW_VOLATILE  shift, and go to state 47
    KW_RESTRICT  shift, and go to state 48
    KW_INLINE    shift, and go to state 49
    KW_EXTERN    shift, and go to state 50
    KW_STATIC    shift, and go to state 51

    TYPE_NAME    [reduce using rule 58 (storage_class_specifier)]
    KW_VOID      [reduce using rule 58 (storage_class_specifier)]
    KW_CHAR      [reduce using rule 58 (storage_class_specifier)]
    KW_SHORT     [reduce using rule 58 (storage_class_specifier)]
    KW_INT       [reduce using rule 58 (storage_class_specifier)]
    KW_LONG      [reduce using rule 58 (storage_class_specifier)]
    KW_SIGNED    [reduce using rule 58 (storage_class_specifier)]
    KW_UNSIGNED  [reduce using rule 58 (storage_class_specifier)]
    KW_FLOAT     [reduce using rule 58 (storage_class_specifier)]
    KW_DOUBLE    [reduce using rule 58 (storage_class_specifier)]
    KW_STRUCT    [reduce using rule 58 (storage_class_specifier)]
    KW_UNION     [reduce using rule 58 (storage_class_specifier)]
    KW_ENUM      [reduce using rule 58 (storage_class_specifier)]
    KW_CONST     [reduce using rule 58 (storage_class_specifier)]
    KW_VOLATILE  [reduce using rule 58 (storage_class_specifier)]
    KW_RESTRICT  [reduce using rule 58 (storage_class_specifier)]
    KW_INLINE    [reduce using rule 58 (storage_class_specifier)]
    KW_EXTERN    [reduce using rule 58 (storage_class_specifier)]
    KW_STATIC    [reduce using rule 58 (storage_class_specifier)]
    $default     reduce using rule 58 (storage_class_specifier)

    func_decl_specs            go to state 57
    type_unit                  go to state 30
    type_specifier             go to state 53
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 22

   39 func_decl_specs: KW_STATIC . func_decl_specs
   59 storage_class_specifier: KW_STATIC .

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 46
    KW_VOLATILE  shift, and go to state 47
    KW_RESTRICT  shift, and go to state 48
    KW_INLINE    shift, and go to state 49
    KW_EXTERN    shift, and go to state 50
    KW_STATIC    shift, and go to state 51

    TYPE_NAME    [reduce using rule 59 (storage_class_specifier)]
    KW_VOID      [reduce using rule 59 (storage_class_specifier)]
    KW_CHAR      [reduce using rule 59 (storage_class_specifier)]
    KW_SHORT     [reduce using rule 59 (storage_class_specifier)]
    KW_INT       [reduce using rule 59 (storage_class_specifier)]
    KW_LONG      [reduce using rule 59 (storage_class_specifier)]
    KW_SIGNED    [reduce using rule 59 (storage_class_specifier)]
    KW_UNSIGNED  [reduce using rule 59 (storage_class_specifier)]
    KW_FLOAT     [reduce using rule 59 (storage_class_specifier)]
    KW_DOUBLE    [reduce using rule 59 (storage_class_specifier)]
    KW_STRUCT    [reduce using rule 59 (storage_class_specifier)]
    KW_UNION     [reduce using rule 59 (storage_class_specifier)]
    KW_ENUM      [reduce using rule 59 (storage_class_specifier)]
    KW_CONST     [reduce using rule 59 (storage_class_specifier)]
    KW_VOLATILE  [reduce using rule 59 (storage_class_specifier)]
    KW_RESTRICT  [reduce using rule 59 (storage_class_specifier)]
    KW_INLINE    [reduce using rule 59 (storage_class_specifier)]
    KW_EXTERN    [reduce using rule 59 (storage_class_specifier)]
    KW_STATIC    [reduce using rule 59 (storage_class_specifier)]
    $default     reduce using rule 59 (storage_class_specifier)

    func_decl_specs            go to state 58
    type_unit                  go to state 30
    type_specifier             go to state 53
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 23

    2 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 2 (translation_unit)


state 24

   16 external_declaration: func_decl_specs . IDENTIFIER '(' parameter_type_list_opt ')' compound_statement
   17                     | func_decl_specs . IDENTIFIER '(' parameter_type_list_opt ')' ';'

    IDENTIFIER  shift, and go to state 59


state 25

   53 declaration_specifiers: declaration_specifiers . declaration_specifier
  132 function_definition: declaration_specifiers . declarator compound_statement

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 60
    KW_VOLATILE  shift, and go to state 61
    KW_RESTRICT  shift, and go to state 62
    KW_INLINE    shift, and go to state 63
    KW_EXTERN    shift, and go to state 64
    KW_STATIC    shift, and go to state 65
    '*'          shift, and go to state 66

    $default  reduce using rule 111 (pointer_opt)

    declaration_specifier      go to state 67
    storage_class_specifier    go to state 27
    type_qualifier             go to state 28
    function_specifier         go to state 29
    type_unit                  go to state 30
    type_specifier             go to state 68
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44
    declarator                 go to state 69
    pointer_opt                go to state 70
    pointer                    go to state 71


state 26

   52 declaration_specifiers: declaration_specifier .

    $default  reduce using rule 52 (declaration_specifiers)


state 27

   54 declaration_specifier: storage_class_specifier .

    $default  reduce using rule 54 (declaration_specifier)


state 28

   56 declaration_specifier: type_qualifier .

    $default  reduce using rule 56 (declaration_specifier)


state 29

   57 declaration_specifier: function_specifier .

    $default  reduce using rule 57 (declaration_specifier)


state 30

   80 type_specifier: type_unit .

    $default  reduce using rule 80 (type_specifier)


state 31

    8 external_declaration: type_specifier . sdecl ',' sdecl sdecl_list ';'
   10                     | type_specifier . sdecl '=' initializer ';'
   13                     | type_specifier . star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' compound_statement
   15                     | type_specifier . star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' ';'
   23                     | type_specifier . star_list_opt IDENTIFIER '=' assignment_expression ';'
   29                     | type_specifier . star_list_opt IDENTIFIER ';'
   31                     | type_specifier . star_list_opt IDENTIFIER '=' initializer ';'
   33                     | type_specifier . star_list_opt IDENTIFIER array_dims '=' initializer ';'
   37 func_decl_specs: type_specifier . star_list_opt
   55 declaration_specifier: type_specifier .
   81 type_specifier: type_specifier . type_unit
  133 function_definition: type_specifier . declarator compound_statement

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    '*'          shift, and go to state 72

    IDENTIFIER   reduce using rule 3 (star_list_opt)
    IDENTIFIER   [reduce using rule 55 (declaration_specifier)]
    IDENTIFIER   [reduce using rule 111 (pointer_opt)]
    TYPE_NAME    [reduce using rule 55 (declaration_specifier)]
    KW_VOID      [reduce using rule 55 (declaration_specifier)]
    KW_CHAR      [reduce using rule 55 (declaration_specifier)]
    KW_SHORT     [reduce using rule 55 (declaration_specifier)]
    KW_INT       [reduce using rule 55 (declaration_specifier)]
    KW_LONG      [reduce using rule 55 (declaration_specifier)]
    KW_SIGNED    [reduce using rule 55 (declaration_specifier)]
    KW_UNSIGNED  [reduce using rule 55 (declaration_specifier)]
    KW_FLOAT     [reduce using rule 55 (declaration_specifier)]
    KW_DOUBLE    [reduce using rule 55 (declaration_specifier)]
    KW_STRUCT    [reduce using rule 55 (declaration_specifier)]
    KW_UNION     [reduce using rule 55 (declaration_specifier)]
    KW_ENUM      [reduce using rule 55 (declaration_specifier)]
    '*'          [reduce using rule 55 (declaration_specifier)]
    '('          reduce using rule 3 (star_list_opt)
    '('          [reduce using rule 55 (declaration_specifier)]
    '('          [reduce using rule 111 (pointer_opt)]
    $default     reduce using rule 55 (declaration_specifier)

    star_list_opt              go to state 73
    star_list                  go to state 74
    type_unit                  go to state 75
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44
    declarator                 go to state 76
    pointer_opt                go to state 70
    pointer                    go to state 71
    sdecl                      go to state 77


state 32

   35 external_declaration: struct_or_union_specifier . ';'
   73 type_unit: struct_or_union_specifier .

    ';'  shift, and go to state 78

    $default  reduce using rule 73 (type_unit)


state 33

   36 external_declaration: enum_specifier . ';'
   78 type_unit: enum_specifier .

    ';'  shift, and go to state 79

    $default  reduce using rule 78 (type_unit)


state 34

   34 external_declaration: function_definition .

    $default  reduce using rule 34 (external_declaration)


state 35

    7 external_declaration: type_qualifier_seq_opt . type_specifier sdecl ',' sdecl sdecl_list ';'
    9                     | type_qualifier_seq_opt . type_specifier sdecl '=' initializer ';'
   12                     | type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' compound_statement
   14                     | type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' ';'
   22                     | type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';'
   28                     | type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER ';'
   30                     | type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER '=' initializer ';'
   32                     | type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';'
  234 type_qualifier_seq_opt: type_qualifier_seq_opt . KW_CONST
  235                       | type_qualifier_seq_opt . KW_VOLATILE
  236                       | type_qualifier_seq_opt . KW_RESTRICT

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 80
    KW_VOLATILE  shift, and go to state 81
    KW_RESTRICT  shift, and go to state 82

    type_unit                  go to state 30
    type_specifier             go to state 83
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 36

   76 type_unit: KW_STRUCT IDENTIFIER .
   85 struct_or_union_specifier: KW_STRUCT IDENTIFIER . '{' struct_declaration_list_opt '}'
   89                          | KW_STRUCT IDENTIFIER .

    '{'  shift, and go to state 84

    IDENTIFIER   reduce using rule 76 (type_unit)
    IDENTIFIER   [reduce using rule 89 (struct_or_union_specifier)]
    TYPE_NAME    reduce using rule 76 (type_unit)
    TYPE_NAME    [reduce using rule 89 (struct_or_union_specifier)]
    KW_VOID      reduce using rule 76 (type_unit)
    KW_VOID      [reduce using rule 89 (struct_or_union_specifier)]
    KW_CHAR      reduce using rule 76 (type_unit)
    KW_CHAR      [reduce using rule 89 (struct_or_union_specifier)]
    KW_SHORT     reduce using rule 76 (type_unit)
    KW_SHORT     [reduce using rule 89 (struct_or_union_specifier)]
    KW_INT       reduce using rule 76 (type_unit)
    KW_INT       [reduce using rule 89 (struct_or_union_specifier)]
    KW_LONG      reduce using rule 76 (type_unit)
    KW_LONG      [reduce using rule 89 (struct_or_union_specifier)]
    KW_SIGNED    reduce using rule 76 (type_unit)
    KW_SIGNED    [reduce using rule 89 (struct_or_union_specifier)]
    KW_UNSIGNED  reduce using rule 76 (type_unit)
    KW_UNSIGNED  [reduce using rule 89 (struct_or_union_specifier)]
    KW_FLOAT     reduce using rule 76 (type_unit)
    KW_FLOAT     [reduce using rule 89 (struct_or_union_specifier)]
    KW_DOUBLE    reduce using rule 76 (type_unit)
    KW_DOUBLE    [reduce using rule 89 (struct_or_union_specifier)]
    KW_STRUCT    reduce using rule 76 (type_unit)
    KW_STRUCT    [reduce using rule 89 (struct_or_union_specifier)]
    KW_UNION     reduce using rule 76 (type_unit)
    KW_UNION     [reduce using rule 89 (struct_or_union_specifier)]
    KW_ENUM      reduce using rule 76 (type_unit)
    KW_ENUM      [reduce using rule 89 (struct_or_union_specifier)]
    KW_CONST     reduce using rule 76 (type_unit)
    KW_CONST     [reduce using rule 89 (struct_or_union_specifier)]
    KW_VOLATILE  reduce using rule 76 (type_unit)
    KW_VOLATILE  [reduce using rule 89 (struct_or_union_specifier)]
    KW_RESTRICT  reduce using rule 76 (type_unit)
    KW_RESTRICT  [reduce using rule 89 (struct_or_union_specifier)]
    KW_INLINE    reduce using rule 76 (type_unit)
    KW_INLINE    [reduce using rule 89 (struct_or_union_specifier)]
    KW_EXTERN    reduce using rule 76 (type_unit)
    KW_EXTERN    [reduce using rule 89 (struct_or_union_specifier)]
    KW_STATIC    reduce using rule 76 (type_unit)
    KW_STATIC    [reduce using rule 89 (struct_or_union_specifier)]
    ':'          reduce using rule 76 (type_unit)
    ':'          [reduce using rule 89 (struct_or_union_specifier)]
    '*'          reduce using rule 76 (type_unit)
    '*'          [reduce using rule 89 (struct_or_union_specifier)]
    '('          reduce using rule 76 (type_unit)
    '('          [reduce using rule 89 (struct_or_union_specifier)]
    ')'          reduce using rule 76 (type_unit)
    ')'          [reduce using rule 89 (struct_or_union_specifier)]
    ','          reduce using rule 76 (type_unit)
    ','          [reduce using rule 89 (struct_or_union_specifier)]
    ';'          reduce using rule 89 (struct_or_union_specifier)
    $default     reduce using rule 76 (type_unit)


state 37

   74 type_unit: KW_STRUCT '{' . struct_declaration_list_opt '}'
   87 struct_or_union_specifier: KW_STRUCT '{' . struct_declaration_list_opt '}'

    '}'       reduce using rule 91 (struct_declaration_list_opt)
    $default  reduce using rule 233 (type_qualifier_seq_opt)

    specifier_qualifier_list     go to state 85
    struct_declaration_list_opt  go to state 86
    struct_declaration_list      go to state 87
    struct_declaration           go to state 88
    type_qualifier_seq_opt       go to state 89


state 38

   77 type_unit: KW_UNION IDENTIFIER .
   86 struct_or_union_specifier: KW_UNION IDENTIFIER . '{' struct_declaration_list_opt '}'
   90                          | KW_UNION IDENTIFIER .

    '{'  shift, and go to state 90

    IDENTIFIER   reduce using rule 77 (type_unit)
    IDENTIFIER   [reduce using rule 90 (struct_or_union_specifier)]
    TYPE_NAME    reduce using rule 77 (type_unit)
    TYPE_NAME    [reduce using rule 90 (struct_or_union_specifier)]
    KW_VOID      reduce using rule 77 (type_unit)
    KW_VOID      [reduce using rule 90 (struct_or_union_specifier)]
    KW_CHAR      reduce using rule 77 (type_unit)
    KW_CHAR      [reduce using rule 90 (struct_or_union_specifier)]
    KW_SHORT     reduce using rule 77 (type_unit)
    KW_SHORT     [reduce using rule 90 (struct_or_union_specifier)]
    KW_INT       reduce using rule 77 (type_unit)
    KW_INT       [reduce using rule 90 (struct_or_union_specifier)]
    KW_LONG      reduce using rule 77 (type_unit)
    KW_LONG      [reduce using rule 90 (struct_or_union_specifier)]
    KW_SIGNED    reduce using rule 77 (type_unit)
    KW_SIGNED    [reduce using rule 90 (struct_or_union_specifier)]
    KW_UNSIGNED  reduce using rule 77 (type_unit)
    KW_UNSIGNED  [reduce using rule 90 (struct_or_union_specifier)]
    KW_FLOAT     reduce using rule 77 (type_unit)
    KW_FLOAT     [reduce using rule 90 (struct_or_union_specifier)]
    KW_DOUBLE    reduce using rule 77 (type_unit)
    KW_DOUBLE    [reduce using rule 90 (struct_or_union_specifier)]
    KW_STRUCT    reduce using rule 77 (type_unit)
    KW_STRUCT    [reduce using rule 90 (struct_or_union_specifier)]
    KW_UNION     reduce using rule 77 (type_unit)
    KW_UNION     [reduce using rule 90 (struct_or_union_specifier)]
    KW_ENUM      reduce using rule 77 (type_unit)
    KW_ENUM      [reduce using rule 90 (struct_or_union_specifier)]
    KW_CONST     reduce using rule 77 (type_unit)
    KW_CONST     [reduce using rule 90 (struct_or_union_specifier)]
    KW_VOLATILE  reduce using rule 77 (type_unit)
    KW_VOLATILE  [reduce using rule 90 (struct_or_union_specifier)]
    KW_RESTRICT  reduce using rule 77 (type_unit)
    KW_RESTRICT  [reduce using rule 90 (struct_or_union_specifier)]
    KW_INLINE    reduce using rule 77 (type_unit)
    KW_INLINE    [reduce using rule 90 (struct_or_union_specifier)]
    KW_EXTERN    reduce using rule 77 (type_unit)
    KW_EXTERN    [reduce using rule 90 (struct_or_union_specifier)]
    KW_STATIC    reduce using rule 77 (type_unit)
    KW_STATIC    [reduce using rule 90 (struct_or_union_specifier)]
    ':'          reduce using rule 77 (type_unit)
    ':'          [reduce using rule 90 (struct_or_union_specifier)]
    '*'          reduce using rule 77 (type_unit)
    '*'          [reduce using rule 90 (struct_or_union_specifier)]
    '('          reduce using rule 77 (type_unit)
    '('          [reduce using rule 90 (struct_or_union_specifier)]
    ')'          reduce using rule 77 (type_unit)
    ')'          [reduce using rule 90 (struct_or_union_specifier)]
    ','          reduce using rule 77 (type_unit)
    ','          [reduce using rule 90 (struct_or_union_specifier)]
    ';'          reduce using rule 90 (struct_or_union_specifier)
    $default     reduce using rule 77 (type_unit)


state 39

   75 type_unit: KW_UNION '{' . struct_declaration_list_opt '}'
   88 struct_or_union_specifier: KW_UNION '{' . struct_declaration_list_opt '}'

    '}'       reduce using rule 91 (struct_declaration_list_opt)
    $default  reduce using rule 233 (type_qualifier_seq_opt)

    specifier_qualifier_list     go to state 85
    struct_declaration_list_opt  go to state 91
    struct_declaration_list      go to state 87
    struct_declaration           go to state 88
    type_qualifier_seq_opt       go to state 89


state 40

  101 enum_specifier: KW_ENUM IDENTIFIER . '{' enumerator_list_opt '}'
  103               | KW_ENUM IDENTIFIER .

    '{'  shift, and go to state 92

    $default  reduce using rule 103 (enum_specifier)


state 41

  102 enum_specifier: KW_ENUM '{' . enumerator_list_opt '}'

    IDENTIFIER  shift, and go to state 93

    $default  reduce using rule 104 (enumerator_list_opt)

    enumerator_list_opt  go to state 94
    enumerator_list      go to state 95
    enumerator           go to state 96


state 42

   19 external_declaration: KW_TYPEDEF type_specifier . star_list_opt IDENTIFIER ';'
   21                     | KW_TYPEDEF type_specifier . star_list_opt IDENTIFIER array_dims ';'
   25                     | KW_TYPEDEF type_specifier . star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   27                     | KW_TYPEDEF type_specifier . star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'
   81 type_specifier: type_specifier . type_unit

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    '*'          shift, and go to state 97

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt              go to state 98
    star_list                  go to state 74
    type_unit                  go to state 75
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 43

   73 type_unit: struct_or_union_specifier .

    $default  reduce using rule 73 (type_unit)


state 44

   78 type_unit: enum_specifier .

    $default  reduce using rule 78 (type_unit)


state 45

   18 external_declaration: KW_TYPEDEF type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER ';'
   20                     | KW_TYPEDEF type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER array_dims ';'
   24                     | KW_TYPEDEF type_qualifier_seq_opt . type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   26                     | KW_TYPEDEF type_qualifier_seq_opt . type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'
  234 type_qualifier_seq_opt: type_qualifier_seq_opt . KW_CONST
  235                       | type_qualifier_seq_opt . KW_VOLATILE
  236                       | type_qualifier_seq_opt . KW_RESTRICT

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 80
    KW_VOLATILE  shift, and go to state 81
    KW_RESTRICT  shift, and go to state 82

    type_unit                  go to state 30
    type_specifier             go to state 99
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 46

   40 func_decl_specs: KW_CONST . func_decl_specs

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 46
    KW_VOLATILE  shift, and go to state 47
    KW_RESTRICT  shift, and go to state 48
    KW_INLINE    shift, and go to state 49
    KW_EXTERN    shift, and go to state 50
    KW_STATIC    shift, and go to state 51

    func_decl_specs            go to state 52
    type_unit                  go to state 30
    type_specifier             go to state 53
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 47

   41 func_decl_specs: KW_VOLATILE . func_decl_specs

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 46
    KW_VOLATILE  shift, and go to state 47
    KW_RESTRICT  shift, and go to state 48
    KW_INLINE    shift, and go to state 49
    KW_EXTERN    shift, and go to state 50
    KW_STATIC    shift, and go to state 51

    func_decl_specs            go to state 54
    type_unit                  go to state 30
    type_specifier             go to state 53
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 48

   42 func_decl_specs: KW_RESTRICT . func_decl_specs

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 46
    KW_VOLATILE  shift, and go to state 47
    KW_RESTRICT  shift, and go to state 48
    KW_INLINE    shift, and go to state 49
    KW_EXTERN    shift, and go to state 50
    KW_STATIC    shift, and go to state 51

    func_decl_specs            go to state 55
    type_unit                  go to state 30
    type_specifier             go to state 53
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 49

   43 func_decl_specs: KW_INLINE . func_decl_specs

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 46
    KW_VOLATILE  shift, and go to state 47
    KW_RESTRICT  shift, and go to state 48
    KW_INLINE    shift, and go to state 49
    KW_EXTERN    shift, and go to state 50
    KW_STATIC    shift, and go to state 51

    func_decl_specs            go to state 56
    type_unit                  go to state 30
    type_specifier             go to state 53
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 50

   38 func_decl_specs: KW_EXTERN . func_decl_specs

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 46
    KW_VOLATILE  shift, and go to state 47
    KW_RESTRICT  shift, and go to state 48
    KW_INLINE    shift, and go to state 49
    KW_EXTERN    shift, and go to state 50
    KW_STATIC    shift, and go to state 51

    func_decl_specs            go to state 57
    type_unit                  go to state 30
    type_specifier             go to state 53
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 51

   39 func_decl_specs: KW_STATIC . func_decl_specs

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 46
    KW_VOLATILE  shift, and go to state 47
    KW_RESTRICT  shift, and go to state 48
    KW_INLINE    shift, and go to state 49
    KW_EXTERN    shift, and go to state 50
    KW_STATIC    shift, and go to state 51

    func_decl_specs            go to state 58
    type_unit                  go to state 30
    type_specifier             go to state 53
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 52

   40 func_decl_specs: KW_CONST func_decl_specs .

    $default  reduce using rule 40 (func_decl_specs)


state 53

   37 func_decl_specs: type_specifier . star_list_opt
   81 type_specifier: type_specifier . type_unit

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    '*'          shift, and go to state 97

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt              go to state 100
    star_list                  go to state 74
    type_unit                  go to state 75
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 54

   41 func_decl_specs: KW_VOLATILE func_decl_specs .

    $default  reduce using rule 41 (func_decl_specs)


state 55

   42 func_decl_specs: KW_RESTRICT func_decl_specs .

    $default  reduce using rule 42 (func_decl_specs)


state 56

   43 func_decl_specs: KW_INLINE func_decl_specs .

    $default  reduce using rule 43 (func_decl_specs)


state 57

   38 func_decl_specs: KW_EXTERN func_decl_specs .

    $default  reduce using rule 38 (func_decl_specs)


state 58

   39 func_decl_specs: KW_STATIC func_decl_specs .

    $default  reduce using rule 39 (func_decl_specs)


state 59

   16 external_declaration: func_decl_specs IDENTIFIER . '(' parameter_type_list_opt ')' compound_statement
   17                     | func_decl_specs IDENTIFIER . '(' parameter_type_list_opt ')' ';'

    '('  shift, and go to state 101


state 60

   60 type_qualifier: KW_CONST .

    $default  reduce using rule 60 (type_qualifier)


state 61

   61 type_qualifier: KW_VOLATILE .

    $default  reduce using rule 61 (type_qualifier)


state 62

   62 type_qualifier: KW_RESTRICT .

    $default  reduce using rule 62 (type_qualifier)


state 63

   63 function_specifier: KW_INLINE .

    $default  reduce using rule 63 (function_specifier)


state 64

   58 storage_class_specifier: KW_EXTERN .

    $default  reduce using rule 58 (storage_class_specifier)


state 65

   59 storage_class_specifier: KW_STATIC .

    $default  reduce using rule 59 (storage_class_specifier)


state 66

  113 pointer: '*' .
  114        | '*' . type_qualifier
  115        | '*' . pointer
  116        | '*' . type_qualifier pointer

    KW_CONST     shift, and go to state 60
    KW_VOLATILE  shift, and go to state 61
    KW_RESTRICT  shift, and go to state 62
    '*'          shift, and go to state 66

    $default  reduce using rule 113 (pointer)

    type_qualifier  go to state 102
    pointer         go to state 103


state 67

   53 declaration_specifiers: declaration_specifiers declaration_specifier .

    $default  reduce using rule 53 (declaration_specifiers)


state 68

   55 declaration_specifier: type_specifier .
   81 type_specifier: type_specifier . type_unit

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15

    TYPE_NAME    [reduce using rule 55 (declaration_specifier)]
    KW_VOID      [reduce using rule 55 (declaration_specifier)]
    KW_CHAR      [reduce using rule 55 (declaration_specifier)]
    KW_SHORT     [reduce using rule 55 (declaration_specifier)]
    KW_INT       [reduce using rule 55 (declaration_specifier)]
    KW_LONG      [reduce using rule 55 (declaration_specifier)]
    KW_SIGNED    [reduce using rule 55 (declaration_specifier)]
    KW_UNSIGNED  [reduce using rule 55 (declaration_specifier)]
    KW_FLOAT     [reduce using rule 55 (declaration_specifier)]
    KW_DOUBLE    [reduce using rule 55 (declaration_specifier)]
    KW_STRUCT    [reduce using rule 55 (declaration_specifier)]
    KW_UNION     [reduce using rule 55 (declaration_specifier)]
    KW_ENUM      [reduce using rule 55 (declaration_specifier)]
    $default     reduce using rule 55 (declaration_specifier)

    type_unit                  go to state 75
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 69

  132 function_definition: declaration_specifiers declarator . compound_statement

    '{'  shift, and go to state 104

    compound_statement  go to state 105


state 70

  110 declarator: pointer_opt . direct_declarator

    IDENTIFIER  shift, and go to state 106
    '('         shift, and go to state 107

    direct_declarator  go to state 108


state 71

  112 pointer_opt: pointer .

    $default  reduce using rule 112 (pointer_opt)


state 72

    5 star_list: '*' .
  113 pointer: '*' .
  114        | '*' . type_qualifier
  115        | '*' . pointer
  116        | '*' . type_qualifier pointer

    KW_CONST     shift, and go to state 60
    KW_VOLATILE  shift, and go to state 61
    KW_RESTRICT  shift, and go to state 62

    IDENTIFIER  reduce using rule 5 (star_list)
    IDENTIFIER  [reduce using rule 113 (pointer)]
    '('         reduce using rule 5 (star_list)
    '('         [reduce using rule 113 (pointer)]
    $default    reduce using rule 5 (star_list)

    type_qualifier  go to state 102
    pointer         go to state 103


state 73

   13 external_declaration: type_specifier star_list_opt . IDENTIFIER '(' parameter_type_list_opt ')' compound_statement
   15                     | type_specifier star_list_opt . IDENTIFIER '(' parameter_type_list_opt ')' ';'
   23                     | type_specifier star_list_opt . IDENTIFIER '=' assignment_expression ';'
   29                     | type_specifier star_list_opt . IDENTIFIER ';'
   31                     | type_specifier star_list_opt . IDENTIFIER '=' initializer ';'
   33                     | type_specifier star_list_opt . IDENTIFIER array_dims '=' initializer ';'
   37 func_decl_specs: type_specifier star_list_opt .
  158 sdecl: star_list_opt . sdir

    IDENTIFIER  shift, and go to state 109
    '('         shift, and go to state 110

    IDENTIFIER  [reduce using rule 37 (func_decl_specs)]

    sdir  go to state 111


state 74

    4 star_list_opt: star_list .
    6 star_list: star_list . '*'

    '*'  shift, and go to state 112

    $default  reduce using rule 4 (star_list_opt)


state 75

   81 type_specifier: type_specifier type_unit .

    $default  reduce using rule 81 (type_specifier)


state 76

  133 function_definition: type_specifier declarator . compound_statement

    '{'  shift, and go to state 104

    compound_statement  go to state 113


state 77

    8 external_declaration: type_specifier sdecl . ',' sdecl sdecl_list ';'
   10                     | type_specifier sdecl . '=' initializer ';'

    '='  shift, and go to state 114
    ','  shift, and go to state 115


state 78

   35 external_declaration: struct_or_union_specifier ';' .

    $default  reduce using rule 35 (external_declaration)


state 79

   36 external_declaration: enum_specifier ';' .

    $default  reduce using rule 36 (external_declaration)


state 80

  234 type_qualifier_seq_opt: type_qualifier_seq_opt KW_CONST .

    $default  reduce using rule 234 (type_qualifier_seq_opt)


state 81

  235 type_qualifier_seq_opt: type_qualifier_seq_opt KW_VOLATILE .

    $default  reduce using rule 235 (type_qualifier_seq_opt)


state 82

  236 type_qualifier_seq_opt: type_qualifier_seq_opt KW_RESTRICT .

    $default  reduce using rule 236 (type_qualifier_seq_opt)


state 83

    7 external_declaration: type_qualifier_seq_opt type_specifier . sdecl ',' sdecl sdecl_list ';'
    9                     | type_qualifier_seq_opt type_specifier . sdecl '=' initializer ';'
   12                     | type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' compound_statement
   14                     | type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' ';'
   22                     | type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER '=' assignment_expression ';'
   28                     | type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER ';'
   30                     | type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER '=' initializer ';'
   32                     | type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER array_dims '=' initializer ';'
   81 type_specifier: type_specifier . type_unit

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    '*'          shift, and go to state 97

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt              go to state 116
    star_list                  go to state 74
    type_unit                  go to state 75
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44
    sdecl                      go to state 117


state 84

   85 struct_or_union_specifier: KW_STRUCT IDENTIFIER '{' . struct_declaration_list_opt '}'

    '}'       reduce using rule 91 (struct_declaration_list_opt)
    $default  reduce using rule 233 (type_qualifier_seq_opt)

    specifier_qualifier_list     go to state 85
    struct_declaration_list_opt  go to state 118
    struct_declaration_list      go to state 87
    struct_declaration           go to state 88
    type_qualifier_seq_opt       go to state 89


state 85

   95 struct_declaration: specifier_qualifier_list . struct_declarator_list ';'

    ':'  shift, and go to state 119
    '*'  shift, and go to state 97

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt           go to state 120
    star_list               go to state 74
    struct_declarator_list  go to state 121
    struct_declarator       go to state 122
    sdecl                   go to state 123


state 86

   74 type_unit: KW_STRUCT '{' struct_declaration_list_opt . '}'
   87 struct_or_union_specifier: KW_STRUCT '{' struct_declaration_list_opt . '}'

    '}'  shift, and go to state 124


state 87

   92 struct_declaration_list_opt: struct_declaration_list .
   94 struct_declaration_list: struct_declaration_list . struct_declaration

    '}'       reduce using rule 92 (struct_declaration_list_opt)
    $default  reduce using rule 233 (type_qualifier_seq_opt)

    specifier_qualifier_list  go to state 85
    struct_declaration        go to state 125
    type_qualifier_seq_opt    go to state 89


state 88

   93 struct_declaration_list: struct_declaration .

    $default  reduce using rule 93 (struct_declaration_list)


state 89

   82 specifier_qualifier_list: type_qualifier_seq_opt . type_specifier
  234 type_qualifier_seq_opt: type_qualifier_seq_opt . KW_CONST
  235                       | type_qualifier_seq_opt . KW_VOLATILE
  236                       | type_qualifier_seq_opt . KW_RESTRICT

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 80
    KW_VOLATILE  shift, and go to state 81
    KW_RESTRICT  shift, and go to state 82

    type_unit                  go to state 30
    type_specifier             go to state 126
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 90

   86 struct_or_union_specifier: KW_UNION IDENTIFIER '{' . struct_declaration_list_opt '}'

    '}'       reduce using rule 91 (struct_declaration_list_opt)
    $default  reduce using rule 233 (type_qualifier_seq_opt)

    specifier_qualifier_list     go to state 85
    struct_declaration_list_opt  go to state 127
    struct_declaration_list      go to state 87
    struct_declaration           go to state 88
    type_qualifier_seq_opt       go to state 89


state 91

   75 type_unit: KW_UNION '{' struct_declaration_list_opt . '}'
   88 struct_or_union_specifier: KW_UNION '{' struct_declaration_list_opt . '}'

    '}'  shift, and go to state 128


state 92

  101 enum_specifier: KW_ENUM IDENTIFIER '{' . enumerator_list_opt '}'

    IDENTIFIER  shift, and go to state 93

    $default  reduce using rule 104 (enumerator_list_opt)

    enumerator_list_opt  go to state 129
    enumerator_list      go to state 95
    enumerator           go to state 96


state 93

  108 enumerator: IDENTIFIER .
  109           | IDENTIFIER . '=' constant_expression

    '='  shift, and go to state 130

    $default  reduce using rule 108 (enumerator)


state 94

  102 enum_specifier: KW_ENUM '{' enumerator_list_opt . '}'

    '}'  shift, and go to state 131


state 95

  105 enumerator_list_opt: enumerator_list .
  107 enumerator_list: enumerator_list . ',' enumerator

    ','  shift, and go to state 132

    $default  reduce using rule 105 (enumerator_list_opt)


state 96

  106 enumerator_list: enumerator .

    $default  reduce using rule 106 (enumerator_list)


state 97

    5 star_list: '*' .

    $default  reduce using rule 5 (star_list)


state 98

   19 external_declaration: KW_TYPEDEF type_specifier star_list_opt . IDENTIFIER ';'
   21                     | KW_TYPEDEF type_specifier star_list_opt . IDENTIFIER array_dims ';'
   25                     | KW_TYPEDEF type_specifier star_list_opt . '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   27                     | KW_TYPEDEF type_specifier star_list_opt . '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'

    IDENTIFIER  shift, and go to state 133
    '('         shift, and go to state 134


state 99

   18 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER ';'
   20                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER array_dims ';'
   24                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier . star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   26                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier . star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'
   81 type_specifier: type_specifier . type_unit

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    '*'          shift, and go to state 97

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt              go to state 135
    star_list                  go to state 74
    type_unit                  go to state 75
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 100

   37 func_decl_specs: type_specifier star_list_opt .

    $default  reduce using rule 37 (func_decl_specs)


state 101

   16 external_declaration: func_decl_specs IDENTIFIER '(' . parameter_type_list_opt ')' compound_statement
   17                     | func_decl_specs IDENTIFIER '(' . parameter_type_list_opt ')' ';'

    ')'       reduce using rule 44 (parameter_type_list_opt)
    $default  reduce using rule 233 (type_qualifier_seq_opt)

    parameter_type_list_opt  go to state 136
    parameter_type_list      go to state 137
    parameter_list           go to state 138
    parameter_declaration    go to state 139
    type_qualifier_seq_opt   go to state 140


state 102

  114 pointer: '*' type_qualifier .
  116        | '*' type_qualifier . pointer

    '*'  shift, and go to state 66

    $default  reduce using rule 114 (pointer)

    pointer  go to state 141


state 103

  115 pointer: '*' pointer .

    $default  reduce using rule 115 (pointer)


state 104

  139 compound_statement: '{' . block_item_list_opt '}'

    IDENTIFIER        shift, and go to state 142
    TYPE_NAME         shift, and go to state 3
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_VOID           shift, and go to state 4
    KW_CHAR           shift, and go to state 5
    KW_SHORT          shift, and go to state 6
    KW_INT            shift, and go to state 7
    KW_LONG           shift, and go to state 8
    KW_SIGNED         shift, and go to state 9
    KW_UNSIGNED       shift, and go to state 10
    KW_FLOAT          shift, and go to state 11
    KW_DOUBLE         shift, and go to state 12
    KW_STRUCT         shift, and go to state 13
    KW_UNION          shift, and go to state 14
    KW_ENUM           shift, and go to state 15
    KW_TYPEDEF        shift, and go to state 147
    KW_RETURN         shift, and go to state 148
    KW_IF             shift, and go to state 149
    KW_WHILE          shift, and go to state 150
    KW_FOR            shift, and go to state 151
    KW_DO             shift, and go to state 152
    KW_SWITCH         shift, and go to state 153
    KW_BREAK          shift, and go to state 154
    KW_CONTINUE       shift, and go to state 155
    KW_GOTO           shift, and go to state 156
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164
    ';'               shift, and go to state 165
    '{'               shift, and go to state 104

    TYPE_NAME    [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_VOID      [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_CHAR      [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_SHORT     [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_INT       [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_LONG      [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_SIGNED    [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_UNSIGNED  [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_FLOAT     [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_DOUBLE    [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_STRUCT    [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_UNION     [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_ENUM      [reduce using rule 233 (type_qualifier_seq_opt)]
    '}'          reduce using rule 140 (block_item_list_opt)
    $default     reduce using rule 233 (type_qualifier_seq_opt)

    type_unit                  go to state 30
    type_specifier             go to state 166
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44
    statement                  go to state 167
    compound_statement         go to state 168
    block_item_list_opt        go to state 169
    block_item_list            go to state 170
    block_item                 go to state 171
    expression_statement       go to state 172
    selection_statement        go to state 173
    iteration_statement        go to state 174
    jump_statement             go to state 175
    expression                 go to state 176
    assignment_expression      go to state 177
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    type_qualifier_seq_opt     go to state 190
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 105

  132 function_definition: declaration_specifiers declarator compound_statement .

    $default  reduce using rule 132 (function_definition)


state 106

  117 direct_declarator: IDENTIFIER .

    $default  reduce using rule 117 (direct_declarator)


state 107

  118 direct_declarator: '(' . declarator ')'

    '*'  shift, and go to state 66

    $default  reduce using rule 111 (pointer_opt)

    declarator   go to state 193
    pointer_opt  go to state 70
    pointer      go to state 71


state 108

  110 declarator: pointer_opt direct_declarator .
  119 direct_declarator: direct_declarator . '[' assignment_expression_opt ']'
  120                  | direct_declarator . '(' parameter_type_list_opt ')'
  121                  | direct_declarator . '(' identifier_list_opt ')'

    '('  shift, and go to state 194
    '['  shift, and go to state 195

    $default  reduce using rule 110 (declarator)


state 109

   13 external_declaration: type_specifier star_list_opt IDENTIFIER . '(' parameter_type_list_opt ')' compound_statement
   15                     | type_specifier star_list_opt IDENTIFIER . '(' parameter_type_list_opt ')' ';'
   23                     | type_specifier star_list_opt IDENTIFIER . '=' assignment_expression ';'
   29                     | type_specifier star_list_opt IDENTIFIER . ';'
   31                     | type_specifier star_list_opt IDENTIFIER . '=' initializer ';'
   33                     | type_specifier star_list_opt IDENTIFIER . array_dims '=' initializer ';'
  159 sdir: IDENTIFIER .

    '('  shift, and go to state 197
    ';'  shift, and go to state 199

    $default  reduce using rule 159 (sdir)

    array_dims  go to state 200


state 110

  160 sdir: '(' . sdecl ')'
  161     | '(' . sdecl ')' '(' fp_param_list_opt ')'

    '*'  shift, and go to state 97

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt  go to state 120
    star_list      go to state 74
    sdecl          go to state 201


state 111

  158 sdecl: star_list_opt sdir .
  162 sdir: sdir . '[' assignment_expression_opt ']'

    '['  shift, and go to state 202

    $default  reduce using rule 158 (sdecl)


state 112

    6 star_list: star_list '*' .

    $default  reduce using rule 6 (star_list)


state 113

  133 function_definition: type_specifier declarator compound_statement .

    $default  reduce using rule 133 (function_definition)


state 114

   10 external_declaration: type_specifier sdecl '=' . initializer ';'

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164
    '{'               shift, and go to state 203

    assignment_expression      go to state 204
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192
    initializer                go to state 205


state 115

    8 external_declaration: type_specifier sdecl ',' . sdecl sdecl_list ';'

    '*'  shift, and go to state 97

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt  go to state 120
    star_list      go to state 74
    sdecl          go to state 206


state 116

   12 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER '(' parameter_type_list_opt ')' compound_statement
   14                     | type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER '(' parameter_type_list_opt ')' ';'
   22                     | type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER '=' assignment_expression ';'
   28                     | type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER ';'
   30                     | type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER '=' initializer ';'
   32                     | type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER array_dims '=' initializer ';'
  158 sdecl: star_list_opt . sdir

    IDENTIFIER  shift, and go to state 207
    '('         shift, and go to state 110

    sdir  go to state 111


state 117

    7 external_declaration: type_qualifier_seq_opt type_specifier sdecl . ',' sdecl sdecl_list ';'
    9                     | type_qualifier_seq_opt type_specifier sdecl . '=' initializer ';'

    '='  shift, and go to state 208
    ','  shift, and go to state 209


state 118

   85 struct_or_union_specifier: KW_STRUCT IDENTIFIER '{' struct_declaration_list_opt . '}'

    '}'  shift, and go to state 210


state 119

   99 struct_declarator: ':' . constant_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    conditional_expression     go to state 211
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 212
    postfix_expression         go to state 191
    primary_expression         go to state 192
    constant_expression        go to state 213


state 120

  158 sdecl: star_list_opt . sdir

    IDENTIFIER  shift, and go to state 214
    '('         shift, and go to state 110

    sdir  go to state 111


state 121

   95 struct_declaration: specifier_qualifier_list struct_declarator_list . ';'
   97 struct_declarator_list: struct_declarator_list . ',' struct_declarator

    ','  shift, and go to state 215
    ';'  shift, and go to state 216


state 122

   96 struct_declarator_list: struct_declarator .

    $default  reduce using rule 96 (struct_declarator_list)


state 123

   98 struct_declarator: sdecl .
  100                  | sdecl . ':' constant_expression

    ':'  shift, and go to state 217

    $default  reduce using rule 98 (struct_declarator)


state 124

   74 type_unit: KW_STRUCT '{' struct_declaration_list_opt '}' .
   87 struct_or_union_specifier: KW_STRUCT '{' struct_declaration_list_opt '}' .

    IDENTIFIER   reduce using rule 74 (type_unit)
    IDENTIFIER   [reduce using rule 87 (struct_or_union_specifier)]
    TYPE_NAME    reduce using rule 74 (type_unit)
    TYPE_NAME    [reduce using rule 87 (struct_or_union_specifier)]
    KW_VOID      reduce using rule 74 (type_unit)
    KW_VOID      [reduce using rule 87 (struct_or_union_specifier)]
    KW_CHAR      reduce using rule 74 (type_unit)
    KW_CHAR      [reduce using rule 87 (struct_or_union_specifier)]
    KW_SHORT     reduce using rule 74 (type_unit)
    KW_SHORT     [reduce using rule 87 (struct_or_union_specifier)]
    KW_INT       reduce using rule 74 (type_unit)
    KW_INT       [reduce using rule 87 (struct_or_union_specifier)]
    KW_LONG      reduce using rule 74 (type_unit)
    KW_LONG      [reduce using rule 87 (struct_or_union_specifier)]
    KW_SIGNED    reduce using rule 74 (type_unit)
    KW_SIGNED    [reduce using rule 87 (struct_or_union_specifier)]
    KW_UNSIGNED  reduce using rule 74 (type_unit)
    KW_UNSIGNED  [reduce using rule 87 (struct_or_union_specifier)]
    KW_FLOAT     reduce using rule 74 (type_unit)
    KW_FLOAT     [reduce using rule 87 (struct_or_union_specifier)]
    KW_DOUBLE    reduce using rule 74 (type_unit)
    KW_DOUBLE    [reduce using rule 87 (struct_or_union_specifier)]
    KW_STRUCT    reduce using rule 74 (type_unit)
    KW_STRUCT    [reduce using rule 87 (struct_or_union_specifier)]
    KW_UNION     reduce using rule 74 (type_unit)
    KW_UNION     [reduce using rule 87 (struct_or_union_specifier)]
    KW_ENUM      reduce using rule 74 (type_unit)
    KW_ENUM      [reduce using rule 87 (struct_or_union_specifier)]
    KW_CONST     reduce using rule 74 (type_unit)
    KW_CONST     [reduce using rule 87 (struct_or_union_specifier)]
    KW_VOLATILE  reduce using rule 74 (type_unit)
    KW_VOLATILE  [reduce using rule 87 (struct_or_union_specifier)]
    KW_RESTRICT  reduce using rule 74 (type_unit)
    KW_RESTRICT  [reduce using rule 87 (struct_or_union_specifier)]
    KW_INLINE    reduce using rule 74 (type_unit)
    KW_INLINE    [reduce using rule 87 (struct_or_union_specifier)]
    KW_EXTERN    reduce using rule 74 (type_unit)
    KW_EXTERN    [reduce using rule 87 (struct_or_union_specifier)]
    KW_STATIC    reduce using rule 74 (type_unit)
    KW_STATIC    [reduce using rule 87 (struct_or_union_specifier)]
    ':'          reduce using rule 74 (type_unit)
    ':'          [reduce using rule 87 (struct_or_union_specifier)]
    '*'          reduce using rule 74 (type_unit)
    '*'          [reduce using rule 87 (struct_or_union_specifier)]
    '('          reduce using rule 74 (type_unit)
    '('          [reduce using rule 87 (struct_or_union_specifier)]
    ')'          reduce using rule 74 (type_unit)
    ')'          [reduce using rule 87 (struct_or_union_specifier)]
    ','          reduce using rule 74 (type_unit)
    ','          [reduce using rule 87 (struct_or_union_specifier)]
    ';'          reduce using rule 87 (struct_or_union_specifier)
    $default     reduce using rule 74 (type_unit)


state 125

   94 struct_declaration_list: struct_declaration_list struct_declaration .

    $default  reduce using rule 94 (struct_declaration_list)


state 126

   81 type_specifier: type_specifier . type_unit
   82 specifier_qualifier_list: type_qualifier_seq_opt type_specifier .

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15

    $default  reduce using rule 82 (specifier_qualifier_list)

    type_unit                  go to state 75
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 127

   86 struct_or_union_specifier: KW_UNION IDENTIFIER '{' struct_declaration_list_opt . '}'

    '}'  shift, and go to state 218


state 128

   75 type_unit: KW_UNION '{' struct_declaration_list_opt '}' .
   88 struct_or_union_specifier: KW_UNION '{' struct_declaration_list_opt '}' .

    IDENTIFIER   reduce using rule 75 (type_unit)
    IDENTIFIER   [reduce using rule 88 (struct_or_union_specifier)]
    TYPE_NAME    reduce using rule 75 (type_unit)
    TYPE_NAME    [reduce using rule 88 (struct_or_union_specifier)]
    KW_VOID      reduce using rule 75 (type_unit)
    KW_VOID      [reduce using rule 88 (struct_or_union_specifier)]
    KW_CHAR      reduce using rule 75 (type_unit)
    KW_CHAR      [reduce using rule 88 (struct_or_union_specifier)]
    KW_SHORT     reduce using rule 75 (type_unit)
    KW_SHORT     [reduce using rule 88 (struct_or_union_specifier)]
    KW_INT       reduce using rule 75 (type_unit)
    KW_INT       [reduce using rule 88 (struct_or_union_specifier)]
    KW_LONG      reduce using rule 75 (type_unit)
    KW_LONG      [reduce using rule 88 (struct_or_union_specifier)]
    KW_SIGNED    reduce using rule 75 (type_unit)
    KW_SIGNED    [reduce using rule 88 (struct_or_union_specifier)]
    KW_UNSIGNED  reduce using rule 75 (type_unit)
    KW_UNSIGNED  [reduce using rule 88 (struct_or_union_specifier)]
    KW_FLOAT     reduce using rule 75 (type_unit)
    KW_FLOAT     [reduce using rule 88 (struct_or_union_specifier)]
    KW_DOUBLE    reduce using rule 75 (type_unit)
    KW_DOUBLE    [reduce using rule 88 (struct_or_union_specifier)]
    KW_STRUCT    reduce using rule 75 (type_unit)
    KW_STRUCT    [reduce using rule 88 (struct_or_union_specifier)]
    KW_UNION     reduce using rule 75 (type_unit)
    KW_UNION     [reduce using rule 88 (struct_or_union_specifier)]
    KW_ENUM      reduce using rule 75 (type_unit)
    KW_ENUM      [reduce using rule 88 (struct_or_union_specifier)]
    KW_CONST     reduce using rule 75 (type_unit)
    KW_CONST     [reduce using rule 88 (struct_or_union_specifier)]
    KW_VOLATILE  reduce using rule 75 (type_unit)
    KW_VOLATILE  [reduce using rule 88 (struct_or_union_specifier)]
    KW_RESTRICT  reduce using rule 75 (type_unit)
    KW_RESTRICT  [reduce using rule 88 (struct_or_union_specifier)]
    KW_INLINE    reduce using rule 75 (type_unit)
    KW_INLINE    [reduce using rule 88 (struct_or_union_specifier)]
    KW_EXTERN    reduce using rule 75 (type_unit)
    KW_EXTERN    [reduce using rule 88 (struct_or_union_specifier)]
    KW_STATIC    reduce using rule 75 (type_unit)
    KW_STATIC    [reduce using rule 88 (struct_or_union_specifier)]
    ':'          reduce using rule 75 (type_unit)
    ':'          [reduce using rule 88 (struct_or_union_specifier)]
    '*'          reduce using rule 75 (type_unit)
    '*'          [reduce using rule 88 (struct_or_union_specifier)]
    '('          reduce using rule 75 (type_unit)
    '('          [reduce using rule 88 (struct_or_union_specifier)]
    ')'          reduce using rule 75 (type_unit)
    ')'          [reduce using rule 88 (struct_or_union_specifier)]
    ','          reduce using rule 75 (type_unit)
    ','          [reduce using rule 88 (struct_or_union_specifier)]
    ';'          reduce using rule 88 (struct_or_union_specifier)
    $default     reduce using rule 75 (type_unit)


state 129

  101 enum_specifier: KW_ENUM IDENTIFIER '{' enumerator_list_opt . '}'

    '}'  shift, and go to state 219


state 130

  109 enumerator: IDENTIFIER '=' . constant_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    conditional_expression     go to state 211
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 212
    postfix_expression         go to state 191
    primary_expression         go to state 192
    constant_expression        go to state 220


state 131

  102 enum_specifier: KW_ENUM '{' enumerator_list_opt '}' .

    $default  reduce using rule 102 (enum_specifier)


state 132

  107 enumerator_list: enumerator_list ',' . enumerator

    IDENTIFIER  shift, and go to state 93

    enumerator  go to state 221


state 133

   19 external_declaration: KW_TYPEDEF type_specifier star_list_opt IDENTIFIER . ';'
   21                     | KW_TYPEDEF type_specifier star_list_opt IDENTIFIER . array_dims ';'

    '['  shift, and go to state 198
    ';'  shift, and go to state 222

    array_dims  go to state 223


state 134

   25 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' . '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   27                     | KW_TYPEDEF type_specifier star_list_opt '(' . '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'

    '*'  shift, and go to state 224


state 135

   18 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER ';'
   20                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER array_dims ';'
   24                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt . '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   26                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt . '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'

    IDENTIFIER  shift, and go to state 225
    '('         shift, and go to state 226


state 136

   16 external_declaration: func_decl_specs IDENTIFIER '(' parameter_type_list_opt . ')' compound_statement
   17                     | func_decl_specs IDENTIFIER '(' parameter_type_list_opt . ')' ';'

    ')'  shift, and go to state 227


state 137

   45 parameter_type_list_opt: parameter_type_list .

    $default  reduce using rule 45 (parameter_type_list_opt)


state 138

   46 parameter_type_list: parameter_list .
   47                    | parameter_list . ',' ELLIPSIS
   49 parameter_list: parameter_list . ',' parameter_declaration

    ','  shift, and go to state 228

    $default  reduce using rule 46 (parameter_type_list)


state 139

   48 parameter_list: parameter_declaration .

    $default  reduce using rule 48 (parameter_list)


state 140

   50 parameter_declaration: type_qualifier_seq_opt . type_specifier sdecl
   51                      | type_qualifier_seq_opt . type_specifier
  234 type_qualifier_seq_opt: type_qualifier_seq_opt . KW_CONST
  235                       | type_qualifier_seq_opt . KW_VOLATILE
  236                       | type_qualifier_seq_opt . KW_RESTRICT

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 80
    KW_VOLATILE  shift, and go to state 81
    KW_RESTRICT  shift, and go to state 82

    type_unit                  go to state 30
    type_specifier             go to state 229
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 141

  116 pointer: '*' type_qualifier pointer .

    $default  reduce using rule 116 (pointer)


state 142

  248 primary_expression: IDENTIFIER .

    $default  reduce using rule 248 (primary_expression)


state 143

  252 primary_expression: STRING_LITERAL .

    $default  reduce using rule 252 (primary_expression)


state 144

  249 primary_expression: INTEGER_CONSTANT .

    $default  reduce using rule 249 (primary_expression)


state 145

  250 primary_expression: FLOAT_CONSTANT .

    $default  reduce using rule 250 (primary_expression)


state 146

  251 primary_expression: CHAR_CONSTANT .

    $default  reduce using rule 251 (primary_expression)


state 147

  155 block_item: KW_TYPEDEF . type_specifier star_list_opt IDENTIFIER ';'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15

    type_unit                  go to state 30
    type_specifier             go to state 230
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 148

  171 jump_statement: KW_RETURN . expression_opt ';'

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    $default  reduce using rule 175 (expression_opt)

    expression_opt             go to state 231
    expression                 go to state 232
    assignment_expression      go to state 177
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 149

  165 selection_statement: KW_IF . '(' expression ')' statement
  166                    | KW_IF . '(' expression ')' statement KW_ELSE statement

    '('  shift, and go to state 233


state 150

  168 iteration_statement: KW_WHILE . '(' expression ')' statement

    '('  shift, and go to state 234


state 151

  170 iteration_statement: KW_FOR . '(' expression_opt ';' expression_opt ';' expression_opt ')' statement

    '('  shift, and go to state 235


state 152

  169 iteration_statement: KW_DO . statement KW_WHILE '(' expression ')' ';'

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_RETURN         shift, and go to state 148
    KW_IF             shift, and go to state 149
    KW_WHILE          shift, and go to state 150
    KW_FOR            shift, and go to state 151
    KW_DO             shift, and go to state 152
    KW_SWITCH         shift, and go to state 153
    KW_BREAK          shift, and go to state 154
    KW_CONTINUE       shift, and go to state 155
    KW_GOTO           shift, and go to state 156
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164
    ';'               shift, and go to state 165
    '{'               shift, and go to state 104

    statement                  go to state 236
    compound_statement         go to state 168
    expression_statement       go to state 172
    selection_statement        go to state 173
    iteration_statement        go to state 174
    jump_statement             go to state 175
    expression                 go to state 176
    assignment_expression      go to state 177
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 153

  167 selection_statement: KW_SWITCH . '(' expression ')' statement

    '('  shift, and go to state 237


state 154

  172 jump_statement: KW_BREAK . ';'

    ';'  shift, and go to state 238


state 155

  173 jump_statement: KW_CONTINUE . ';'

    ';'  shift, and go to state 239


state 156

  174 jump_statement: KW_GOTO . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 240


state 157

  230 unary_expression: KW_SIZEOF . unary_expression
  231                 | KW_SIZEOF . '(' type_specifier ')'

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 241

    unary_expression    go to state 242
    postfix_expression  go to state 191
    primary_expression  go to state 192


state 158

  224 unary_expression: INC . unary_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    unary_expression    go to state 243
    postfix_expression  go to state 191
    primary_expression  go to state 192


state 159

  225 unary_expression: DEC . unary_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    unary_expression    go to state 244
    postfix_expression  go to state 191
    primary_expression  go to state 192


state 160

  226 unary_expression: '+' . unary_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    unary_expression    go to state 245
    postfix_expression  go to state 191
    primary_expression  go to state 192


state 161

  227 unary_expression: '-' . unary_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    unary_expression    go to state 246
    postfix_expression  go to state 191
    primary_expression  go to state 192


state 162

  228 unary_expression: '!' . unary_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    unary_expression    go to state 247
    postfix_expression  go to state 191
    primary_expression  go to state 192


state 163

  229 unary_expression: '~' . unary_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    unary_expression    go to state 248
    postfix_expression  go to state 191
    primary_expression  go to state 192


state 164

  232 unary_expression: '(' . type_qualifier_seq_opt type_specifier star_list_opt ')' unary_expression
  253 primary_expression: '(' . expression ')'

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    $default  reduce using rule 233 (type_qualifier_seq_opt)

    expression                 go to state 249
    assignment_expression      go to state 177
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    type_qualifier_seq_opt     go to state 250
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 165

  163 expression_statement: ';' .

    $default  reduce using rule 163 (expression_statement)


state 166

   81 type_specifier: type_specifier . type_unit
  144 block_item: type_specifier . star_list_opt IDENTIFIER ';'
  147           | type_specifier . star_list_opt IDENTIFIER '=' assignment_expression ';'
  149           | type_specifier . star_list_opt IDENTIFIER '=' initializer ';'
  151           | type_specifier . star_list_opt IDENTIFIER array_dims '=' initializer ';'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    '*'          shift, and go to state 97

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt              go to state 251
    star_list                  go to state 74
    type_unit                  go to state 75
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 167

  154 block_item: statement .

    $default  reduce using rule 154 (block_item)


state 168

  134 statement: compound_statement .

    $default  reduce using rule 134 (statement)


state 169

  139 compound_statement: '{' block_item_list_opt . '}'

    '}'  shift, and go to state 252


state 170

  141 block_item_list_opt: block_item_list .
  143 block_item_list: block_item_list . block_item

    IDENTIFIER        shift, and go to state 142
    TYPE_NAME         shift, and go to state 3
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_VOID           shift, and go to state 4
    KW_CHAR           shift, and go to state 5
    KW_SHORT          shift, and go to state 6
    KW_INT            shift, and go to state 7
    KW_LONG           shift, and go to state 8
    KW_SIGNED         shift, and go to state 9
    KW_UNSIGNED       shift, and go to state 10
    KW_FLOAT          shift, and go to state 11
    KW_DOUBLE         shift, and go to state 12
    KW_STRUCT         shift, and go to state 13
    KW_UNION          shift, and go to state 14
    KW_ENUM           shift, and go to state 15
    KW_TYPEDEF        shift, and go to state 147
    KW_RETURN         shift, and go to state 148
    KW_IF             shift, and go to state 149
    KW_WHILE          shift, and go to state 150
    KW_FOR            shift, and go to state 151
    KW_DO             shift, and go to state 152
    KW_SWITCH         shift, and go to state 153
    KW_BREAK          shift, and go to state 154
    KW_CONTINUE       shift, and go to state 155
    KW_GOTO           shift, and go to state 156
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164
    ';'               shift, and go to state 165
    '{'               shift, and go to state 104

    TYPE_NAME    [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_VOID      [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_CHAR      [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_SHORT     [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_INT       [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_LONG      [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_SIGNED    [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_UNSIGNED  [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_FLOAT     [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_DOUBLE    [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_STRUCT    [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_UNION     [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_ENUM      [reduce using rule 233 (type_qualifier_seq_opt)]
    '}'          reduce using rule 141 (block_item_list_opt)
    $default     reduce using rule 233 (type_qualifier_seq_opt)

    type_unit                  go to state 30
    type_specifier             go to state 166
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44
    statement                  go to state 167
    compound_statement         go to state 168
    block_item                 go to state 253
    expression_statement       go to state 172
    selection_statement        go to state 173
    iteration_statement        go to state 174
    jump_statement             go to state 175
    expression                 go to state 176
    assignment_expression      go to state 177
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    type_qualifier_seq_opt     go to state 190
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 171

  142 block_item_list: block_item .

    $default  reduce using rule 142 (block_item_list)


state 172

  135 statement: expression_statement .

    $default  reduce using rule 135 (statement)


state 173

  136 statement: selection_statement .

    $default  reduce using rule 136 (statement)


state 174

  137 statement: iteration_statement .

    $default  reduce using rule 137 (statement)


state 175

  138 statement: jump_statement .

    $default  reduce using rule 138 (statement)


state 176

  164 expression_statement: expression . ';'
  178 expression: expression . ',' assignment_expression

    ','  shift, and go to state 254
    ';'  shift, and go to state 255


state 177

  177 expression: assignment_expression .

    $default  reduce using rule 177 (expression)


state 178

  181 assignment_expression: conditional_expression .

    $default  reduce using rule 181 (assignment_expression)


state 179

  193 conditional_expression: logical_or_expression .
  194                       | logical_or_expression . '?' expression ':' conditional_expression
  196 logical_or_expression: logical_or_expression . LOGOR logical_and_expression

    LOGOR  shift, and go to state 256
    '?'    shift, and go to state 257

    $default  reduce using rule 193 (conditional_expression)


state 180

  195 logical_or_expression: logical_and_expression .
  198 logical_and_expression: logical_and_expression . LOGAND inclusive_or_expression

    LOGAND  shift, and go to state 258

    $default  reduce using rule 195 (logical_or_expression)


state 181

  197 logical_and_expression: inclusive_or_expression .
  200 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression

    '|'  shift, and go to state 259

    $default  reduce using rule 197 (logical_and_expression)


state 182

  199 inclusive_or_expression: exclusive_or_expression .
  202 exclusive_or_expression: exclusive_or_expression . '^' and_expression

    '^'  shift, and go to state 260

    $default  reduce using rule 199 (inclusive_or_expression)


state 183

  201 exclusive_or_expression: and_expression .
  204 and_expression: and_expression . '&' equality_expression

    '&'  shift, and go to state 261

    $default  reduce using rule 201 (exclusive_or_expression)


state 184

  203 and_expression: equality_expression .
  206 equality_expression: equality_expression . EQ relational_expression
  207                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 262
    NE  shift, and go to state 263

    $default  reduce using rule 203 (and_expression)


state 185

  205 equality_expression: relational_expression .
  209 relational_expression: relational_expression . '<' shift_expression
  210                      | relational_expression . '>' shift_expression
  211                      | relational_expression . LE shift_expression
  212                      | relational_expression . GE shift_expression

    LE   shift, and go to state 264
    GE   shift, and go to state 265
    '<'  shift, and go to state 266
    '>'  shift, and go to state 267

    $default  reduce using rule 205 (equality_expression)


state 186

  208 relational_expression: shift_expression .
  214 shift_expression: shift_expression . LSHIFT additive_expression
  215                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 268
    RSHIFT  shift, and go to state 269

    $default  reduce using rule 208 (relational_expression)


state 187

  213 shift_expression: additive_expression .
  217 additive_expression: additive_expression . '+' multiplicative_expression
  218                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 270
    '-'  shift, and go to state 271

    $default  reduce using rule 213 (shift_expression)


state 188

  216 additive_expression: multiplicative_expression .
  220 multiplicative_expression: multiplicative_expression . '*' unary_expression
  221                          | multiplicative_expression . '/' unary_expression
  222                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 272
    '/'  shift, and go to state 273
    '%'  shift, and go to state 274

    $default  reduce using rule 216 (additive_expression)


state 189

  182 assignment_expression: unary_expression . '=' assignment_expression
  183                      | unary_expression . ADD_ASSIGN assignment_expression
  184                      | unary_expression . SUB_ASSIGN assignment_expression
  185                      | unary_expression . MUL_ASSIGN assignment_expression
  186                      | unary_expression . DIV_ASSIGN assignment_expression
  187                      | unary_expression . MOD_ASSIGN assignment_expression
  188                      | unary_expression . AND_ASSIGN assignment_expression
  189                      | unary_expression . OR_ASSIGN assignment_expression
  190                      | unary_expression . XOR_ASSIGN assignment_expression
  191                      | unary_expression . LSHIFT_ASSIGN assignment_expression
  192                      | unary_expression . RSHIFT_ASSIGN assignment_expression
  219 multiplicative_expression: unary_expression .

    ADD_ASSIGN     shift, and go to state 275
    SUB_ASSIGN     shift, and go to state 276
    MUL_ASSIGN     shift, and go to state 277
    DIV_ASSIGN     shift, and go to state 278
    MOD_ASSIGN     shift, and go to state 279
    AND_ASSIGN     shift, and go to state 280
    OR_ASSIGN      shift, and go to state 281
    XOR_ASSIGN     shift, and go to state 282
    LSHIFT_ASSIGN  shift, and go to state 283
    RSHIFT_ASSIGN  shift, and go to state 284
    '='            shift, and go to state 285

    $default  reduce using rule 219 (multiplicative_expression)


state 190

  145 block_item: type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER ';'
  146           | type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';'
  148           | type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER '=' initializer ';'
  150           | type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';'
  152           | type_qualifier_seq_opt . type_specifier sdecl ',' sdecl sdecl_list ';'
  153           | type_qualifier_seq_opt . type_specifier sdecl '=' initializer ';'
  234 type_qualifier_seq_opt: type_qualifier_seq_opt . KW_CONST
  235                       | type_qualifier_seq_opt . KW_VOLATILE
  236                       | type_qualifier_seq_opt . KW_RESTRICT

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 80
    KW_VOLATILE  shift, and go to state 81
    KW_RESTRICT  shift, and go to state 82

    type_unit                  go to state 30
    type_specifier             go to state 286
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 191

  223 unary_expression: postfix_expression .
  238 postfix_expression: postfix_expression . '(' argument_expression_list_opt ')'
  239                   | postfix_expression . '[' expression ']'
  240                   | postfix_expression . '.' IDENTIFIER
  241                   | postfix_expression . ARROW IDENTIFIER
  242                   | postfix_expression . INC
  243                   | postfix_expression . DEC

    ARROW  shift, and go to state 287
    INC    shift, and go to state 288
    DEC    shift, and go to state 289
    '('    shift, and go to state 290
    '['    shift, and go to state 291
    '.'    shift, and go to state 292

    $default  reduce using rule 223 (unary_expression)


state 192

  237 postfix_expression: primary_expression .

    $default  reduce using rule 237 (postfix_expression)


state 193

  118 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 293


state 194

  120 direct_declarator: direct_declarator '(' . parameter_type_list_opt ')'
  121                  | direct_declarator '(' . identifier_list_opt ')'

    IDENTIFIER  shift, and go to state 294

    ')'       reduce using rule 44 (parameter_type_list_opt)
    ')'       [reduce using rule 122 (identifier_list_opt)]
    $default  reduce using rule 233 (type_qualifier_seq_opt)

    parameter_type_list_opt  go to state 295
    parameter_type_list      go to state 137
    parameter_list           go to state 138
    parameter_declaration    go to state 139
    identifier_list_opt      go to state 296
    identifier_list          go to state 297
    type_qualifier_seq_opt   go to state 140


state 195

  119 direct_declarator: direct_declarator '[' . assignment_expression_opt ']'

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    $default  reduce using rule 179 (assignment_expression_opt)

    assignment_expression_opt  go to state 298
    assignment_expression      go to state 299
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 196

   23 external_declaration: type_specifier star_list_opt IDENTIFIER '=' . assignment_expression ';'
   31                     | type_specifier star_list_opt IDENTIFIER '=' . initializer ';'

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164
    '{'               shift, and go to state 203

    assignment_expression      go to state 300
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192
    initializer                go to state 301


state 197

   13 external_declaration: type_specifier star_list_opt IDENTIFIER '(' . parameter_type_list_opt ')' compound_statement
   15                     | type_specifier star_list_opt IDENTIFIER '(' . parameter_type_list_opt ')' ';'

    ')'       reduce using rule 44 (parameter_type_list_opt)
    $default  reduce using rule 233 (type_qualifier_seq_opt)

    parameter_type_list_opt  go to state 302
    parameter_type_list      go to state 137
    parameter_list           go to state 138
    parameter_declaration    go to state 139
    type_qualifier_seq_opt   go to state 140


state 198

   83 array_dims: '[' . INTEGER_CONSTANT ']'

    INTEGER_CONSTANT  shift, and go to state 303


state 199

   29 external_declaration: type_specifier star_list_opt IDENTIFIER ';' .

    $default  reduce using rule 29 (external_declaration)


state 200

   33 external_declaration: type_specifier star_list_opt IDENTIFIER array_dims . '=' initializer ';'
   84 array_dims: array_dims . '[' INTEGER_CONSTANT ']'

    '='  shift, and go to state 304
    '['  shift, and go to state 305


state 201

  160 sdir: '(' sdecl . ')'
  161     | '(' sdecl . ')' '(' fp_param_list_opt ')'

    ')'  shift, and go to state 306


state 202

  162 sdir: sdir '[' . assignment_expression_opt ']'

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    $default  reduce using rule 179 (assignment_expression_opt)

    assignment_expression_opt  go to state 307
    assignment_expression      go to state 299
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 203

  255 initializer: '{' . initializer_list_opt '}'

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164
    '['               shift, and go to state 308
    '.'               shift, and go to state 309
    '{'               shift, and go to state 203

    $default  reduce using rule 256 (initializer_list_opt)

    assignment_expression      go to state 204
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192
    initializer                go to state 310
    initializer_list_opt       go to state 311
    initializer_list           go to state 312
    designated_initializer     go to state 313
    designation                go to state 314
    designator                 go to state 315


state 204

  254 initializer: assignment_expression .

    $default  reduce using rule 254 (initializer)


state 205

   10 external_declaration: type_specifier sdecl '=' initializer . ';'

    ';'  shift, and go to state 316


state 206

    8 external_declaration: type_specifier sdecl ',' sdecl . sdecl_list ';'

    $default  reduce using rule 156 (sdecl_list)

    sdecl_list  go to state 317


state 207

   12 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER . '(' parameter_type_list_opt ')' compound_statement
   14                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER . '(' parameter_type_list_opt ')' ';'
   22                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER . '=' assignment_expression ';'
   28                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER . ';'
   30                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER . '=' initializer ';'
   32                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER . array_dims '=' initializer ';'
  159 sdir: IDENTIFIER .

    '('  shift, and go to state 319
    ';'  shift, and go to state 320

    $default  reduce using rule 159 (sdir)

    array_dims  go to state 321


state 208

    9 external_declaration: type_qualifier_seq_opt type_specifier sdecl '=' . initializer ';'

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164
    '{'               shift, and go to state 203

    assignment_expression      go to state 204
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192
    initializer                go to state 322


state 209

    7 external_declaration: type_qualifier_seq_opt type_specifier sdecl ',' . sdecl sdecl_list ';'

    '*'  shift, and go to state 97

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt  go to state 120
    star_list      go to state 74
    sdecl          go to state 323


state 210

   85 struct_or_union_specifier: KW_STRUCT IDENTIFIER '{' struct_declaration_list_opt '}' .

    $default  reduce using rule 85 (struct_or_union_specifier)


state 211

  268 constant_expression: conditional_expression .

    $default  reduce using rule 268 (constant_expression)


state 212

  219 multiplicative_expression: unary_expression .

    $default  reduce using rule 219 (multiplicative_expression)


state 213

   99 struct_declarator: ':' constant_expression .

    $default  reduce using rule 99 (struct_declarator)


state 214

  159 sdir: IDENTIFIER .

    $default  reduce using rule 159 (sdir)


state 215

   97 struct_declarator_list: struct_declarator_list ',' . struct_declarator

    ':'  shift, and go to state 119
    '*'  shift, and go to state 97

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt      go to state 120
    star_list          go to state 74
    struct_declarator  go to state 324
    sdecl              go to state 123


state 216

   95 struct_declaration: specifier_qualifier_list struct_declarator_list ';' .

    $default  reduce using rule 95 (struct_declaration)


state 217

  100 struct_declarator: sdecl ':' . constant_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    conditional_expression     go to state 211
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 212
    postfix_expression         go to state 191
    primary_expression         go to state 192
    constant_expression        go to state 325


state 218

   86 struct_or_union_specifier: KW_UNION IDENTIFIER '{' struct_declaration_list_opt '}' .

    $default  reduce using rule 86 (struct_or_union_specifier)


state 219

  101 enum_specifier: KW_ENUM IDENTIFIER '{' enumerator_list_opt '}' .

    $default  reduce using rule 101 (enum_specifier)


state 220

  109 enumerator: IDENTIFIER '=' constant_expression .

    $default  reduce using rule 109 (enumerator)


state 221

  107 enumerator_list: enumerator_list ',' enumerator .

    $default  reduce using rule 107 (enumerator_list)


state 222

   19 external_declaration: KW_TYPEDEF type_specifier star_list_opt IDENTIFIER ';' .

    $default  reduce using rule 19 (external_declaration)


state 223

   21 external_declaration: KW_TYPEDEF type_specifier star_list_opt IDENTIFIER array_dims . ';'
   84 array_dims: array_dims . '[' INTEGER_CONSTANT ']'

    '['  shift, and go to state 305
    ';'  shift, and go to state 326


state 224

   25 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' . IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   27                     | KW_TYPEDEF type_specifier star_list_opt '(' '*' . IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'

    IDENTIFIER  shift, and go to state 327


state 225

   18 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER . ';'
   20                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER . array_dims ';'

    '['  shift, and go to state 198
    ';'  shift, and go to state 328

    array_dims  go to state 329


state 226

   24 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' . '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   26                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' . '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'

    '*'  shift, and go to state 330


state 227

   16 external_declaration: func_decl_specs IDENTIFIER '(' parameter_type_list_opt ')' . compound_statement
   17                     | func_decl_specs IDENTIFIER '(' parameter_type_list_opt ')' . ';'

    ';'  shift, and go to state 331
    '{'  shift, and go to state 104

    compound_statement  go to state 332


state 228

   47 parameter_type_list: parameter_list ',' . ELLIPSIS
   49 parameter_list: parameter_list ',' . parameter_declaration

    ELLIPSIS  shift, and go to state 333

    $default  reduce using rule 233 (type_qualifier_seq_opt)

    parameter_declaration   go to state 334
    type_qualifier_seq_opt  go to state 140


state 229

   50 parameter_declaration: type_qualifier_seq_opt type_specifier . sdecl
   51                      | type_qualifier_seq_opt type_specifier .
   81 type_specifier: type_specifier . type_unit

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    '*'          shift, and go to state 97

    ')'       reduce using rule 51 (parameter_declaration)
    ','       reduce using rule 51 (parameter_declaration)
    $default  reduce using rule 3 (star_list_opt)

    star_list_opt              go to state 120
    star_list                  go to state 74
    type_unit                  go to state 75
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44
    sdecl                      go to state 335


state 230

   81 type_specifier: type_specifier . type_unit
  155 block_item: KW_TYPEDEF type_specifier . star_list_opt IDENTIFIER ';'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    '*'          shift, and go to state 97

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt              go to state 336
    star_list                  go to state 74
    type_unit                  go to state 75
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 231

  171 jump_statement: KW_RETURN expression_opt . ';'

    ';'  shift, and go to state 337


state 232

  176 expression_opt: expression .
  178 expression: expression . ',' assignment_expression

    ','  shift, and go to state 254

    $default  reduce using rule 176 (expression_opt)


state 233

  165 selection_statement: KW_IF '(' . expression ')' statement
  166                    | KW_IF '(' . expression ')' statement KW_ELSE statement

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    expression                 go to state 338
    assignment_expression      go to state 177
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 234

  168 iteration_statement: KW_WHILE '(' . expression ')' statement

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    expression                 go to state 339
    assignment_expression      go to state 177
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 235

  170 iteration_statement: KW_FOR '(' . expression_opt ';' expression_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    $default  reduce using rule 175 (expression_opt)

    expression_opt             go to state 340
    expression                 go to state 232
    assignment_expression      go to state 177
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 236

  169 iteration_statement: KW_DO statement . KW_WHILE '(' expression ')' ';'

    KW_WHILE  shift, and go to state 341


state 237

  167 selection_statement: KW_SWITCH '(' . expression ')' statement

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    expression                 go to state 342
    assignment_expression      go to state 177
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 238

  172 jump_statement: KW_BREAK ';' .

    $default  reduce using rule 172 (jump_statement)


state 239

  173 jump_statement: KW_CONTINUE ';' .

    $default  reduce using rule 173 (jump_statement)


state 240

  174 jump_statement: KW_GOTO IDENTIFIER . ';'

    ';'  shift, and go to state 343


state 241

  231 unary_expression: KW_SIZEOF '(' . type_specifier ')'
  232                 | '(' . type_qualifier_seq_opt type_specifier star_list_opt ')' unary_expression
  253 primary_expression: '(' . expression ')'

    IDENTIFIER        shift, and go to state 142
    TYPE_NAME         shift, and go to state 3
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_VOID           shift, and go to state 4
    KW_CHAR           shift, and go to state 5
    KW_SHORT          shift, and go to state 6
    KW_INT            shift, and go to state 7
    KW_LONG           shift, and go to state 8
    KW_SIGNED         shift, and go to state 9
    KW_UNSIGNED       shift, and go to state 10
    KW_FLOAT          shift, and go to state 11
    KW_DOUBLE         shift, and go to state 12
    KW_STRUCT         shift, and go to state 13
    KW_UNION          shift, and go to state 14
    KW_ENUM           shift, and go to state 15
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    TYPE_NAME    [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_VOID      [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_CHAR      [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_SHORT     [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_INT       [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_LONG      [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_SIGNED    [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_UNSIGNED  [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_FLOAT     [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_DOUBLE    [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_STRUCT    [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_UNION     [reduce using rule 233 (type_qualifier_seq_opt)]
    KW_ENUM      [reduce using rule 233 (type_qualifier_seq_opt)]
    $default     reduce using rule 233 (type_qualifier_seq_opt)

    type_unit                  go to state 30
    type_specifier             go to state 344
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44
    expression                 go to state 249
    assignment_expression      go to state 177
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    type_qualifier_seq_opt     go to state 250
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 242

  230 unary_expression: KW_SIZEOF unary_expression .

    $default  reduce using rule 230 (unary_expression)


state 243

  224 unary_expression: INC unary_expression .

    $default  reduce using rule 224 (unary_expression)


state 244

  225 unary_expression: DEC unary_expression .

    $default  reduce using rule 225 (unary_expression)


state 245

  226 unary_expression: '+' unary_expression .

    $default  reduce using rule 226 (unary_expression)


state 246

  227 unary_expression: '-' unary_expression .

    $default  reduce using rule 227 (unary_expression)


state 247

  228 unary_expression: '!' unary_expression .

    $default  reduce using rule 228 (unary_expression)


state 248

  229 unary_expression: '~' unary_expression .

    $default  reduce using rule 229 (unary_expression)


state 249

  178 expression: expression . ',' assignment_expression
  253 primary_expression: '(' expression . ')'

    ')'  shift, and go to state 345
    ','  shift, and go to state 254


state 250

  232 unary_expression: '(' type_qualifier_seq_opt . type_specifier star_list_opt ')' unary_expression
  234 type_qualifier_seq_opt: type_qualifier_seq_opt . KW_CONST
  235                       | type_qualifier_seq_opt . KW_VOLATILE
  236                       | type_qualifier_seq_opt . KW_RESTRICT

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 80
    KW_VOLATILE  shift, and go to state 81
    KW_RESTRICT  shift, and go to state 82

    type_unit                  go to state 30
    type_specifier             go to state 346
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 251

  144 block_item: type_specifier star_list_opt . IDENTIFIER ';'
  147           | type_specifier star_list_opt . IDENTIFIER '=' assignment_expression ';'
  149           | type_specifier star_list_opt . IDENTIFIER '=' initializer ';'
  151           | type_specifier star_list_opt . IDENTIFIER array_dims '=' initializer ';'

    IDENTIFIER  shift, and go to state 347


state 252

  139 compound_statement: '{' block_item_list_opt '}' .

    $default  reduce using rule 139 (compound_statement)


state 253

  143 block_item_list: block_item_list block_item .

    $default  reduce using rule 143 (block_item_list)


state 254

  178 expression: expression ',' . assignment_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    assignment_expression      go to state 348
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 255

  164 expression_statement: expression ';' .

    $default  reduce using rule 164 (expression_statement)


state 256

  196 logical_or_expression: logical_or_expression LOGOR . logical_and_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    logical_and_expression     go to state 349
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 212
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 257

  194 conditional_expression: logical_or_expression '?' . expression ':' conditional_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    expression                 go to state 350
    assignment_expression      go to state 177
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 258

  198 logical_and_expression: logical_and_expression LOGAND . inclusive_or_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    inclusive_or_expression    go to state 351
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 212
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 259

  200 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    exclusive_or_expression    go to state 352
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 212
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 260

  202 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    and_expression             go to state 353
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 212
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 261

  204 and_expression: and_expression '&' . equality_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    equality_expression        go to state 354
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 212
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 262

  206 equality_expression: equality_expression EQ . relational_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    relational_expression      go to state 355
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 212
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 263

  207 equality_expression: equality_expression NE . relational_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    relational_expression      go to state 356
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 212
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 264

  211 relational_expression: relational_expression LE . shift_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    shift_expression           go to state 357
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 212
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 265

  212 relational_expression: relational_expression GE . shift_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    shift_expression           go to state 358
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 212
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 266

  209 relational_expression: relational_expression '<' . shift_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    shift_expression           go to state 359
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 212
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 267

  210 relational_expression: relational_expression '>' . shift_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    shift_expression           go to state 360
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 212
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 268

  214 shift_expression: shift_expression LSHIFT . additive_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    additive_expression        go to state 361
    multiplicative_expression  go to state 188
    unary_expression           go to state 212
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 269

  215 shift_expression: shift_expression RSHIFT . additive_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    additive_expression        go to state 362
    multiplicative_expression  go to state 188
    unary_expression           go to state 212
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 270

  217 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    multiplicative_expression  go to state 363
    unary_expression           go to state 212
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 271

  218 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    multiplicative_expression  go to state 364
    unary_expression           go to state 212
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 272

  220 multiplicative_expression: multiplicative_expression '*' . unary_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    unary_expression    go to state 365
    postfix_expression  go to state 191
    primary_expression  go to state 192


state 273

  221 multiplicative_expression: multiplicative_expression '/' . unary_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    unary_expression    go to state 366
    postfix_expression  go to state 191
    primary_expression  go to state 192


state 274

  222 multiplicative_expression: multiplicative_expression '%' . unary_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    unary_expression    go to state 367
    postfix_expression  go to state 191
    primary_expression  go to state 192


state 275

  183 assignment_expression: unary_expression ADD_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    assignment_expression      go to state 368
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 276

  184 assignment_expression: unary_expression SUB_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    assignment_expression      go to state 369
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 277

  185 assignment_expression: unary_expression MUL_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    assignment_expression      go to state 370
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 278

  186 assignment_expression: unary_expression DIV_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    assignment_expression      go to state 371
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 279

  187 assignment_expression: unary_expression MOD_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    assignment_expression      go to state 372
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 280

  188 assignment_expression: unary_expression AND_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    assignment_expression      go to state 373
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 281

  189 assignment_expression: unary_expression OR_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    assignment_expression      go to state 374
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 282

  190 assignment_expression: unary_expression XOR_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    assignment_expression      go to state 375
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 283

  191 assignment_expression: unary_expression LSHIFT_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    assignment_expression      go to state 376
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 284

  192 assignment_expression: unary_expression RSHIFT_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    assignment_expression      go to state 377
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 285

  182 assignment_expression: unary_expression '=' . assignment_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    assignment_expression      go to state 378
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 286

   81 type_specifier: type_specifier . type_unit
  145 block_item: type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER ';'
  146           | type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER '=' assignment_expression ';'
  148           | type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER '=' initializer ';'
  150           | type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER array_dims '=' initializer ';'
  152           | type_qualifier_seq_opt type_specifier . sdecl ',' sdecl sdecl_list ';'
  153           | type_qualifier_seq_opt type_specifier . sdecl '=' initializer ';'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    '*'          shift, and go to state 97

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt              go to state 379
    star_list                  go to state 74
    type_unit                  go to state 75
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44
    sdecl                      go to state 380


state 287

  241 postfix_expression: postfix_expression ARROW . IDENTIFIER

    IDENTIFIER  shift, and go to state 381


state 288

  242 postfix_expression: postfix_expression INC .

    $default  reduce using rule 242 (postfix_expression)


state 289

  243 postfix_expression: postfix_expression DEC .

    $default  reduce using rule 243 (postfix_expression)


state 290

  238 postfix_expression: postfix_expression '(' . argument_expression_list_opt ')'

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    $default  reduce using rule 244 (argument_expression_list_opt)

    assignment_expression         go to state 382
    conditional_expression        go to state 178
    logical_or_expression         go to state 179
    logical_and_expression        go to state 180
    inclusive_or_expression       go to state 181
    exclusive_or_expression       go to state 182
    and_expression                go to state 183
    equality_expression           go to state 184
    relational_expression         go to state 185
    shift_expression              go to state 186
    additive_expression           go to state 187
    multiplicative_expression     go to state 188
    unary_expression              go to state 189
    postfix_expression            go to state 191
    argument_expression_list_opt  go to state 383
    argument_expression_list      go to state 384
    primary_expression            go to state 192


state 291

  239 postfix_expression: postfix_expression '[' . expression ']'

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    expression                 go to state 385
    assignment_expression      go to state 177
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 292

  240 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 386


state 293

  118 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 118 (direct_declarator)


state 294

  124 identifier_list: IDENTIFIER .

    $default  reduce using rule 124 (identifier_list)


state 295

  120 direct_declarator: direct_declarator '(' parameter_type_list_opt . ')'

    ')'  shift, and go to state 387


state 296

  121 direct_declarator: direct_declarator '(' identifier_list_opt . ')'

    ')'  shift, and go to state 388


state 297

  123 identifier_list_opt: identifier_list .
  125 identifier_list: identifier_list . ',' IDENTIFIER

    ','  shift, and go to state 389

    $default  reduce using rule 123 (identifier_list_opt)


state 298

  119 direct_declarator: direct_declarator '[' assignment_expression_opt . ']'

    ']'  shift, and go to state 390


state 299

  180 assignment_expression_opt: assignment_expression .

    $default  reduce using rule 180 (assignment_expression_opt)


state 300

   23 external_declaration: type_specifier star_list_opt IDENTIFIER '=' assignment_expression . ';'
  254 initializer: assignment_expression .

    ';'  shift, and go to state 391

    ';'  [reduce using rule 254 (initializer)]


state 301

   31 external_declaration: type_specifier star_list_opt IDENTIFIER '=' initializer . ';'

    ';'  shift, and go to state 392


state 302

   13 external_declaration: type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt . ')' compound_statement
   15                     | type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt . ')' ';'

    ')'  shift, and go to state 393


state 303

   83 array_dims: '[' INTEGER_CONSTANT . ']'

    ']'  shift, and go to state 394


state 304

   33 external_declaration: type_specifier star_list_opt IDENTIFIER array_dims '=' . initializer ';'

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164
    '{'               shift, and go to state 203

    assignment_expression      go to state 204
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192
    initializer                go to state 395


state 305

   84 array_dims: array_dims '[' . INTEGER_CONSTANT ']'

    INTEGER_CONSTANT  shift, and go to state 396


state 306

  160 sdir: '(' sdecl ')' .
  161     | '(' sdecl ')' . '(' fp_param_list_opt ')'

    '('  shift, and go to state 397

    $default  reduce using rule 160 (sdir)


state 307

  162 sdir: sdir '[' assignment_expression_opt . ']'

    ']'  shift, and go to state 398


state 308

  266 designator: '[' . constant_expression ']'
  267           | '[' . constant_expression ELLIPSIS constant_expression ']'

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    conditional_expression     go to state 211
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 212
    postfix_expression         go to state 191
    primary_expression         go to state 192
    constant_expression        go to state 399


state 309

  265 designator: '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 400


state 310

  258 initializer_list: initializer .

    $default  reduce using rule 258 (initializer_list)


state 311

  255 initializer: '{' initializer_list_opt . '}'

    '}'  shift, and go to state 401


state 312

  257 initializer_list_opt: initializer_list .
  260 initializer_list: initializer_list . ',' initializer
  261                 | initializer_list . ',' designated_initializer

    ','  shift, and go to state 402

    $default  reduce using rule 257 (initializer_list_opt)


state 313

  259 initializer_list: designated_initializer .

    $default  reduce using rule 259 (initializer_list)


state 314

  262 designated_initializer: designation . '=' initializer
  264 designation: designation . designator

    '='  shift, and go to state 403
    '['  shift, and go to state 308
    '.'  shift, and go to state 309

    designator  go to state 404


state 315

  263 designation: designator .

    $default  reduce using rule 263 (designation)


state 316

   10 external_declaration: type_specifier sdecl '=' initializer ';' .

    $default  reduce using rule 10 (external_declaration)


state 317

    8 external_declaration: type_specifier sdecl ',' sdecl sdecl_list . ';'
  157 sdecl_list: sdecl_list . ',' sdecl

    ','  shift, and go to state 405
    ';'  shift, and go to state 406


state 318

   22 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' . assignment_expression ';'
   30                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' . initializer ';'

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164
    '{'               shift, and go to state 203

    assignment_expression      go to state 407
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192
    initializer                go to state 408


state 319

   12 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '(' . parameter_type_list_opt ')' compound_statement
   14                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '(' . parameter_type_list_opt ')' ';'

    ')'       reduce using rule 44 (parameter_type_list_opt)
    $default  reduce using rule 233 (type_qualifier_seq_opt)

    parameter_type_list_opt  go to state 409
    parameter_type_list      go to state 137
    parameter_list           go to state 138
    parameter_declaration    go to state 139
    type_qualifier_seq_opt   go to state 140


state 320

   28 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER ';' .

    $default  reduce using rule 28 (external_declaration)


state 321

   32 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims . '=' initializer ';'
   84 array_dims: array_dims . '[' INTEGER_CONSTANT ']'

    '='  shift, and go to state 410
    '['  shift, and go to state 305


state 322

    9 external_declaration: type_qualifier_seq_opt type_specifier sdecl '=' initializer . ';'

    ';'  shift, and go to state 411


state 323

    7 external_declaration: type_qualifier_seq_opt type_specifier sdecl ',' sdecl . sdecl_list ';'

    $default  reduce using rule 156 (sdecl_list)

    sdecl_list  go to state 412


state 324

   97 struct_declarator_list: struct_declarator_list ',' struct_declarator .

    $default  reduce using rule 97 (struct_declarator_list)


state 325

  100 struct_declarator: sdecl ':' constant_expression .

    $default  reduce using rule 100 (struct_declarator)


state 326

   21 external_declaration: KW_TYPEDEF type_specifier star_list_opt IDENTIFIER array_dims ';' .

    $default  reduce using rule 21 (external_declaration)


state 327

   25 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER . ')' '(' fp_param_list_opt ')' ';'
   27                     | KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER . array_dims ')' '(' fp_param_list_opt ')' ';'

    ')'  shift, and go to state 413
    '['  shift, and go to state 198

    array_dims  go to state 414


state 328

   18 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER ';' .

    $default  reduce using rule 18 (external_declaration)


state 329

   20 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims . ';'
   84 array_dims: array_dims . '[' INTEGER_CONSTANT ']'

    '['  shift, and go to state 305
    ';'  shift, and go to state 415


state 330

   24 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' . IDENTIFIER ')' '(' fp_param_list_opt ')' ';'
   26                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' . IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';'

    IDENTIFIER  shift, and go to state 416


state 331

   17 external_declaration: func_decl_specs IDENTIFIER '(' parameter_type_list_opt ')' ';' .

    $default  reduce using rule 17 (external_declaration)


state 332

   16 external_declaration: func_decl_specs IDENTIFIER '(' parameter_type_list_opt ')' compound_statement .

    $default  reduce using rule 16 (external_declaration)


state 333

   47 parameter_type_list: parameter_list ',' ELLIPSIS .

    $default  reduce using rule 47 (parameter_type_list)


state 334

   49 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 49 (parameter_list)


state 335

   50 parameter_declaration: type_qualifier_seq_opt type_specifier sdecl .

    $default  reduce using rule 50 (parameter_declaration)


state 336

  155 block_item: KW_TYPEDEF type_specifier star_list_opt . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 417


state 337

  171 jump_statement: KW_RETURN expression_opt ';' .

    $default  reduce using rule 171 (jump_statement)


state 338

  165 selection_statement: KW_IF '(' expression . ')' statement
  166                    | KW_IF '(' expression . ')' statement KW_ELSE statement
  178 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 418
    ','  shift, and go to state 254


state 339

  168 iteration_statement: KW_WHILE '(' expression . ')' statement
  178 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 419
    ','  shift, and go to state 254


state 340

  170 iteration_statement: KW_FOR '(' expression_opt . ';' expression_opt ';' expression_opt ')' statement

    ';'  shift, and go to state 420


state 341

  169 iteration_statement: KW_DO statement KW_WHILE . '(' expression ')' ';'

    '('  shift, and go to state 421


state 342

  167 selection_statement: KW_SWITCH '(' expression . ')' statement
  178 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 422
    ','  shift, and go to state 254


state 343

  174 jump_statement: KW_GOTO IDENTIFIER ';' .

    $default  reduce using rule 174 (jump_statement)


state 344

   81 type_specifier: type_specifier . type_unit
  231 unary_expression: KW_SIZEOF '(' type_specifier . ')'

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    ')'          shift, and go to state 423

    type_unit                  go to state 75
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 345

  253 primary_expression: '(' expression ')' .

    $default  reduce using rule 253 (primary_expression)


state 346

   81 type_specifier: type_specifier . type_unit
  232 unary_expression: '(' type_qualifier_seq_opt type_specifier . star_list_opt ')' unary_expression

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    '*'          shift, and go to state 97

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt              go to state 424
    star_list                  go to state 74
    type_unit                  go to state 75
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 347

  144 block_item: type_specifier star_list_opt IDENTIFIER . ';'
  147           | type_specifier star_list_opt IDENTIFIER . '=' assignment_expression ';'
  149           | type_specifier star_list_opt IDENTIFIER . '=' initializer ';'
  151           | type_specifier star_list_opt IDENTIFIER . array_dims '=' initializer ';'

    '='  shift, and go to state 425
    '['  shift, and go to state 198
    ';'  shift, and go to state 426

    array_dims  go to state 427


state 348

  178 expression: expression ',' assignment_expression .

    $default  reduce using rule 178 (expression)


state 349

  196 logical_or_expression: logical_or_expression LOGOR logical_and_expression .
  198 logical_and_expression: logical_and_expression . LOGAND inclusive_or_expression

    LOGAND  shift, and go to state 258

    $default  reduce using rule 196 (logical_or_expression)


state 350

  178 expression: expression . ',' assignment_expression
  194 conditional_expression: logical_or_expression '?' expression . ':' conditional_expression

    ':'  shift, and go to state 428
    ','  shift, and go to state 254


state 351

  198 logical_and_expression: logical_and_expression LOGAND inclusive_or_expression .
  200 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression

    '|'  shift, and go to state 259

    $default  reduce using rule 198 (logical_and_expression)


state 352

  200 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .
  202 exclusive_or_expression: exclusive_or_expression . '^' and_expression

    '^'  shift, and go to state 260

    $default  reduce using rule 200 (inclusive_or_expression)


state 353

  202 exclusive_or_expression: exclusive_or_expression '^' and_expression .
  204 and_expression: and_expression . '&' equality_expression

    '&'  shift, and go to state 261

    $default  reduce using rule 202 (exclusive_or_expression)


state 354

  204 and_expression: and_expression '&' equality_expression .
  206 equality_expression: equality_expression . EQ relational_expression
  207                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 262
    NE  shift, and go to state 263

    $default  reduce using rule 204 (and_expression)


state 355

  206 equality_expression: equality_expression EQ relational_expression .
  209 relational_expression: relational_expression . '<' shift_expression
  210                      | relational_expression . '>' shift_expression
  211                      | relational_expression . LE shift_expression
  212                      | relational_expression . GE shift_expression

    LE   shift, and go to state 264
    GE   shift, and go to state 265
    '<'  shift, and go to state 266
    '>'  shift, and go to state 267

    $default  reduce using rule 206 (equality_expression)


state 356

  207 equality_expression: equality_expression NE relational_expression .
  209 relational_expression: relational_expression . '<' shift_expression
  210                      | relational_expression . '>' shift_expression
  211                      | relational_expression . LE shift_expression
  212                      | relational_expression . GE shift_expression

    LE   shift, and go to state 264
    GE   shift, and go to state 265
    '<'  shift, and go to state 266
    '>'  shift, and go to state 267

    $default  reduce using rule 207 (equality_expression)


state 357

  211 relational_expression: relational_expression LE shift_expression .
  214 shift_expression: shift_expression . LSHIFT additive_expression
  215                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 268
    RSHIFT  shift, and go to state 269

    $default  reduce using rule 211 (relational_expression)


state 358

  212 relational_expression: relational_expression GE shift_expression .
  214 shift_expression: shift_expression . LSHIFT additive_expression
  215                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 268
    RSHIFT  shift, and go to state 269

    $default  reduce using rule 212 (relational_expression)


state 359

  209 relational_expression: relational_expression '<' shift_expression .
  214 shift_expression: shift_expression . LSHIFT additive_expression
  215                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 268
    RSHIFT  shift, and go to state 269

    $default  reduce using rule 209 (relational_expression)


state 360

  210 relational_expression: relational_expression '>' shift_expression .
  214 shift_expression: shift_expression . LSHIFT additive_expression
  215                 | shift_expression . RSHIFT additive_expression

    LSHIFT  shift, and go to state 268
    RSHIFT  shift, and go to state 269

    $default  reduce using rule 210 (relational_expression)


state 361

  214 shift_expression: shift_expression LSHIFT additive_expression .
  217 additive_expression: additive_expression . '+' multiplicative_expression
  218                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 270
    '-'  shift, and go to state 271

    $default  reduce using rule 214 (shift_expression)


state 362

  215 shift_expression: shift_expression RSHIFT additive_expression .
  217 additive_expression: additive_expression . '+' multiplicative_expression
  218                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 270
    '-'  shift, and go to state 271

    $default  reduce using rule 215 (shift_expression)


state 363

  217 additive_expression: additive_expression '+' multiplicative_expression .
  220 multiplicative_expression: multiplicative_expression . '*' unary_expression
  221                          | multiplicative_expression . '/' unary_expression
  222                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 272
    '/'  shift, and go to state 273
    '%'  shift, and go to state 274

    $default  reduce using rule 217 (additive_expression)


state 364

  218 additive_expression: additive_expression '-' multiplicative_expression .
  220 multiplicative_expression: multiplicative_expression . '*' unary_expression
  221                          | multiplicative_expression . '/' unary_expression
  222                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 272
    '/'  shift, and go to state 273
    '%'  shift, and go to state 274

    $default  reduce using rule 218 (additive_expression)


state 365

  220 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 220 (multiplicative_expression)


state 366

  221 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 221 (multiplicative_expression)


state 367

  222 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 222 (multiplicative_expression)


state 368

  183 assignment_expression: unary_expression ADD_ASSIGN assignment_expression .

    $default  reduce using rule 183 (assignment_expression)


state 369

  184 assignment_expression: unary_expression SUB_ASSIGN assignment_expression .

    $default  reduce using rule 184 (assignment_expression)


state 370

  185 assignment_expression: unary_expression MUL_ASSIGN assignment_expression .

    $default  reduce using rule 185 (assignment_expression)


state 371

  186 assignment_expression: unary_expression DIV_ASSIGN assignment_expression .

    $default  reduce using rule 186 (assignment_expression)


state 372

  187 assignment_expression: unary_expression MOD_ASSIGN assignment_expression .

    $default  reduce using rule 187 (assignment_expression)


state 373

  188 assignment_expression: unary_expression AND_ASSIGN assignment_expression .

    $default  reduce using rule 188 (assignment_expression)


state 374

  189 assignment_expression: unary_expression OR_ASSIGN assignment_expression .

    $default  reduce using rule 189 (assignment_expression)


state 375

  190 assignment_expression: unary_expression XOR_ASSIGN assignment_expression .

    $default  reduce using rule 190 (assignment_expression)


state 376

  191 assignment_expression: unary_expression LSHIFT_ASSIGN assignment_expression .

    $default  reduce using rule 191 (assignment_expression)


state 377

  192 assignment_expression: unary_expression RSHIFT_ASSIGN assignment_expression .

    $default  reduce using rule 192 (assignment_expression)


state 378

  182 assignment_expression: unary_expression '=' assignment_expression .

    $default  reduce using rule 182 (assignment_expression)


state 379

  145 block_item: type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER ';'
  146           | type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER '=' assignment_expression ';'
  148           | type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER '=' initializer ';'
  150           | type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER array_dims '=' initializer ';'
  158 sdecl: star_list_opt . sdir

    IDENTIFIER  shift, and go to state 429
    '('         shift, and go to state 110

    sdir  go to state 111


state 380

  152 block_item: type_qualifier_seq_opt type_specifier sdecl . ',' sdecl sdecl_list ';'
  153           | type_qualifier_seq_opt type_specifier sdecl . '=' initializer ';'

    '='  shift, and go to state 430
    ','  shift, and go to state 431


state 381

  241 postfix_expression: postfix_expression ARROW IDENTIFIER .

    $default  reduce using rule 241 (postfix_expression)


state 382

  246 argument_expression_list: assignment_expression .

    $default  reduce using rule 246 (argument_expression_list)


state 383

  238 postfix_expression: postfix_expression '(' argument_expression_list_opt . ')'

    ')'  shift, and go to state 432


state 384

  245 argument_expression_list_opt: argument_expression_list .
  247 argument_expression_list: argument_expression_list . ',' assignment_expression

    ','  shift, and go to state 433

    $default  reduce using rule 245 (argument_expression_list_opt)


state 385

  178 expression: expression . ',' assignment_expression
  239 postfix_expression: postfix_expression '[' expression . ']'

    ']'  shift, and go to state 434
    ','  shift, and go to state 254


state 386

  240 postfix_expression: postfix_expression '.' IDENTIFIER .

    $default  reduce using rule 240 (postfix_expression)


state 387

  120 direct_declarator: direct_declarator '(' parameter_type_list_opt ')' .

    $default  reduce using rule 120 (direct_declarator)


state 388

  121 direct_declarator: direct_declarator '(' identifier_list_opt ')' .

    $default  reduce using rule 121 (direct_declarator)


state 389

  125 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 435


state 390

  119 direct_declarator: direct_declarator '[' assignment_expression_opt ']' .

    $default  reduce using rule 119 (direct_declarator)


state 391

   23 external_declaration: type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';' .

    $default  reduce using rule 23 (external_declaration)


state 392

   31 external_declaration: type_specifier star_list_opt IDENTIFIER '=' initializer ';' .

    $default  reduce using rule 31 (external_declaration)


state 393

   13 external_declaration: type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' . compound_statement
   15                     | type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' . ';'

    ';'  shift, and go to state 436
    '{'  shift, and go to state 104

    compound_statement  go to state 437


state 394

   83 array_dims: '[' INTEGER_CONSTANT ']' .

    $default  reduce using rule 83 (array_dims)


state 395

   33 external_declaration: type_specifier star_list_opt IDENTIFIER array_dims '=' initializer . ';'

    ';'  shift, and go to state 438


state 396

   84 array_dims: array_dims '[' INTEGER_CONSTANT . ']'

    ']'  shift, and go to state 439


state 397

  161 sdir: '(' sdecl ')' '(' . fp_param_list_opt ')'

    ')'       reduce using rule 126 (fp_param_list_opt)
    $default  reduce using rule 233 (type_qualifier_seq_opt)

    fp_param_list_opt       go to state 440
    fp_param_list           go to state 441
    fp_param                go to state 442
    type_qualifier_seq_opt  go to state 443


state 398

  162 sdir: sdir '[' assignment_expression_opt ']' .

    $default  reduce using rule 162 (sdir)


state 399

  266 designator: '[' constant_expression . ']'
  267           | '[' constant_expression . ELLIPSIS constant_expression ']'

    ELLIPSIS  shift, and go to state 444
    ']'       shift, and go to state 445


state 400

  265 designator: '.' IDENTIFIER .

    $default  reduce using rule 265 (designator)


state 401

  255 initializer: '{' initializer_list_opt '}' .

    $default  reduce using rule 255 (initializer)


state 402

  260 initializer_list: initializer_list ',' . initializer
  261                 | initializer_list ',' . designated_initializer

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164
    '['               shift, and go to state 308
    '.'               shift, and go to state 309
    '{'               shift, and go to state 203

    assignment_expression      go to state 204
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192
    initializer                go to state 446
    designated_initializer     go to state 447
    designation                go to state 314
    designator                 go to state 315


state 403

  262 designated_initializer: designation '=' . initializer

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164
    '{'               shift, and go to state 203

    assignment_expression      go to state 204
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192
    initializer                go to state 448


state 404

  264 designation: designation designator .

    $default  reduce using rule 264 (designation)


state 405

  157 sdecl_list: sdecl_list ',' . sdecl

    '*'  shift, and go to state 97

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt  go to state 120
    star_list      go to state 74
    sdecl          go to state 449


state 406

    8 external_declaration: type_specifier sdecl ',' sdecl sdecl_list ';' .

    $default  reduce using rule 8 (external_declaration)


state 407

   22 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' assignment_expression . ';'
  254 initializer: assignment_expression .

    ';'  shift, and go to state 450

    ';'  [reduce using rule 254 (initializer)]


state 408

   30 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' initializer . ';'

    ';'  shift, and go to state 451


state 409

   12 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt . ')' compound_statement
   14                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt . ')' ';'

    ')'  shift, and go to state 452


state 410

   32 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims '=' . initializer ';'

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164
    '{'               shift, and go to state 203

    assignment_expression      go to state 204
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192
    initializer                go to state 453


state 411

    9 external_declaration: type_qualifier_seq_opt type_specifier sdecl '=' initializer ';' .

    $default  reduce using rule 9 (external_declaration)


state 412

    7 external_declaration: type_qualifier_seq_opt type_specifier sdecl ',' sdecl sdecl_list . ';'
  157 sdecl_list: sdecl_list . ',' sdecl

    ','  shift, and go to state 405
    ';'  shift, and go to state 454


state 413

   25 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER ')' . '(' fp_param_list_opt ')' ';'

    '('  shift, and go to state 455


state 414

   27 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER array_dims . ')' '(' fp_param_list_opt ')' ';'
   84 array_dims: array_dims . '[' INTEGER_CONSTANT ']'

    ')'  shift, and go to state 456
    '['  shift, and go to state 305


state 415

   20 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims ';' .

    $default  reduce using rule 20 (external_declaration)


state 416

   24 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER . ')' '(' fp_param_list_opt ')' ';'
   26                     | KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER . array_dims ')' '(' fp_param_list_opt ')' ';'

    ')'  shift, and go to state 457
    '['  shift, and go to state 198

    array_dims  go to state 458


state 417

  155 block_item: KW_TYPEDEF type_specifier star_list_opt IDENTIFIER . ';'

    ';'  shift, and go to state 459


state 418

  165 selection_statement: KW_IF '(' expression ')' . statement
  166                    | KW_IF '(' expression ')' . statement KW_ELSE statement

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_RETURN         shift, and go to state 148
    KW_IF             shift, and go to state 149
    KW_WHILE          shift, and go to state 150
    KW_FOR            shift, and go to state 151
    KW_DO             shift, and go to state 152
    KW_SWITCH         shift, and go to state 153
    KW_BREAK          shift, and go to state 154
    KW_CONTINUE       shift, and go to state 155
    KW_GOTO           shift, and go to state 156
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164
    ';'               shift, and go to state 165
    '{'               shift, and go to state 104

    statement                  go to state 460
    compound_statement         go to state 168
    expression_statement       go to state 172
    selection_statement        go to state 173
    iteration_statement        go to state 174
    jump_statement             go to state 175
    expression                 go to state 176
    assignment_expression      go to state 177
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 419

  168 iteration_statement: KW_WHILE '(' expression ')' . statement

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_RETURN         shift, and go to state 148
    KW_IF             shift, and go to state 149
    KW_WHILE          shift, and go to state 150
    KW_FOR            shift, and go to state 151
    KW_DO             shift, and go to state 152
    KW_SWITCH         shift, and go to state 153
    KW_BREAK          shift, and go to state 154
    KW_CONTINUE       shift, and go to state 155
    KW_GOTO           shift, and go to state 156
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164
    ';'               shift, and go to state 165
    '{'               shift, and go to state 104

    statement                  go to state 461
    compound_statement         go to state 168
    expression_statement       go to state 172
    selection_statement        go to state 173
    iteration_statement        go to state 174
    jump_statement             go to state 175
    expression                 go to state 176
    assignment_expression      go to state 177
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 420

  170 iteration_statement: KW_FOR '(' expression_opt ';' . expression_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    $default  reduce using rule 175 (expression_opt)

    expression_opt             go to state 462
    expression                 go to state 232
    assignment_expression      go to state 177
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 421

  169 iteration_statement: KW_DO statement KW_WHILE '(' . expression ')' ';'

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    expression                 go to state 463
    assignment_expression      go to state 177
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 422

  167 selection_statement: KW_SWITCH '(' expression ')' . statement

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_RETURN         shift, and go to state 148
    KW_IF             shift, and go to state 149
    KW_WHILE          shift, and go to state 150
    KW_FOR            shift, and go to state 151
    KW_DO             shift, and go to state 152
    KW_SWITCH         shift, and go to state 153
    KW_BREAK          shift, and go to state 154
    KW_CONTINUE       shift, and go to state 155
    KW_GOTO           shift, and go to state 156
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164
    ';'               shift, and go to state 165
    '{'               shift, and go to state 104

    statement                  go to state 464
    compound_statement         go to state 168
    expression_statement       go to state 172
    selection_statement        go to state 173
    iteration_statement        go to state 174
    jump_statement             go to state 175
    expression                 go to state 176
    assignment_expression      go to state 177
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 423

  231 unary_expression: KW_SIZEOF '(' type_specifier ')' .

    $default  reduce using rule 231 (unary_expression)


state 424

  232 unary_expression: '(' type_qualifier_seq_opt type_specifier star_list_opt . ')' unary_expression

    ')'  shift, and go to state 465


state 425

  147 block_item: type_specifier star_list_opt IDENTIFIER '=' . assignment_expression ';'
  149           | type_specifier star_list_opt IDENTIFIER '=' . initializer ';'

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164
    '{'               shift, and go to state 203

    assignment_expression      go to state 466
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192
    initializer                go to state 467


state 426

  144 block_item: type_specifier star_list_opt IDENTIFIER ';' .

    $default  reduce using rule 144 (block_item)


state 427

   84 array_dims: array_dims . '[' INTEGER_CONSTANT ']'
  151 block_item: type_specifier star_list_opt IDENTIFIER array_dims . '=' initializer ';'

    '='  shift, and go to state 468
    '['  shift, and go to state 305


state 428

  194 conditional_expression: logical_or_expression '?' expression ':' . conditional_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    conditional_expression     go to state 469
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 212
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 429

  145 block_item: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER . ';'
  146           | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER . '=' assignment_expression ';'
  148           | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER . '=' initializer ';'
  150           | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER . array_dims '=' initializer ';'
  159 sdir: IDENTIFIER .

    ';'  shift, and go to state 471

    $default  reduce using rule 159 (sdir)

    array_dims  go to state 472


state 430

  153 block_item: type_qualifier_seq_opt type_specifier sdecl '=' . initializer ';'

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164
    '{'               shift, and go to state 203

    assignment_expression      go to state 204
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192
    initializer                go to state 473


state 431

  152 block_item: type_qualifier_seq_opt type_specifier sdecl ',' . sdecl sdecl_list ';'

    '*'  shift, and go to state 97

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt  go to state 120
    star_list      go to state 74
    sdecl          go to state 474


state 432

  238 postfix_expression: postfix_expression '(' argument_expression_list_opt ')' .

    $default  reduce using rule 238 (postfix_expression)


state 433

  247 argument_expression_list: argument_expression_list ',' . assignment_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    assignment_expression      go to state 475
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 434

  239 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 239 (postfix_expression)


state 435

  125 identifier_list: identifier_list ',' IDENTIFIER .

    $default  reduce using rule 125 (identifier_list)


state 436

   15 external_declaration: type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' ';' .

    $default  reduce using rule 15 (external_declaration)


state 437

   13 external_declaration: type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' compound_statement .

    $default  reduce using rule 13 (external_declaration)


state 438

   33 external_declaration: type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';' .

    $default  reduce using rule 33 (external_declaration)


state 439

   84 array_dims: array_dims '[' INTEGER_CONSTANT ']' .

    $default  reduce using rule 84 (array_dims)


state 440

  161 sdir: '(' sdecl ')' '(' fp_param_list_opt . ')'

    ')'  shift, and go to state 476


state 441

  127 fp_param_list_opt: fp_param_list .
  129 fp_param_list: fp_param_list . ',' fp_param

    ','  shift, and go to state 477

    $default  reduce using rule 127 (fp_param_list_opt)


state 442

  128 fp_param_list: fp_param .

    $default  reduce using rule 128 (fp_param_list)


state 443

  130 fp_param: type_qualifier_seq_opt . type_specifier star_list_opt
  131         | type_qualifier_seq_opt . type_specifier star_list_opt IDENTIFIER
  234 type_qualifier_seq_opt: type_qualifier_seq_opt . KW_CONST
  235                       | type_qualifier_seq_opt . KW_VOLATILE
  236                       | type_qualifier_seq_opt . KW_RESTRICT

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    KW_CONST     shift, and go to state 80
    KW_VOLATILE  shift, and go to state 81
    KW_RESTRICT  shift, and go to state 82

    type_unit                  go to state 30
    type_specifier             go to state 478
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 444

  267 designator: '[' constant_expression ELLIPSIS . constant_expression ']'

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    conditional_expression     go to state 211
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 212
    postfix_expression         go to state 191
    primary_expression         go to state 192
    constant_expression        go to state 479


state 445

  266 designator: '[' constant_expression ']' .

    $default  reduce using rule 266 (designator)


state 446

  260 initializer_list: initializer_list ',' initializer .

    $default  reduce using rule 260 (initializer_list)


state 447

  261 initializer_list: initializer_list ',' designated_initializer .

    $default  reduce using rule 261 (initializer_list)


state 448

  262 designated_initializer: designation '=' initializer .

    $default  reduce using rule 262 (designated_initializer)


state 449

  157 sdecl_list: sdecl_list ',' sdecl .

    $default  reduce using rule 157 (sdecl_list)


state 450

   22 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';' .

    $default  reduce using rule 22 (external_declaration)


state 451

   30 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' initializer ';' .

    $default  reduce using rule 30 (external_declaration)


state 452

   12 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' . compound_statement
   14                     | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' . ';'

    ';'  shift, and go to state 480
    '{'  shift, and go to state 104

    compound_statement  go to state 481


state 453

   32 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims '=' initializer . ';'

    ';'  shift, and go to state 482


state 454

    7 external_declaration: type_qualifier_seq_opt type_specifier sdecl ',' sdecl sdecl_list ';' .

    $default  reduce using rule 7 (external_declaration)


state 455

   25 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' . fp_param_list_opt ')' ';'

    ')'       reduce using rule 126 (fp_param_list_opt)
    $default  reduce using rule 233 (type_qualifier_seq_opt)

    fp_param_list_opt       go to state 483
    fp_param_list           go to state 441
    fp_param                go to state 442
    type_qualifier_seq_opt  go to state 443


state 456

   27 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' . '(' fp_param_list_opt ')' ';'

    '('  shift, and go to state 484


state 457

   24 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER ')' . '(' fp_param_list_opt ')' ';'

    '('  shift, and go to state 485


state 458

   26 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER array_dims . ')' '(' fp_param_list_opt ')' ';'
   84 array_dims: array_dims . '[' INTEGER_CONSTANT ']'

    ')'  shift, and go to state 486
    '['  shift, and go to state 305


state 459

  155 block_item: KW_TYPEDEF type_specifier star_list_opt IDENTIFIER ';' .

    $default  reduce using rule 155 (block_item)


state 460

  165 selection_statement: KW_IF '(' expression ')' statement .
  166                    | KW_IF '(' expression ')' statement . KW_ELSE statement

    KW_ELSE  shift, and go to state 487

    KW_ELSE   [reduce using rule 165 (selection_statement)]
    $default  reduce using rule 165 (selection_statement)


state 461

  168 iteration_statement: KW_WHILE '(' expression ')' statement .

    $default  reduce using rule 168 (iteration_statement)


state 462

  170 iteration_statement: KW_FOR '(' expression_opt ';' expression_opt . ';' expression_opt ')' statement

    ';'  shift, and go to state 488


state 463

  169 iteration_statement: KW_DO statement KW_WHILE '(' expression . ')' ';'
  178 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 489
    ','  shift, and go to state 254


state 464

  167 selection_statement: KW_SWITCH '(' expression ')' statement .

    $default  reduce using rule 167 (selection_statement)


state 465

  232 unary_expression: '(' type_qualifier_seq_opt type_specifier star_list_opt ')' . unary_expression

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    unary_expression    go to state 490
    postfix_expression  go to state 191
    primary_expression  go to state 192


state 466

  147 block_item: type_specifier star_list_opt IDENTIFIER '=' assignment_expression . ';'
  254 initializer: assignment_expression .

    ';'  shift, and go to state 491

    ';'  [reduce using rule 254 (initializer)]


state 467

  149 block_item: type_specifier star_list_opt IDENTIFIER '=' initializer . ';'

    ';'  shift, and go to state 492


state 468

  151 block_item: type_specifier star_list_opt IDENTIFIER array_dims '=' . initializer ';'

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164
    '{'               shift, and go to state 203

    assignment_expression      go to state 204
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192
    initializer                go to state 493


state 469

  194 conditional_expression: logical_or_expression '?' expression ':' conditional_expression .

    $default  reduce using rule 194 (conditional_expression)


state 470

  146 block_item: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' . assignment_expression ';'
  148           | type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' . initializer ';'

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164
    '{'               shift, and go to state 203

    assignment_expression      go to state 494
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192
    initializer                go to state 495


state 471

  145 block_item: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER ';' .

    $default  reduce using rule 145 (block_item)


state 472

   84 array_dims: array_dims . '[' INTEGER_CONSTANT ']'
  150 block_item: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims . '=' initializer ';'

    '='  shift, and go to state 496
    '['  shift, and go to state 305


state 473

  153 block_item: type_qualifier_seq_opt type_specifier sdecl '=' initializer . ';'

    ';'  shift, and go to state 497


state 474

  152 block_item: type_qualifier_seq_opt type_specifier sdecl ',' sdecl . sdecl_list ';'

    $default  reduce using rule 156 (sdecl_list)

    sdecl_list  go to state 498


state 475

  247 argument_expression_list: argument_expression_list ',' assignment_expression .

    $default  reduce using rule 247 (argument_expression_list)


state 476

  161 sdir: '(' sdecl ')' '(' fp_param_list_opt ')' .

    $default  reduce using rule 161 (sdir)


state 477

  129 fp_param_list: fp_param_list ',' . fp_param

    $default  reduce using rule 233 (type_qualifier_seq_opt)

    fp_param                go to state 499
    type_qualifier_seq_opt  go to state 443


state 478

   81 type_specifier: type_specifier . type_unit
  130 fp_param: type_qualifier_seq_opt type_specifier . star_list_opt
  131         | type_qualifier_seq_opt type_specifier . star_list_opt IDENTIFIER

    TYPE_NAME    shift, and go to state 3
    KW_VOID      shift, and go to state 4
    KW_CHAR      shift, and go to state 5
    KW_SHORT     shift, and go to state 6
    KW_INT       shift, and go to state 7
    KW_LONG      shift, and go to state 8
    KW_SIGNED    shift, and go to state 9
    KW_UNSIGNED  shift, and go to state 10
    KW_FLOAT     shift, and go to state 11
    KW_DOUBLE    shift, and go to state 12
    KW_STRUCT    shift, and go to state 13
    KW_UNION     shift, and go to state 14
    KW_ENUM      shift, and go to state 15
    '*'          shift, and go to state 97

    $default  reduce using rule 3 (star_list_opt)

    star_list_opt              go to state 500
    star_list                  go to state 74
    type_unit                  go to state 75
    struct_or_union_specifier  go to state 43
    enum_specifier             go to state 44


state 479

  267 designator: '[' constant_expression ELLIPSIS constant_expression . ']'

    ']'  shift, and go to state 501


state 480

   14 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' ';' .

    $default  reduce using rule 14 (external_declaration)


state 481

   12 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '(' parameter_type_list_opt ')' compound_statement .

    $default  reduce using rule 12 (external_declaration)


state 482

   32 external_declaration: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';' .

    $default  reduce using rule 32 (external_declaration)


state 483

   25 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt . ')' ';'

    ')'  shift, and go to state 502


state 484

   27 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' . fp_param_list_opt ')' ';'

    ')'       reduce using rule 126 (fp_param_list_opt)
    $default  reduce using rule 233 (type_qualifier_seq_opt)

    fp_param_list_opt       go to state 503
    fp_param_list           go to state 441
    fp_param                go to state 442
    type_qualifier_seq_opt  go to state 443


state 485

   24 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' . fp_param_list_opt ')' ';'

    ')'       reduce using rule 126 (fp_param_list_opt)
    $default  reduce using rule 233 (type_qualifier_seq_opt)

    fp_param_list_opt       go to state 504
    fp_param_list           go to state 441
    fp_param                go to state 442
    type_qualifier_seq_opt  go to state 443


state 486

   26 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' . '(' fp_param_list_opt ')' ';'

    '('  shift, and go to state 505


state 487

  166 selection_statement: KW_IF '(' expression ')' statement KW_ELSE . statement

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_RETURN         shift, and go to state 148
    KW_IF             shift, and go to state 149
    KW_WHILE          shift, and go to state 150
    KW_FOR            shift, and go to state 151
    KW_DO             shift, and go to state 152
    KW_SWITCH         shift, and go to state 153
    KW_BREAK          shift, and go to state 154
    KW_CONTINUE       shift, and go to state 155
    KW_GOTO           shift, and go to state 156
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164
    ';'               shift, and go to state 165
    '{'               shift, and go to state 104

    statement                  go to state 506
    compound_statement         go to state 168
    expression_statement       go to state 172
    selection_statement        go to state 173
    iteration_statement        go to state 174
    jump_statement             go to state 175
    expression                 go to state 176
    assignment_expression      go to state 177
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 488

  170 iteration_statement: KW_FOR '(' expression_opt ';' expression_opt ';' . expression_opt ')' statement

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164

    $default  reduce using rule 175 (expression_opt)

    expression_opt             go to state 507
    expression                 go to state 232
    assignment_expression      go to state 177
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 489

  169 iteration_statement: KW_DO statement KW_WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 508


state 490

  232 unary_expression: '(' type_qualifier_seq_opt type_specifier star_list_opt ')' unary_expression .

    $default  reduce using rule 232 (unary_expression)


state 491

  147 block_item: type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';' .

    $default  reduce using rule 147 (block_item)


state 492

  149 block_item: type_specifier star_list_opt IDENTIFIER '=' initializer ';' .

    $default  reduce using rule 149 (block_item)


state 493

  151 block_item: type_specifier star_list_opt IDENTIFIER array_dims '=' initializer . ';'

    ';'  shift, and go to state 509


state 494

  146 block_item: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' assignment_expression . ';'
  254 initializer: assignment_expression .

    ';'  shift, and go to state 510

    ';'  [reduce using rule 254 (initializer)]


state 495

  148 block_item: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' initializer . ';'

    ';'  shift, and go to state 511


state 496

  150 block_item: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims '=' . initializer ';'

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164
    '{'               shift, and go to state 203

    assignment_expression      go to state 204
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192
    initializer                go to state 512


state 497

  153 block_item: type_qualifier_seq_opt type_specifier sdecl '=' initializer ';' .

    $default  reduce using rule 153 (block_item)


state 498

  152 block_item: type_qualifier_seq_opt type_specifier sdecl ',' sdecl sdecl_list . ';'
  157 sdecl_list: sdecl_list . ',' sdecl

    ','  shift, and go to state 405
    ';'  shift, and go to state 513


state 499

  129 fp_param_list: fp_param_list ',' fp_param .

    $default  reduce using rule 129 (fp_param_list)


state 500

  130 fp_param: type_qualifier_seq_opt type_specifier star_list_opt .
  131         | type_qualifier_seq_opt type_specifier star_list_opt . IDENTIFIER

    IDENTIFIER  shift, and go to state 514

    $default  reduce using rule 130 (fp_param)


state 501

  267 designator: '[' constant_expression ELLIPSIS constant_expression ']' .

    $default  reduce using rule 267 (designator)


state 502

   25 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' . ';'

    ';'  shift, and go to state 515


state 503

   27 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt . ')' ';'

    ')'  shift, and go to state 516


state 504

   24 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt . ')' ';'

    ')'  shift, and go to state 517


state 505

   26 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' . fp_param_list_opt ')' ';'

    ')'       reduce using rule 126 (fp_param_list_opt)
    $default  reduce using rule 233 (type_qualifier_seq_opt)

    fp_param_list_opt       go to state 518
    fp_param_list           go to state 441
    fp_param                go to state 442
    type_qualifier_seq_opt  go to state 443


state 506

  166 selection_statement: KW_IF '(' expression ')' statement KW_ELSE statement .

    $default  reduce using rule 166 (selection_statement)


state 507

  170 iteration_statement: KW_FOR '(' expression_opt ';' expression_opt ';' expression_opt . ')' statement

    ')'  shift, and go to state 519


state 508

  169 iteration_statement: KW_DO statement KW_WHILE '(' expression ')' ';' .

    $default  reduce using rule 169 (iteration_statement)


state 509

  151 block_item: type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';' .

    $default  reduce using rule 151 (block_item)


state 510

  146 block_item: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' assignment_expression ';' .

    $default  reduce using rule 146 (block_item)


state 511

  148 block_item: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER '=' initializer ';' .

    $default  reduce using rule 148 (block_item)


state 512

  150 block_item: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims '=' initializer . ';'

    ';'  shift, and go to state 520


state 513

  152 block_item: type_qualifier_seq_opt type_specifier sdecl ',' sdecl sdecl_list ';' .

    $default  reduce using rule 152 (block_item)


state 514

  131 fp_param: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER .

    $default  reduce using rule 131 (fp_param)


state 515

   25 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';' .

    $default  reduce using rule 25 (external_declaration)


state 516

   27 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' . ';'

    ';'  shift, and go to state 521


state 517

   24 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' . ';'

    ';'  shift, and go to state 522


state 518

   26 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt . ')' ';'

    ')'  shift, and go to state 523


state 519

  170 iteration_statement: KW_FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' . statement

    IDENTIFIER        shift, and go to state 142
    STRING_LITERAL    shift, and go to state 143
    INTEGER_CONSTANT  shift, and go to state 144
    FLOAT_CONSTANT    shift, and go to state 145
    CHAR_CONSTANT     shift, and go to state 146
    KW_RETURN         shift, and go to state 148
    KW_IF             shift, and go to state 149
    KW_WHILE          shift, and go to state 150
    KW_FOR            shift, and go to state 151
    KW_DO             shift, and go to state 152
    KW_SWITCH         shift, and go to state 153
    KW_BREAK          shift, and go to state 154
    KW_CONTINUE       shift, and go to state 155
    KW_GOTO           shift, and go to state 156
    KW_SIZEOF         shift, and go to state 157
    INC               shift, and go to state 158
    DEC               shift, and go to state 159
    '+'               shift, and go to state 160
    '-'               shift, and go to state 161
    '!'               shift, and go to state 162
    '~'               shift, and go to state 163
    '('               shift, and go to state 164
    ';'               shift, and go to state 165
    '{'               shift, and go to state 104

    statement                  go to state 524
    compound_statement         go to state 168
    expression_statement       go to state 172
    selection_statement        go to state 173
    iteration_statement        go to state 174
    jump_statement             go to state 175
    expression                 go to state 176
    assignment_expression      go to state 177
    conditional_expression     go to state 178
    logical_or_expression      go to state 179
    logical_and_expression     go to state 180
    inclusive_or_expression    go to state 181
    exclusive_or_expression    go to state 182
    and_expression             go to state 183
    equality_expression        go to state 184
    relational_expression      go to state 185
    shift_expression           go to state 186
    additive_expression        go to state 187
    multiplicative_expression  go to state 188
    unary_expression           go to state 189
    postfix_expression         go to state 191
    primary_expression         go to state 192


state 520

  150 block_item: type_qualifier_seq_opt type_specifier star_list_opt IDENTIFIER array_dims '=' initializer ';' .

    $default  reduce using rule 150 (block_item)


state 521

   27 external_declaration: KW_TYPEDEF type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';' .

    $default  reduce using rule 27 (external_declaration)


state 522

   24 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER ')' '(' fp_param_list_opt ')' ';' .

    $default  reduce using rule 24 (external_declaration)


state 523

   26 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' . ';'

    ';'  shift, and go to state 525


state 524

  170 iteration_statement: KW_FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' statement .

    $default  reduce using rule 170 (iteration_statement)


state 525

   26 external_declaration: KW_TYPEDEF type_qualifier_seq_opt type_specifier star_list_opt '(' '*' IDENTIFIER array_dims ')' '(' fp_param_list_opt ')' ';' .

    $default  reduce using rule 26 (external_declaration)
