Terminals which are not used

   KW_ALIGNOF
   KW_AUTO_TYPE
   KW_EXTENSION
   LSHIFT
   RSHIFT
   '?'
   '|'
   '^'
   '!'
   '~'


Rules never reduced

   46 declarator_opt: declarator

   65 parameter_type_list_opt: /* empty */


State 37 conflicts: 2 shift/reduce, 2 reduce/reduce
State 45 conflicts: 1 shift/reduce, 2 reduce/reduce
State 67 conflicts: 17 reduce/reduce
State 109 conflicts: 2 shift/reduce
State 110 conflicts: 1 shift/reduce
State 112 conflicts: 3 shift/reduce
State 115 conflicts: 1 shift/reduce
State 132 conflicts: 1 shift/reduce
State 202 conflicts: 1 reduce/reduce
State 380 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: /* empty */
    2                 | translation_unit external_declaration

    3 external_declaration: function_definition
    4                     | declaration ';'
    5                     | static_assert_declaration

    6 declaration: declaration_specifiers declarator_opt
    7            | declaration_specifiers init_declarator_list

    8 declaration_specifiers: declaration_specifier
    9                       | declaration_specifiers declaration_specifier

   10 declaration_specifier: storage_class_specifier
   11                      | type_specifier
   12                      | type_qualifier
   13                      | function_specifier
   14                      | alignment_specifier
   15                      | attribute_specifier
   16                      | declspec_specifier

   17 storage_class_specifier: KW_TYPEDEF
   18                        | KW_EXTERN
   19                        | KW_STATIC
   20                        | KW_THREAD_LOCAL
   21                        | KW_AUTO
   22                        | KW_REGISTER

   23 type_qualifier: KW_CONST
   24               | KW_VOLATILE
   25               | KW_RESTRICT
   26               | KW_ATOMIC

   27 function_specifier: KW_INLINE
   28                   | KW_NORETURN

   29 alignment_specifier: KW_ALIGNAS '(' type_specifier ')'
   30                    | KW_ALIGNAS '(' INTEGER_CONSTANT ')'

   31 attribute_specifier: KW_ATTRIBUTE '(' attribute_arg_list_opt ')'

   32 declspec_specifier: KW_DECLSPEC '(' attribute_arg_list_opt ')'

   33 attribute_arg_list_opt: /* empty */
   34                       | attribute_arg_list

   35 attribute_arg_list: attribute_arg
   36                   | attribute_arg_list ',' attribute_arg

   37 attribute_arg: IDENTIFIER
   38              | STRING_LITERAL
   39              | INTEGER_CONSTANT
   40              | '(' attribute_arg_list_opt ')'

   41 init_declarator_list: init_declarator
   42                     | init_declarator_list ',' init_declarator

   43 init_declarator: declarator
   44                | declarator '=' initializer

   45 declarator_opt: /* empty */
   46               | declarator

   47 declarator: pointer_opt direct_declarator

   48 pointer_opt: /* empty */
   49            | pointer

   50 pointer: '*'
   51        | '*' type_qualifier_list
   52        | '*' pointer
   53        | '*' type_qualifier_list pointer

   54 type_qualifier_list: type_qualifier
   55                    | type_qualifier_list type_qualifier

   56 direct_declarator: IDENTIFIER
   57                  | '(' declarator ')'
   58                  | direct_declarator '[' assignment_expression_opt ']'
   59                  | direct_declarator '(' parameter_type_list_opt ')'
   60                  | direct_declarator '(' identifier_list_opt ')'

   61 identifier_list_opt: /* empty */
   62                    | identifier_list

   63 identifier_list: IDENTIFIER
   64                | identifier_list ',' IDENTIFIER

   65 parameter_type_list_opt: /* empty */
   66                        | parameter_type_list

   67 parameter_type_list: parameter_list
   68                    | parameter_list ',' ELLIPSIS

   69 parameter_list: parameter_declaration
   70               | parameter_list ',' parameter_declaration

   71 parameter_declaration: declaration_specifiers declarator
   72                      | declaration_specifiers

   73 type_specifier: KW_VOID
   74               | KW_CHAR
   75               | KW_SHORT
   76               | KW_INT
   77               | KW_LONG
   78               | KW_FLOAT
   79               | KW_DOUBLE
   80               | KW_SIGNED
   81               | KW_UNSIGNED
   82               | KW_BOOL
   83               | KW_COMPLEX
   84               | KW_IMAGINARY
   85               | struct_or_union_specifier
   86               | enum_specifier
   87               | KW_TYPEOF '(' type_specifier ')'

   88 specifier_qualifier_list: type_specifier
   89                         | type_qualifier
   90                         | specifier_qualifier_list type_specifier
   91                         | specifier_qualifier_list type_qualifier

   92 struct_or_union_specifier: KW_STRUCT IDENTIFIER
   93                          | KW_UNION IDENTIFIER
   94                          | KW_STRUCT '{' struct_declaration_list '}'
   95                          | KW_UNION '{' struct_declaration_list '}'
   96                          | KW_STRUCT IDENTIFIER '{' struct_declaration_list '}'
   97                          | KW_UNION IDENTIFIER '{' struct_declaration_list '}'

   98 struct_declaration_list: struct_declaration
   99                        | struct_declaration_list struct_declaration

  100 struct_declaration: specifier_qualifier_list struct_declarator_list ';'
  101                   | static_assert_declaration

  102 struct_declarator_list: struct_declarator
  103                       | struct_declarator_list ',' struct_declarator

  104 struct_declarator: declarator
  105                  | ':' constant_expression
  106                  | declarator ':' constant_expression

  107 enum_specifier: KW_ENUM IDENTIFIER
  108               | KW_ENUM '{' enumerator_list_opt '}'
  109               | KW_ENUM IDENTIFIER '{' enumerator_list_opt '}'

  110 enumerator_list_opt: /* empty */
  111                    | enumerator_list

  112 enumerator_list: enumerator
  113                | enumerator_list ',' enumerator
  114                | enumerator_list ','

  115 enumerator: IDENTIFIER
  116           | IDENTIFIER '=' constant_expression

  117 function_definition: type_specifier declarator compound_statement

  118 compound_statement: '{' block_item_list_opt '}'

  119 block_item_list_opt: /* empty */
  120                    | block_item_list

  121 block_item_list: block_item
  122                | block_item_list block_item

  123 block_item: declaration ';'
  124           | statement

  125 asm_statement: KW_ASM asm_qualifiers_opt '(' asm_arguments ')' ';'

  126 asm_qualifiers_opt: /* empty */
  127                   | asm_qualifiers_opt KW_VOLATILE
  128                   | asm_qualifiers_opt KW_INLINE
  129                   | asm_qualifiers_opt KW_GOTO

  130 asm_arguments: string_seq
  131              | string_seq ':' asm_output_operands_opt
  132              | string_seq ':' asm_output_operands_opt ':' asm_input_operands_opt
  133              | string_seq ':' asm_output_operands_opt ':' asm_input_operands_opt ':' asm_clobbers_opt
  134              | string_seq ':' asm_output_operands_opt ':' asm_input_operands_opt ':' asm_clobbers_opt ':' asm_goto_labels_opt

  135 asm_output_operands_opt: /* empty */
  136                        | asm_output_operands

  137 asm_input_operands_opt: /* empty */
  138                       | asm_input_operands

  139 asm_clobbers_opt: /* empty */
  140                 | asm_clobbers

  141 asm_goto_labels_opt: /* empty */
  142                    | asm_goto_labels

  143 asm_output_operands: asm_output_operand
  144                    | asm_output_operands ',' asm_output_operand

  145 asm_input_operands: asm_input_operand
  146                   | asm_input_operands ',' asm_input_operand

  147 asm_output_operand: asm_symbolic_name_opt STRING_LITERAL '(' unary_expression ')'

  148 asm_input_operand: asm_symbolic_name_opt STRING_LITERAL '(' assignment_expression ')'

  149 asm_symbolic_name_opt: /* empty */
  150                      | '[' IDENTIFIER ']'

  151 asm_clobbers: STRING_LITERAL
  152             | asm_clobbers ',' STRING_LITERAL

  153 asm_goto_labels: IDENTIFIER
  154                | asm_goto_labels ',' IDENTIFIER

  155 static_assert_declaration: KW_STATIC_ASSERT '(' conditional_expression ',' STRING_LITERAL ')' ';'

  156 statement: ';'
  157          | expression ';'
  158          | KW_RETURN expression_opt ';'
  159          | compound_statement
  160          | labeled_statement
  161          | KW_IF '(' expression ')' statement
  162          | KW_IF '(' expression ')' statement KW_ELSE statement
  163          | KW_WHILE '(' expression ')' statement
  164          | KW_DO statement KW_WHILE '(' expression ')' ';'
  165          | KW_FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' statement
  166          | KW_FOR '(' declaration expression_opt ';' expression_opt ')' statement
  167          | KW_SWITCH '(' expression ')' statement
  168          | KW_BREAK ';'
  169          | KW_CONTINUE ';'
  170          | KW_GOTO IDENTIFIER ';'
  171          | asm_statement

  172 labeled_statement: IDENTIFIER ':' statement
  173                  | KW_CASE constant_expression ':' statement
  174                  | KW_DEFAULT ':' statement

  175 expression_opt: /* empty */
  176               | expression

  177 expression: assignment_expression

  178 assignment_expression: conditional_expression
  179                      | unary_expression '=' assignment_expression
  180                      | unary_expression ADD_ASSIGN assignment_expression
  181                      | unary_expression SUB_ASSIGN assignment_expression
  182                      | unary_expression MUL_ASSIGN assignment_expression
  183                      | unary_expression DIV_ASSIGN assignment_expression
  184                      | unary_expression MOD_ASSIGN assignment_expression
  185                      | unary_expression AND_ASSIGN assignment_expression
  186                      | unary_expression OR_ASSIGN assignment_expression
  187                      | unary_expression XOR_ASSIGN assignment_expression
  188                      | unary_expression LSHIFT_ASSIGN assignment_expression
  189                      | unary_expression RSHIFT_ASSIGN assignment_expression

  190 conditional_expression: logical_or_expression

  191 logical_or_expression: logical_and_expression
  192                      | logical_or_expression LOGOR logical_and_expression

  193 logical_and_expression: equality_expression
  194                       | logical_and_expression LOGAND equality_expression

  195 equality_expression: relational_expression
  196                    | equality_expression EQ relational_expression
  197                    | equality_expression NE relational_expression

  198 relational_expression: additive_expression
  199                      | relational_expression '<' additive_expression
  200                      | relational_expression '>' additive_expression
  201                      | relational_expression LE additive_expression
  202                      | relational_expression GE additive_expression

  203 additive_expression: multiplicative_expression
  204                    | additive_expression '+' multiplicative_expression
  205                    | additive_expression '-' multiplicative_expression

  206 multiplicative_expression: unary_expression
  207                          | multiplicative_expression '*' unary_expression
  208                          | multiplicative_expression '/' unary_expression
  209                          | multiplicative_expression '%' unary_expression

  210 unary_expression: postfix_expression
  211                 | INC unary_expression
  212                 | DEC unary_expression
  213                 | '&' unary_expression
  214                 | '*' unary_expression
  215                 | '+' unary_expression
  216                 | '-' unary_expression
  217                 | KW_SIZEOF unary_expression
  218                 | KW_SIZEOF '(' type_specifier ')'
  219                 | KW_TYPEOF '(' expression ')'

  220 postfix_expression: primary_expression
  221                   | postfix_expression '(' argument_expression_list_opt ')'
  222                   | postfix_expression INC
  223                   | postfix_expression DEC
  224                   | postfix_expression '[' expression ']'
  225                   | postfix_expression '.' IDENTIFIER
  226                   | postfix_expression ARROW IDENTIFIER
  227                   | KW_GENERIC '(' assignment_expression ',' assignment_expression ')'

  228 argument_expression_list_opt: /* empty */
  229                             | argument_expression_list

  230 argument_expression_list: assignment_expression
  231                         | argument_expression_list ',' assignment_expression

  232 primary_expression: IDENTIFIER
  233                   | constant
  234                   | string_seq
  235                   | '(' expression ')'
  236                   | LPAREN_BRACE compound_statement ')'

  237 constant: INTEGER_CONSTANT
  238         | FLOAT_CONSTANT
  239         | CHAR_CONSTANT

  240 string_seq: STRING_LITERAL
  241           | string_seq STRING_LITERAL

  242 assignment_expression_opt: /* empty */
  243                          | assignment_expression

  244 initializer: assignment_expression
  245            | '{' initializer_list '}'
  246            | '{' initializer_list ',' '}'

  247 initializer_list: designation_opt initializer
  248                 | initializer_list ',' designation_opt initializer

  249 designation_opt: /* empty */
  250                | designation

  251 designation: designator_list '='

  252 designator_list: designator
  253                | designator_list designator

  254 designator: '.' IDENTIFIER
  255           | '[' constant_expression ']'

  256 constant_expression: conditional_expression


Terminals, with rules where they appear

$end (0) 0
'!' (33)
'%' (37) 209
'&' (38) 213
'(' (40) 29 30 31 32 40 57 59 60 87 125 147 148 155 161 162 163 164
    165 166 167 218 219 221 227 235
')' (41) 29 30 31 32 40 57 59 60 87 125 147 148 155 161 162 163 164
    165 166 167 218 219 221 227 235 236
'*' (42) 50 51 52 53 207 214
'+' (43) 204 215
',' (44) 36 42 64 68 70 103 113 114 144 146 152 154 155 227 231 246
    248
'-' (45) 205 216
'.' (46) 225 254
'/' (47) 208
':' (58) 105 106 131 132 133 134 172 173 174
';' (59) 4 100 123 125 155 156 157 158 164 165 166 168 169 170
'<' (60) 199
'=' (61) 44 116 179 251
'>' (62) 200
'?' (63)
'[' (91) 58 150 224 255
']' (93) 58 150 224 255
'^' (94)
'{' (123) 94 95 96 97 108 109 118 245 246
'|' (124)
'}' (125) 94 95 96 97 108 109 118 245 246
'~' (126)
error (256)
IDENTIFIER (258) 37 56 63 64 92 93 96 97 107 109 115 116 150 153 154
    170 172 225 226 232 254
STRING_LITERAL (259) 38 147 148 151 152 155 240 241
INTEGER_CONSTANT (260) 30 39 237
FLOAT_CONSTANT (261) 238
CHAR_CONSTANT (262) 239
KW_INT (263) 76
KW_CHAR (264) 74
KW_VOID (265) 73
KW_FLOAT (266) 78
KW_DOUBLE (267) 79
KW_SHORT (268) 75
KW_LONG (269) 77
KW_SIGNED (270) 80
KW_UNSIGNED (271) 81
KW_BOOL (272) 82
KW_COMPLEX (273) 83
KW_IMAGINARY (274) 84
KW_STRUCT (275) 92 94 96
KW_UNION (276) 93 95 97
KW_ENUM (277) 107 108 109
KW_TYPEDEF (278) 17
KW_RETURN (279) 158
KW_IF (280) 161 162
KW_ELSE (281) 162
KW_WHILE (282) 163 164
KW_FOR (283) 165 166
KW_DO (284) 164
KW_SWITCH (285) 167
KW_CASE (286) 173
KW_DEFAULT (287) 174
KW_BREAK (288) 168
KW_CONTINUE (289) 169
KW_GOTO (290) 129 170
KW_SIZEOF (291) 217 218
KW_ALIGNAS (292) 29 30
KW_ALIGNOF (293)
KW_NORETURN (294) 28
KW_THREAD_LOCAL (295) 20
KW_ATOMIC (296) 26
KW_CONST (297) 23
KW_VOLATILE (298) 24 127
KW_RESTRICT (299) 25
KW_INLINE (300) 27 128
KW_EXTERN (301) 18
KW_STATIC (302) 19
KW_REGISTER (303) 22
KW_AUTO (304) 21
KW_STATIC_ASSERT (305) 155
KW_GENERIC (306) 227
KW_TYPEOF (307) 87 219
KW_AUTO_TYPE (308)
KW_ATTRIBUTE (309) 31
KW_DECLSPEC (310) 32
KW_EXTENSION (311)
KW_ASM (312) 125
ELLIPSIS (313) 68
ARROW (314) 226
INC (315) 211 222
DEC (316) 212 223
LSHIFT (317)
RSHIFT (318)
LE (319) 201
GE (320) 202
EQ (321) 196
NE (322) 197
LOGAND (323) 194
LOGOR (324) 192
ADD_ASSIGN (325) 180
SUB_ASSIGN (326) 181
MUL_ASSIGN (327) 182
DIV_ASSIGN (328) 183
MOD_ASSIGN (329) 184
AND_ASSIGN (330) 185
OR_ASSIGN (331) 186
XOR_ASSIGN (332) 187
LSHIFT_ASSIGN (333) 188
RSHIFT_ASSIGN (334) 189
LPAREN_BRACE (335) 236


Nonterminals, with rules where they appear

$accept (105)
    on left: 0
translation_unit (106)
    on left: 1 2, on right: 0 2
external_declaration (107)
    on left: 3 4 5, on right: 2
declaration (108)
    on left: 6 7, on right: 4 123 166
declaration_specifiers (109)
    on left: 8 9, on right: 6 7 9 71 72
declaration_specifier (110)
    on left: 10 11 12 13 14 15 16, on right: 8 9
storage_class_specifier (111)
    on left: 17 18 19 20 21 22, on right: 10
type_qualifier (112)
    on left: 23 24 25 26, on right: 12 54 55 89 91
function_specifier (113)
    on left: 27 28, on right: 13
alignment_specifier (114)
    on left: 29 30, on right: 14
attribute_specifier (115)
    on left: 31, on right: 15
declspec_specifier (116)
    on left: 32, on right: 16
attribute_arg_list_opt (117)
    on left: 33 34, on right: 31 32 40
attribute_arg_list (118)
    on left: 35 36, on right: 34 36
attribute_arg (119)
    on left: 37 38 39 40, on right: 35 36
init_declarator_list (120)
    on left: 41 42, on right: 7 42
init_declarator (121)
    on left: 43 44, on right: 41 42
declarator_opt (122)
    on left: 45 46, on right: 6
declarator (123)
    on left: 47, on right: 43 44 46 57 71 104 106 117
pointer_opt (124)
    on left: 48 49, on right: 47
pointer (125)
    on left: 50 51 52 53, on right: 49 52 53
type_qualifier_list (126)
    on left: 54 55, on right: 51 53 55
direct_declarator (127)
    on left: 56 57 58 59 60, on right: 47 58 59 60
identifier_list_opt (128)
    on left: 61 62, on right: 60
identifier_list (129)
    on left: 63 64, on right: 62 64
parameter_type_list_opt (130)
    on left: 65 66, on right: 59
parameter_type_list (131)
    on left: 67 68, on right: 66
parameter_list (132)
    on left: 69 70, on right: 67 68 70
parameter_declaration (133)
    on left: 71 72, on right: 69 70
type_specifier (134)
    on left: 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87,
    on right: 11 29 87 88 90 117 218
specifier_qualifier_list (135)
    on left: 88 89 90 91, on right: 90 91 100
struct_or_union_specifier (136)
    on left: 92 93 94 95 96 97, on right: 85
struct_declaration_list (137)
    on left: 98 99, on right: 94 95 96 97 99
struct_declaration (138)
    on left: 100 101, on right: 98 99
struct_declarator_list (139)
    on left: 102 103, on right: 100 103
struct_declarator (140)
    on left: 104 105 106, on right: 102 103
enum_specifier (141)
    on left: 107 108 109, on right: 86
enumerator_list_opt (142)
    on left: 110 111, on right: 108 109
enumerator_list (143)
    on left: 112 113 114, on right: 111 113 114
enumerator (144)
    on left: 115 116, on right: 112 113
function_definition (145)
    on left: 117, on right: 3
compound_statement (146)
    on left: 118, on right: 117 159 236
block_item_list_opt (147)
    on left: 119 120, on right: 118
block_item_list (148)
    on left: 121 122, on right: 120 122
block_item (149)
    on left: 123 124, on right: 121 122
asm_statement (150)
    on left: 125, on right: 171
asm_qualifiers_opt (151)
    on left: 126 127 128 129, on right: 125 127 128 129
asm_arguments (152)
    on left: 130 131 132 133 134, on right: 125
asm_output_operands_opt (153)
    on left: 135 136, on right: 131 132 133 134
asm_input_operands_opt (154)
    on left: 137 138, on right: 132 133 134
asm_clobbers_opt (155)
    on left: 139 140, on right: 133 134
asm_goto_labels_opt (156)
    on left: 141 142, on right: 134
asm_output_operands (157)
    on left: 143 144, on right: 136 144
asm_input_operands (158)
    on left: 145 146, on right: 138 146
asm_output_operand (159)
    on left: 147, on right: 143 144
asm_input_operand (160)
    on left: 148, on right: 145 146
asm_symbolic_name_opt (161)
    on left: 149 150, on right: 147 148
asm_clobbers (162)
    on left: 151 152, on right: 140 152
asm_goto_labels (163)
    on left: 153 154, on right: 142 154
static_assert_declaration (164)
    on left: 155, on right: 5 101
statement (165)
    on left: 156 157 158 159 160 161 162 163 164 165 166 167 168 169
    170 171, on right: 124 161 162 163 164 165 166 167 172 173 174
labeled_statement (166)
    on left: 172 173 174, on right: 160
expression_opt (167)
    on left: 175 176, on right: 158 165 166
expression (168)
    on left: 177, on right: 157 161 162 163 164 167 176 219 224 235
assignment_expression (169)
    on left: 178 179 180 181 182 183 184 185 186 187 188 189,
    on right: 148 177 179 180 181 182 183 184 185 186 187 188 189 227
    230 231 243 244
conditional_expression (170)
    on left: 190, on right: 155 178 256
logical_or_expression (171)
    on left: 191 192, on right: 190 192
logical_and_expression (172)
    on left: 193 194, on right: 191 192 194
equality_expression (173)
    on left: 195 196 197, on right: 193 194 196 197
relational_expression (174)
    on left: 198 199 200 201 202, on right: 195 196 197 199 200 201
    202
additive_expression (175)
    on left: 203 204 205, on right: 198 199 200 201 202 204 205
multiplicative_expression (176)
    on left: 206 207 208 209, on right: 203 204 205 207 208 209
unary_expression (177)
    on left: 210 211 212 213 214 215 216 217 218 219,
    on right: 147 179 180 181 182 183 184 185 186 187 188 189 206 207
    208 209 211 212 213 214 215 216 217
postfix_expression (178)
    on left: 220 221 222 223 224 225 226 227, on right: 210 221 222
    223 224 225 226
argument_expression_list_opt (179)
    on left: 228 229, on right: 221
argument_expression_list (180)
    on left: 230 231, on right: 229 231
primary_expression (181)
    on left: 232 233 234 235 236, on right: 220
constant (182)
    on left: 237 238 239, on right: 233
string_seq (183)
    on left: 240 241, on right: 130 131 132 133 134 234 241
assignment_expression_opt (184)
    on left: 242 243, on right: 58
initializer (185)
    on left: 244 245 246, on right: 44 247 248
initializer_list (186)
    on left: 247 248, on right: 245 246 248
designation_opt (187)
    on left: 249 250, on right: 247 248
designation (188)
    on left: 251, on right: 250
designator_list (189)
    on left: 252 253, on right: 251 253
designator (190)
    on left: 254 255, on right: 252 253
constant_expression (191)
    on left: 256, on right: 105 106 116 173 255


state 0

    0 $accept: . translation_unit $end

    $default  reduce using rule 1 (translation_unit)

    translation_unit  go to state 1


state 1

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . external_declaration

    $end              shift, and go to state 2
    KW_INT            shift, and go to state 3
    KW_CHAR           shift, and go to state 4
    KW_VOID           shift, and go to state 5
    KW_FLOAT          shift, and go to state 6
    KW_DOUBLE         shift, and go to state 7
    KW_SHORT          shift, and go to state 8
    KW_LONG           shift, and go to state 9
    KW_SIGNED         shift, and go to state 10
    KW_UNSIGNED       shift, and go to state 11
    KW_BOOL           shift, and go to state 12
    KW_COMPLEX        shift, and go to state 13
    KW_IMAGINARY      shift, and go to state 14
    KW_STRUCT         shift, and go to state 15
    KW_UNION          shift, and go to state 16
    KW_ENUM           shift, and go to state 17
    KW_TYPEDEF        shift, and go to state 18
    KW_ALIGNAS        shift, and go to state 19
    KW_NORETURN       shift, and go to state 20
    KW_THREAD_LOCAL   shift, and go to state 21
    KW_ATOMIC         shift, and go to state 22
    KW_CONST          shift, and go to state 23
    KW_VOLATILE       shift, and go to state 24
    KW_RESTRICT       shift, and go to state 25
    KW_INLINE         shift, and go to state 26
    KW_EXTERN         shift, and go to state 27
    KW_STATIC         shift, and go to state 28
    KW_REGISTER       shift, and go to state 29
    KW_AUTO           shift, and go to state 30
    KW_STATIC_ASSERT  shift, and go to state 31
    KW_TYPEOF         shift, and go to state 32
    KW_ATTRIBUTE      shift, and go to state 33
    KW_DECLSPEC       shift, and go to state 34

    external_declaration       go to state 35
    declaration                go to state 36
    declaration_specifiers     go to state 37
    declaration_specifier      go to state 38
    storage_class_specifier    go to state 39
    type_qualifier             go to state 40
    function_specifier         go to state 41
    alignment_specifier        go to state 42
    attribute_specifier        go to state 43
    declspec_specifier         go to state 44
    type_specifier             go to state 45
    struct_or_union_specifier  go to state 46
    enum_specifier             go to state 47
    function_definition        go to state 48
    static_assert_declaration  go to state 49


state 2

    0 $accept: translation_unit $end .

    $default  accept


state 3

   76 type_specifier: KW_INT .

    $default  reduce using rule 76 (type_specifier)


state 4

   74 type_specifier: KW_CHAR .

    $default  reduce using rule 74 (type_specifier)


state 5

   73 type_specifier: KW_VOID .

    $default  reduce using rule 73 (type_specifier)


state 6

   78 type_specifier: KW_FLOAT .

    $default  reduce using rule 78 (type_specifier)


state 7

   79 type_specifier: KW_DOUBLE .

    $default  reduce using rule 79 (type_specifier)


state 8

   75 type_specifier: KW_SHORT .

    $default  reduce using rule 75 (type_specifier)


state 9

   77 type_specifier: KW_LONG .

    $default  reduce using rule 77 (type_specifier)


state 10

   80 type_specifier: KW_SIGNED .

    $default  reduce using rule 80 (type_specifier)


state 11

   81 type_specifier: KW_UNSIGNED .

    $default  reduce using rule 81 (type_specifier)


state 12

   82 type_specifier: KW_BOOL .

    $default  reduce using rule 82 (type_specifier)


state 13

   83 type_specifier: KW_COMPLEX .

    $default  reduce using rule 83 (type_specifier)


state 14

   84 type_specifier: KW_IMAGINARY .

    $default  reduce using rule 84 (type_specifier)


state 15

   92 struct_or_union_specifier: KW_STRUCT . IDENTIFIER
   94                          | KW_STRUCT . '{' struct_declaration_list '}'
   96                          | KW_STRUCT . IDENTIFIER '{' struct_declaration_list '}'

    IDENTIFIER  shift, and go to state 50
    '{'         shift, and go to state 51


state 16

   93 struct_or_union_specifier: KW_UNION . IDENTIFIER
   95                          | KW_UNION . '{' struct_declaration_list '}'
   97                          | KW_UNION . IDENTIFIER '{' struct_declaration_list '}'

    IDENTIFIER  shift, and go to state 52
    '{'         shift, and go to state 53


state 17

  107 enum_specifier: KW_ENUM . IDENTIFIER
  108               | KW_ENUM . '{' enumerator_list_opt '}'
  109               | KW_ENUM . IDENTIFIER '{' enumerator_list_opt '}'

    IDENTIFIER  shift, and go to state 54
    '{'         shift, and go to state 55


state 18

   17 storage_class_specifier: KW_TYPEDEF .

    $default  reduce using rule 17 (storage_class_specifier)


state 19

   29 alignment_specifier: KW_ALIGNAS . '(' type_specifier ')'
   30                    | KW_ALIGNAS . '(' INTEGER_CONSTANT ')'

    '('  shift, and go to state 56


state 20

   28 function_specifier: KW_NORETURN .

    $default  reduce using rule 28 (function_specifier)


state 21

   20 storage_class_specifier: KW_THREAD_LOCAL .

    $default  reduce using rule 20 (storage_class_specifier)


state 22

   26 type_qualifier: KW_ATOMIC .

    $default  reduce using rule 26 (type_qualifier)


state 23

   23 type_qualifier: KW_CONST .

    $default  reduce using rule 23 (type_qualifier)


state 24

   24 type_qualifier: KW_VOLATILE .

    $default  reduce using rule 24 (type_qualifier)


state 25

   25 type_qualifier: KW_RESTRICT .

    $default  reduce using rule 25 (type_qualifier)


state 26

   27 function_specifier: KW_INLINE .

    $default  reduce using rule 27 (function_specifier)


state 27

   18 storage_class_specifier: KW_EXTERN .

    $default  reduce using rule 18 (storage_class_specifier)


state 28

   19 storage_class_specifier: KW_STATIC .

    $default  reduce using rule 19 (storage_class_specifier)


state 29

   22 storage_class_specifier: KW_REGISTER .

    $default  reduce using rule 22 (storage_class_specifier)


state 30

   21 storage_class_specifier: KW_AUTO .

    $default  reduce using rule 21 (storage_class_specifier)


state 31

  155 static_assert_declaration: KW_STATIC_ASSERT . '(' conditional_expression ',' STRING_LITERAL ')' ';'

    '('  shift, and go to state 57


state 32

   87 type_specifier: KW_TYPEOF . '(' type_specifier ')'

    '('  shift, and go to state 58


state 33

   31 attribute_specifier: KW_ATTRIBUTE . '(' attribute_arg_list_opt ')'

    '('  shift, and go to state 59


state 34

   32 declspec_specifier: KW_DECLSPEC . '(' attribute_arg_list_opt ')'

    '('  shift, and go to state 60


state 35

    2 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 2 (translation_unit)


state 36

    4 external_declaration: declaration . ';'

    ';'  shift, and go to state 61


state 37

    6 declaration: declaration_specifiers . declarator_opt
    7            | declaration_specifiers . init_declarator_list
    9 declaration_specifiers: declaration_specifiers . declaration_specifier

    KW_INT           shift, and go to state 3
    KW_CHAR          shift, and go to state 4
    KW_VOID          shift, and go to state 5
    KW_FLOAT         shift, and go to state 6
    KW_DOUBLE        shift, and go to state 7
    KW_SHORT         shift, and go to state 8
    KW_LONG          shift, and go to state 9
    KW_SIGNED        shift, and go to state 10
    KW_UNSIGNED      shift, and go to state 11
    KW_BOOL          shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_IMAGINARY     shift, and go to state 14
    KW_STRUCT        shift, and go to state 15
    KW_UNION         shift, and go to state 16
    KW_ENUM          shift, and go to state 17
    KW_TYPEDEF       shift, and go to state 18
    KW_ALIGNAS       shift, and go to state 19
    KW_NORETURN      shift, and go to state 20
    KW_THREAD_LOCAL  shift, and go to state 21
    KW_ATOMIC        shift, and go to state 22
    KW_CONST         shift, and go to state 23
    KW_VOLATILE      shift, and go to state 24
    KW_RESTRICT      shift, and go to state 25
    KW_INLINE        shift, and go to state 26
    KW_EXTERN        shift, and go to state 27
    KW_STATIC        shift, and go to state 28
    KW_REGISTER      shift, and go to state 29
    KW_AUTO          shift, and go to state 30
    KW_TYPEOF        shift, and go to state 32
    KW_ATTRIBUTE     shift, and go to state 33
    KW_DECLSPEC      shift, and go to state 34
    '*'              shift, and go to state 62

    IDENTIFIER  reduce using rule 45 (declarator_opt)
    IDENTIFIER  [reduce using rule 48 (pointer_opt)]
    KW_TYPEOF   [reduce using rule 45 (declarator_opt)]
    '*'         [reduce using rule 45 (declarator_opt)]
    '('         reduce using rule 45 (declarator_opt)
    '('         [reduce using rule 48 (pointer_opt)]
    $default    reduce using rule 45 (declarator_opt)

    declaration_specifier      go to state 63
    storage_class_specifier    go to state 39
    type_qualifier             go to state 40
    function_specifier         go to state 41
    alignment_specifier        go to state 42
    attribute_specifier        go to state 43
    declspec_specifier         go to state 44
    init_declarator_list       go to state 64
    init_declarator            go to state 65
    declarator_opt             go to state 66
    declarator                 go to state 67
    pointer_opt                go to state 68
    pointer                    go to state 69
    type_specifier             go to state 70
    struct_or_union_specifier  go to state 46
    enum_specifier             go to state 47


state 38

    8 declaration_specifiers: declaration_specifier .

    $default  reduce using rule 8 (declaration_specifiers)


state 39

   10 declaration_specifier: storage_class_specifier .

    $default  reduce using rule 10 (declaration_specifier)


state 40

   12 declaration_specifier: type_qualifier .

    $default  reduce using rule 12 (declaration_specifier)


state 41

   13 declaration_specifier: function_specifier .

    $default  reduce using rule 13 (declaration_specifier)


state 42

   14 declaration_specifier: alignment_specifier .

    $default  reduce using rule 14 (declaration_specifier)


state 43

   15 declaration_specifier: attribute_specifier .

    $default  reduce using rule 15 (declaration_specifier)


state 44

   16 declaration_specifier: declspec_specifier .

    $default  reduce using rule 16 (declaration_specifier)


state 45

   11 declaration_specifier: type_specifier .
  117 function_definition: type_specifier . declarator compound_statement

    '*'  shift, and go to state 62

    IDENTIFIER  reduce using rule 11 (declaration_specifier)
    IDENTIFIER  [reduce using rule 48 (pointer_opt)]
    '*'         [reduce using rule 11 (declaration_specifier)]
    '('         reduce using rule 11 (declaration_specifier)
    '('         [reduce using rule 48 (pointer_opt)]
    $default    reduce using rule 11 (declaration_specifier)

    declarator   go to state 71
    pointer_opt  go to state 68
    pointer      go to state 69


state 46

   85 type_specifier: struct_or_union_specifier .

    $default  reduce using rule 85 (type_specifier)


state 47

   86 type_specifier: enum_specifier .

    $default  reduce using rule 86 (type_specifier)


state 48

    3 external_declaration: function_definition .

    $default  reduce using rule 3 (external_declaration)


state 49

    5 external_declaration: static_assert_declaration .

    $default  reduce using rule 5 (external_declaration)


state 50

   92 struct_or_union_specifier: KW_STRUCT IDENTIFIER .
   96                          | KW_STRUCT IDENTIFIER . '{' struct_declaration_list '}'

    '{'  shift, and go to state 72

    $default  reduce using rule 92 (struct_or_union_specifier)


state 51

   94 struct_or_union_specifier: KW_STRUCT '{' . struct_declaration_list '}'

    KW_INT            shift, and go to state 3
    KW_CHAR           shift, and go to state 4
    KW_VOID           shift, and go to state 5
    KW_FLOAT          shift, and go to state 6
    KW_DOUBLE         shift, and go to state 7
    KW_SHORT          shift, and go to state 8
    KW_LONG           shift, and go to state 9
    KW_SIGNED         shift, and go to state 10
    KW_UNSIGNED       shift, and go to state 11
    KW_BOOL           shift, and go to state 12
    KW_COMPLEX        shift, and go to state 13
    KW_IMAGINARY      shift, and go to state 14
    KW_STRUCT         shift, and go to state 15
    KW_UNION          shift, and go to state 16
    KW_ENUM           shift, and go to state 17
    KW_ATOMIC         shift, and go to state 22
    KW_CONST          shift, and go to state 23
    KW_VOLATILE       shift, and go to state 24
    KW_RESTRICT       shift, and go to state 25
    KW_STATIC_ASSERT  shift, and go to state 31
    KW_TYPEOF         shift, and go to state 32

    type_qualifier             go to state 73
    type_specifier             go to state 74
    specifier_qualifier_list   go to state 75
    struct_or_union_specifier  go to state 46
    struct_declaration_list    go to state 76
    struct_declaration         go to state 77
    enum_specifier             go to state 47
    static_assert_declaration  go to state 78


state 52

   93 struct_or_union_specifier: KW_UNION IDENTIFIER .
   97                          | KW_UNION IDENTIFIER . '{' struct_declaration_list '}'

    '{'  shift, and go to state 79

    $default  reduce using rule 93 (struct_or_union_specifier)


state 53

   95 struct_or_union_specifier: KW_UNION '{' . struct_declaration_list '}'

    KW_INT            shift, and go to state 3
    KW_CHAR           shift, and go to state 4
    KW_VOID           shift, and go to state 5
    KW_FLOAT          shift, and go to state 6
    KW_DOUBLE         shift, and go to state 7
    KW_SHORT          shift, and go to state 8
    KW_LONG           shift, and go to state 9
    KW_SIGNED         shift, and go to state 10
    KW_UNSIGNED       shift, and go to state 11
    KW_BOOL           shift, and go to state 12
    KW_COMPLEX        shift, and go to state 13
    KW_IMAGINARY      shift, and go to state 14
    KW_STRUCT         shift, and go to state 15
    KW_UNION          shift, and go to state 16
    KW_ENUM           shift, and go to state 17
    KW_ATOMIC         shift, and go to state 22
    KW_CONST          shift, and go to state 23
    KW_VOLATILE       shift, and go to state 24
    KW_RESTRICT       shift, and go to state 25
    KW_STATIC_ASSERT  shift, and go to state 31
    KW_TYPEOF         shift, and go to state 32

    type_qualifier             go to state 73
    type_specifier             go to state 74
    specifier_qualifier_list   go to state 75
    struct_or_union_specifier  go to state 46
    struct_declaration_list    go to state 80
    struct_declaration         go to state 77
    enum_specifier             go to state 47
    static_assert_declaration  go to state 78


state 54

  107 enum_specifier: KW_ENUM IDENTIFIER .
  109               | KW_ENUM IDENTIFIER . '{' enumerator_list_opt '}'

    '{'  shift, and go to state 81

    $default  reduce using rule 107 (enum_specifier)


state 55

  108 enum_specifier: KW_ENUM '{' . enumerator_list_opt '}'

    IDENTIFIER  shift, and go to state 82

    $default  reduce using rule 110 (enumerator_list_opt)

    enumerator_list_opt  go to state 83
    enumerator_list      go to state 84
    enumerator           go to state 85


state 56

   29 alignment_specifier: KW_ALIGNAS '(' . type_specifier ')'
   30                    | KW_ALIGNAS '(' . INTEGER_CONSTANT ')'

    INTEGER_CONSTANT  shift, and go to state 86
    KW_INT            shift, and go to state 3
    KW_CHAR           shift, and go to state 4
    KW_VOID           shift, and go to state 5
    KW_FLOAT          shift, and go to state 6
    KW_DOUBLE         shift, and go to state 7
    KW_SHORT          shift, and go to state 8
    KW_LONG           shift, and go to state 9
    KW_SIGNED         shift, and go to state 10
    KW_UNSIGNED       shift, and go to state 11
    KW_BOOL           shift, and go to state 12
    KW_COMPLEX        shift, and go to state 13
    KW_IMAGINARY      shift, and go to state 14
    KW_STRUCT         shift, and go to state 15
    KW_UNION          shift, and go to state 16
    KW_ENUM           shift, and go to state 17
    KW_TYPEOF         shift, and go to state 32

    type_specifier             go to state 87
    struct_or_union_specifier  go to state 46
    enum_specifier             go to state 47


state 57

  155 static_assert_declaration: KW_STATIC_ASSERT '(' . conditional_expression ',' STRING_LITERAL ')' ';'

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    conditional_expression     go to state 104
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 111
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 58

   87 type_specifier: KW_TYPEOF '(' . type_specifier ')'

    KW_INT        shift, and go to state 3
    KW_CHAR       shift, and go to state 4
    KW_VOID       shift, and go to state 5
    KW_FLOAT      shift, and go to state 6
    KW_DOUBLE     shift, and go to state 7
    KW_SHORT      shift, and go to state 8
    KW_LONG       shift, and go to state 9
    KW_SIGNED     shift, and go to state 10
    KW_UNSIGNED   shift, and go to state 11
    KW_BOOL       shift, and go to state 12
    KW_COMPLEX    shift, and go to state 13
    KW_IMAGINARY  shift, and go to state 14
    KW_STRUCT     shift, and go to state 15
    KW_UNION      shift, and go to state 16
    KW_ENUM       shift, and go to state 17
    KW_TYPEOF     shift, and go to state 32

    type_specifier             go to state 116
    struct_or_union_specifier  go to state 46
    enum_specifier             go to state 47


state 59

   31 attribute_specifier: KW_ATTRIBUTE '(' . attribute_arg_list_opt ')'

    IDENTIFIER        shift, and go to state 117
    STRING_LITERAL    shift, and go to state 118
    INTEGER_CONSTANT  shift, and go to state 119
    '('               shift, and go to state 120

    $default  reduce using rule 33 (attribute_arg_list_opt)

    attribute_arg_list_opt  go to state 121
    attribute_arg_list      go to state 122
    attribute_arg           go to state 123


state 60

   32 declspec_specifier: KW_DECLSPEC '(' . attribute_arg_list_opt ')'

    IDENTIFIER        shift, and go to state 117
    STRING_LITERAL    shift, and go to state 118
    INTEGER_CONSTANT  shift, and go to state 119
    '('               shift, and go to state 120

    $default  reduce using rule 33 (attribute_arg_list_opt)

    attribute_arg_list_opt  go to state 124
    attribute_arg_list      go to state 122
    attribute_arg           go to state 123


state 61

    4 external_declaration: declaration ';' .

    $default  reduce using rule 4 (external_declaration)


state 62

   50 pointer: '*' .
   51        | '*' . type_qualifier_list
   52        | '*' . pointer
   53        | '*' . type_qualifier_list pointer

    KW_ATOMIC    shift, and go to state 22
    KW_CONST     shift, and go to state 23
    KW_VOLATILE  shift, and go to state 24
    KW_RESTRICT  shift, and go to state 25
    '*'          shift, and go to state 62

    $default  reduce using rule 50 (pointer)

    type_qualifier       go to state 125
    pointer              go to state 126
    type_qualifier_list  go to state 127


state 63

    9 declaration_specifiers: declaration_specifiers declaration_specifier .

    $default  reduce using rule 9 (declaration_specifiers)


state 64

    7 declaration: declaration_specifiers init_declarator_list .
   42 init_declarator_list: init_declarator_list . ',' init_declarator

    ','  shift, and go to state 128

    $default  reduce using rule 7 (declaration)


state 65

   41 init_declarator_list: init_declarator .

    $default  reduce using rule 41 (init_declarator_list)


state 66

    6 declaration: declaration_specifiers declarator_opt .

    $default  reduce using rule 6 (declaration)


state 67

   43 init_declarator: declarator .
   44                | declarator . '=' initializer
   46 declarator_opt: declarator .

    '='  shift, and go to state 129

    IDENTIFIER        reduce using rule 43 (init_declarator)
    IDENTIFIER        [reduce using rule 46 (declarator_opt)]
    STRING_LITERAL    reduce using rule 43 (init_declarator)
    STRING_LITERAL    [reduce using rule 46 (declarator_opt)]
    INTEGER_CONSTANT  reduce using rule 43 (init_declarator)
    INTEGER_CONSTANT  [reduce using rule 46 (declarator_opt)]
    FLOAT_CONSTANT    reduce using rule 43 (init_declarator)
    FLOAT_CONSTANT    [reduce using rule 46 (declarator_opt)]
    CHAR_CONSTANT     reduce using rule 43 (init_declarator)
    CHAR_CONSTANT     [reduce using rule 46 (declarator_opt)]
    KW_SIZEOF         reduce using rule 43 (init_declarator)
    KW_SIZEOF         [reduce using rule 46 (declarator_opt)]
    KW_GENERIC        reduce using rule 43 (init_declarator)
    KW_GENERIC        [reduce using rule 46 (declarator_opt)]
    KW_TYPEOF         reduce using rule 43 (init_declarator)
    KW_TYPEOF         [reduce using rule 46 (declarator_opt)]
    INC               reduce using rule 43 (init_declarator)
    INC               [reduce using rule 46 (declarator_opt)]
    DEC               reduce using rule 43 (init_declarator)
    DEC               [reduce using rule 46 (declarator_opt)]
    LPAREN_BRACE      reduce using rule 43 (init_declarator)
    LPAREN_BRACE      [reduce using rule 46 (declarator_opt)]
    '&'               reduce using rule 43 (init_declarator)
    '&'               [reduce using rule 46 (declarator_opt)]
    '+'               reduce using rule 43 (init_declarator)
    '+'               [reduce using rule 46 (declarator_opt)]
    '-'               reduce using rule 43 (init_declarator)
    '-'               [reduce using rule 46 (declarator_opt)]
    '*'               reduce using rule 43 (init_declarator)
    '*'               [reduce using rule 46 (declarator_opt)]
    '('               reduce using rule 43 (init_declarator)
    '('               [reduce using rule 46 (declarator_opt)]
    ';'               reduce using rule 43 (init_declarator)
    ';'               [reduce using rule 46 (declarator_opt)]
    $default          reduce using rule 43 (init_declarator)


state 68

   47 declarator: pointer_opt . direct_declarator

    IDENTIFIER  shift, and go to state 130
    '('         shift, and go to state 131

    direct_declarator  go to state 132


state 69

   49 pointer_opt: pointer .

    $default  reduce using rule 49 (pointer_opt)


state 70

   11 declaration_specifier: type_specifier .

    $default  reduce using rule 11 (declaration_specifier)


state 71

  117 function_definition: type_specifier declarator . compound_statement

    '{'  shift, and go to state 133

    compound_statement  go to state 134


state 72

   96 struct_or_union_specifier: KW_STRUCT IDENTIFIER '{' . struct_declaration_list '}'

    KW_INT            shift, and go to state 3
    KW_CHAR           shift, and go to state 4
    KW_VOID           shift, and go to state 5
    KW_FLOAT          shift, and go to state 6
    KW_DOUBLE         shift, and go to state 7
    KW_SHORT          shift, and go to state 8
    KW_LONG           shift, and go to state 9
    KW_SIGNED         shift, and go to state 10
    KW_UNSIGNED       shift, and go to state 11
    KW_BOOL           shift, and go to state 12
    KW_COMPLEX        shift, and go to state 13
    KW_IMAGINARY      shift, and go to state 14
    KW_STRUCT         shift, and go to state 15
    KW_UNION          shift, and go to state 16
    KW_ENUM           shift, and go to state 17
    KW_ATOMIC         shift, and go to state 22
    KW_CONST          shift, and go to state 23
    KW_VOLATILE       shift, and go to state 24
    KW_RESTRICT       shift, and go to state 25
    KW_STATIC_ASSERT  shift, and go to state 31
    KW_TYPEOF         shift, and go to state 32

    type_qualifier             go to state 73
    type_specifier             go to state 74
    specifier_qualifier_list   go to state 75
    struct_or_union_specifier  go to state 46
    struct_declaration_list    go to state 135
    struct_declaration         go to state 77
    enum_specifier             go to state 47
    static_assert_declaration  go to state 78


state 73

   89 specifier_qualifier_list: type_qualifier .

    $default  reduce using rule 89 (specifier_qualifier_list)


state 74

   88 specifier_qualifier_list: type_specifier .

    $default  reduce using rule 88 (specifier_qualifier_list)


state 75

   90 specifier_qualifier_list: specifier_qualifier_list . type_specifier
   91                         | specifier_qualifier_list . type_qualifier
  100 struct_declaration: specifier_qualifier_list . struct_declarator_list ';'

    KW_INT        shift, and go to state 3
    KW_CHAR       shift, and go to state 4
    KW_VOID       shift, and go to state 5
    KW_FLOAT      shift, and go to state 6
    KW_DOUBLE     shift, and go to state 7
    KW_SHORT      shift, and go to state 8
    KW_LONG       shift, and go to state 9
    KW_SIGNED     shift, and go to state 10
    KW_UNSIGNED   shift, and go to state 11
    KW_BOOL       shift, and go to state 12
    KW_COMPLEX    shift, and go to state 13
    KW_IMAGINARY  shift, and go to state 14
    KW_STRUCT     shift, and go to state 15
    KW_UNION      shift, and go to state 16
    KW_ENUM       shift, and go to state 17
    KW_ATOMIC     shift, and go to state 22
    KW_CONST      shift, and go to state 23
    KW_VOLATILE   shift, and go to state 24
    KW_RESTRICT   shift, and go to state 25
    KW_TYPEOF     shift, and go to state 32
    ':'           shift, and go to state 136
    '*'           shift, and go to state 62

    $default  reduce using rule 48 (pointer_opt)

    type_qualifier             go to state 137
    declarator                 go to state 138
    pointer_opt                go to state 68
    pointer                    go to state 69
    type_specifier             go to state 139
    struct_or_union_specifier  go to state 46
    struct_declarator_list     go to state 140
    struct_declarator          go to state 141
    enum_specifier             go to state 47


state 76

   94 struct_or_union_specifier: KW_STRUCT '{' struct_declaration_list . '}'
   99 struct_declaration_list: struct_declaration_list . struct_declaration

    KW_INT            shift, and go to state 3
    KW_CHAR           shift, and go to state 4
    KW_VOID           shift, and go to state 5
    KW_FLOAT          shift, and go to state 6
    KW_DOUBLE         shift, and go to state 7
    KW_SHORT          shift, and go to state 8
    KW_LONG           shift, and go to state 9
    KW_SIGNED         shift, and go to state 10
    KW_UNSIGNED       shift, and go to state 11
    KW_BOOL           shift, and go to state 12
    KW_COMPLEX        shift, and go to state 13
    KW_IMAGINARY      shift, and go to state 14
    KW_STRUCT         shift, and go to state 15
    KW_UNION          shift, and go to state 16
    KW_ENUM           shift, and go to state 17
    KW_ATOMIC         shift, and go to state 22
    KW_CONST          shift, and go to state 23
    KW_VOLATILE       shift, and go to state 24
    KW_RESTRICT       shift, and go to state 25
    KW_STATIC_ASSERT  shift, and go to state 31
    KW_TYPEOF         shift, and go to state 32
    '}'               shift, and go to state 142

    type_qualifier             go to state 73
    type_specifier             go to state 74
    specifier_qualifier_list   go to state 75
    struct_or_union_specifier  go to state 46
    struct_declaration         go to state 143
    enum_specifier             go to state 47
    static_assert_declaration  go to state 78


state 77

   98 struct_declaration_list: struct_declaration .

    $default  reduce using rule 98 (struct_declaration_list)


state 78

  101 struct_declaration: static_assert_declaration .

    $default  reduce using rule 101 (struct_declaration)


state 79

   97 struct_or_union_specifier: KW_UNION IDENTIFIER '{' . struct_declaration_list '}'

    KW_INT            shift, and go to state 3
    KW_CHAR           shift, and go to state 4
    KW_VOID           shift, and go to state 5
    KW_FLOAT          shift, and go to state 6
    KW_DOUBLE         shift, and go to state 7
    KW_SHORT          shift, and go to state 8
    KW_LONG           shift, and go to state 9
    KW_SIGNED         shift, and go to state 10
    KW_UNSIGNED       shift, and go to state 11
    KW_BOOL           shift, and go to state 12
    KW_COMPLEX        shift, and go to state 13
    KW_IMAGINARY      shift, and go to state 14
    KW_STRUCT         shift, and go to state 15
    KW_UNION          shift, and go to state 16
    KW_ENUM           shift, and go to state 17
    KW_ATOMIC         shift, and go to state 22
    KW_CONST          shift, and go to state 23
    KW_VOLATILE       shift, and go to state 24
    KW_RESTRICT       shift, and go to state 25
    KW_STATIC_ASSERT  shift, and go to state 31
    KW_TYPEOF         shift, and go to state 32

    type_qualifier             go to state 73
    type_specifier             go to state 74
    specifier_qualifier_list   go to state 75
    struct_or_union_specifier  go to state 46
    struct_declaration_list    go to state 144
    struct_declaration         go to state 77
    enum_specifier             go to state 47
    static_assert_declaration  go to state 78


state 80

   95 struct_or_union_specifier: KW_UNION '{' struct_declaration_list . '}'
   99 struct_declaration_list: struct_declaration_list . struct_declaration

    KW_INT            shift, and go to state 3
    KW_CHAR           shift, and go to state 4
    KW_VOID           shift, and go to state 5
    KW_FLOAT          shift, and go to state 6
    KW_DOUBLE         shift, and go to state 7
    KW_SHORT          shift, and go to state 8
    KW_LONG           shift, and go to state 9
    KW_SIGNED         shift, and go to state 10
    KW_UNSIGNED       shift, and go to state 11
    KW_BOOL           shift, and go to state 12
    KW_COMPLEX        shift, and go to state 13
    KW_IMAGINARY      shift, and go to state 14
    KW_STRUCT         shift, and go to state 15
    KW_UNION          shift, and go to state 16
    KW_ENUM           shift, and go to state 17
    KW_ATOMIC         shift, and go to state 22
    KW_CONST          shift, and go to state 23
    KW_VOLATILE       shift, and go to state 24
    KW_RESTRICT       shift, and go to state 25
    KW_STATIC_ASSERT  shift, and go to state 31
    KW_TYPEOF         shift, and go to state 32
    '}'               shift, and go to state 145

    type_qualifier             go to state 73
    type_specifier             go to state 74
    specifier_qualifier_list   go to state 75
    struct_or_union_specifier  go to state 46
    struct_declaration         go to state 143
    enum_specifier             go to state 47
    static_assert_declaration  go to state 78


state 81

  109 enum_specifier: KW_ENUM IDENTIFIER '{' . enumerator_list_opt '}'

    IDENTIFIER  shift, and go to state 82

    $default  reduce using rule 110 (enumerator_list_opt)

    enumerator_list_opt  go to state 146
    enumerator_list      go to state 84
    enumerator           go to state 85


state 82

  115 enumerator: IDENTIFIER .
  116           | IDENTIFIER . '=' constant_expression

    '='  shift, and go to state 147

    $default  reduce using rule 115 (enumerator)


state 83

  108 enum_specifier: KW_ENUM '{' enumerator_list_opt . '}'

    '}'  shift, and go to state 148


state 84

  111 enumerator_list_opt: enumerator_list .
  113 enumerator_list: enumerator_list . ',' enumerator
  114                | enumerator_list . ','

    ','  shift, and go to state 149

    $default  reduce using rule 111 (enumerator_list_opt)


state 85

  112 enumerator_list: enumerator .

    $default  reduce using rule 112 (enumerator_list)


state 86

   30 alignment_specifier: KW_ALIGNAS '(' INTEGER_CONSTANT . ')'

    ')'  shift, and go to state 150


state 87

   29 alignment_specifier: KW_ALIGNAS '(' type_specifier . ')'

    ')'  shift, and go to state 151


state 88

  232 primary_expression: IDENTIFIER .

    $default  reduce using rule 232 (primary_expression)


state 89

  240 string_seq: STRING_LITERAL .

    $default  reduce using rule 240 (string_seq)


state 90

  237 constant: INTEGER_CONSTANT .

    $default  reduce using rule 237 (constant)


state 91

  238 constant: FLOAT_CONSTANT .

    $default  reduce using rule 238 (constant)


state 92

  239 constant: CHAR_CONSTANT .

    $default  reduce using rule 239 (constant)


state 93

  217 unary_expression: KW_SIZEOF . unary_expression
  218                 | KW_SIZEOF . '(' type_specifier ')'

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 152

    unary_expression    go to state 153
    postfix_expression  go to state 112
    primary_expression  go to state 113
    constant            go to state 114
    string_seq          go to state 115


state 94

  227 postfix_expression: KW_GENERIC . '(' assignment_expression ',' assignment_expression ')'

    '('  shift, and go to state 154


state 95

  219 unary_expression: KW_TYPEOF . '(' expression ')'

    '('  shift, and go to state 155


state 96

  211 unary_expression: INC . unary_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    unary_expression    go to state 156
    postfix_expression  go to state 112
    primary_expression  go to state 113
    constant            go to state 114
    string_seq          go to state 115


state 97

  212 unary_expression: DEC . unary_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    unary_expression    go to state 157
    postfix_expression  go to state 112
    primary_expression  go to state 113
    constant            go to state 114
    string_seq          go to state 115


state 98

  236 primary_expression: LPAREN_BRACE . compound_statement ')'

    '{'  shift, and go to state 133

    compound_statement  go to state 158


state 99

  213 unary_expression: '&' . unary_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    unary_expression    go to state 159
    postfix_expression  go to state 112
    primary_expression  go to state 113
    constant            go to state 114
    string_seq          go to state 115


state 100

  215 unary_expression: '+' . unary_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    unary_expression    go to state 160
    postfix_expression  go to state 112
    primary_expression  go to state 113
    constant            go to state 114
    string_seq          go to state 115


state 101

  216 unary_expression: '-' . unary_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    unary_expression    go to state 161
    postfix_expression  go to state 112
    primary_expression  go to state 113
    constant            go to state 114
    string_seq          go to state 115


state 102

  214 unary_expression: '*' . unary_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    unary_expression    go to state 162
    postfix_expression  go to state 112
    primary_expression  go to state 113
    constant            go to state 114
    string_seq          go to state 115


state 103

  235 primary_expression: '(' . expression ')'

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    expression                 go to state 163
    assignment_expression      go to state 164
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 104

  155 static_assert_declaration: KW_STATIC_ASSERT '(' conditional_expression . ',' STRING_LITERAL ')' ';'

    ','  shift, and go to state 167


state 105

  190 conditional_expression: logical_or_expression .
  192 logical_or_expression: logical_or_expression . LOGOR logical_and_expression

    LOGOR  shift, and go to state 168

    $default  reduce using rule 190 (conditional_expression)


state 106

  191 logical_or_expression: logical_and_expression .
  194 logical_and_expression: logical_and_expression . LOGAND equality_expression

    LOGAND  shift, and go to state 169

    $default  reduce using rule 191 (logical_or_expression)


state 107

  193 logical_and_expression: equality_expression .
  196 equality_expression: equality_expression . EQ relational_expression
  197                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 170
    NE  shift, and go to state 171

    $default  reduce using rule 193 (logical_and_expression)


state 108

  195 equality_expression: relational_expression .
  199 relational_expression: relational_expression . '<' additive_expression
  200                      | relational_expression . '>' additive_expression
  201                      | relational_expression . LE additive_expression
  202                      | relational_expression . GE additive_expression

    LE   shift, and go to state 172
    GE   shift, and go to state 173
    '<'  shift, and go to state 174
    '>'  shift, and go to state 175

    $default  reduce using rule 195 (equality_expression)


state 109

  198 relational_expression: additive_expression .
  204 additive_expression: additive_expression . '+' multiplicative_expression
  205                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 176
    '-'  shift, and go to state 177

    '+'       [reduce using rule 198 (relational_expression)]
    '-'       [reduce using rule 198 (relational_expression)]
    $default  reduce using rule 198 (relational_expression)


state 110

  203 additive_expression: multiplicative_expression .
  207 multiplicative_expression: multiplicative_expression . '*' unary_expression
  208                          | multiplicative_expression . '/' unary_expression
  209                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 178
    '/'  shift, and go to state 179
    '%'  shift, and go to state 180

    '*'       [reduce using rule 203 (additive_expression)]
    $default  reduce using rule 203 (additive_expression)


state 111

  206 multiplicative_expression: unary_expression .

    $default  reduce using rule 206 (multiplicative_expression)


state 112

  210 unary_expression: postfix_expression .
  221 postfix_expression: postfix_expression . '(' argument_expression_list_opt ')'
  222                   | postfix_expression . INC
  223                   | postfix_expression . DEC
  224                   | postfix_expression . '[' expression ']'
  225                   | postfix_expression . '.' IDENTIFIER
  226                   | postfix_expression . ARROW IDENTIFIER

    ARROW  shift, and go to state 181
    INC    shift, and go to state 182
    DEC    shift, and go to state 183
    '['    shift, and go to state 184
    '('    shift, and go to state 185
    '.'    shift, and go to state 186

    INC       [reduce using rule 210 (unary_expression)]
    DEC       [reduce using rule 210 (unary_expression)]
    '('       [reduce using rule 210 (unary_expression)]
    $default  reduce using rule 210 (unary_expression)


state 113

  220 postfix_expression: primary_expression .

    $default  reduce using rule 220 (postfix_expression)


state 114

  233 primary_expression: constant .

    $default  reduce using rule 233 (primary_expression)


state 115

  234 primary_expression: string_seq .
  241 string_seq: string_seq . STRING_LITERAL

    STRING_LITERAL  shift, and go to state 187

    STRING_LITERAL  [reduce using rule 234 (primary_expression)]
    $default        reduce using rule 234 (primary_expression)


state 116

   87 type_specifier: KW_TYPEOF '(' type_specifier . ')'

    ')'  shift, and go to state 188


state 117

   37 attribute_arg: IDENTIFIER .

    $default  reduce using rule 37 (attribute_arg)


state 118

   38 attribute_arg: STRING_LITERAL .

    $default  reduce using rule 38 (attribute_arg)


state 119

   39 attribute_arg: INTEGER_CONSTANT .

    $default  reduce using rule 39 (attribute_arg)


state 120

   40 attribute_arg: '(' . attribute_arg_list_opt ')'

    IDENTIFIER        shift, and go to state 117
    STRING_LITERAL    shift, and go to state 118
    INTEGER_CONSTANT  shift, and go to state 119
    '('               shift, and go to state 120

    $default  reduce using rule 33 (attribute_arg_list_opt)

    attribute_arg_list_opt  go to state 189
    attribute_arg_list      go to state 122
    attribute_arg           go to state 123


state 121

   31 attribute_specifier: KW_ATTRIBUTE '(' attribute_arg_list_opt . ')'

    ')'  shift, and go to state 190


state 122

   34 attribute_arg_list_opt: attribute_arg_list .
   36 attribute_arg_list: attribute_arg_list . ',' attribute_arg

    ','  shift, and go to state 191

    $default  reduce using rule 34 (attribute_arg_list_opt)


state 123

   35 attribute_arg_list: attribute_arg .

    $default  reduce using rule 35 (attribute_arg_list)


state 124

   32 declspec_specifier: KW_DECLSPEC '(' attribute_arg_list_opt . ')'

    ')'  shift, and go to state 192


state 125

   54 type_qualifier_list: type_qualifier .

    $default  reduce using rule 54 (type_qualifier_list)


state 126

   52 pointer: '*' pointer .

    $default  reduce using rule 52 (pointer)


state 127

   51 pointer: '*' type_qualifier_list .
   53        | '*' type_qualifier_list . pointer
   55 type_qualifier_list: type_qualifier_list . type_qualifier

    KW_ATOMIC    shift, and go to state 22
    KW_CONST     shift, and go to state 23
    KW_VOLATILE  shift, and go to state 24
    KW_RESTRICT  shift, and go to state 25
    '*'          shift, and go to state 62

    $default  reduce using rule 51 (pointer)

    type_qualifier  go to state 193
    pointer         go to state 194


state 128

   42 init_declarator_list: init_declarator_list ',' . init_declarator

    '*'  shift, and go to state 62

    $default  reduce using rule 48 (pointer_opt)

    init_declarator  go to state 195
    declarator       go to state 196
    pointer_opt      go to state 68
    pointer          go to state 69


state 129

   44 init_declarator: declarator '=' . initializer

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103
    '{'               shift, and go to state 197

    assignment_expression      go to state 198
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115
    initializer                go to state 199


state 130

   56 direct_declarator: IDENTIFIER .

    $default  reduce using rule 56 (direct_declarator)


state 131

   57 direct_declarator: '(' . declarator ')'

    '*'  shift, and go to state 62

    $default  reduce using rule 48 (pointer_opt)

    declarator   go to state 200
    pointer_opt  go to state 68
    pointer      go to state 69


state 132

   47 declarator: pointer_opt direct_declarator .
   58 direct_declarator: direct_declarator . '[' assignment_expression_opt ']'
   59                  | direct_declarator . '(' parameter_type_list_opt ')'
   60                  | direct_declarator . '(' identifier_list_opt ')'

    '['  shift, and go to state 201
    '('  shift, and go to state 202

    '('       [reduce using rule 47 (declarator)]
    $default  reduce using rule 47 (declarator)


state 133

  118 compound_statement: '{' . block_item_list_opt '}'

    IDENTIFIER        shift, and go to state 203
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_INT            shift, and go to state 3
    KW_CHAR           shift, and go to state 4
    KW_VOID           shift, and go to state 5
    KW_FLOAT          shift, and go to state 6
    KW_DOUBLE         shift, and go to state 7
    KW_SHORT          shift, and go to state 8
    KW_LONG           shift, and go to state 9
    KW_SIGNED         shift, and go to state 10
    KW_UNSIGNED       shift, and go to state 11
    KW_BOOL           shift, and go to state 12
    KW_COMPLEX        shift, and go to state 13
    KW_IMAGINARY      shift, and go to state 14
    KW_STRUCT         shift, and go to state 15
    KW_UNION          shift, and go to state 16
    KW_ENUM           shift, and go to state 17
    KW_TYPEDEF        shift, and go to state 18
    KW_RETURN         shift, and go to state 204
    KW_IF             shift, and go to state 205
    KW_WHILE          shift, and go to state 206
    KW_FOR            shift, and go to state 207
    KW_DO             shift, and go to state 208
    KW_SWITCH         shift, and go to state 209
    KW_CASE           shift, and go to state 210
    KW_DEFAULT        shift, and go to state 211
    KW_BREAK          shift, and go to state 212
    KW_CONTINUE       shift, and go to state 213
    KW_GOTO           shift, and go to state 214
    KW_SIZEOF         shift, and go to state 93
    KW_ALIGNAS        shift, and go to state 19
    KW_NORETURN       shift, and go to state 20
    KW_THREAD_LOCAL   shift, and go to state 21
    KW_ATOMIC         shift, and go to state 22
    KW_CONST          shift, and go to state 23
    KW_VOLATILE       shift, and go to state 24
    KW_RESTRICT       shift, and go to state 25
    KW_INLINE         shift, and go to state 26
    KW_EXTERN         shift, and go to state 27
    KW_STATIC         shift, and go to state 28
    KW_REGISTER       shift, and go to state 29
    KW_AUTO           shift, and go to state 30
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 215
    KW_ATTRIBUTE      shift, and go to state 33
    KW_DECLSPEC       shift, and go to state 34
    KW_ASM            shift, and go to state 216
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103
    ';'               shift, and go to state 217
    '{'               shift, and go to state 133

    $default  reduce using rule 119 (block_item_list_opt)

    declaration                go to state 218
    declaration_specifiers     go to state 37
    declaration_specifier      go to state 38
    storage_class_specifier    go to state 39
    type_qualifier             go to state 40
    function_specifier         go to state 41
    alignment_specifier        go to state 42
    attribute_specifier        go to state 43
    declspec_specifier         go to state 44
    type_specifier             go to state 70
    struct_or_union_specifier  go to state 46
    enum_specifier             go to state 47
    compound_statement         go to state 219
    block_item_list_opt        go to state 220
    block_item_list            go to state 221
    block_item                 go to state 222
    asm_statement              go to state 223
    statement                  go to state 224
    labeled_statement          go to state 225
    expression                 go to state 226
    assignment_expression      go to state 164
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 134

  117 function_definition: type_specifier declarator compound_statement .

    $default  reduce using rule 117 (function_definition)


state 135

   96 struct_or_union_specifier: KW_STRUCT IDENTIFIER '{' struct_declaration_list . '}'
   99 struct_declaration_list: struct_declaration_list . struct_declaration

    KW_INT            shift, and go to state 3
    KW_CHAR           shift, and go to state 4
    KW_VOID           shift, and go to state 5
    KW_FLOAT          shift, and go to state 6
    KW_DOUBLE         shift, and go to state 7
    KW_SHORT          shift, and go to state 8
    KW_LONG           shift, and go to state 9
    KW_SIGNED         shift, and go to state 10
    KW_UNSIGNED       shift, and go to state 11
    KW_BOOL           shift, and go to state 12
    KW_COMPLEX        shift, and go to state 13
    KW_IMAGINARY      shift, and go to state 14
    KW_STRUCT         shift, and go to state 15
    KW_UNION          shift, and go to state 16
    KW_ENUM           shift, and go to state 17
    KW_ATOMIC         shift, and go to state 22
    KW_CONST          shift, and go to state 23
    KW_VOLATILE       shift, and go to state 24
    KW_RESTRICT       shift, and go to state 25
    KW_STATIC_ASSERT  shift, and go to state 31
    KW_TYPEOF         shift, and go to state 32
    '}'               shift, and go to state 227

    type_qualifier             go to state 73
    type_specifier             go to state 74
    specifier_qualifier_list   go to state 75
    struct_or_union_specifier  go to state 46
    struct_declaration         go to state 143
    enum_specifier             go to state 47
    static_assert_declaration  go to state 78


state 136

  105 struct_declarator: ':' . constant_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    conditional_expression     go to state 228
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 111
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115
    constant_expression        go to state 229


state 137

   91 specifier_qualifier_list: specifier_qualifier_list type_qualifier .

    $default  reduce using rule 91 (specifier_qualifier_list)


state 138

  104 struct_declarator: declarator .
  106                  | declarator . ':' constant_expression

    ':'  shift, and go to state 230

    $default  reduce using rule 104 (struct_declarator)


state 139

   90 specifier_qualifier_list: specifier_qualifier_list type_specifier .

    $default  reduce using rule 90 (specifier_qualifier_list)


state 140

  100 struct_declaration: specifier_qualifier_list struct_declarator_list . ';'
  103 struct_declarator_list: struct_declarator_list . ',' struct_declarator

    ';'  shift, and go to state 231
    ','  shift, and go to state 232


state 141

  102 struct_declarator_list: struct_declarator .

    $default  reduce using rule 102 (struct_declarator_list)


state 142

   94 struct_or_union_specifier: KW_STRUCT '{' struct_declaration_list '}' .

    $default  reduce using rule 94 (struct_or_union_specifier)


state 143

   99 struct_declaration_list: struct_declaration_list struct_declaration .

    $default  reduce using rule 99 (struct_declaration_list)


state 144

   97 struct_or_union_specifier: KW_UNION IDENTIFIER '{' struct_declaration_list . '}'
   99 struct_declaration_list: struct_declaration_list . struct_declaration

    KW_INT            shift, and go to state 3
    KW_CHAR           shift, and go to state 4
    KW_VOID           shift, and go to state 5
    KW_FLOAT          shift, and go to state 6
    KW_DOUBLE         shift, and go to state 7
    KW_SHORT          shift, and go to state 8
    KW_LONG           shift, and go to state 9
    KW_SIGNED         shift, and go to state 10
    KW_UNSIGNED       shift, and go to state 11
    KW_BOOL           shift, and go to state 12
    KW_COMPLEX        shift, and go to state 13
    KW_IMAGINARY      shift, and go to state 14
    KW_STRUCT         shift, and go to state 15
    KW_UNION          shift, and go to state 16
    KW_ENUM           shift, and go to state 17
    KW_ATOMIC         shift, and go to state 22
    KW_CONST          shift, and go to state 23
    KW_VOLATILE       shift, and go to state 24
    KW_RESTRICT       shift, and go to state 25
    KW_STATIC_ASSERT  shift, and go to state 31
    KW_TYPEOF         shift, and go to state 32
    '}'               shift, and go to state 233

    type_qualifier             go to state 73
    type_specifier             go to state 74
    specifier_qualifier_list   go to state 75
    struct_or_union_specifier  go to state 46
    struct_declaration         go to state 143
    enum_specifier             go to state 47
    static_assert_declaration  go to state 78


state 145

   95 struct_or_union_specifier: KW_UNION '{' struct_declaration_list '}' .

    $default  reduce using rule 95 (struct_or_union_specifier)


state 146

  109 enum_specifier: KW_ENUM IDENTIFIER '{' enumerator_list_opt . '}'

    '}'  shift, and go to state 234


state 147

  116 enumerator: IDENTIFIER '=' . constant_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    conditional_expression     go to state 228
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 111
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115
    constant_expression        go to state 235


state 148

  108 enum_specifier: KW_ENUM '{' enumerator_list_opt '}' .

    $default  reduce using rule 108 (enum_specifier)


state 149

  113 enumerator_list: enumerator_list ',' . enumerator
  114                | enumerator_list ',' .

    IDENTIFIER  shift, and go to state 82

    $default  reduce using rule 114 (enumerator_list)

    enumerator  go to state 236


state 150

   30 alignment_specifier: KW_ALIGNAS '(' INTEGER_CONSTANT ')' .

    $default  reduce using rule 30 (alignment_specifier)


state 151

   29 alignment_specifier: KW_ALIGNAS '(' type_specifier ')' .

    $default  reduce using rule 29 (alignment_specifier)


state 152

  218 unary_expression: KW_SIZEOF '(' . type_specifier ')'
  235 primary_expression: '(' . expression ')'

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_INT            shift, and go to state 3
    KW_CHAR           shift, and go to state 4
    KW_VOID           shift, and go to state 5
    KW_FLOAT          shift, and go to state 6
    KW_DOUBLE         shift, and go to state 7
    KW_SHORT          shift, and go to state 8
    KW_LONG           shift, and go to state 9
    KW_SIGNED         shift, and go to state 10
    KW_UNSIGNED       shift, and go to state 11
    KW_BOOL           shift, and go to state 12
    KW_COMPLEX        shift, and go to state 13
    KW_IMAGINARY      shift, and go to state 14
    KW_STRUCT         shift, and go to state 15
    KW_UNION          shift, and go to state 16
    KW_ENUM           shift, and go to state 17
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 215
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    type_specifier             go to state 237
    struct_or_union_specifier  go to state 46
    enum_specifier             go to state 47
    expression                 go to state 163
    assignment_expression      go to state 164
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 153

  217 unary_expression: KW_SIZEOF unary_expression .

    $default  reduce using rule 217 (unary_expression)


state 154

  227 postfix_expression: KW_GENERIC '(' . assignment_expression ',' assignment_expression ')'

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    assignment_expression      go to state 238
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 155

  219 unary_expression: KW_TYPEOF '(' . expression ')'

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    expression                 go to state 239
    assignment_expression      go to state 164
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 156

  211 unary_expression: INC unary_expression .

    $default  reduce using rule 211 (unary_expression)


state 157

  212 unary_expression: DEC unary_expression .

    $default  reduce using rule 212 (unary_expression)


state 158

  236 primary_expression: LPAREN_BRACE compound_statement . ')'

    ')'  shift, and go to state 240


state 159

  213 unary_expression: '&' unary_expression .

    $default  reduce using rule 213 (unary_expression)


state 160

  215 unary_expression: '+' unary_expression .

    $default  reduce using rule 215 (unary_expression)


state 161

  216 unary_expression: '-' unary_expression .

    $default  reduce using rule 216 (unary_expression)


state 162

  214 unary_expression: '*' unary_expression .

    $default  reduce using rule 214 (unary_expression)


state 163

  235 primary_expression: '(' expression . ')'

    ')'  shift, and go to state 241


state 164

  177 expression: assignment_expression .

    $default  reduce using rule 177 (expression)


state 165

  178 assignment_expression: conditional_expression .

    $default  reduce using rule 178 (assignment_expression)


state 166

  179 assignment_expression: unary_expression . '=' assignment_expression
  180                      | unary_expression . ADD_ASSIGN assignment_expression
  181                      | unary_expression . SUB_ASSIGN assignment_expression
  182                      | unary_expression . MUL_ASSIGN assignment_expression
  183                      | unary_expression . DIV_ASSIGN assignment_expression
  184                      | unary_expression . MOD_ASSIGN assignment_expression
  185                      | unary_expression . AND_ASSIGN assignment_expression
  186                      | unary_expression . OR_ASSIGN assignment_expression
  187                      | unary_expression . XOR_ASSIGN assignment_expression
  188                      | unary_expression . LSHIFT_ASSIGN assignment_expression
  189                      | unary_expression . RSHIFT_ASSIGN assignment_expression
  206 multiplicative_expression: unary_expression .

    ADD_ASSIGN     shift, and go to state 242
    SUB_ASSIGN     shift, and go to state 243
    MUL_ASSIGN     shift, and go to state 244
    DIV_ASSIGN     shift, and go to state 245
    MOD_ASSIGN     shift, and go to state 246
    AND_ASSIGN     shift, and go to state 247
    OR_ASSIGN      shift, and go to state 248
    XOR_ASSIGN     shift, and go to state 249
    LSHIFT_ASSIGN  shift, and go to state 250
    RSHIFT_ASSIGN  shift, and go to state 251
    '='            shift, and go to state 252

    $default  reduce using rule 206 (multiplicative_expression)


state 167

  155 static_assert_declaration: KW_STATIC_ASSERT '(' conditional_expression ',' . STRING_LITERAL ')' ';'

    STRING_LITERAL  shift, and go to state 253


state 168

  192 logical_or_expression: logical_or_expression LOGOR . logical_and_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    logical_and_expression     go to state 254
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 111
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 169

  194 logical_and_expression: logical_and_expression LOGAND . equality_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    equality_expression        go to state 255
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 111
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 170

  196 equality_expression: equality_expression EQ . relational_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    relational_expression      go to state 256
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 111
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 171

  197 equality_expression: equality_expression NE . relational_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    relational_expression      go to state 257
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 111
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 172

  201 relational_expression: relational_expression LE . additive_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    additive_expression        go to state 258
    multiplicative_expression  go to state 110
    unary_expression           go to state 111
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 173

  202 relational_expression: relational_expression GE . additive_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    additive_expression        go to state 259
    multiplicative_expression  go to state 110
    unary_expression           go to state 111
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 174

  199 relational_expression: relational_expression '<' . additive_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    additive_expression        go to state 260
    multiplicative_expression  go to state 110
    unary_expression           go to state 111
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 175

  200 relational_expression: relational_expression '>' . additive_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    additive_expression        go to state 261
    multiplicative_expression  go to state 110
    unary_expression           go to state 111
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 176

  204 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    multiplicative_expression  go to state 262
    unary_expression           go to state 111
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 177

  205 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    multiplicative_expression  go to state 263
    unary_expression           go to state 111
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 178

  207 multiplicative_expression: multiplicative_expression '*' . unary_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    unary_expression    go to state 264
    postfix_expression  go to state 112
    primary_expression  go to state 113
    constant            go to state 114
    string_seq          go to state 115


state 179

  208 multiplicative_expression: multiplicative_expression '/' . unary_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    unary_expression    go to state 265
    postfix_expression  go to state 112
    primary_expression  go to state 113
    constant            go to state 114
    string_seq          go to state 115


state 180

  209 multiplicative_expression: multiplicative_expression '%' . unary_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    unary_expression    go to state 266
    postfix_expression  go to state 112
    primary_expression  go to state 113
    constant            go to state 114
    string_seq          go to state 115


state 181

  226 postfix_expression: postfix_expression ARROW . IDENTIFIER

    IDENTIFIER  shift, and go to state 267


state 182

  222 postfix_expression: postfix_expression INC .

    $default  reduce using rule 222 (postfix_expression)


state 183

  223 postfix_expression: postfix_expression DEC .

    $default  reduce using rule 223 (postfix_expression)


state 184

  224 postfix_expression: postfix_expression '[' . expression ']'

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    expression                 go to state 268
    assignment_expression      go to state 164
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 185

  221 postfix_expression: postfix_expression '(' . argument_expression_list_opt ')'

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    $default  reduce using rule 228 (argument_expression_list_opt)

    assignment_expression         go to state 269
    conditional_expression        go to state 165
    logical_or_expression         go to state 105
    logical_and_expression        go to state 106
    equality_expression           go to state 107
    relational_expression         go to state 108
    additive_expression           go to state 109
    multiplicative_expression     go to state 110
    unary_expression              go to state 166
    postfix_expression            go to state 112
    argument_expression_list_opt  go to state 270
    argument_expression_list      go to state 271
    primary_expression            go to state 113
    constant                      go to state 114
    string_seq                    go to state 115


state 186

  225 postfix_expression: postfix_expression '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 272


state 187

  241 string_seq: string_seq STRING_LITERAL .

    $default  reduce using rule 241 (string_seq)


state 188

   87 type_specifier: KW_TYPEOF '(' type_specifier ')' .

    $default  reduce using rule 87 (type_specifier)


state 189

   40 attribute_arg: '(' attribute_arg_list_opt . ')'

    ')'  shift, and go to state 273


state 190

   31 attribute_specifier: KW_ATTRIBUTE '(' attribute_arg_list_opt ')' .

    $default  reduce using rule 31 (attribute_specifier)


state 191

   36 attribute_arg_list: attribute_arg_list ',' . attribute_arg

    IDENTIFIER        shift, and go to state 117
    STRING_LITERAL    shift, and go to state 118
    INTEGER_CONSTANT  shift, and go to state 119
    '('               shift, and go to state 120

    attribute_arg  go to state 274


state 192

   32 declspec_specifier: KW_DECLSPEC '(' attribute_arg_list_opt ')' .

    $default  reduce using rule 32 (declspec_specifier)


state 193

   55 type_qualifier_list: type_qualifier_list type_qualifier .

    $default  reduce using rule 55 (type_qualifier_list)


state 194

   53 pointer: '*' type_qualifier_list pointer .

    $default  reduce using rule 53 (pointer)


state 195

   42 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 42 (init_declarator_list)


state 196

   43 init_declarator: declarator .
   44                | declarator . '=' initializer

    '='  shift, and go to state 129

    $default  reduce using rule 43 (init_declarator)


state 197

  245 initializer: '{' . initializer_list '}'
  246            | '{' . initializer_list ',' '}'

    '['  shift, and go to state 275
    '.'  shift, and go to state 276

    $default  reduce using rule 249 (designation_opt)

    initializer_list  go to state 277
    designation_opt   go to state 278
    designation       go to state 279
    designator_list   go to state 280
    designator        go to state 281


state 198

  244 initializer: assignment_expression .

    $default  reduce using rule 244 (initializer)


state 199

   44 init_declarator: declarator '=' initializer .

    $default  reduce using rule 44 (init_declarator)


state 200

   57 direct_declarator: '(' declarator . ')'

    ')'  shift, and go to state 282


state 201

   58 direct_declarator: direct_declarator '[' . assignment_expression_opt ']'

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    $default  reduce using rule 242 (assignment_expression_opt)

    assignment_expression      go to state 283
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115
    assignment_expression_opt  go to state 284


state 202

   59 direct_declarator: direct_declarator '(' . parameter_type_list_opt ')'
   60                  | direct_declarator '(' . identifier_list_opt ')'

    IDENTIFIER       shift, and go to state 285
    KW_INT           shift, and go to state 3
    KW_CHAR          shift, and go to state 4
    KW_VOID          shift, and go to state 5
    KW_FLOAT         shift, and go to state 6
    KW_DOUBLE        shift, and go to state 7
    KW_SHORT         shift, and go to state 8
    KW_LONG          shift, and go to state 9
    KW_SIGNED        shift, and go to state 10
    KW_UNSIGNED      shift, and go to state 11
    KW_BOOL          shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_IMAGINARY     shift, and go to state 14
    KW_STRUCT        shift, and go to state 15
    KW_UNION         shift, and go to state 16
    KW_ENUM          shift, and go to state 17
    KW_TYPEDEF       shift, and go to state 18
    KW_ALIGNAS       shift, and go to state 19
    KW_NORETURN      shift, and go to state 20
    KW_THREAD_LOCAL  shift, and go to state 21
    KW_ATOMIC        shift, and go to state 22
    KW_CONST         shift, and go to state 23
    KW_VOLATILE      shift, and go to state 24
    KW_RESTRICT      shift, and go to state 25
    KW_INLINE        shift, and go to state 26
    KW_EXTERN        shift, and go to state 27
    KW_STATIC        shift, and go to state 28
    KW_REGISTER      shift, and go to state 29
    KW_AUTO          shift, and go to state 30
    KW_TYPEOF        shift, and go to state 32
    KW_ATTRIBUTE     shift, and go to state 33
    KW_DECLSPEC      shift, and go to state 34

    ')'       reduce using rule 61 (identifier_list_opt)
    ')'       [reduce using rule 65 (parameter_type_list_opt)]
    $default  reduce using rule 61 (identifier_list_opt)

    declaration_specifiers     go to state 286
    declaration_specifier      go to state 38
    storage_class_specifier    go to state 39
    type_qualifier             go to state 40
    function_specifier         go to state 41
    alignment_specifier        go to state 42
    attribute_specifier        go to state 43
    declspec_specifier         go to state 44
    identifier_list_opt        go to state 287
    identifier_list            go to state 288
    parameter_type_list_opt    go to state 289
    parameter_type_list        go to state 290
    parameter_list             go to state 291
    parameter_declaration      go to state 292
    type_specifier             go to state 70
    struct_or_union_specifier  go to state 46
    enum_specifier             go to state 47


state 203

  172 labeled_statement: IDENTIFIER . ':' statement
  232 primary_expression: IDENTIFIER .

    ':'  shift, and go to state 293

    $default  reduce using rule 232 (primary_expression)


state 204

  158 statement: KW_RETURN . expression_opt ';'

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    $default  reduce using rule 175 (expression_opt)

    expression_opt             go to state 294
    expression                 go to state 295
    assignment_expression      go to state 164
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 205

  161 statement: KW_IF . '(' expression ')' statement
  162          | KW_IF . '(' expression ')' statement KW_ELSE statement

    '('  shift, and go to state 296


state 206

  163 statement: KW_WHILE . '(' expression ')' statement

    '('  shift, and go to state 297


state 207

  165 statement: KW_FOR . '(' expression_opt ';' expression_opt ';' expression_opt ')' statement
  166          | KW_FOR . '(' declaration expression_opt ';' expression_opt ')' statement

    '('  shift, and go to state 298


state 208

  164 statement: KW_DO . statement KW_WHILE '(' expression ')' ';'

    IDENTIFIER        shift, and go to state 203
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_RETURN         shift, and go to state 204
    KW_IF             shift, and go to state 205
    KW_WHILE          shift, and go to state 206
    KW_FOR            shift, and go to state 207
    KW_DO             shift, and go to state 208
    KW_SWITCH         shift, and go to state 209
    KW_CASE           shift, and go to state 210
    KW_DEFAULT        shift, and go to state 211
    KW_BREAK          shift, and go to state 212
    KW_CONTINUE       shift, and go to state 213
    KW_GOTO           shift, and go to state 214
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    KW_ASM            shift, and go to state 216
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103
    ';'               shift, and go to state 217
    '{'               shift, and go to state 133

    compound_statement         go to state 219
    asm_statement              go to state 223
    statement                  go to state 299
    labeled_statement          go to state 225
    expression                 go to state 226
    assignment_expression      go to state 164
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 209

  167 statement: KW_SWITCH . '(' expression ')' statement

    '('  shift, and go to state 300


state 210

  173 labeled_statement: KW_CASE . constant_expression ':' statement

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    conditional_expression     go to state 228
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 111
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115
    constant_expression        go to state 301


state 211

  174 labeled_statement: KW_DEFAULT . ':' statement

    ':'  shift, and go to state 302


state 212

  168 statement: KW_BREAK . ';'

    ';'  shift, and go to state 303


state 213

  169 statement: KW_CONTINUE . ';'

    ';'  shift, and go to state 304


state 214

  170 statement: KW_GOTO . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 305


state 215

   87 type_specifier: KW_TYPEOF . '(' type_specifier ')'
  219 unary_expression: KW_TYPEOF . '(' expression ')'

    '('  shift, and go to state 306


state 216

  125 asm_statement: KW_ASM . asm_qualifiers_opt '(' asm_arguments ')' ';'

    $default  reduce using rule 126 (asm_qualifiers_opt)

    asm_qualifiers_opt  go to state 307


state 217

  156 statement: ';' .

    $default  reduce using rule 156 (statement)


state 218

  123 block_item: declaration . ';'

    ';'  shift, and go to state 308


state 219

  159 statement: compound_statement .

    $default  reduce using rule 159 (statement)


state 220

  118 compound_statement: '{' block_item_list_opt . '}'

    '}'  shift, and go to state 309


state 221

  120 block_item_list_opt: block_item_list .
  122 block_item_list: block_item_list . block_item

    IDENTIFIER        shift, and go to state 203
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_INT            shift, and go to state 3
    KW_CHAR           shift, and go to state 4
    KW_VOID           shift, and go to state 5
    KW_FLOAT          shift, and go to state 6
    KW_DOUBLE         shift, and go to state 7
    KW_SHORT          shift, and go to state 8
    KW_LONG           shift, and go to state 9
    KW_SIGNED         shift, and go to state 10
    KW_UNSIGNED       shift, and go to state 11
    KW_BOOL           shift, and go to state 12
    KW_COMPLEX        shift, and go to state 13
    KW_IMAGINARY      shift, and go to state 14
    KW_STRUCT         shift, and go to state 15
    KW_UNION          shift, and go to state 16
    KW_ENUM           shift, and go to state 17
    KW_TYPEDEF        shift, and go to state 18
    KW_RETURN         shift, and go to state 204
    KW_IF             shift, and go to state 205
    KW_WHILE          shift, and go to state 206
    KW_FOR            shift, and go to state 207
    KW_DO             shift, and go to state 208
    KW_SWITCH         shift, and go to state 209
    KW_CASE           shift, and go to state 210
    KW_DEFAULT        shift, and go to state 211
    KW_BREAK          shift, and go to state 212
    KW_CONTINUE       shift, and go to state 213
    KW_GOTO           shift, and go to state 214
    KW_SIZEOF         shift, and go to state 93
    KW_ALIGNAS        shift, and go to state 19
    KW_NORETURN       shift, and go to state 20
    KW_THREAD_LOCAL   shift, and go to state 21
    KW_ATOMIC         shift, and go to state 22
    KW_CONST          shift, and go to state 23
    KW_VOLATILE       shift, and go to state 24
    KW_RESTRICT       shift, and go to state 25
    KW_INLINE         shift, and go to state 26
    KW_EXTERN         shift, and go to state 27
    KW_STATIC         shift, and go to state 28
    KW_REGISTER       shift, and go to state 29
    KW_AUTO           shift, and go to state 30
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 215
    KW_ATTRIBUTE      shift, and go to state 33
    KW_DECLSPEC       shift, and go to state 34
    KW_ASM            shift, and go to state 216
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103
    ';'               shift, and go to state 217
    '{'               shift, and go to state 133

    $default  reduce using rule 120 (block_item_list_opt)

    declaration                go to state 218
    declaration_specifiers     go to state 37
    declaration_specifier      go to state 38
    storage_class_specifier    go to state 39
    type_qualifier             go to state 40
    function_specifier         go to state 41
    alignment_specifier        go to state 42
    attribute_specifier        go to state 43
    declspec_specifier         go to state 44
    type_specifier             go to state 70
    struct_or_union_specifier  go to state 46
    enum_specifier             go to state 47
    compound_statement         go to state 219
    block_item                 go to state 310
    asm_statement              go to state 223
    statement                  go to state 224
    labeled_statement          go to state 225
    expression                 go to state 226
    assignment_expression      go to state 164
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 222

  121 block_item_list: block_item .

    $default  reduce using rule 121 (block_item_list)


state 223

  171 statement: asm_statement .

    $default  reduce using rule 171 (statement)


state 224

  124 block_item: statement .

    $default  reduce using rule 124 (block_item)


state 225

  160 statement: labeled_statement .

    $default  reduce using rule 160 (statement)


state 226

  157 statement: expression . ';'

    ';'  shift, and go to state 311


state 227

   96 struct_or_union_specifier: KW_STRUCT IDENTIFIER '{' struct_declaration_list '}' .

    $default  reduce using rule 96 (struct_or_union_specifier)


state 228

  256 constant_expression: conditional_expression .

    $default  reduce using rule 256 (constant_expression)


state 229

  105 struct_declarator: ':' constant_expression .

    $default  reduce using rule 105 (struct_declarator)


state 230

  106 struct_declarator: declarator ':' . constant_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    conditional_expression     go to state 228
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 111
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115
    constant_expression        go to state 312


state 231

  100 struct_declaration: specifier_qualifier_list struct_declarator_list ';' .

    $default  reduce using rule 100 (struct_declaration)


state 232

  103 struct_declarator_list: struct_declarator_list ',' . struct_declarator

    ':'  shift, and go to state 136
    '*'  shift, and go to state 62

    $default  reduce using rule 48 (pointer_opt)

    declarator         go to state 138
    pointer_opt        go to state 68
    pointer            go to state 69
    struct_declarator  go to state 313


state 233

   97 struct_or_union_specifier: KW_UNION IDENTIFIER '{' struct_declaration_list '}' .

    $default  reduce using rule 97 (struct_or_union_specifier)


state 234

  109 enum_specifier: KW_ENUM IDENTIFIER '{' enumerator_list_opt '}' .

    $default  reduce using rule 109 (enum_specifier)


state 235

  116 enumerator: IDENTIFIER '=' constant_expression .

    $default  reduce using rule 116 (enumerator)


state 236

  113 enumerator_list: enumerator_list ',' enumerator .

    $default  reduce using rule 113 (enumerator_list)


state 237

  218 unary_expression: KW_SIZEOF '(' type_specifier . ')'

    ')'  shift, and go to state 314


state 238

  227 postfix_expression: KW_GENERIC '(' assignment_expression . ',' assignment_expression ')'

    ','  shift, and go to state 315


state 239

  219 unary_expression: KW_TYPEOF '(' expression . ')'

    ')'  shift, and go to state 316


state 240

  236 primary_expression: LPAREN_BRACE compound_statement ')' .

    $default  reduce using rule 236 (primary_expression)


state 241

  235 primary_expression: '(' expression ')' .

    $default  reduce using rule 235 (primary_expression)


state 242

  180 assignment_expression: unary_expression ADD_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    assignment_expression      go to state 317
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 243

  181 assignment_expression: unary_expression SUB_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    assignment_expression      go to state 318
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 244

  182 assignment_expression: unary_expression MUL_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    assignment_expression      go to state 319
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 245

  183 assignment_expression: unary_expression DIV_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    assignment_expression      go to state 320
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 246

  184 assignment_expression: unary_expression MOD_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    assignment_expression      go to state 321
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 247

  185 assignment_expression: unary_expression AND_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    assignment_expression      go to state 322
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 248

  186 assignment_expression: unary_expression OR_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    assignment_expression      go to state 323
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 249

  187 assignment_expression: unary_expression XOR_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    assignment_expression      go to state 324
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 250

  188 assignment_expression: unary_expression LSHIFT_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    assignment_expression      go to state 325
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 251

  189 assignment_expression: unary_expression RSHIFT_ASSIGN . assignment_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    assignment_expression      go to state 326
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 252

  179 assignment_expression: unary_expression '=' . assignment_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    assignment_expression      go to state 327
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 253

  155 static_assert_declaration: KW_STATIC_ASSERT '(' conditional_expression ',' STRING_LITERAL . ')' ';'

    ')'  shift, and go to state 328


state 254

  192 logical_or_expression: logical_or_expression LOGOR logical_and_expression .
  194 logical_and_expression: logical_and_expression . LOGAND equality_expression

    LOGAND  shift, and go to state 169

    $default  reduce using rule 192 (logical_or_expression)


state 255

  194 logical_and_expression: logical_and_expression LOGAND equality_expression .
  196 equality_expression: equality_expression . EQ relational_expression
  197                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 170
    NE  shift, and go to state 171

    $default  reduce using rule 194 (logical_and_expression)


state 256

  196 equality_expression: equality_expression EQ relational_expression .
  199 relational_expression: relational_expression . '<' additive_expression
  200                      | relational_expression . '>' additive_expression
  201                      | relational_expression . LE additive_expression
  202                      | relational_expression . GE additive_expression

    LE   shift, and go to state 172
    GE   shift, and go to state 173
    '<'  shift, and go to state 174
    '>'  shift, and go to state 175

    $default  reduce using rule 196 (equality_expression)


state 257

  197 equality_expression: equality_expression NE relational_expression .
  199 relational_expression: relational_expression . '<' additive_expression
  200                      | relational_expression . '>' additive_expression
  201                      | relational_expression . LE additive_expression
  202                      | relational_expression . GE additive_expression

    LE   shift, and go to state 172
    GE   shift, and go to state 173
    '<'  shift, and go to state 174
    '>'  shift, and go to state 175

    $default  reduce using rule 197 (equality_expression)


state 258

  201 relational_expression: relational_expression LE additive_expression .
  204 additive_expression: additive_expression . '+' multiplicative_expression
  205                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 176
    '-'  shift, and go to state 177

    $default  reduce using rule 201 (relational_expression)


state 259

  202 relational_expression: relational_expression GE additive_expression .
  204 additive_expression: additive_expression . '+' multiplicative_expression
  205                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 176
    '-'  shift, and go to state 177

    $default  reduce using rule 202 (relational_expression)


state 260

  199 relational_expression: relational_expression '<' additive_expression .
  204 additive_expression: additive_expression . '+' multiplicative_expression
  205                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 176
    '-'  shift, and go to state 177

    $default  reduce using rule 199 (relational_expression)


state 261

  200 relational_expression: relational_expression '>' additive_expression .
  204 additive_expression: additive_expression . '+' multiplicative_expression
  205                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 176
    '-'  shift, and go to state 177

    $default  reduce using rule 200 (relational_expression)


state 262

  204 additive_expression: additive_expression '+' multiplicative_expression .
  207 multiplicative_expression: multiplicative_expression . '*' unary_expression
  208                          | multiplicative_expression . '/' unary_expression
  209                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 178
    '/'  shift, and go to state 179
    '%'  shift, and go to state 180

    $default  reduce using rule 204 (additive_expression)


state 263

  205 additive_expression: additive_expression '-' multiplicative_expression .
  207 multiplicative_expression: multiplicative_expression . '*' unary_expression
  208                          | multiplicative_expression . '/' unary_expression
  209                          | multiplicative_expression . '%' unary_expression

    '*'  shift, and go to state 178
    '/'  shift, and go to state 179
    '%'  shift, and go to state 180

    $default  reduce using rule 205 (additive_expression)


state 264

  207 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 207 (multiplicative_expression)


state 265

  208 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 208 (multiplicative_expression)


state 266

  209 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 209 (multiplicative_expression)


state 267

  226 postfix_expression: postfix_expression ARROW IDENTIFIER .

    $default  reduce using rule 226 (postfix_expression)


state 268

  224 postfix_expression: postfix_expression '[' expression . ']'

    ']'  shift, and go to state 329


state 269

  230 argument_expression_list: assignment_expression .

    $default  reduce using rule 230 (argument_expression_list)


state 270

  221 postfix_expression: postfix_expression '(' argument_expression_list_opt . ')'

    ')'  shift, and go to state 330


state 271

  229 argument_expression_list_opt: argument_expression_list .
  231 argument_expression_list: argument_expression_list . ',' assignment_expression

    ','  shift, and go to state 331

    $default  reduce using rule 229 (argument_expression_list_opt)


state 272

  225 postfix_expression: postfix_expression '.' IDENTIFIER .

    $default  reduce using rule 225 (postfix_expression)


state 273

   40 attribute_arg: '(' attribute_arg_list_opt ')' .

    $default  reduce using rule 40 (attribute_arg)


state 274

   36 attribute_arg_list: attribute_arg_list ',' attribute_arg .

    $default  reduce using rule 36 (attribute_arg_list)


state 275

  255 designator: '[' . constant_expression ']'

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    conditional_expression     go to state 228
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 111
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115
    constant_expression        go to state 332


state 276

  254 designator: '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 333


state 277

  245 initializer: '{' initializer_list . '}'
  246            | '{' initializer_list . ',' '}'
  248 initializer_list: initializer_list . ',' designation_opt initializer

    ','  shift, and go to state 334
    '}'  shift, and go to state 335


state 278

  247 initializer_list: designation_opt . initializer

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103
    '{'               shift, and go to state 197

    assignment_expression      go to state 198
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115
    initializer                go to state 336


state 279

  250 designation_opt: designation .

    $default  reduce using rule 250 (designation_opt)


state 280

  251 designation: designator_list . '='
  253 designator_list: designator_list . designator

    '='  shift, and go to state 337
    '['  shift, and go to state 275
    '.'  shift, and go to state 276

    designator  go to state 338


state 281

  252 designator_list: designator .

    $default  reduce using rule 252 (designator_list)


state 282

   57 direct_declarator: '(' declarator ')' .

    $default  reduce using rule 57 (direct_declarator)


state 283

  243 assignment_expression_opt: assignment_expression .

    $default  reduce using rule 243 (assignment_expression_opt)


state 284

   58 direct_declarator: direct_declarator '[' assignment_expression_opt . ']'

    ']'  shift, and go to state 339


state 285

   63 identifier_list: IDENTIFIER .

    $default  reduce using rule 63 (identifier_list)


state 286

    9 declaration_specifiers: declaration_specifiers . declaration_specifier
   71 parameter_declaration: declaration_specifiers . declarator
   72                      | declaration_specifiers .

    KW_INT           shift, and go to state 3
    KW_CHAR          shift, and go to state 4
    KW_VOID          shift, and go to state 5
    KW_FLOAT         shift, and go to state 6
    KW_DOUBLE        shift, and go to state 7
    KW_SHORT         shift, and go to state 8
    KW_LONG          shift, and go to state 9
    KW_SIGNED        shift, and go to state 10
    KW_UNSIGNED      shift, and go to state 11
    KW_BOOL          shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_IMAGINARY     shift, and go to state 14
    KW_STRUCT        shift, and go to state 15
    KW_UNION         shift, and go to state 16
    KW_ENUM          shift, and go to state 17
    KW_TYPEDEF       shift, and go to state 18
    KW_ALIGNAS       shift, and go to state 19
    KW_NORETURN      shift, and go to state 20
    KW_THREAD_LOCAL  shift, and go to state 21
    KW_ATOMIC        shift, and go to state 22
    KW_CONST         shift, and go to state 23
    KW_VOLATILE      shift, and go to state 24
    KW_RESTRICT      shift, and go to state 25
    KW_INLINE        shift, and go to state 26
    KW_EXTERN        shift, and go to state 27
    KW_STATIC        shift, and go to state 28
    KW_REGISTER      shift, and go to state 29
    KW_AUTO          shift, and go to state 30
    KW_TYPEOF        shift, and go to state 32
    KW_ATTRIBUTE     shift, and go to state 33
    KW_DECLSPEC      shift, and go to state 34
    '*'              shift, and go to state 62

    ')'       reduce using rule 72 (parameter_declaration)
    ','       reduce using rule 72 (parameter_declaration)
    $default  reduce using rule 48 (pointer_opt)

    declaration_specifier      go to state 63
    storage_class_specifier    go to state 39
    type_qualifier             go to state 40
    function_specifier         go to state 41
    alignment_specifier        go to state 42
    attribute_specifier        go to state 43
    declspec_specifier         go to state 44
    declarator                 go to state 340
    pointer_opt                go to state 68
    pointer                    go to state 69
    type_specifier             go to state 70
    struct_or_union_specifier  go to state 46
    enum_specifier             go to state 47


state 287

   60 direct_declarator: direct_declarator '(' identifier_list_opt . ')'

    ')'  shift, and go to state 341


state 288

   62 identifier_list_opt: identifier_list .
   64 identifier_list: identifier_list . ',' IDENTIFIER

    ','  shift, and go to state 342

    $default  reduce using rule 62 (identifier_list_opt)


state 289

   59 direct_declarator: direct_declarator '(' parameter_type_list_opt . ')'

    ')'  shift, and go to state 343


state 290

   66 parameter_type_list_opt: parameter_type_list .

    $default  reduce using rule 66 (parameter_type_list_opt)


state 291

   67 parameter_type_list: parameter_list .
   68                    | parameter_list . ',' ELLIPSIS
   70 parameter_list: parameter_list . ',' parameter_declaration

    ','  shift, and go to state 344

    $default  reduce using rule 67 (parameter_type_list)


state 292

   69 parameter_list: parameter_declaration .

    $default  reduce using rule 69 (parameter_list)


state 293

  172 labeled_statement: IDENTIFIER ':' . statement

    IDENTIFIER        shift, and go to state 203
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_RETURN         shift, and go to state 204
    KW_IF             shift, and go to state 205
    KW_WHILE          shift, and go to state 206
    KW_FOR            shift, and go to state 207
    KW_DO             shift, and go to state 208
    KW_SWITCH         shift, and go to state 209
    KW_CASE           shift, and go to state 210
    KW_DEFAULT        shift, and go to state 211
    KW_BREAK          shift, and go to state 212
    KW_CONTINUE       shift, and go to state 213
    KW_GOTO           shift, and go to state 214
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    KW_ASM            shift, and go to state 216
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103
    ';'               shift, and go to state 217
    '{'               shift, and go to state 133

    compound_statement         go to state 219
    asm_statement              go to state 223
    statement                  go to state 345
    labeled_statement          go to state 225
    expression                 go to state 226
    assignment_expression      go to state 164
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 294

  158 statement: KW_RETURN expression_opt . ';'

    ';'  shift, and go to state 346


state 295

  176 expression_opt: expression .

    $default  reduce using rule 176 (expression_opt)


state 296

  161 statement: KW_IF '(' . expression ')' statement
  162          | KW_IF '(' . expression ')' statement KW_ELSE statement

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    expression                 go to state 347
    assignment_expression      go to state 164
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 297

  163 statement: KW_WHILE '(' . expression ')' statement

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    expression                 go to state 348
    assignment_expression      go to state 164
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 298

  165 statement: KW_FOR '(' . expression_opt ';' expression_opt ';' expression_opt ')' statement
  166          | KW_FOR '(' . declaration expression_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_INT            shift, and go to state 3
    KW_CHAR           shift, and go to state 4
    KW_VOID           shift, and go to state 5
    KW_FLOAT          shift, and go to state 6
    KW_DOUBLE         shift, and go to state 7
    KW_SHORT          shift, and go to state 8
    KW_LONG           shift, and go to state 9
    KW_SIGNED         shift, and go to state 10
    KW_UNSIGNED       shift, and go to state 11
    KW_BOOL           shift, and go to state 12
    KW_COMPLEX        shift, and go to state 13
    KW_IMAGINARY      shift, and go to state 14
    KW_STRUCT         shift, and go to state 15
    KW_UNION          shift, and go to state 16
    KW_ENUM           shift, and go to state 17
    KW_TYPEDEF        shift, and go to state 18
    KW_SIZEOF         shift, and go to state 93
    KW_ALIGNAS        shift, and go to state 19
    KW_NORETURN       shift, and go to state 20
    KW_THREAD_LOCAL   shift, and go to state 21
    KW_ATOMIC         shift, and go to state 22
    KW_CONST          shift, and go to state 23
    KW_VOLATILE       shift, and go to state 24
    KW_RESTRICT       shift, and go to state 25
    KW_INLINE         shift, and go to state 26
    KW_EXTERN         shift, and go to state 27
    KW_STATIC         shift, and go to state 28
    KW_REGISTER       shift, and go to state 29
    KW_AUTO           shift, and go to state 30
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 215
    KW_ATTRIBUTE      shift, and go to state 33
    KW_DECLSPEC       shift, and go to state 34
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    $default  reduce using rule 175 (expression_opt)

    declaration                go to state 349
    declaration_specifiers     go to state 37
    declaration_specifier      go to state 38
    storage_class_specifier    go to state 39
    type_qualifier             go to state 40
    function_specifier         go to state 41
    alignment_specifier        go to state 42
    attribute_specifier        go to state 43
    declspec_specifier         go to state 44
    type_specifier             go to state 70
    struct_or_union_specifier  go to state 46
    enum_specifier             go to state 47
    expression_opt             go to state 350
    expression                 go to state 295
    assignment_expression      go to state 164
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 299

  164 statement: KW_DO statement . KW_WHILE '(' expression ')' ';'

    KW_WHILE  shift, and go to state 351


state 300

  167 statement: KW_SWITCH '(' . expression ')' statement

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    expression                 go to state 352
    assignment_expression      go to state 164
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 301

  173 labeled_statement: KW_CASE constant_expression . ':' statement

    ':'  shift, and go to state 353


state 302

  174 labeled_statement: KW_DEFAULT ':' . statement

    IDENTIFIER        shift, and go to state 203
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_RETURN         shift, and go to state 204
    KW_IF             shift, and go to state 205
    KW_WHILE          shift, and go to state 206
    KW_FOR            shift, and go to state 207
    KW_DO             shift, and go to state 208
    KW_SWITCH         shift, and go to state 209
    KW_CASE           shift, and go to state 210
    KW_DEFAULT        shift, and go to state 211
    KW_BREAK          shift, and go to state 212
    KW_CONTINUE       shift, and go to state 213
    KW_GOTO           shift, and go to state 214
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    KW_ASM            shift, and go to state 216
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103
    ';'               shift, and go to state 217
    '{'               shift, and go to state 133

    compound_statement         go to state 219
    asm_statement              go to state 223
    statement                  go to state 354
    labeled_statement          go to state 225
    expression                 go to state 226
    assignment_expression      go to state 164
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 303

  168 statement: KW_BREAK ';' .

    $default  reduce using rule 168 (statement)


state 304

  169 statement: KW_CONTINUE ';' .

    $default  reduce using rule 169 (statement)


state 305

  170 statement: KW_GOTO IDENTIFIER . ';'

    ';'  shift, and go to state 355


state 306

   87 type_specifier: KW_TYPEOF '(' . type_specifier ')'
  219 unary_expression: KW_TYPEOF '(' . expression ')'

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_INT            shift, and go to state 3
    KW_CHAR           shift, and go to state 4
    KW_VOID           shift, and go to state 5
    KW_FLOAT          shift, and go to state 6
    KW_DOUBLE         shift, and go to state 7
    KW_SHORT          shift, and go to state 8
    KW_LONG           shift, and go to state 9
    KW_SIGNED         shift, and go to state 10
    KW_UNSIGNED       shift, and go to state 11
    KW_BOOL           shift, and go to state 12
    KW_COMPLEX        shift, and go to state 13
    KW_IMAGINARY      shift, and go to state 14
    KW_STRUCT         shift, and go to state 15
    KW_UNION          shift, and go to state 16
    KW_ENUM           shift, and go to state 17
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 215
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    type_specifier             go to state 116
    struct_or_union_specifier  go to state 46
    enum_specifier             go to state 47
    expression                 go to state 239
    assignment_expression      go to state 164
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 307

  125 asm_statement: KW_ASM asm_qualifiers_opt . '(' asm_arguments ')' ';'
  127 asm_qualifiers_opt: asm_qualifiers_opt . KW_VOLATILE
  128                   | asm_qualifiers_opt . KW_INLINE
  129                   | asm_qualifiers_opt . KW_GOTO

    KW_GOTO      shift, and go to state 356
    KW_VOLATILE  shift, and go to state 357
    KW_INLINE    shift, and go to state 358
    '('          shift, and go to state 359


state 308

  123 block_item: declaration ';' .

    $default  reduce using rule 123 (block_item)


state 309

  118 compound_statement: '{' block_item_list_opt '}' .

    $default  reduce using rule 118 (compound_statement)


state 310

  122 block_item_list: block_item_list block_item .

    $default  reduce using rule 122 (block_item_list)


state 311

  157 statement: expression ';' .

    $default  reduce using rule 157 (statement)


state 312

  106 struct_declarator: declarator ':' constant_expression .

    $default  reduce using rule 106 (struct_declarator)


state 313

  103 struct_declarator_list: struct_declarator_list ',' struct_declarator .

    $default  reduce using rule 103 (struct_declarator_list)


state 314

  218 unary_expression: KW_SIZEOF '(' type_specifier ')' .

    $default  reduce using rule 218 (unary_expression)


state 315

  227 postfix_expression: KW_GENERIC '(' assignment_expression ',' . assignment_expression ')'

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    assignment_expression      go to state 360
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 316

  219 unary_expression: KW_TYPEOF '(' expression ')' .

    $default  reduce using rule 219 (unary_expression)


state 317

  180 assignment_expression: unary_expression ADD_ASSIGN assignment_expression .

    $default  reduce using rule 180 (assignment_expression)


state 318

  181 assignment_expression: unary_expression SUB_ASSIGN assignment_expression .

    $default  reduce using rule 181 (assignment_expression)


state 319

  182 assignment_expression: unary_expression MUL_ASSIGN assignment_expression .

    $default  reduce using rule 182 (assignment_expression)


state 320

  183 assignment_expression: unary_expression DIV_ASSIGN assignment_expression .

    $default  reduce using rule 183 (assignment_expression)


state 321

  184 assignment_expression: unary_expression MOD_ASSIGN assignment_expression .

    $default  reduce using rule 184 (assignment_expression)


state 322

  185 assignment_expression: unary_expression AND_ASSIGN assignment_expression .

    $default  reduce using rule 185 (assignment_expression)


state 323

  186 assignment_expression: unary_expression OR_ASSIGN assignment_expression .

    $default  reduce using rule 186 (assignment_expression)


state 324

  187 assignment_expression: unary_expression XOR_ASSIGN assignment_expression .

    $default  reduce using rule 187 (assignment_expression)


state 325

  188 assignment_expression: unary_expression LSHIFT_ASSIGN assignment_expression .

    $default  reduce using rule 188 (assignment_expression)


state 326

  189 assignment_expression: unary_expression RSHIFT_ASSIGN assignment_expression .

    $default  reduce using rule 189 (assignment_expression)


state 327

  179 assignment_expression: unary_expression '=' assignment_expression .

    $default  reduce using rule 179 (assignment_expression)


state 328

  155 static_assert_declaration: KW_STATIC_ASSERT '(' conditional_expression ',' STRING_LITERAL ')' . ';'

    ';'  shift, and go to state 361


state 329

  224 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 224 (postfix_expression)


state 330

  221 postfix_expression: postfix_expression '(' argument_expression_list_opt ')' .

    $default  reduce using rule 221 (postfix_expression)


state 331

  231 argument_expression_list: argument_expression_list ',' . assignment_expression

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    assignment_expression      go to state 362
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 332

  255 designator: '[' constant_expression . ']'

    ']'  shift, and go to state 363


state 333

  254 designator: '.' IDENTIFIER .

    $default  reduce using rule 254 (designator)


state 334

  246 initializer: '{' initializer_list ',' . '}'
  248 initializer_list: initializer_list ',' . designation_opt initializer

    '['  shift, and go to state 275
    '.'  shift, and go to state 276
    '}'  shift, and go to state 364

    $default  reduce using rule 249 (designation_opt)

    designation_opt  go to state 365
    designation      go to state 279
    designator_list  go to state 280
    designator       go to state 281


state 335

  245 initializer: '{' initializer_list '}' .

    $default  reduce using rule 245 (initializer)


state 336

  247 initializer_list: designation_opt initializer .

    $default  reduce using rule 247 (initializer_list)


state 337

  251 designation: designator_list '=' .

    $default  reduce using rule 251 (designation)


state 338

  253 designator_list: designator_list designator .

    $default  reduce using rule 253 (designator_list)


state 339

   58 direct_declarator: direct_declarator '[' assignment_expression_opt ']' .

    $default  reduce using rule 58 (direct_declarator)


state 340

   71 parameter_declaration: declaration_specifiers declarator .

    $default  reduce using rule 71 (parameter_declaration)


state 341

   60 direct_declarator: direct_declarator '(' identifier_list_opt ')' .

    $default  reduce using rule 60 (direct_declarator)


state 342

   64 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 366


state 343

   59 direct_declarator: direct_declarator '(' parameter_type_list_opt ')' .

    $default  reduce using rule 59 (direct_declarator)


state 344

   68 parameter_type_list: parameter_list ',' . ELLIPSIS
   70 parameter_list: parameter_list ',' . parameter_declaration

    KW_INT           shift, and go to state 3
    KW_CHAR          shift, and go to state 4
    KW_VOID          shift, and go to state 5
    KW_FLOAT         shift, and go to state 6
    KW_DOUBLE        shift, and go to state 7
    KW_SHORT         shift, and go to state 8
    KW_LONG          shift, and go to state 9
    KW_SIGNED        shift, and go to state 10
    KW_UNSIGNED      shift, and go to state 11
    KW_BOOL          shift, and go to state 12
    KW_COMPLEX       shift, and go to state 13
    KW_IMAGINARY     shift, and go to state 14
    KW_STRUCT        shift, and go to state 15
    KW_UNION         shift, and go to state 16
    KW_ENUM          shift, and go to state 17
    KW_TYPEDEF       shift, and go to state 18
    KW_ALIGNAS       shift, and go to state 19
    KW_NORETURN      shift, and go to state 20
    KW_THREAD_LOCAL  shift, and go to state 21
    KW_ATOMIC        shift, and go to state 22
    KW_CONST         shift, and go to state 23
    KW_VOLATILE      shift, and go to state 24
    KW_RESTRICT      shift, and go to state 25
    KW_INLINE        shift, and go to state 26
    KW_EXTERN        shift, and go to state 27
    KW_STATIC        shift, and go to state 28
    KW_REGISTER      shift, and go to state 29
    KW_AUTO          shift, and go to state 30
    KW_TYPEOF        shift, and go to state 32
    KW_ATTRIBUTE     shift, and go to state 33
    KW_DECLSPEC      shift, and go to state 34
    ELLIPSIS         shift, and go to state 367

    declaration_specifiers     go to state 286
    declaration_specifier      go to state 38
    storage_class_specifier    go to state 39
    type_qualifier             go to state 40
    function_specifier         go to state 41
    alignment_specifier        go to state 42
    attribute_specifier        go to state 43
    declspec_specifier         go to state 44
    parameter_declaration      go to state 368
    type_specifier             go to state 70
    struct_or_union_specifier  go to state 46
    enum_specifier             go to state 47


state 345

  172 labeled_statement: IDENTIFIER ':' statement .

    $default  reduce using rule 172 (labeled_statement)


state 346

  158 statement: KW_RETURN expression_opt ';' .

    $default  reduce using rule 158 (statement)


state 347

  161 statement: KW_IF '(' expression . ')' statement
  162          | KW_IF '(' expression . ')' statement KW_ELSE statement

    ')'  shift, and go to state 369


state 348

  163 statement: KW_WHILE '(' expression . ')' statement

    ')'  shift, and go to state 370


state 349

  166 statement: KW_FOR '(' declaration . expression_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    $default  reduce using rule 175 (expression_opt)

    expression_opt             go to state 371
    expression                 go to state 295
    assignment_expression      go to state 164
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 350

  165 statement: KW_FOR '(' expression_opt . ';' expression_opt ';' expression_opt ')' statement

    ';'  shift, and go to state 372


state 351

  164 statement: KW_DO statement KW_WHILE . '(' expression ')' ';'

    '('  shift, and go to state 373


state 352

  167 statement: KW_SWITCH '(' expression . ')' statement

    ')'  shift, and go to state 374


state 353

  173 labeled_statement: KW_CASE constant_expression ':' . statement

    IDENTIFIER        shift, and go to state 203
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_RETURN         shift, and go to state 204
    KW_IF             shift, and go to state 205
    KW_WHILE          shift, and go to state 206
    KW_FOR            shift, and go to state 207
    KW_DO             shift, and go to state 208
    KW_SWITCH         shift, and go to state 209
    KW_CASE           shift, and go to state 210
    KW_DEFAULT        shift, and go to state 211
    KW_BREAK          shift, and go to state 212
    KW_CONTINUE       shift, and go to state 213
    KW_GOTO           shift, and go to state 214
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    KW_ASM            shift, and go to state 216
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103
    ';'               shift, and go to state 217
    '{'               shift, and go to state 133

    compound_statement         go to state 219
    asm_statement              go to state 223
    statement                  go to state 375
    labeled_statement          go to state 225
    expression                 go to state 226
    assignment_expression      go to state 164
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 354

  174 labeled_statement: KW_DEFAULT ':' statement .

    $default  reduce using rule 174 (labeled_statement)


state 355

  170 statement: KW_GOTO IDENTIFIER ';' .

    $default  reduce using rule 170 (statement)


state 356

  129 asm_qualifiers_opt: asm_qualifiers_opt KW_GOTO .

    $default  reduce using rule 129 (asm_qualifiers_opt)


state 357

  127 asm_qualifiers_opt: asm_qualifiers_opt KW_VOLATILE .

    $default  reduce using rule 127 (asm_qualifiers_opt)


state 358

  128 asm_qualifiers_opt: asm_qualifiers_opt KW_INLINE .

    $default  reduce using rule 128 (asm_qualifiers_opt)


state 359

  125 asm_statement: KW_ASM asm_qualifiers_opt '(' . asm_arguments ')' ';'

    STRING_LITERAL  shift, and go to state 89

    asm_arguments  go to state 376
    string_seq     go to state 377


state 360

  227 postfix_expression: KW_GENERIC '(' assignment_expression ',' assignment_expression . ')'

    ')'  shift, and go to state 378


state 361

  155 static_assert_declaration: KW_STATIC_ASSERT '(' conditional_expression ',' STRING_LITERAL ')' ';' .

    $default  reduce using rule 155 (static_assert_declaration)


state 362

  231 argument_expression_list: argument_expression_list ',' assignment_expression .

    $default  reduce using rule 231 (argument_expression_list)


state 363

  255 designator: '[' constant_expression ']' .

    $default  reduce using rule 255 (designator)


state 364

  246 initializer: '{' initializer_list ',' '}' .

    $default  reduce using rule 246 (initializer)


state 365

  248 initializer_list: initializer_list ',' designation_opt . initializer

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103
    '{'               shift, and go to state 197

    assignment_expression      go to state 198
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115
    initializer                go to state 379


state 366

   64 identifier_list: identifier_list ',' IDENTIFIER .

    $default  reduce using rule 64 (identifier_list)


state 367

   68 parameter_type_list: parameter_list ',' ELLIPSIS .

    $default  reduce using rule 68 (parameter_type_list)


state 368

   70 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 70 (parameter_list)


state 369

  161 statement: KW_IF '(' expression ')' . statement
  162          | KW_IF '(' expression ')' . statement KW_ELSE statement

    IDENTIFIER        shift, and go to state 203
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_RETURN         shift, and go to state 204
    KW_IF             shift, and go to state 205
    KW_WHILE          shift, and go to state 206
    KW_FOR            shift, and go to state 207
    KW_DO             shift, and go to state 208
    KW_SWITCH         shift, and go to state 209
    KW_CASE           shift, and go to state 210
    KW_DEFAULT        shift, and go to state 211
    KW_BREAK          shift, and go to state 212
    KW_CONTINUE       shift, and go to state 213
    KW_GOTO           shift, and go to state 214
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    KW_ASM            shift, and go to state 216
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103
    ';'               shift, and go to state 217
    '{'               shift, and go to state 133

    compound_statement         go to state 219
    asm_statement              go to state 223
    statement                  go to state 380
    labeled_statement          go to state 225
    expression                 go to state 226
    assignment_expression      go to state 164
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 370

  163 statement: KW_WHILE '(' expression ')' . statement

    IDENTIFIER        shift, and go to state 203
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_RETURN         shift, and go to state 204
    KW_IF             shift, and go to state 205
    KW_WHILE          shift, and go to state 206
    KW_FOR            shift, and go to state 207
    KW_DO             shift, and go to state 208
    KW_SWITCH         shift, and go to state 209
    KW_CASE           shift, and go to state 210
    KW_DEFAULT        shift, and go to state 211
    KW_BREAK          shift, and go to state 212
    KW_CONTINUE       shift, and go to state 213
    KW_GOTO           shift, and go to state 214
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    KW_ASM            shift, and go to state 216
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103
    ';'               shift, and go to state 217
    '{'               shift, and go to state 133

    compound_statement         go to state 219
    asm_statement              go to state 223
    statement                  go to state 381
    labeled_statement          go to state 225
    expression                 go to state 226
    assignment_expression      go to state 164
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 371

  166 statement: KW_FOR '(' declaration expression_opt . ';' expression_opt ')' statement

    ';'  shift, and go to state 382


state 372

  165 statement: KW_FOR '(' expression_opt ';' . expression_opt ';' expression_opt ')' statement

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    $default  reduce using rule 175 (expression_opt)

    expression_opt             go to state 383
    expression                 go to state 295
    assignment_expression      go to state 164
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 373

  164 statement: KW_DO statement KW_WHILE '(' . expression ')' ';'

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    expression                 go to state 384
    assignment_expression      go to state 164
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 374

  167 statement: KW_SWITCH '(' expression ')' . statement

    IDENTIFIER        shift, and go to state 203
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_RETURN         shift, and go to state 204
    KW_IF             shift, and go to state 205
    KW_WHILE          shift, and go to state 206
    KW_FOR            shift, and go to state 207
    KW_DO             shift, and go to state 208
    KW_SWITCH         shift, and go to state 209
    KW_CASE           shift, and go to state 210
    KW_DEFAULT        shift, and go to state 211
    KW_BREAK          shift, and go to state 212
    KW_CONTINUE       shift, and go to state 213
    KW_GOTO           shift, and go to state 214
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    KW_ASM            shift, and go to state 216
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103
    ';'               shift, and go to state 217
    '{'               shift, and go to state 133

    compound_statement         go to state 219
    asm_statement              go to state 223
    statement                  go to state 385
    labeled_statement          go to state 225
    expression                 go to state 226
    assignment_expression      go to state 164
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 375

  173 labeled_statement: KW_CASE constant_expression ':' statement .

    $default  reduce using rule 173 (labeled_statement)


state 376

  125 asm_statement: KW_ASM asm_qualifiers_opt '(' asm_arguments . ')' ';'

    ')'  shift, and go to state 386


state 377

  130 asm_arguments: string_seq .
  131              | string_seq . ':' asm_output_operands_opt
  132              | string_seq . ':' asm_output_operands_opt ':' asm_input_operands_opt
  133              | string_seq . ':' asm_output_operands_opt ':' asm_input_operands_opt ':' asm_clobbers_opt
  134              | string_seq . ':' asm_output_operands_opt ':' asm_input_operands_opt ':' asm_clobbers_opt ':' asm_goto_labels_opt
  241 string_seq: string_seq . STRING_LITERAL

    STRING_LITERAL  shift, and go to state 187
    ':'             shift, and go to state 387

    $default  reduce using rule 130 (asm_arguments)


state 378

  227 postfix_expression: KW_GENERIC '(' assignment_expression ',' assignment_expression ')' .

    $default  reduce using rule 227 (postfix_expression)


state 379

  248 initializer_list: initializer_list ',' designation_opt initializer .

    $default  reduce using rule 248 (initializer_list)


state 380

  161 statement: KW_IF '(' expression ')' statement .
  162          | KW_IF '(' expression ')' statement . KW_ELSE statement

    KW_ELSE  shift, and go to state 388

    KW_ELSE   [reduce using rule 161 (statement)]
    $default  reduce using rule 161 (statement)


state 381

  163 statement: KW_WHILE '(' expression ')' statement .

    $default  reduce using rule 163 (statement)


state 382

  166 statement: KW_FOR '(' declaration expression_opt ';' . expression_opt ')' statement

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    $default  reduce using rule 175 (expression_opt)

    expression_opt             go to state 389
    expression                 go to state 295
    assignment_expression      go to state 164
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 383

  165 statement: KW_FOR '(' expression_opt ';' expression_opt . ';' expression_opt ')' statement

    ';'  shift, and go to state 390


state 384

  164 statement: KW_DO statement KW_WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 391


state 385

  167 statement: KW_SWITCH '(' expression ')' statement .

    $default  reduce using rule 167 (statement)


state 386

  125 asm_statement: KW_ASM asm_qualifiers_opt '(' asm_arguments ')' . ';'

    ';'  shift, and go to state 392


state 387

  131 asm_arguments: string_seq ':' . asm_output_operands_opt
  132              | string_seq ':' . asm_output_operands_opt ':' asm_input_operands_opt
  133              | string_seq ':' . asm_output_operands_opt ':' asm_input_operands_opt ':' asm_clobbers_opt
  134              | string_seq ':' . asm_output_operands_opt ':' asm_input_operands_opt ':' asm_clobbers_opt ':' asm_goto_labels_opt

    '['  shift, and go to state 393

    STRING_LITERAL  reduce using rule 149 (asm_symbolic_name_opt)
    $default        reduce using rule 135 (asm_output_operands_opt)

    asm_output_operands_opt  go to state 394
    asm_output_operands      go to state 395
    asm_output_operand       go to state 396
    asm_symbolic_name_opt    go to state 397


state 388

  162 statement: KW_IF '(' expression ')' statement KW_ELSE . statement

    IDENTIFIER        shift, and go to state 203
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_RETURN         shift, and go to state 204
    KW_IF             shift, and go to state 205
    KW_WHILE          shift, and go to state 206
    KW_FOR            shift, and go to state 207
    KW_DO             shift, and go to state 208
    KW_SWITCH         shift, and go to state 209
    KW_CASE           shift, and go to state 210
    KW_DEFAULT        shift, and go to state 211
    KW_BREAK          shift, and go to state 212
    KW_CONTINUE       shift, and go to state 213
    KW_GOTO           shift, and go to state 214
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    KW_ASM            shift, and go to state 216
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103
    ';'               shift, and go to state 217
    '{'               shift, and go to state 133

    compound_statement         go to state 219
    asm_statement              go to state 223
    statement                  go to state 398
    labeled_statement          go to state 225
    expression                 go to state 226
    assignment_expression      go to state 164
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 389

  166 statement: KW_FOR '(' declaration expression_opt ';' expression_opt . ')' statement

    ')'  shift, and go to state 399


state 390

  165 statement: KW_FOR '(' expression_opt ';' expression_opt ';' . expression_opt ')' statement

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    $default  reduce using rule 175 (expression_opt)

    expression_opt             go to state 400
    expression                 go to state 295
    assignment_expression      go to state 164
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 391

  164 statement: KW_DO statement KW_WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 401


state 392

  125 asm_statement: KW_ASM asm_qualifiers_opt '(' asm_arguments ')' ';' .

    $default  reduce using rule 125 (asm_statement)


state 393

  150 asm_symbolic_name_opt: '[' . IDENTIFIER ']'

    IDENTIFIER  shift, and go to state 402


state 394

  131 asm_arguments: string_seq ':' asm_output_operands_opt .
  132              | string_seq ':' asm_output_operands_opt . ':' asm_input_operands_opt
  133              | string_seq ':' asm_output_operands_opt . ':' asm_input_operands_opt ':' asm_clobbers_opt
  134              | string_seq ':' asm_output_operands_opt . ':' asm_input_operands_opt ':' asm_clobbers_opt ':' asm_goto_labels_opt

    ':'  shift, and go to state 403

    $default  reduce using rule 131 (asm_arguments)


state 395

  136 asm_output_operands_opt: asm_output_operands .
  144 asm_output_operands: asm_output_operands . ',' asm_output_operand

    ','  shift, and go to state 404

    $default  reduce using rule 136 (asm_output_operands_opt)


state 396

  143 asm_output_operands: asm_output_operand .

    $default  reduce using rule 143 (asm_output_operands)


state 397

  147 asm_output_operand: asm_symbolic_name_opt . STRING_LITERAL '(' unary_expression ')'

    STRING_LITERAL  shift, and go to state 405


state 398

  162 statement: KW_IF '(' expression ')' statement KW_ELSE statement .

    $default  reduce using rule 162 (statement)


state 399

  166 statement: KW_FOR '(' declaration expression_opt ';' expression_opt ')' . statement

    IDENTIFIER        shift, and go to state 203
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_RETURN         shift, and go to state 204
    KW_IF             shift, and go to state 205
    KW_WHILE          shift, and go to state 206
    KW_FOR            shift, and go to state 207
    KW_DO             shift, and go to state 208
    KW_SWITCH         shift, and go to state 209
    KW_CASE           shift, and go to state 210
    KW_DEFAULT        shift, and go to state 211
    KW_BREAK          shift, and go to state 212
    KW_CONTINUE       shift, and go to state 213
    KW_GOTO           shift, and go to state 214
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    KW_ASM            shift, and go to state 216
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103
    ';'               shift, and go to state 217
    '{'               shift, and go to state 133

    compound_statement         go to state 219
    asm_statement              go to state 223
    statement                  go to state 406
    labeled_statement          go to state 225
    expression                 go to state 226
    assignment_expression      go to state 164
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 400

  165 statement: KW_FOR '(' expression_opt ';' expression_opt ';' expression_opt . ')' statement

    ')'  shift, and go to state 407


state 401

  164 statement: KW_DO statement KW_WHILE '(' expression ')' ';' .

    $default  reduce using rule 164 (statement)


state 402

  150 asm_symbolic_name_opt: '[' IDENTIFIER . ']'

    ']'  shift, and go to state 408


state 403

  132 asm_arguments: string_seq ':' asm_output_operands_opt ':' . asm_input_operands_opt
  133              | string_seq ':' asm_output_operands_opt ':' . asm_input_operands_opt ':' asm_clobbers_opt
  134              | string_seq ':' asm_output_operands_opt ':' . asm_input_operands_opt ':' asm_clobbers_opt ':' asm_goto_labels_opt

    '['  shift, and go to state 393

    STRING_LITERAL  reduce using rule 149 (asm_symbolic_name_opt)
    $default        reduce using rule 137 (asm_input_operands_opt)

    asm_input_operands_opt  go to state 409
    asm_input_operands      go to state 410
    asm_input_operand       go to state 411
    asm_symbolic_name_opt   go to state 412


state 404

  144 asm_output_operands: asm_output_operands ',' . asm_output_operand

    '['  shift, and go to state 393

    $default  reduce using rule 149 (asm_symbolic_name_opt)

    asm_output_operand     go to state 413
    asm_symbolic_name_opt  go to state 397


state 405

  147 asm_output_operand: asm_symbolic_name_opt STRING_LITERAL . '(' unary_expression ')'

    '('  shift, and go to state 414


state 406

  166 statement: KW_FOR '(' declaration expression_opt ';' expression_opt ')' statement .

    $default  reduce using rule 166 (statement)


state 407

  165 statement: KW_FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' . statement

    IDENTIFIER        shift, and go to state 203
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_RETURN         shift, and go to state 204
    KW_IF             shift, and go to state 205
    KW_WHILE          shift, and go to state 206
    KW_FOR            shift, and go to state 207
    KW_DO             shift, and go to state 208
    KW_SWITCH         shift, and go to state 209
    KW_CASE           shift, and go to state 210
    KW_DEFAULT        shift, and go to state 211
    KW_BREAK          shift, and go to state 212
    KW_CONTINUE       shift, and go to state 213
    KW_GOTO           shift, and go to state 214
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    KW_ASM            shift, and go to state 216
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103
    ';'               shift, and go to state 217
    '{'               shift, and go to state 133

    compound_statement         go to state 219
    asm_statement              go to state 223
    statement                  go to state 415
    labeled_statement          go to state 225
    expression                 go to state 226
    assignment_expression      go to state 164
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 408

  150 asm_symbolic_name_opt: '[' IDENTIFIER ']' .

    $default  reduce using rule 150 (asm_symbolic_name_opt)


state 409

  132 asm_arguments: string_seq ':' asm_output_operands_opt ':' asm_input_operands_opt .
  133              | string_seq ':' asm_output_operands_opt ':' asm_input_operands_opt . ':' asm_clobbers_opt
  134              | string_seq ':' asm_output_operands_opt ':' asm_input_operands_opt . ':' asm_clobbers_opt ':' asm_goto_labels_opt

    ':'  shift, and go to state 416

    $default  reduce using rule 132 (asm_arguments)


state 410

  138 asm_input_operands_opt: asm_input_operands .
  146 asm_input_operands: asm_input_operands . ',' asm_input_operand

    ','  shift, and go to state 417

    $default  reduce using rule 138 (asm_input_operands_opt)


state 411

  145 asm_input_operands: asm_input_operand .

    $default  reduce using rule 145 (asm_input_operands)


state 412

  148 asm_input_operand: asm_symbolic_name_opt . STRING_LITERAL '(' assignment_expression ')'

    STRING_LITERAL  shift, and go to state 418


state 413

  144 asm_output_operands: asm_output_operands ',' asm_output_operand .

    $default  reduce using rule 144 (asm_output_operands)


state 414

  147 asm_output_operand: asm_symbolic_name_opt STRING_LITERAL '(' . unary_expression ')'

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    unary_expression    go to state 419
    postfix_expression  go to state 112
    primary_expression  go to state 113
    constant            go to state 114
    string_seq          go to state 115


state 415

  165 statement: KW_FOR '(' expression_opt ';' expression_opt ';' expression_opt ')' statement .

    $default  reduce using rule 165 (statement)


state 416

  133 asm_arguments: string_seq ':' asm_output_operands_opt ':' asm_input_operands_opt ':' . asm_clobbers_opt
  134              | string_seq ':' asm_output_operands_opt ':' asm_input_operands_opt ':' . asm_clobbers_opt ':' asm_goto_labels_opt

    STRING_LITERAL  shift, and go to state 420

    $default  reduce using rule 139 (asm_clobbers_opt)

    asm_clobbers_opt  go to state 421
    asm_clobbers      go to state 422


state 417

  146 asm_input_operands: asm_input_operands ',' . asm_input_operand

    '['  shift, and go to state 393

    $default  reduce using rule 149 (asm_symbolic_name_opt)

    asm_input_operand      go to state 423
    asm_symbolic_name_opt  go to state 412


state 418

  148 asm_input_operand: asm_symbolic_name_opt STRING_LITERAL . '(' assignment_expression ')'

    '('  shift, and go to state 424


state 419

  147 asm_output_operand: asm_symbolic_name_opt STRING_LITERAL '(' unary_expression . ')'

    ')'  shift, and go to state 425


state 420

  151 asm_clobbers: STRING_LITERAL .

    $default  reduce using rule 151 (asm_clobbers)


state 421

  133 asm_arguments: string_seq ':' asm_output_operands_opt ':' asm_input_operands_opt ':' asm_clobbers_opt .
  134              | string_seq ':' asm_output_operands_opt ':' asm_input_operands_opt ':' asm_clobbers_opt . ':' asm_goto_labels_opt

    ':'  shift, and go to state 426

    $default  reduce using rule 133 (asm_arguments)


state 422

  140 asm_clobbers_opt: asm_clobbers .
  152 asm_clobbers: asm_clobbers . ',' STRING_LITERAL

    ','  shift, and go to state 427

    $default  reduce using rule 140 (asm_clobbers_opt)


state 423

  146 asm_input_operands: asm_input_operands ',' asm_input_operand .

    $default  reduce using rule 146 (asm_input_operands)


state 424

  148 asm_input_operand: asm_symbolic_name_opt STRING_LITERAL '(' . assignment_expression ')'

    IDENTIFIER        shift, and go to state 88
    STRING_LITERAL    shift, and go to state 89
    INTEGER_CONSTANT  shift, and go to state 90
    FLOAT_CONSTANT    shift, and go to state 91
    CHAR_CONSTANT     shift, and go to state 92
    KW_SIZEOF         shift, and go to state 93
    KW_GENERIC        shift, and go to state 94
    KW_TYPEOF         shift, and go to state 95
    INC               shift, and go to state 96
    DEC               shift, and go to state 97
    LPAREN_BRACE      shift, and go to state 98
    '&'               shift, and go to state 99
    '+'               shift, and go to state 100
    '-'               shift, and go to state 101
    '*'               shift, and go to state 102
    '('               shift, and go to state 103

    assignment_expression      go to state 428
    conditional_expression     go to state 165
    logical_or_expression      go to state 105
    logical_and_expression     go to state 106
    equality_expression        go to state 107
    relational_expression      go to state 108
    additive_expression        go to state 109
    multiplicative_expression  go to state 110
    unary_expression           go to state 166
    postfix_expression         go to state 112
    primary_expression         go to state 113
    constant                   go to state 114
    string_seq                 go to state 115


state 425

  147 asm_output_operand: asm_symbolic_name_opt STRING_LITERAL '(' unary_expression ')' .

    $default  reduce using rule 147 (asm_output_operand)


state 426

  134 asm_arguments: string_seq ':' asm_output_operands_opt ':' asm_input_operands_opt ':' asm_clobbers_opt ':' . asm_goto_labels_opt

    IDENTIFIER  shift, and go to state 429

    $default  reduce using rule 141 (asm_goto_labels_opt)

    asm_goto_labels_opt  go to state 430
    asm_goto_labels      go to state 431


state 427

  152 asm_clobbers: asm_clobbers ',' . STRING_LITERAL

    STRING_LITERAL  shift, and go to state 432


state 428

  148 asm_input_operand: asm_symbolic_name_opt STRING_LITERAL '(' assignment_expression . ')'

    ')'  shift, and go to state 433


state 429

  153 asm_goto_labels: IDENTIFIER .

    $default  reduce using rule 153 (asm_goto_labels)


state 430

  134 asm_arguments: string_seq ':' asm_output_operands_opt ':' asm_input_operands_opt ':' asm_clobbers_opt ':' asm_goto_labels_opt .

    $default  reduce using rule 134 (asm_arguments)


state 431

  142 asm_goto_labels_opt: asm_goto_labels .
  154 asm_goto_labels: asm_goto_labels . ',' IDENTIFIER

    ','  shift, and go to state 434

    $default  reduce using rule 142 (asm_goto_labels_opt)


state 432

  152 asm_clobbers: asm_clobbers ',' STRING_LITERAL .

    $default  reduce using rule 152 (asm_clobbers)


state 433

  148 asm_input_operand: asm_symbolic_name_opt STRING_LITERAL '(' assignment_expression ')' .

    $default  reduce using rule 148 (asm_input_operand)


state 434

  154 asm_goto_labels: asm_goto_labels ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 435


state 435

  154 asm_goto_labels: asm_goto_labels ',' IDENTIFIER .

    $default  reduce using rule 154 (asm_goto_labels)
